/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 25 10:25:30 GMT 2019
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Frame;
import java.awt.GradientPaint;
import java.awt.Graphics2D;
import java.awt.GraphicsConfiguration;
import java.awt.LinearGradientPaint;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.ScrollPane;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.Window;
import java.awt.color.ColorSpace;
import java.awt.color.ICC_ColorSpace;
import java.awt.color.ICC_Profile;
import java.awt.event.MouseWheelEvent;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Arc2D;
import java.awt.geom.Area;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RectangularShape;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.ColorConvertOp;
import java.awt.image.ColorModel;
import java.awt.image.ComponentColorModel;
import java.awt.image.ConvolveOp;
import java.awt.image.DataBuffer;
import java.awt.image.DataBufferDouble;
import java.awt.image.DataBufferFloat;
import java.awt.image.DataBufferInt;
import java.awt.image.DirectColorModel;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.awt.image.Raster;
import java.awt.image.RescaleOp;
import java.awt.image.ShortLookupTable;
import java.awt.image.TileObserver;
import java.awt.image.WritableRaster;
import java.io.EOFException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.SequenceInputStream;
import java.lang.reflect.Array;
import java.math.BigInteger;
import java.sql.Connection;
import java.text.DateFormat;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.Stack;
import java.util.TimeZone;
import java.util.Vector;
import javax.swing.DebugGraphics;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JInternalFrame;
import javax.swing.JLayeredPane;
import javax.swing.JList;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.JTree;
import javax.swing.JViewport;
import javax.swing.TransferHandler;
import javax.swing.border.AbstractBorder;
import javax.swing.border.BevelBorder;
import javax.swing.border.Border;
import javax.swing.border.SoftBevelBorder;
import javax.swing.event.TableModelEvent;
import javax.swing.plaf.basic.BasicListUI;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.plaf.metal.MetalComboBoxEditor;
import javax.swing.plaf.multi.MultiListUI;
import javax.swing.plaf.multi.MultiTextUI;
import javax.swing.plaf.synth.SynthEditorPaneUI;
import javax.swing.plaf.synth.SynthListUI;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.GapContent;
import javax.swing.text.JTextComponent;
import javax.swing.text.Position;
import javax.swing.text.StyleContext;
import javax.swing.tree.FixedHeightLayoutCache;
import javax.swing.tree.TreePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.LegendItemSource;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.XYAnnotation;
import org.jfree.chart.annotations.XYBoxAnnotation;
import org.jfree.chart.annotations.XYDrawableAnnotation;
import org.jfree.chart.annotations.XYLineAnnotation;
import org.jfree.chart.annotations.XYPointerAnnotation;
import org.jfree.chart.annotations.XYPolygonAnnotation;
import org.jfree.chart.annotations.XYShapeAnnotation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.DateTickMarkPosition;
import org.jfree.chart.axis.DateTickUnit;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.TickUnitSource;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.GridArrangement;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.AxisChangeEvent;
import org.jfree.chart.event.MarkerChangeEvent;
import org.jfree.chart.event.PlotChangeEvent;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.BoxAndWhiskerXYToolTipGenerator;
import org.jfree.chart.labels.BubbleXYItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.chart.labels.XYToolTipGenerator;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.CrosshairState;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.DefaultDrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SeriesRenderingOrder;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.GrayPaintScale;
import org.jfree.chart.renderer.WaferMapRenderer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.ClusteredXYBarRenderer;
import org.jfree.chart.renderer.xy.CyclicXYItemRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer2;
import org.jfree.chart.renderer.xy.StackedXYBarRenderer;
import org.jfree.chart.renderer.xy.StandardXYItemRenderer;
import org.jfree.chart.renderer.xy.WindItemRenderer;
import org.jfree.chart.renderer.xy.XYAreaRenderer;
import org.jfree.chart.renderer.xy.XYAreaRenderer2;
import org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer;
import org.jfree.chart.renderer.xy.XYBubbleRenderer;
import org.jfree.chart.renderer.xy.XYDifferenceRenderer;
import org.jfree.chart.renderer.xy.XYErrorRenderer;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.chart.renderer.xy.XYLine3DRenderer;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.chart.renderer.xy.XYSplineAndShapeRenderer;
import org.jfree.chart.renderer.xy.YIntervalRenderer;
import org.jfree.chart.text.TextAnchor;
import org.jfree.chart.text.TextBlock;
import org.jfree.chart.text.TextBox;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.Title;
import org.jfree.chart.urls.StandardXYURLGenerator;
import org.jfree.chart.urls.XYURLGenerator;
import org.jfree.chart.util.GradientPaintTransformer;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.SerialUtilities;
import org.jfree.chart.util.StandardGradientPaintTransformer;
import org.jfree.data.Range;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.general.Dataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.SubSeriesDataset;
import org.jfree.data.general.ValueDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.jdbc.JDBCPieDataset;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.statistics.SimpleHistogramDataset;
import org.jfree.data.time.Day;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Minute;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.Second;
import org.jfree.data.time.TimePeriodValues;
import org.jfree.data.time.TimePeriodValuesCollection;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.xy.CategoryTableXYDataset;
import org.jfree.data.xy.DefaultIntervalXYDataset;
import org.jfree.data.xy.DefaultWindDataset;
import org.jfree.data.xy.DefaultXYDataset;
import org.jfree.data.xy.DefaultXYZDataset;
import org.jfree.data.xy.MatrixSeries;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.jfree.data.xy.XIntervalSeriesCollection;
import org.jfree.data.xy.XYBarDataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeriesCollection;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;
import sun.util.calendar.ZoneInfo;


public class XYPlot_ESTest {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      DefaultDrawingSupplier defaultDrawingSupplier0 = new DefaultDrawingSupplier();
      DefaultDrawingSupplier.createStandardSeriesShapes();
      defaultDrawingSupplier0.getNextOutlinePaint();
      combinedDomainXYPlot0.setDrawingSupplier(defaultDrawingSupplier0);
      combinedDomainXYPlot0.clearDomainMarkers(860);
      combinedDomainXYPlot0.getRangeMarkers(2, (Layer) null);
      combinedDomainXYPlot0.clearDomainMarkers();
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10, xYPlot0.DEFAULT_GRIDLINE_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.addDomainMarker(2, (Marker) valueMarker0, layer0);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      xYPlot0.setDataset((XYDataset) categoryTableXYDataset0);
      xYPlot0.addDomainMarker(2, (Marker) valueMarker0, layer0);
      xYPlot0.removeRangeMarker((Marker) valueMarker0, layer0);
      xYPlot0.getPlotType();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)57;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      xYPlot0.clearRangeMarkers();
      AffineTransform.getRotateInstance(15.0, (double) 2);
      JFreeChart jFreeChart0 = new JFreeChart("XY Plot", xYPlot0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("XY Plot");
      xYPlot0.setDomainAxis(10, (ValueAxis) numberAxis3D0);
      xYPlot0.getLegendItems();
      assertEquals(11, xYPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, xYPlot0.DEFAULT_GRIDLINE_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      xYPlot0.setDataset((XYDataset) categoryTableXYDataset0);
      xYPlot0.setFixedDomainAxisSpace((AxisSpace) null, false);
      Marker marker0 = null;
      Layer layer1 = Layer.FOREGROUND;
      xYPlot0.getAnnotations();
      // Undeclared exception!
      try { 
        xYPlot0.addDomainMarker((-1346), (Marker) null, layer1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      ValueAxis[] valueAxisArray0 = new ValueAxis[8];
      valueAxisArray0[0] = null;
      valueAxisArray0[1] = null;
      valueAxisArray0[3] = null;
      valueAxisArray0[4] = null;
      valueAxisArray0[5] = null;
      valueAxisArray0[6] = null;
      valueAxisArray0[7] = null;
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(candlestickRenderer0.DEFAULT_SHAPE);
      xYShapeAnnotation0.setToolTipText("IAvGw1u_$NU_N&");
      Layer layer0 = Layer.BACKGROUND;
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      numberAxis3D0.setTickMarkStroke(combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeXYPlot0.setDomainZeroBaselinePaint(numberAxis3D0.DEFAULT_TICK_LABEL_PAINT);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      combinedRangeXYPlot0.setAxisOffset(numberAxis3D0.DEFAULT_TICK_LABEL_INSETS);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedRangeXYPlot0.setRangeCrosshairPaint(numberAxis3D0.DEFAULT_TICK_MARK_PAINT);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      plotRenderingInfo0.clone();
      Arc2D.Double arc2D_Double0 = new Arc2D.Double();
      Point2D point2D0 = arc2D_Double0.getEndPoint();
      combinedRangeXYPlot0.zoomRangeAxes((double) 2.0F, plotRenderingInfo0, point2D0, true);
      assertFalse(numberAxis3D0.isAutoRange());
      
      combinedRangeXYPlot0.zoomRangeAxes(0.0, plotRenderingInfo0, point2D0);
      combinedRangeXYPlot0.setRangeZeroBaselineVisible(true);
      combinedRangeXYPlot0.clearAnnotations();
      SeriesRenderingOrder seriesRenderingOrder0 = combinedRangeXYPlot0.getSeriesRenderingOrder();
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedRangeXYPlot0.setRangeGridlinesVisible(true);
      combinedRangeXYPlot0.getDomainCrosshairStroke();
      combinedRangeXYPlot0.getRangeAxisEdge(2109135725);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.removeRangeMarker(2109135725, (Marker) categoryMarker0, layer0, true);
      combinedRangeXYPlot0.setRangeAxis(695, (ValueAxis) numberAxis3D0, true);
      combinedRangeXYPlot0.getSeriesCount();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getRangeAxisLocation((-203));
      combinedRangeXYPlot0.setDomainAxisLocation(60, axisLocation0, false);
      assertTrue(combinedRangeXYPlot0.isRangeZeroBaselineVisible());
      
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1949, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Double line2D_Double0 = new Line2D.Double((-2362.670536364), 0.0, 163.80078125, 0.0);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      combinedRangeXYPlot0.drawDomainTickBands(graphics2D0, rectangle0, (List) null);
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultIntervalXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYBoxAndWhiskerRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("I~u8h~L`0p7C", xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(65, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      xYPlot0.setRangeAxis((ValueAxis) cyclicNumberAxis0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1.0F);
      candlestickRenderer0.getBaseURLGenerator();
      xYBoxAndWhiskerRenderer0.setSeriesURLGenerator(10, (XYURLGenerator) null);
      bufferedImage0.setAccelerationPriority(0.5F);
      Float float0 = new Float((float) 0);
      xYPlot0.setRangeGridlinePaint(xYBoxAndWhiskerRenderer0.DEFAULT_PAINT);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      xYPlot0.drawAnnotations(graphics2D0, (Rectangle2D) null, plotRenderingInfo0);
      assertEquals(1, xYPlot0.getRangeAxisCount());
      assertEquals(1, xYPlot0.getWeight());
      
      CrosshairState crosshairState0 = new CrosshairState(true);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.getMagicCaretPosition();
      crosshairState0.setAnchor((Point2D) null);
      crosshairState0.getAnchor();
      xYPlot0.zoomRangeAxes((double) candlestickRenderer0.ZERO, 0.0, plotRenderingInfo0, (Point2D) null);
      ValueMarker valueMarker0 = new ValueMarker(0, xYPlot0.DEFAULT_OUTLINE_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
      // Undeclared exception!
      try { 
        xYPlot0.addDomainMarker((-1453), (Marker) valueMarker0, (Layer) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      DateAxis dateAxis0 = new DateAxis("");
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      XYPlot xYPlot0 = new XYPlot(timePeriodValuesCollection0, dateAxis0, dateAxis0, xYErrorRenderer0);
      BufferedImage bufferedImage0 = new BufferedImage(500, 2187, 10);
      Vector<LinearGradientPaint> vector0 = new Vector<LinearGradientPaint>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JTableHeader jTableHeader0 = new JTableHeader((TableColumnModel) null);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(226);
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.drawRangeMarkers(graphics2D0, (Rectangle2D) null, 11, layer0);
      bufferedImage0.addTileObserver(tileObserver0);
      Graphics2D graphics2D1 = bufferedImage0.createGraphics();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Quarter outside valid range.");
      Rectangle rectangle1 = new Rectangle(8, (-3009), 2060, 500);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      xYPlot0.calculateAxisSpace(graphics2D1, rectangle1);
      xYPlot0.setDomainCrosshairValue(1000.0, true);
      xYPlot0.getRenderer();
      PlotOrientation plotOrientation0 = xYPlot0.getOrientation();
      xYPlot0.drawRangeCrosshair(graphics2D0, rectangle0, plotOrientation0, 0, dateAxis0, xYErrorRenderer0.DEFAULT_OUTLINE_STROKE, xYErrorRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      // Undeclared exception!
      try { 
        xYPlot0.setQuadrantPaint(2187, xYErrorRenderer0.DEFAULT_OUTLINE_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (2187) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultIntervalXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYBoxAndWhiskerRenderer0);
      xYPlot0.setRangeAxis((ValueAxis) cyclicNumberAxis0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1.0F);
      candlestickRenderer0.getBaseURLGenerator();
      xYBoxAndWhiskerRenderer0.setSeriesURLGenerator(10, (XYURLGenerator) null);
      xYPlot0.setRangeGridlinePaint(xYBoxAndWhiskerRenderer0.DEFAULT_PAINT);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      xYPlot0.setRangeCrosshairValue(1728.4587469446, true);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getDomainMarkers(1830, layer0);
      ValueMarker valueMarker0 = new ValueMarker(Double.NEGATIVE_INFINITY, xYBoxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_PAINT, xYPlot0.DEFAULT_OUTLINE_STROKE);
      xYPlot0.removeDomainMarker((-1458), (Marker) valueMarker0, layer0, false);
      xYPlot0.setDomainCrosshairLockedOnData(true);
      xYPlot0.drawHorizontalLine((Graphics2D) null, (Rectangle2D) null, (-1386.8201645814), cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE, xYBoxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT);
      assertEquals(1, xYPlot0.getWeight());
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      
      Hour hour0 = new Hour();
      Minute minute0 = new Minute(1573, hour0);
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, "XY_Plot", "XY_Plot");
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      // Undeclared exception!
      xYPlot0.setDataset(2152, (XYDataset) timePeriodValuesCollection0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2576.812793392339), "&TcXI>AfNMG9~ucvx(1");
      Color color0 = Color.GRAY;
      cyclicNumberAxis0.setLabelPaint(color0);
      cyclicNumberAxis0.setLabel("&TcXI>AfNMG9~ucvx(1");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.setRangeCrosshairLockedOnData(false);
      combinedRangeXYPlot0.setDomainGridlineStroke(cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      GrayPaintScale grayPaintScale0 = new GrayPaintScale();
      combinedRangeXYPlot0.clearRangeMarkers(1);
      PolarPlot polarPlot0 = new PolarPlot();
      JFreeChart jFreeChart0 = new JFreeChart("&TcXI>AfNMG9~ucvx(1", cyclicNumberAxis0.DEFAULT_AXIS_LABEL_FONT, combinedRangeXYPlot0, false);
      combinedRangeXYPlot0.setRangeCrosshairStroke(polarPlot0.DEFAULT_OUTLINE_STROKE);
      combinedRangeXYPlot0.setDomainCrosshairPaint(cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_PAINT);
      assertFalse(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      System.setCurrentTimeMillis(1573L);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(500);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, logAxis0, logAxis0, xYAreaRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("z40}j", xYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2356, 3229, chartRenderingInfo0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(737.23865F, 4, 3, 0.0F);
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      PeriodAxis periodAxis0 = new PeriodAxis("z40}j");
      RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = xYPlot0.getRangeAxisLocation(4);
      xYPlot0.setRangeAxisLocation(axisLocation0);
      combinedDomainXYPlot0.getFixedRangeAxisSpace();
      combinedDomainXYPlot0.getDataRange(logAxis0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CrosshairState crosshairState0 = new CrosshairState();
      xYPlot0.getRangeAxisEdge(1);
      CategoryMarker categoryMarker0 = new CategoryMarker(4.0F);
      bufferedImage0.getSubimage(11, 11, 10, 1322);
      xYPlot0.getRangeAxisEdge(3229);
      CombinedDomainXYPlot combinedDomainXYPlot1 = (CombinedDomainXYPlot)combinedDomainXYPlot0.clone();
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      combinedDomainXYPlot1.drawVerticalLine(sunGraphics2D0, rectangle2D0, 737.23865F, periodAxis0.DEFAULT_TICK_MARK_STROKE, periodAxis0.DEFAULT_AXIS_LINE_PAINT);
      assertTrue(combinedDomainXYPlot1.equals((Object)combinedDomainXYPlot0));
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultXYDataset0, (ValueAxis) null, (ValueAxis) null, candlestickRenderer0);
      ValueMarker valueMarker0 = new ValueMarker((double) candlestickRenderer0.ZERO, xYPlot0.DEFAULT_CROSSHAIR_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE, xYPlot0.DEFAULT_BACKGROUND_PAINT, candlestickRenderer0.DEFAULT_STROKE, 0.0F);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addRangeMarker((-1838), (Marker) valueMarker0, layer0, true);
      Color color0 = (Color)xYPlot0.getDomainZeroBaselinePaint();
      assertEquals(0, color0.getGreen());
      
      xYPlot0.getDomainAxis(2);
      xYPlot0.getRangeGridlineStroke();
      assertEquals(1, xYPlot0.getWeight());
      
      xYPlot0.removeDomainMarker(884257973, (Marker) valueMarker0, layer0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      plotRenderingInfo0.clone();
      xYPlot0.handleClick(500, 2109135725, plotRenderingInfo0);
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1024, 2);
      bufferedImage0.createGraphics();
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(884257973, (-1838), (float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2477.45867), 1.0F, "David Forslund");
      combinedRangeXYPlot0.getRangeAxisIndex(cyclicNumberAxis0);
      combinedRangeXYPlot0.setDomainZeroBaselineStroke(cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
      Graphics2D graphics2D0 = null;
      ICC_ColorSpace iCC_ColorSpace0 = null;
      try {
        iCC_ColorSpace0 = new ICC_ColorSpace((ICC_Profile) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.color.ICC_ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(0.0, 0.0, 1.0F, 1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
      xYBoxAnnotation0.clone();
      xYBoxAnnotation0.clone();
      xYBoxAnnotation0.setToolTipText((String) null);
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYBoxAnnotation0, false);
      Color color0 = (Color)AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
      combinedDomainXYPlot0.setRangeCrosshairPaint(color0);
      combinedDomainXYPlot0.getQuadrantPaint(3);
      combinedDomainXYPlot0.setDomainCrosshairValue(5.0E-6, false);
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0E10, 0.0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addRangeMarker(2, (Marker) intervalMarker0, layer0, false);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      logarithmicAxis0.setTickLabelPaint(combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedDomainXYPlot0.getRangeAxisIndex(logarithmicAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      chartRenderingInfo0.clone();
      JViewport jViewport0 = new JViewport();
      Point point0 = jViewport0.getViewPosition();
      combinedDomainXYPlot0.zoomDomainAxes(1994.07935982, plotRenderingInfo0, (Point2D) point0, true);
      assertEquals(5.0E-6, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10, xYPlot0.DEFAULT_GRIDLINE_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addDomainMarker(2, (Marker) valueMarker0, layer0);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      xYPlot0.setDataset((XYDataset) categoryTableXYDataset0);
      xYPlot0.setDomainCrosshairVisible(false);
      xYPlot0.addDomainMarker(2, (Marker) valueMarker0, layer0);
      xYPlot0.removeRangeMarker((Marker) valueMarker0, layer0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)57;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      xYPlot0.clearRangeMarkers();
      AffineTransform.getRotateInstance(15.0, (double) 2);
      xYPlot0.getFixedLegendItems();
      boolean boolean0 = xYPlot0.removeRangeMarker(21262215, (Marker) valueMarker0, layer0, false);
      assertFalse(boolean0);
      
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
      xYPlot0.equals(combinedRangeXYPlot0);
      Layer layer1 = Layer.FOREGROUND;
      xYPlot0.removeDomainMarker((int) (byte)57, (Marker) valueMarker0, layer1, false);
      assertEquals(1, xYPlot0.getWeight());
      assertEquals(1, xYPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultXYDataset0, (ValueAxis) null, (ValueAxis) null, candlestickRenderer0);
      ValueMarker valueMarker0 = new ValueMarker((double) candlestickRenderer0.ZERO, xYPlot0.DEFAULT_CROSSHAIR_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE, xYPlot0.DEFAULT_BACKGROUND_PAINT, candlestickRenderer0.DEFAULT_STROKE, 0.0F);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addRangeMarker((-1838), (Marker) valueMarker0, layer0, true);
      xYPlot0.getDomainZeroBaselinePaint();
      xYPlot0.getDomainAxis(2);
      xYPlot0.getRangeGridlineStroke();
      xYPlot0.setRangeCrosshairValue((double) 0.0F, true);
      xYPlot0.removeRangeMarker((-1838), (Marker) valueMarker0, layer0, true);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'offset' argument.", xYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-141), 2176, 4, 0, 4, 2176, true, false, true, false, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 48, 2203.0, (-480.5), chartRenderingInfo0);
      bufferedImage0.createGraphics();
      MultiListUI multiListUI0 = new MultiListUI();
      Integer[] integerArray0 = new Integer[7];
      integerArray0[0] = (Integer) 10;
      integerArray0[1] = (Integer) 200;
      integerArray0[2] = (Integer) 10;
      integerArray0[3] = (Integer) 10;
      integerArray0[4] = (Integer) 10;
      integerArray0[5] = (Integer) 2;
      integerArray0[6] = (Integer) 15;
      JList<Integer> jList0 = new JList<Integer>(integerArray0);
      // Undeclared exception!
      try { 
        multiListUI0.getCellBounds(jList0, 600, (-141));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      boolean boolean0 = combinedRangeXYPlot0.isRangeGridlinesVisible();
      assertTrue(boolean0);
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      Area area0 = new Area(spiderWebPlot0.DEFAULT_LEGEND_ITEM_BOX);
      Rectangle2D rectangle2D0 = area0.getBounds2D();
      double double0 = 0.0;
      spiderWebPlot0.setInsets(cyclicNumberAxis0.DEFAULT_AXIS_LABEL_INSETS);
      RectangleEdge rectangleEdge0 = combinedRangeXYPlot0.getRangeAxisEdge(0);
      // Undeclared exception!
      try { 
        cyclicNumberAxis0.draw((Graphics2D) null, 0.01, rectangle2D0, rectangle2D0, rectangleEdge0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getQuadrantPaint(0);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      
      combinedDomainXYPlot0.getRangeAxisEdge(0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1870.8785222, 0.0, "Index out of range.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      NumberTickUnit numberTickUnit0 = new NumberTickUnit(1980.0);
      cyclicNumberAxis0.setTickUnit(numberTickUnit0);
      combinedDomainXYPlot0.clearDomainMarkers(1840);
      cyclicNumberAxis0.setUpperMargin(1870.8785222);
      combinedDomainXYPlot0.getRenderer(1840);
      PeriodAxis periodAxis0 = new PeriodAxis("Index out of range.");
      combinedDomainXYPlot0.setRangeAxis(0, (ValueAxis) periodAxis0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeAxisLocation(0, (AxisLocation) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueAxis valueAxis0 = combinedRangeXYPlot0.getRangeAxisForDataset(0);
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertNotNull(valueAxis0);
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[2];
      MockDate mockDate0 = new MockDate(181, 10, (-1098));
      Day day0 = new Day(mockDate0);
      PeriodAxis periodAxis0 = new PeriodAxis(";QHcdBaW3(g%.", day0, day0);
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 5.0E11, ";QHcdBaW3(g%.");
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      combinedRangeXYPlot0.setRangeAxes(valueAxisArray0);
      assertEquals(2, combinedRangeXYPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      combinedRangeXYPlot0.setRangeAxis(0, (ValueAxis) dateAxis0);
      combinedRangeXYPlot0.getRenderer(500);
      DateTickMarkPosition dateTickMarkPosition0 = DateTickMarkPosition.START;
      dateAxis0.setTickMarkPosition(dateTickMarkPosition0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logarithmicAxis0);
      combinedRangeXYPlot0.clearRangeMarkers(1622);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(logarithmicAxis0);
      int int0 = 192;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(500, 10, (byte[]) null, (-2013), true, 192);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDatasetGroup();
      combinedDomainXYPlot0.setDatasetGroup((DatasetGroup) null);
      combinedDomainXYPlot0.getOrientation();
      combinedDomainXYPlot0.getDataset();
      JFreeChart jFreeChart0 = new JFreeChart("-~~", combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(1.0F, 2362.9646F, renderingHints0);
      int int0 = combinedDomainXYPlot0.getSeriesCount();
      assertEquals(0, int0);
      
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 1616.76374008181, 0.0, (ChartRenderingInfo) null);
      BufferedImage bufferedImage1 = rescaleOp0.filter(bufferedImage0, (BufferedImage) null);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1.5707963267948966, 1.0F, 0.0, (-24.767500529873));
      combinedDomainXYPlot0.drawZeroRangeBaseline(graphics2D0, rectangle2D_Double0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0);
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0, 1.5707963267948966);
      combinedDomainXYPlot0.removeDomainMarker((Marker) intervalMarker0, (Layer) null);
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Stack<ClusteredXYBarRenderer> stack0 = new Stack<ClusteredXYBarRenderer>();
      Object[][][] objectArray0 = new Object[8][8][9];
      Object[][] objectArray1 = new Object[3][7];
      Object[] objectArray2 = new Object[0];
      objectArray1[0] = objectArray2;
      Object[] objectArray3 = new Object[2];
      objectArray3[0] = (Object) stack0;
      objectArray3[1] = (Object) stack0;
      objectArray1[1] = objectArray3;
      Object[] objectArray4 = new Object[7];
      objectArray4[0] = (Object) stack0;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Object object0 = combinedDomainXYPlot0.clone();
      objectArray4[1] = object0;
      objectArray4[2] = (Object) stack0;
      objectArray4[3] = (Object) stack0;
      objectArray4[4] = (Object) stack0;
      objectArray4[5] = (Object) stack0;
      objectArray4[6] = (Object) stack0;
      objectArray1[2] = objectArray4;
      objectArray0[0] = objectArray1;
      Object[][] objectArray5 = new Object[8][6];
      objectArray5[0] = objectArray3;
      objectArray5[1] = objectArray2;
      objectArray5[2] = objectArray4;
      Object[] objectArray6 = new Object[5];
      objectArray6[0] = (Object) combinedDomainXYPlot0;
      objectArray6[1] = object0;
      objectArray6[2] = (Object) stack0;
      objectArray6[3] = (Object) combinedDomainXYPlot0;
      objectArray6[4] = object0;
      objectArray5[3] = objectArray6;
      objectArray5[4] = objectArray2;
      objectArray5[5] = objectArray3;
      objectArray5[6] = objectArray3;
      objectArray5[7] = objectArray3;
      objectArray0[1] = objectArray5;
      Object[][] objectArray7 = new Object[3][6];
      objectArray7[0] = objectArray6;
      objectArray7[1] = objectArray2;
      Object[] objectArray8 = new Object[4];
      objectArray8[0] = (Object) stack0;
      objectArray8[1] = (Object) stack0;
      objectArray8[2] = object0;
      objectArray8[3] = (Object) stack0;
      objectArray7[2] = objectArray8;
      objectArray0[2] = objectArray7;
      Object[][] objectArray9 = new Object[2][7];
      objectArray9[0] = objectArray4;
      objectArray9[1] = objectArray6;
      objectArray0[3] = objectArray9;
      Object[][] objectArray10 = new Object[5][9];
      objectArray10[0] = objectArray4;
      objectArray10[1] = objectArray6;
      Object[] objectArray11 = new Object[6];
      objectArray11[0] = (Object) stack0;
      objectArray11[1] = object0;
      Object object1 = combinedDomainXYPlot0.clone();
      objectArray11[2] = object1;
      objectArray11[3] = (Object) combinedDomainXYPlot0;
      objectArray11[4] = object0;
      objectArray11[5] = object0;
      objectArray10[2] = objectArray11;
      objectArray10[3] = objectArray4;
      objectArray10[4] = objectArray3;
      objectArray0[4] = objectArray10;
      Object[][] objectArray12 = new Object[2][5];
      objectArray12[0] = objectArray6;
      objectArray12[1] = objectArray4;
      objectArray0[5] = objectArray12;
      Object[][] objectArray13 = new Object[4][9];
      objectArray13[0] = objectArray4;
      objectArray13[1] = objectArray11;
      objectArray13[2] = objectArray6;
      objectArray13[3] = objectArray8;
      objectArray0[6] = objectArray13;
      Object[][] objectArray14 = new Object[4][4];
      objectArray14[0] = objectArray4;
      objectArray14[1] = objectArray4;
      objectArray14[2] = objectArray3;
      Object[] objectArray15 = new Object[6];
      objectArray15[0] = object1;
      objectArray15[1] = (Object) combinedDomainXYPlot0;
      objectArray15[2] = (Object) stack0;
      objectArray15[3] = (Object) combinedDomainXYPlot0;
      objectArray15[4] = (Object) stack0;
      objectArray15[5] = (Object) combinedDomainXYPlot0;
      objectArray14[3] = objectArray15;
      objectArray0[7] = objectArray14;
      DefaultWindDataset defaultWindDataset0 = null;
      try {
        defaultWindDataset0 = new DefaultWindDataset(stack0, objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The number of series keys does not match the number of series in the data array.
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2259.5833635, 2259.5833635, "Dialog");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getRangeAxisLocation(904);
      combinedRangeXYPlot0.setDomainAxisLocation(0, axisLocation0);
      JFreeChart jFreeChart0 = new JFreeChart("Dialog", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeXYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(15);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 15, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0, "");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.setRangeAxis((ValueAxis) null);
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      NumberAxis numberAxis0 = new NumberAxis("org.jfree.chart.title.Title");
      combinedDomainXYPlot0.setRangeAxis((ValueAxis) numberAxis0);
      combinedDomainXYPlot0.setDomainZeroBaselineVisible(true);
      combinedDomainXYPlot0.getRangeZeroBaselinePaint();
      assertTrue(combinedDomainXYPlot0.isDomainZeroBaselineVisible());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      Color color0 = (Color)combinedRangeXYPlot0.getDomainZeroBaselinePaint();
      assertEquals(0, color0.getBlue());
      
      Color color1 = (Color)combinedRangeXYPlot0.getRangeCrosshairPaint();
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals((-16776961), color1.getRGB());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultXYDataset0, (ValueAxis) null, (ValueAxis) null, candlestickRenderer0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[8];
      valueAxisArray0[0] = null;
      valueAxisArray0[1] = null;
      valueAxisArray0[2] = null;
      valueAxisArray0[3] = null;
      valueAxisArray0[4] = null;
      valueAxisArray0[5] = null;
      valueAxisArray0[6] = null;
      valueAxisArray0[7] = null;
      xYPlot0.setDomainAxes(valueAxisArray0);
      ValueMarker valueMarker0 = new ValueMarker((double) candlestickRenderer0.ZERO, xYPlot0.DEFAULT_CROSSHAIR_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE, xYPlot0.DEFAULT_BACKGROUND_PAINT, candlestickRenderer0.DEFAULT_STROKE, 0.0F);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addRangeMarker((-1838), (Marker) valueMarker0, layer0, true);
      xYPlot0.getDomainZeroBaselinePaint();
      xYPlot0.getDomainAxis(2);
      assertEquals(8, xYPlot0.getDomainAxisCount());
      
      int int0 = xYPlot0.getSeriesCount();
      assertEquals(8, xYPlot0.getDomainAxisCount());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      combinedRangeXYPlot0.getRangeAxisEdge();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(integer0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-2052), 10, 10, 10, 15, 0, false, false, true, true, true, true);
      jFreeChart0.removeProgressListener(chartPanel0);
      rendererChangeEvent0.setChart(jFreeChart0);
      combinedRangeXYPlot0.rendererChanged(rendererChangeEvent0);
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultIntervalXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYBoxAndWhiskerRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("I~Z4u8h~L`0p7C", xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(65, 10);
      bufferedImage0.createGraphics();
      xYPlot0.setRangeAxis((ValueAxis) cyclicNumberAxis0);
      boolean boolean0 = false;
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1.0F);
      candlestickRenderer0.getBaseURLGenerator();
      xYBoxAndWhiskerRenderer0.setSeriesURLGenerator(10, (XYURLGenerator) null);
      bufferedImage0.setAccelerationPriority(0.5F);
      // Undeclared exception!
      try { 
        defaultIntervalXYDataset0.getEndY((-5793), (-1453));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
      combinedRangeXYPlot0.setRangeGridlineStroke(periodAxis0.DEFAULT_TICK_MARK_STROKE);
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      
      combinedRangeXYPlot0.getDomainAxisCount();
      combinedRangeXYPlot0.getRangeAxisEdge(500);
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-3601.533));
      cyclicNumberAxis0.setLabelURL("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.setRangeCrosshairPaint(cyclicNumberAxis0.DEFAULT_AXIS_LABEL_PAINT);
      cyclicNumberAxis0.setAxisLinePaint(combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT);
      combinedRangeXYPlot0.setDomainGridlinesVisible(true);
      DatasetRenderingOrder datasetRenderingOrder0 = combinedRangeXYPlot0.getDatasetRenderingOrder();
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeXYPlot0.getRangeAxisIndex(cyclicNumberAxis0);
      combinedRangeXYPlot0.getDomainCrosshairValue();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 0, 15, 792, 0, 0, false, false, false, false, true, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(792, 500, 0.05, 15.0, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      Polygon polygon0 = null;
      try {
        polygon0 = new Polygon((int[]) null, (int[]) null, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Polygon", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 0.001);
      boolean boolean0 = combinedRangeXYPlot0.removeRangeMarker((Marker) intervalMarker0);
      assertFalse(boolean0);
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("oj1;'2OG");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logarithmicAxis0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      categoryAxis3D0.getTickLabelPaint((Comparable) true);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, logarithmicAxis0, areaRenderer0);
      categoryPlot0.configureRangeAxes();
      combinedDomainXYPlot0.setParent(categoryPlot0);
      combinedDomainXYPlot0.setDomainCrosshairValue(1.0E-100, false);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, areaRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[6];
      combinedDomainXYPlot0.setNoDataMessagePaint(categoryAxis3D0.DEFAULT_AXIS_LINE_PAINT);
      valueAxisArray0[0] = (ValueAxis) logarithmicAxis0;
      valueAxisArray0[1] = (ValueAxis) logarithmicAxis0;
      valueAxisArray0[2] = (ValueAxis) logarithmicAxis0;
      valueAxisArray0[3] = (ValueAxis) logarithmicAxis0;
      valueAxisArray0[4] = (ValueAxis) logarithmicAxis0;
      valueAxisArray0[5] = (ValueAxis) logarithmicAxis0;
      combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainXYPlot0.getRangeAxisEdge(10);
      assertEquals(1.0E-100, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
      
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      Paint paint0 = textBox0.getBackgroundPaint();
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(paint0);
      combinedDomainXYPlot0.getFixedDomainAxisSpace();
      combinedDomainXYPlot0.setFixedDomainAxisSpace((AxisSpace) null, false);
      assertEquals(0.0, logarithmicAxis0.getLowerBound(), 0.01);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection((TimeSeries) null);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      thermometerPlot0.setInsets(valueAxis0.DEFAULT_TICK_LABEL_INSETS);
      PeriodAxis periodAxis0 = new PeriodAxis(":fJ~Pq:[?2a3?M<*");
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      XYPlot xYPlot0 = new XYPlot(timeSeriesCollection0, valueAxis0, periodAxis0, xYLineAndShapeRenderer0);
      xYPlot0.setDomainTickBandPaint(valueAxis0.DEFAULT_AXIS_LABEL_PAINT);
      thermometerPlot0.setRange(0.0, 500);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 1.0F;
      doubleArray0[1] = 1.0E-8;
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, xYPlot0.DEFAULT_GRIDLINE_STROKE, periodAxis0.DEFAULT_TICK_MARK_PAINT, periodAxis0.DEFAULT_AXIS_LABEL_PAINT);
      xYPolygonAnnotation0.setToolTipText("NumberAxis.setAutoRangeMinimumSize(double): must be > 0.0.");
      xYPlot0.removeAnnotation((XYAnnotation) xYPolygonAnnotation0);
      xYPlot0.getDomainTickBandPaint();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(2, (double) 1.0F, (double) 0);
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: 10
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Color color0 = (Color)AbstractRenderer.DEFAULT_OUTLINE_PAINT;
      xYPlot0.setDomainTickBandPaint(color0);
      // Undeclared exception!
      try { 
        xYPlot0.getQuadrantPaint(3257);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (3257) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3582.176643859951);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      ValueMarker valueMarker0 = new ValueMarker(1.0E-8, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addRangeMarker((Marker) valueMarker0, layer0);
      combinedDomainXYPlot0.clearRangeAxes();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getDomainAxisLocation(10);
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0, false);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      
      boolean boolean0 = combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearRangeAxes();
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage((-2567), 1, 10, (IndexColorModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeCrosshairValue(0.0);
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation(1800);
      AxisLocation axisLocation1 = combinedRangeXYPlot0.getDomainAxisLocation(1800);
      assertNotNull(axisLocation1);
      
      AxisLocation.getOpposite(axisLocation1);
      combinedRangeXYPlot0.setRangeAxisLocation(1800, axisLocation0, false);
      combinedRangeXYPlot0.mapDatasetToDomainAxis(24, 1859);
      combinedRangeXYPlot0.setRangeAxisLocation(0, axisLocation1);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Paint paint0 = ganttRenderer0.getIncompletePaint();
      combinedRangeXYPlot0.setDomainZeroBaselinePaint(paint0);
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      
      combinedRangeXYPlot0.setRangeGridlinesVisible(false);
      assertFalse(combinedRangeXYPlot0.isRangeGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0, "|2BES`:P{L]/t_hNy");
      cyclicNumberAxis0.setUpperBound(0.0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      cyclicNumberAxis0.zoomRange(10, 10);
      combinedRangeXYPlot0.getDomainAxisEdge((-179));
      combinedRangeXYPlot0.getDataRange(cyclicNumberAxis0);
      // Undeclared exception!
      try { 
        cyclicNumberAxis0.setRangeWithMargins((Range) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'range' argument.
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("");
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer(numberAxis0.DEFAULT_TICK_LABEL_PAINT, numberAxis0.DEFAULT_TICK_MARK_PAINT, false);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, numberAxis0, numberAxis0, xYDifferenceRenderer0);
      xYPlot0.getRangeAxisEdge();
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, xYPlot0.getWeight());
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, "Null 'orientation' argument.");
      combinedRangeXYPlot0.setDomainAxis(967, (ValueAxis) cyclicNumberAxis0, true);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(10, 53, 515, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 515
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      AxisLocation axisLocation1 = AxisLocation.getOpposite(axisLocation0);
      combinedRangeXYPlot0.setRangeAxisLocation(11, axisLocation1);
      CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedRangeXYPlot0.addDomainMarker((Marker) categoryMarker0);
      assertEquals(1, combinedRangeXYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker(784.927234301889, xYPlot0.DEFAULT_GRIDLINE_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.addDomainMarker(3383, (Marker) valueMarker0, layer0);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      xYPlot0.setDataset((XYDataset) categoryTableXYDataset0);
      Marker marker0 = null;
      Layer layer1 = Layer.FOREGROUND;
      xYPlot0.getAnnotations();
      // Undeclared exception!
      try { 
        xYPlot0.addDomainMarker((-1335), (Marker) null, layer1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getRenderer(10);
      combinedRangeXYPlot0.setRangeCrosshairVisible(false);
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getRenderer(0);
      combinedRangeXYPlot0.setRangeCrosshairVisible(false);
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("");
      Locale locale0 = Locale.ENGLISH;
      locale0.getExtension('c');
      TickUnitSource tickUnitSource0 = NumberAxis.createStandardTickUnits(locale0);
      logAxis0.setStandardTickUnits(tickUnitSource0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.setRangeGridlinePaint(logAxis0.DEFAULT_TICK_MARK_PAINT);
      combinedRangeXYPlot0.getRangeAxisCount();
      combinedRangeXYPlot0.configureRangeAxes();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      StandardXYURLGenerator standardXYURLGenerator0 = null;
      try {
        standardXYURLGenerator0 = new StandardXYURLGenerator((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'prefix' argument.
         //
         verifyException("org.jfree.chart.urls.StandardXYURLGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis(" ");
      DateTickUnit dateTickUnit0 = dateAxis0.getTickUnit();
      dateAxis0.setTickUnit(dateTickUnit0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      dateAxis0.centerRange((-374.1635476681225));
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      defaultXYDataset0.validateObject();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-1.0));
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      defaultXYDataset0.removeChangeListener(compassPlot0);
      combinedDomainXYPlot0.indexOf(defaultXYDataset0);
      combinedDomainXYPlot0.setDomainCrosshairVisible(true);
      combinedDomainXYPlot0.setDataset((XYDataset) defaultXYDataset0);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(10, 0);
      LegendItemCollection legendItemCollection0 = waferMapRenderer0.getLegendCollection();
      legendItemCollection0.clone();
      combinedDomainXYPlot0.setFixedLegendItems(legendItemCollection0);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairVisible());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.setBackgroundAlpha(500);
      combinedDomainXYPlot0.getSeriesRenderingOrder();
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      TimeZone timeZone0 = TimeZone.getTimeZone("Null 'origin' argument.");
      DateAxis dateAxis0 = new DateAxis("Null 'origin' argument.", timeZone0);
      combinedDomainXYPlot0.getDataRange(dateAxis0);
      combinedDomainXYPlot0.clearRangeMarkers();
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer();
      combinedDomainXYPlot0.setRenderer(695, (XYItemRenderer) xYDifferenceRenderer0);
      assertFalse(xYDifferenceRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      Stroke stroke0 = fastScatterPlot0.getDomainGridlineStroke();
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(stroke0);
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      valueMarker0.setLabel("Yq^jI%vZCvJ");
      combinedDomainXYPlot0.addRangeMarker((Marker) valueMarker0);
      combinedDomainXYPlot0.setDomainTickBandPaint(fastScatterPlot0.DEFAULT_GRIDLINE_PAINT);
      combinedDomainXYPlot0.getRangeAxisLocation(10);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      GridArrangement gridArrangement0 = new GridArrangement(4, 10);
      LegendTitle legendTitle0 = new LegendTitle(combinedDomainXYPlot0, gridArrangement0, gridArrangement0);
      Rectangle2D rectangle2D0 = legendTitle0.getBounds();
      plotRenderingInfo0.setDataArea(rectangle2D0);
      combinedDomainXYPlot0.zoomDomainAxes(1471.367, 1471.367, plotRenderingInfo0, (Point2D) null);
      combinedDomainXYPlot0.getDatasetRenderingOrder();
      combinedDomainXYPlot0.getWeight();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot((ValueDataset) null);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      combinedDomainXYPlot0.setBackgroundPaint(valueAxis0.DEFAULT_AXIS_LINE_PAINT);
      combinedDomainXYPlot0.setDomainAxis(10, valueAxis0);
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(valueAxis0.DEFAULT_TICK_MARK_STROKE);
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      combinedDomainXYPlot0.setDataset((XYDataset) defaultIntervalXYDataset0);
      assertEquals(11, combinedDomainXYPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setWeight(1113);
      RingPlot ringPlot0 = new RingPlot();
      Font font0 = ringPlot0.DEFAULT_LABEL_FONT.deriveFont((-2621));
      ringPlot0.setLabelFont(font0);
      JFreeChart jFreeChart0 = new JFreeChart("", ringPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, true, true, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      chartPanel0.getAnchor();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.findSubplot(plotRenderingInfo0, (Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getRangeTickBandPaint();
      IntervalMarker intervalMarker0 = new IntervalMarker(Double.NaN, 1.0F);
      xYPlot0.addRangeMarker((Marker) intervalMarker0);
      int int0 = 0;
      xYPlot0.mapDatasetToDomainAxis(0, 0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      xYPlot0.setRangeAxisLocation(axisLocation0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      int int1 = (-1176);
      int int2 = 31;
      combinedRangeXYPlot0.setWeight(31);
      MatrixSeries matrixSeries0 = null;
      try {
        matrixSeries0 = new MatrixSeries("", 0, (-1147));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.MatrixSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, valueAxis0, valueAxis0, stackedXYAreaRenderer2_0);
      ValueMarker valueMarker0 = new ValueMarker(10);
      stackedXYAreaRenderer2_0.lookupSeriesStroke(2);
      xYPlot0.addRangeMarker((Marker) valueMarker0);
      xYPlot0.getRenderer(2);
      xYPlot0.getRendererForDataset((XYDataset) null);
      xYPlot0.setFixedRangeAxisSpace((AxisSpace) null, true);
      SeriesRenderingOrder seriesRenderingOrder0 = xYPlot0.getSeriesRenderingOrder();
      xYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      xYPlot0.getRangeZeroBaselineStroke();
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[5];
      xYItemRendererArray0[0] = null;
      xYItemRendererArray0[1] = (XYItemRenderer) stackedXYAreaRenderer2_0;
      xYItemRendererArray0[2] = null;
      xYItemRendererArray0[3] = null;
      xYItemRendererArray0[4] = (XYItemRenderer) stackedXYAreaRenderer2_0;
      xYPlot0.setRenderers(xYItemRendererArray0);
      JFreeChart jFreeChart0 = new JFreeChart("The index value (", xYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(4917, 46, 2294, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 2294
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisSpace axisSpace0 = null;
      boolean boolean0 = true;
      combinedDomainXYPlot0.setRangeCrosshairVisible(true);
      boolean boolean1 = true;
      combinedDomainXYPlot0.setNoDataMessage(") should be in the range 0 to 3.");
      String string0 = "org.jfree.chart.axis.SegmentedTimeline$Segment";
      int int0 = (-2066);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 10);
      MarkerChangeEvent markerChangeEvent0 = null;
      try {
        markerChangeEvent0 = new MarkerChangeEvent((Marker) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("P?kN4\"1 ~h%Sp@", (DateFormat) null, (DateFormat) null);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1.0F);
      candlestickRenderer0.getBaseURLGenerator();
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(2, standardXYToolTipGenerator0, (XYURLGenerator) null);
      xYAreaRenderer0.clone();
      combinedDomainXYPlot0.setRenderer(2, (XYItemRenderer) xYAreaRenderer0, true);
      combinedDomainXYPlot0.getDomainAxisEdge();
      combinedDomainXYPlot0.equals((Object) null);
      Stack<StandardXYItemRenderer> stack0 = new Stack<StandardXYItemRenderer>();
      JTable jTable0 = new JTable(stack0, stack0);
      Rectangle rectangle0 = jTable0.getCellRect(84, 1, false);
      combinedDomainXYPlot0.drawZeroDomainBaseline((Graphics2D) null, rectangle0);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      
      BasicStroke basicStroke0 = (BasicStroke)combinedDomainXYPlot0.getDomainGridlineStroke();
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(2, basicStroke0.getLineJoin());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      GradientPaintTransformer gradientPaintTransformer0 = clusteredXYBarRenderer0.getGradientPaintTransformer();
      PlotChangeEvent plotChangeEvent0 = new PlotChangeEvent(xYPlot0);
      xYPlot0.notifyListeners(plotChangeEvent0);
      clusteredXYBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer0);
      xYPlot0.setRenderer((XYItemRenderer) clusteredXYBarRenderer0);
      boolean boolean0 = true;
      JFreeChart jFreeChart0 = new JFreeChart("&", clusteredXYBarRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, true);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage((-1223), 10, (ChartRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (-1223) and height (10) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      int int0 = 9;
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getRangeMarkers(9, layer0);
      xYPlot0.mapDatasetToDomainAxis((-2117), (-2117));
      SystemColor systemColor0 = SystemColor.activeCaptionText;
      xYPlot0.setDomainGridlinePaint(systemColor0);
      xYPlot0.clearRangeAxes();
      boolean boolean0 = false;
      xYPlot0.setDomainZeroBaselineVisible(false);
      xYPlot0.clearDomainAxes();
      xYPlot0.clearDomainAxes();
      xYPlot0.setDomainGridlinesVisible(false);
      // Undeclared exception!
      try { 
        xYPlot0.setDomainCrosshairStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      combinedRangeXYPlot0.fireChangeEvent();
      combinedRangeXYPlot0.getSubplots();
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null, true);
      IntervalMarker intervalMarker0 = null;
      try {
        intervalMarker0 = new IntervalMarker(1.0F, 1.0F, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, 3295.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'alpha' value must be in the range 0.0f to 1.0f
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      combinedDomainXYPlot0.getIndexOf(xYLine3DRenderer0);
      int int0 = (-534);
      String string0 = "IHVQwZA";
      int int1 = 0;
      int int2 = 4;
      int int3 = 128;
      SimpleTimeZone simpleTimeZone0 = null;
      try {
        simpleTimeZone0 = new SimpleTimeZone(0, "IHVQwZA", 10, (-1), 4, 3, 0, 128, (-534), (-1194));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal end time -1194
         //
         verifyException("java.util.SimpleTimeZone", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isRangeZoomable();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1778.0023364528), (-2452));
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.removeDomainMarker((-2452), (Marker) intervalMarker0, layer0);
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2();
      BoxAndWhiskerXYToolTipGenerator boxAndWhiskerXYToolTipGenerator0 = new BoxAndWhiskerXYToolTipGenerator();
      xYAreaRenderer2_0.setBaseToolTipGenerator((XYToolTipGenerator) boxAndWhiskerXYToolTipGenerator0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(xYAreaRenderer2_0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      rendererChangeEvent0.setChart(jFreeChart0);
      combinedRangeXYPlot0.rendererChanged(rendererChangeEvent0);
      combinedRangeXYPlot0.getDomainAxisEdge();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.getQuadrantPaint((-38));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (-38) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      LogAxis logAxis0 = new LogAxis();
      logAxis0.setDownArrow(xYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      xYPlot0.setRangeAxis((ValueAxis) logAxis0);
      xYPlot0.setRangeCrosshairValue((double) 500, true);
      XYLineAnnotation xYLineAnnotation0 = new XYLineAnnotation(10, 916.82, 0.0F, 50000.0);
      xYLineAnnotation0.setToolTipText("YMN?ku-#o8T.F%U");
      xYPlot0.removeAnnotation((XYAnnotation) xYLineAnnotation0, false);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.getRangeMarkers(layer0);
      IntervalMarker intervalMarker0 = null;
      try {
        intervalMarker0 = new IntervalMarker(0.05, 1553.05162613533, logAxis0.DEFAULT_AXIS_LINE_PAINT, (Stroke) null, logAxis0.DEFAULT_AXIS_LABEL_PAINT, logAxis0.DEFAULT_TICK_MARK_STROKE, 0.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis("=#NzsG");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, periodAxis0.DEFAULT_AXIS_LINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, periodAxis0.DEFAULT_AXIS_LINE_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE, 1.0F);
      combinedDomainXYPlot0.removeRangeMarker((Marker) valueMarker0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 1.0F;
      doubleArray0[1] = (double) 0.0F;
      doubleArray0[2] = 2000000.0;
      doubleArray0[3] = 0.05;
      doubleArray0[4] = 504.0;
      doubleArray0[5] = 0.05;
      doubleArray0[6] = (double) 1.0F;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      xYItemRendererState0.setProcessVisibleItemsOnly(false);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo1.getPlotInfo();
      plotRenderingInfo1.clone();
      combinedDomainXYPlot0.handleClick(500, 500, plotRenderingInfo1);
      XYPointerAnnotation xYPointerAnnotation0 = null;
      try {
        xYPointerAnnotation0 = new XYPointerAnnotation((String) null, 0.05, 849.479763, 849.479763);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.annotations.XYTextAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ValueAxis valueAxis0 = null;
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedRangeXYPlot0.setDomainCrosshairValue(259.2415);
      combinedRangeXYPlot0.setDomainAxes(valueAxisArray0);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      int int0 = (-949);
      Paint paint0 = defaultPolarItemRenderer0.getItemPaint(1362, (-949));
      ValueMarker valueMarker0 = new ValueMarker(10, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, paint0, defaultPolarItemRenderer0.DEFAULT_OUTLINE_STROKE, 0.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.removeDomainMarker(0, (Marker) valueMarker0, layer0, true);
      int int1 = (-1082);
      CategoryMarker categoryMarker0 = null;
      try {
        categoryMarker0 = new CategoryMarker(false, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, (-1741.4989F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'alpha' value must be in the range 0.0f to 1.0f
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.getRangeMarkers(layer0);
      CategoryMarker categoryMarker0 = new CategoryMarker(10, xYPlot0.DEFAULT_GRIDLINE_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      boolean boolean0 = true;
      xYPlot0.removeRangeMarker(1023, (Marker) categoryMarker0, layer0, true);
      xYPlot0.setRangeZeroBaselineStroke(basicStroke0);
      xYPlot0.getDomainZeroBaselineStroke();
      xYPlot0.getRangeAxisEdge();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot();
      // Undeclared exception!
      try { 
        waferMapPlot0.getLegendItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.WaferMapPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
      BasicStroke basicStroke0 = (BasicStroke)combinedRangeXYPlot0.getRangeCrosshairStroke();
      assertEquals(0.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.getDomainMarkers(layer0);
      xYPlot0.setDomainCrosshairValue((-1144.4754445840788), false);
      double double0 = (-4343.5);
      IntervalMarker intervalMarker0 = new IntervalMarker((-4343.5), 0.0);
      xYPlot0.removeDomainMarker((Marker) intervalMarker0, layer0);
      String string0 = "/KNi";
      SimpleTimeZone simpleTimeZone0 = null;
      try {
        simpleTimeZone0 = new SimpleTimeZone(10, "/KNi", (-5855), (-1764), (-5855), 66, 680, 56, (-59), 3825, 0, 10, 4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal start month -5855
         //
         verifyException("java.util.SimpleTimeZone", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(801.42142406, 801.42142406, "*");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      cyclicNumberAxis0.setLabelInsets(combinedRangeXYPlot0.DEFAULT_INSETS);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getLegendItemURLGenerator();
      ganttRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      ganttRenderer0.setDrawBarOutline(false);
      Paint paint0 = ganttRenderer0.getIncompletePaint();
      combinedRangeXYPlot0.setRangeTickBandPaint(paint0);
      JDBCXYDataset jDBCXYDataset0 = null;
      try {
        jDBCXYDataset0 = new JDBCXYDataset("I4ErE(uS(.:mk(i:<to", (String) null, "", "Jf=*!_@[");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(0.0, 0.0, 1.0F, 1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
      xYBoxAnnotation0.clone();
      xYBoxAnnotation0.clone();
      xYBoxAnnotation0.setToolTipText((String) null);
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYBoxAnnotation0, false);
      Color color0 = (Color)AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
      combinedDomainXYPlot0.setRangeCrosshairPaint(color0);
      combinedDomainXYPlot0.getQuadrantPaint(3);
      combinedDomainXYPlot0.setDomainCrosshairValue(5.0E-6, false);
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0E10, 0.0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addRangeMarker(2, (Marker) intervalMarker0, layer0, false);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      logarithmicAxis0.setTickLabelPaint(combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedDomainXYPlot0.getRangeAxisIndex(logarithmicAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      JViewport jViewport0 = new JViewport();
      Point point0 = jViewport0.getViewPosition();
      combinedDomainXYPlot0.zoomDomainAxes(1994.07935982, plotRenderingInfo0, (Point2D) point0, true);
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String string0 = "";
      LogAxis logAxis0 = new LogAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(25000.0, 0.05);
      Range range0 = cyclicNumberAxis0.getDefaultAutoRange();
      cyclicNumberAxis0.setRightArrow(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      Range.expandToInclude(cyclicNumberAxis0.DEFAULT_RANGE, 1.0F);
      logAxis0.setRangeWithMargins(range0, true, false);
      combinedRangeXYPlot0.getRangeAxisEdge();
      combinedRangeXYPlot0.clearDomainMarkers();
      combinedRangeXYPlot0.getOrientation();
      combinedRangeXYPlot0.setRangeZeroBaselineStroke(logAxis0.DEFAULT_AXIS_LINE_STROKE);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(500, 0, 10, (IndexColorModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, true, false, false);
      JComponent.getDefaultLocale();
      chartPanel0.getAnchor();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setQuadrantOrigin((Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'origin' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      LegendTitle legendTitle0 = new LegendTitle(combinedRangeXYPlot0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      Paint paint0 = thermometerPlot0.getValuePaint();
      combinedRangeXYPlot0.setQuadrantPaint(0, paint0);
      RectangleInsets rectangleInsets0 = legendTitle0.getMargin();
      combinedRangeXYPlot0.setAxisOffset(rectangleInsets0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      byte[] byteArray0 = new byte[0];
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(1895, 2, byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getRangeAxisLocation();
      combinedRangeXYPlot0.setDomainAxisLocation(axisLocation0, true);
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Stroke stroke0 = statisticalBarRenderer0.getErrorIndicatorStroke();
      combinedDomainXYPlot0.setRangeCrosshairStroke(stroke0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation((-3664));
      axisLocation0.getOpposite();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, numberAxis3D0.DEFAULT_TICK_LABEL_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.addDomainMarker(500, (Marker) categoryMarker0, layer0, false);
      combinedDomainXYPlot0.setRangeAxisLocation(500, axisLocation0);
      combinedDomainXYPlot0.configureDomainAxes();
      double double0 = 1.0;
      PlotRenderingInfo plotRenderingInfo0 = null;
      AffineTransform affineTransform0 = new AffineTransform(10, 2.0F, 0.0, (-3664), 0.0, 4.0);
      BasicListUI basicListUI0 = new BasicListUI();
      DefaultComboBoxModel<WindItemRenderer> defaultComboBoxModel0 = new DefaultComboBoxModel<WindItemRenderer>();
      JList<WindItemRenderer> jList0 = new JList<WindItemRenderer>(defaultComboBoxModel0);
      // Undeclared exception!
      try { 
        basicListUI0.indexToLocation(jList0, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.plaf.basic.BasicListUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedDomainXYPlot0.setFixedRangeAxisSpace((AxisSpace) null, true);
      combinedDomainXYPlot0.isDomainGridlinesVisible();
      combinedDomainXYPlot0.getDataset(1362);
      combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
      combinedDomainXYPlot0.getFixedDomainAxisSpace();
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[4];
      try { 
        ICC_Profile.getInstance("Null 'annotation' argument.");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot open file Null 'annotation' argument.
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      xYPlot0.getLegendItems();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(sequenceInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 752.433);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      cyclicNumberAxis0.setLowerBound((-2141.02942329));
      CyclicNumberAxis.DEFAULT_ADVANCE_LINE_STROKE = combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE;
      SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(1.0F);
      combinedDomainXYPlot0.getRendererForDataset(simpleHistogramDataset0);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("q5rSDl6y{?NsMZG");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot0.getRenderer(0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      plotRenderingInfo0.setDataArea(rectangle0);
      combinedDomainXYPlot0.zoomDomainAxes(0.05, plotRenderingInfo0, (Point2D) null, false);
      assertEquals(0.525, dateAxis0.getUpperBound(), 0.01);
      assertEquals(0.475, dateAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(10.0, 1719.96631344, 1.0F, 10);
      SystemColor systemColor0 = SystemColor.control;
      combinedRangeXYPlot0.drawHorizontalLine((Graphics2D) null, rectangle2D_Double0, (-1428.633108251), periodAxis0.DEFAULT_TICK_MARK_STROKE, systemColor0);
      combinedRangeXYPlot0.setRangeGridlineStroke(periodAxis0.DEFAULT_TICK_MARK_STROKE);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(500);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 500, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Stack<AxisLocation> stack0 = new Stack<AxisLocation>();
      Object[][][] objectArray0 = new Object[3][1][3];
      Object[][] objectArray1 = new Object[8][1];
      Object[] objectArray2 = new Object[6];
      objectArray2[0] = (Object) stack0;
      Object object0 = new Object();
      objectArray2[1] = object0;
      objectArray2[2] = (Object) stack0;
      objectArray2[3] = (Object) stack0;
      objectArray2[4] = (Object) stack0;
      objectArray2[5] = (Object) stack0;
      objectArray1[0] = objectArray2;
      Object[] objectArray3 = new Object[2];
      objectArray3[0] = (Object) stack0;
      XYPlot xYPlot0 = new XYPlot();
      Object object1 = xYPlot0.clone();
      objectArray3[1] = object1;
      objectArray1[1] = objectArray3;
      Object[] objectArray4 = new Object[2];
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2897.0030902, (String) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      Object object2 = combinedRangeXYPlot0.clone();
      objectArray4[0] = object2;
      objectArray4[1] = object1;
      objectArray1[2] = objectArray4;
      Object[] objectArray5 = new Object[9];
      objectArray5[0] = object0;
      objectArray5[1] = object1;
      objectArray5[2] = (Object) null;
      objectArray5[3] = (Object) null;
      objectArray5[4] = (Object) xYPlot0;
      objectArray5[5] = object1;
      objectArray5[6] = (Object) null;
      objectArray5[7] = object1;
      Object object3 = combinedRangeXYPlot0.clone();
      objectArray5[8] = object3;
      objectArray1[3] = objectArray5;
      Object[] objectArray6 = new Object[4];
      Object object4 = xYPlot0.clone();
      objectArray6[0] = object4;
      objectArray6[1] = (Object) combinedRangeXYPlot0;
      objectArray6[2] = (Object) cyclicNumberAxis0;
      objectArray6[3] = (Object) xYPlot0;
      objectArray1[4] = objectArray6;
      Object[] objectArray7 = new Object[1];
      objectArray7[0] = object4;
      objectArray1[5] = objectArray7;
      Object[] objectArray8 = new Object[6];
      objectArray8[0] = object3;
      objectArray8[1] = object1;
      objectArray8[2] = (Object) xYPlot0;
      objectArray8[3] = object4;
      objectArray8[4] = object0;
      objectArray8[5] = (Object) null;
      objectArray1[6] = objectArray8;
      Object[] objectArray9 = new Object[5];
      objectArray9[0] = (Object) null;
      objectArray9[1] = object3;
      objectArray9[2] = (Object) null;
      objectArray9[3] = object1;
      objectArray9[4] = (Object) null;
      objectArray1[7] = objectArray9;
      objectArray0[0] = objectArray1;
      Object[][] objectArray10 = new Object[2][1];
      objectArray10[0] = objectArray4;
      objectArray10[1] = objectArray9;
      objectArray0[1] = objectArray10;
      Object[][] objectArray11 = new Object[5][1];
      objectArray11[0] = objectArray7;
      objectArray11[1] = objectArray5;
      objectArray11[2] = objectArray4;
      objectArray11[3] = objectArray3;
      objectArray11[4] = objectArray7;
      objectArray0[2] = objectArray11;
      DefaultWindDataset defaultWindDataset0 = null;
      try {
        defaultWindDataset0 = new DefaultWindDataset(stack0, objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The number of series keys does not match the number of series in the data array.
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      // Undeclared exception!
      try { 
        xYPlot0.getRangeAxisForDataset((-1952257861));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index -1952257861 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logarithmicAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      combinedDomainXYPlot0.setDomainAxisLocation(500, axisLocation0, true);
      RingPlot ringPlot0 = new RingPlot();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(jDBCCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      // Undeclared exception!
      try { 
        jFreeChart0.getXYPlot();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.plot.PiePlot cannot be cast to org.jfree.chart.plot.XYPlot
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainGridlinePaint();
      combinedRangeXYPlot0.setDomainCrosshairLockedOnData(false);
      assertFalse(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      BubbleXYItemLabelGenerator bubbleXYItemLabelGenerator0 = new BubbleXYItemLabelGenerator();
      ValueMarker valueMarker0 = new ValueMarker(0.0);
      Layer layer0 = Layer.FOREGROUND;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1295.731), (-2507.0), "Elvsl];Q");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.clearRangeMarkers(65);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PeriodAxis periodAxis0 = new PeriodAxis("Soren Caspersen");
      combinedDomainXYPlot0.setDomainZeroBaselineStroke(cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getDomainAxisForDataset(500);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 500 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      int int0 = 9;
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getRangeMarkers(9, layer0);
      xYPlot0.mapDatasetToDomainAxis((-2117), (-2117));
      SystemColor systemColor0 = SystemColor.activeCaptionText;
      xYPlot0.setDomainGridlinePaint(systemColor0);
      xYPlot0.clearRangeAxes();
      boolean boolean0 = false;
      xYPlot0.setDomainZeroBaselineVisible(false);
      xYPlot0.clearDomainAxes();
      xYPlot0.clearDomainAxes();
      RingPlot ringPlot0 = new RingPlot();
      Stroke stroke0 = ringPlot0.getLabelLinkStroke();
      xYPlot0.setDomainZeroBaselinePaint(ringPlot0.DEFAULT_LABEL_OUTLINE_PAINT);
      xYPlot0.setDomainCrosshairStroke(stroke0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1.0F);
      Stroke stroke1 = candlestickRenderer0.lookupSeriesStroke(10);
      ringPlot0.setSectionOutlineStroke(10, stroke1);
      // Undeclared exception!
      try { 
        xYPlot0.addDomainMarker((Marker) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      BubbleXYItemLabelGenerator bubbleXYItemLabelGenerator0 = new BubbleXYItemLabelGenerator();
      ValueMarker valueMarker0 = new ValueMarker(0.0);
      Layer layer0 = Layer.BACKGROUND;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PeriodAxis periodAxis0 = new PeriodAxis("Soren Caspersen");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      combinedRangeXYPlot0.zoomRangeAxes((-65.81582198243), (PlotRenderingInfo) null, (Point2D) point2D_Double0, false);
      combinedRangeXYPlot0.setRangeZeroBaselinePaint(periodAxis0.DEFAULT_AXIS_LABEL_PAINT);
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(0.0, periodAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeCrosshairValue(0.0);
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation(1800);
      AxisLocation axisLocation1 = combinedRangeXYPlot0.getDomainAxisLocation(1800);
      AxisLocation.getOpposite(axisLocation1);
      combinedRangeXYPlot0.setRangeAxisLocation(1800, axisLocation0, false);
      combinedRangeXYPlot0.mapDatasetToDomainAxis(24, 1859);
      combinedRangeXYPlot0.setRangeAxisLocation(0, axisLocation1);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, false);
      Paint paint0 = ganttRenderer0.getIncompletePaint();
      combinedRangeXYPlot0.setDomainZeroBaselinePaint(paint0);
      combinedRangeXYPlot0.getRenderer();
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      DateAxis dateAxis0 = new DateAxis("");
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      XYPlot xYPlot0 = new XYPlot(timePeriodValuesCollection0, dateAxis0, dateAxis0, xYErrorRenderer0);
      BufferedImage bufferedImage0 = new BufferedImage(500, 2187, 10);
      Vector<LinearGradientPaint> vector0 = new Vector<LinearGradientPaint>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Vector) null, vector0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JTable jTable0 = new JTable(defaultTableModel0, (TableColumnModel) null);
      JTableHeader jTableHeader0 = new JTableHeader((TableColumnModel) null);
      jTableHeader0.getHeaderRect(226);
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.drawRangeMarkers(graphics2D0, (Rectangle2D) null, 11, layer0);
      bufferedImage0.addTileObserver(tileObserver0);
      Graphics2D graphics2D1 = bufferedImage0.createGraphics();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Quarter outside valid range.");
      Rectangle rectangle0 = new Rectangle(8, (-3009), 2060, 500);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      xYPlot0.calculateAxisSpace(graphics2D1, rectangle0);
      xYPlot0.setDomainCrosshairValue(1000.0, true);
      xYPlot0.getRenderer();
      // Undeclared exception!
      try { 
        xYPlot0.setQuadrantPaint(2187, xYErrorRenderer0.DEFAULT_OUTLINE_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (2187) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultXYDataset0, (ValueAxis) null, (ValueAxis) null, candlestickRenderer0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[8];
      valueAxisArray0[2] = null;
      valueAxisArray0[3] = null;
      valueAxisArray0[4] = null;
      valueAxisArray0[5] = null;
      valueAxisArray0[6] = null;
      valueAxisArray0[7] = null;
      xYPlot0.setDomainAxes(valueAxisArray0);
      ValueMarker valueMarker0 = new ValueMarker((double) candlestickRenderer0.ZERO, xYPlot0.DEFAULT_CROSSHAIR_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE, xYPlot0.DEFAULT_BACKGROUND_PAINT, candlestickRenderer0.DEFAULT_STROKE, 0.0F);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getDomainZeroBaselinePaint();
      xYPlot0.getDomainAxis(2);
      // Undeclared exception!
      try { 
        xYPlot0.getRangeAxisForDataset(1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 1 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      BubbleXYItemLabelGenerator bubbleXYItemLabelGenerator0 = new BubbleXYItemLabelGenerator();
      ValueMarker valueMarker0 = new ValueMarker(0.0);
      Layer layer0 = Layer.BACKGROUND;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PeriodAxis periodAxis0 = new PeriodAxis("os$Sore C0(pers0n");
      XYPlot xYPlot0 = new XYPlot();
      RectangleInsets rectangleInsets0 = xYPlot0.getAxisOffset();
      assertEquals(4.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(1, xYPlot0.getWeight());
      assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(4.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("oj1;'2OG");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logarithmicAxis0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      categoryAxis3D0.getTickLabelPaint((Comparable) true);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, logarithmicAxis0, areaRenderer0);
      categoryPlot0.configureRangeAxes();
      combinedDomainXYPlot0.setParent(categoryPlot0);
      combinedDomainXYPlot0.setDomainCrosshairValue(1.0E-100, false);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, areaRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[6];
      combinedDomainXYPlot0.setNoDataMessagePaint(categoryAxis3D0.DEFAULT_AXIS_LINE_PAINT);
      valueAxisArray0[0] = (ValueAxis) logarithmicAxis0;
      valueAxisArray0[2] = (ValueAxis) logarithmicAxis0;
      valueAxisArray0[2] = (ValueAxis) logarithmicAxis0;
      valueAxisArray0[3] = (ValueAxis) logarithmicAxis0;
      valueAxisArray0[4] = (ValueAxis) logarithmicAxis0;
      valueAxisArray0[5] = (ValueAxis) logarithmicAxis0;
      combinedDomainXYPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainXYPlot0.getRangeAxisEdge(10);
      IntervalMarker intervalMarker0 = new IntervalMarker((double) areaRenderer0.ZERO, (-1629.6703));
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addDomainMarker(10, (Marker) intervalMarker0, layer0, true);
      combinedDomainXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      assertEquals(6, combinedDomainXYPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultXYDataset0, (ValueAxis) null, (ValueAxis) null, candlestickRenderer0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[8];
      valueAxisArray0[0] = null;
      valueAxisArray0[1] = null;
      valueAxisArray0[3] = null;
      valueAxisArray0[4] = null;
      valueAxisArray0[5] = null;
      valueAxisArray0[6] = null;
      valueAxisArray0[7] = null;
      Layer layer0 = Layer.BACKGROUND;
      Color color0 = (Color)xYPlot0.getDomainZeroBaselinePaint();
      assertEquals(0, color0.getBlue());
      
      xYPlot0.getDomainAxis(2);
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)chartPanel0.getScreenDataArea((-1838), 3);
      xYPlot0.drawDomainMarkers((Graphics2D) null, rectangle2D_Double0, 680, layer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StackedXYAreaRenderer[] stackedXYAreaRendererArray0 = new StackedXYAreaRenderer[0];
      DefaultComboBoxModel<StackedXYAreaRenderer> defaultComboBoxModel0 = new DefaultComboBoxModel<StackedXYAreaRenderer>(stackedXYAreaRendererArray0);
      JList<StackedXYAreaRenderer> jList0 = new JList<StackedXYAreaRenderer>(defaultComboBoxModel0);
      jList0.indexToLocation(10);
      xYPlot0.zoomDomainAxes(10.0, (-1490.656806708467), plotRenderingInfo0, (Point2D) null);
      assertTrue(xYPlot0.isRangeZoomable());
      assertTrue(xYPlot0.isDomainZoomable());
      assertEquals(1, xYPlot0.getWeight());
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedDomainXYPlot0.getDomainCrosshairPaint();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      combinedDomainXYPlot0.setOrientation(plotOrientation0);
      int int0 = 5;
      combinedDomainXYPlot0.clearDomainMarkers(5);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(5, layer0);
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((double) 10, 5.0E-4, 10.0, 1.0E11);
      int int1 = 4;
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, 4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: 4
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      numberAxis3D0.setTickMarkStroke(combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeXYPlot0.setDomainZeroBaselinePaint(numberAxis3D0.DEFAULT_TICK_LABEL_PAINT);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      combinedRangeXYPlot0.setAxisOffset(numberAxis3D0.DEFAULT_TICK_LABEL_INSETS);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedRangeXYPlot0.setRangeCrosshairPaint(numberAxis3D0.DEFAULT_TICK_MARK_PAINT);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      plotRenderingInfo0.clone();
      Arc2D.Double arc2D_Double0 = new Arc2D.Double();
      Point2D point2D0 = arc2D_Double0.getEndPoint();
      combinedRangeXYPlot0.zoomRangeAxes((double) 2.0F, plotRenderingInfo0, point2D0, true);
      combinedRangeXYPlot0.zoomRangeAxes(0.0, plotRenderingInfo0, point2D0);
      combinedRangeXYPlot0.setRangeZeroBaselineVisible(true);
      combinedRangeXYPlot0.clearAnnotations();
      SeriesRenderingOrder seriesRenderingOrder0 = combinedRangeXYPlot0.getSeriesRenderingOrder();
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedRangeXYPlot0.setRangeGridlinesVisible(true);
      combinedRangeXYPlot0.getDomainCrosshairStroke();
      combinedRangeXYPlot0.getRangeAxisEdge(2109135725);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.removeRangeMarker(2109135725, (Marker) categoryMarker0, layer0, true);
      combinedRangeXYPlot0.setRangeAxis(695, (ValueAxis) numberAxis3D0, true);
      combinedRangeXYPlot0.getSeriesCount();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getRangeAxisLocation((-203));
      combinedRangeXYPlot0.setDomainAxisLocation(60, axisLocation0, false);
      combinedRangeXYPlot0.setFixedRangeAxisSpace((AxisSpace) null, false);
      assertEquals(696, combinedRangeXYPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      int int0 = 11;
      combinedDomainCategoryPlot0.getDomainAxisEdge(11);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation(10);
      xYPlot0.setDomainAxisLocation(axisLocation0, false);
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      xYPlot0.equals(windItemRenderer0);
      int int1 = 72;
      Second second0 = null;
      try {
        second0 = new Second(10, (-845), 10, 10, 41, 72);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'year' argument must be in range 1900 to 9999.
         //
         verifyException("org.jfree.data.time.SpreadsheetDate", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultXYDataset0, (ValueAxis) null, (ValueAxis) null, candlestickRenderer0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[8];
      valueAxisArray0[0] = null;
      valueAxisArray0[1] = null;
      valueAxisArray0[2] = null;
      valueAxisArray0[3] = null;
      valueAxisArray0[4] = null;
      valueAxisArray0[5] = null;
      valueAxisArray0[6] = null;
      valueAxisArray0[7] = null;
      xYPlot0.setDomainAxes(valueAxisArray0);
      xYPlot0.getPlotType();
      ValueMarker valueMarker0 = new ValueMarker((double) candlestickRenderer0.ZERO, xYPlot0.DEFAULT_CROSSHAIR_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE, xYPlot0.DEFAULT_BACKGROUND_PAINT, candlestickRenderer0.DEFAULT_STROKE, 0.0F);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addRangeMarker((-1838), (Marker) valueMarker0, layer0, true);
      xYPlot0.getDomainZeroBaselinePaint();
      ValueAxis valueAxis0 = xYPlot0.getDomainAxis(2);
      int int0 = xYPlot0.getRangeAxisIndex(valueAxis0);
      assertEquals(8, xYPlot0.getDomainAxisCount());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("4~9%/2T{ b$");
      CategoryAnchor categoryAnchor0 = null;
      int int0 = (-1);
      Stack<CategoryAxis3D> stack0 = new Stack<CategoryAxis3D>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, stack0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      stack0.add(categoryAxis3D0);
      JTable jTable0 = new JTable(defaultTableModel0, (TableColumnModel) null);
      int int1 = 4;
      int int2 = 4249;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setQuadrantPaint((-808), categoryAxis3D0.DEFAULT_AXIS_LABEL_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (-808) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      String string0 = "";
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.removeRangeMarker(3, (Marker) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultXYDataset0, (ValueAxis) null, (ValueAxis) null, candlestickRenderer0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[8];
      valueAxisArray0[0] = null;
      valueAxisArray0[1] = null;
      valueAxisArray0[2] = null;
      valueAxisArray0[3] = null;
      valueAxisArray0[4] = null;
      valueAxisArray0[5] = null;
      valueAxisArray0[6] = null;
      valueAxisArray0[7] = null;
      xYPlot0.setDomainAxes(valueAxisArray0);
      ValueMarker valueMarker0 = new ValueMarker((double) candlestickRenderer0.ZERO, xYPlot0.DEFAULT_CROSSHAIR_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE, xYPlot0.DEFAULT_BACKGROUND_PAINT, candlestickRenderer0.DEFAULT_STROKE, 0.0F);
      LegendTitle legendTitle0 = new LegendTitle((LegendItemSource) null);
      RectangleAnchor rectangleAnchor0 = legendTitle0.getLegendItemGraphicLocation();
      valueMarker0.setLabelAnchor(rectangleAnchor0);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addRangeMarker((-1838), (Marker) valueMarker0, layer0, true);
      xYPlot0.getDomainZeroBaselinePaint();
      xYPlot0.getDomainAxis(2);
      xYPlot0.getRangeGridlinePaint();
      assertEquals(8, xYPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultXYDataset0, (ValueAxis) null, (ValueAxis) null, candlestickRenderer0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[8];
      valueAxisArray0[0] = null;
      valueAxisArray0[1] = null;
      valueAxisArray0[2] = null;
      valueAxisArray0[3] = null;
      valueAxisArray0[4] = null;
      valueAxisArray0[5] = null;
      valueAxisArray0[6] = null;
      valueAxisArray0[7] = null;
      xYPlot0.setDomainAxes(valueAxisArray0);
      float float0 = 0.0F;
      ValueMarker valueMarker0 = new ValueMarker((double) candlestickRenderer0.ZERO, xYPlot0.DEFAULT_CROSSHAIR_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE, xYPlot0.DEFAULT_BACKGROUND_PAINT, candlestickRenderer0.DEFAULT_STROKE, 0.0F);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addRangeMarker((-1838), (Marker) valueMarker0, layer0, true);
      xYPlot0.getDomainZeroBaselinePaint();
      xYPlot0.getDomainAxis(2);
      // Undeclared exception!
      try { 
        xYPlot0.setOrientation((PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(zoneInfo0);
      MockDate mockDate0 = new MockDate(25, 25, (-1189), (-3250), (-2708));
      Day day0 = new Day(mockDate0);
      Hour hour0 = new Hour((-1189), day0);
      RegularTimePeriod regularTimePeriod0 = hour0.next();
      PeriodAxis periodAxis0 = new PeriodAxis("$S0IBJA|BzxvR,2", regularTimePeriod0, day0, day0.DEFAULT_TIME_ZONE);
      XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, periodAxis0, periodAxis0, (XYItemRenderer) null);
      xYPlot0.getRangeAxis(23);
      assertEquals(1, xYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      numberAxis3D0.setTickMarkStroke(combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeXYPlot0.setDomainZeroBaselinePaint(numberAxis3D0.DEFAULT_TICK_LABEL_PAINT);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      combinedRangeXYPlot0.setAxisOffset(numberAxis3D0.DEFAULT_TICK_LABEL_INSETS);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedRangeXYPlot0.setRangeCrosshairPaint(numberAxis3D0.DEFAULT_TICK_MARK_PAINT);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      plotRenderingInfo0.clone();
      Arc2D.Double arc2D_Double0 = new Arc2D.Double();
      Point2D point2D0 = arc2D_Double0.getEndPoint();
      combinedRangeXYPlot0.zoomRangeAxes((double) 2.0F, plotRenderingInfo0, point2D0, true);
      combinedRangeXYPlot0.zoomRangeAxes(0.0, plotRenderingInfo0, point2D0);
      combinedRangeXYPlot0.setRangeZeroBaselineVisible(true);
      combinedRangeXYPlot0.clearAnnotations();
      SeriesRenderingOrder seriesRenderingOrder0 = combinedRangeXYPlot0.getSeriesRenderingOrder();
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedRangeXYPlot0.setRangeGridlinesVisible(true);
      combinedRangeXYPlot0.getDomainCrosshairStroke();
      combinedRangeXYPlot0.getRangeAxisEdge(2109135725);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.removeRangeMarker(2109135725, (Marker) categoryMarker0, layer0, true);
      combinedRangeXYPlot0.setRangeAxis(695, (ValueAxis) numberAxis3D0, true);
      combinedRangeXYPlot0.getSeriesCount();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getRangeAxisLocation((-203));
      axisLocation0.getOpposite();
      combinedRangeXYPlot0.setDomainAxisLocation(60, axisLocation0, false);
      CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", numberAxis3D0.DEFAULT_TICK_LABEL_FONT, combinedRangeXYPlot1, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2936, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ArrayList<Point2D.Double> arrayList0 = new ArrayList<Point2D.Double>();
      combinedRangeXYPlot0.drawDomainTickBands(graphics2D0, (Rectangle2D) null, arrayList0);
      assertTrue(combinedRangeXYPlot0.isRangeZeroBaselineVisible());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultXYDataset0, (ValueAxis) null, (ValueAxis) null, candlestickRenderer0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[8];
      valueAxisArray0[0] = null;
      valueAxisArray0[1] = null;
      valueAxisArray0[3] = null;
      valueAxisArray0[4] = null;
      valueAxisArray0[5] = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      valueAxisArray0[6] = null;
      valueAxisArray0[7] = null;
      Layer layer0 = Layer.BACKGROUND;
      Color color0 = (Color)xYPlot0.getDomainZeroBaselinePaint();
      assertEquals((-16777216), color0.getRGB());
      
      xYPlot0.getDomainAxis(2);
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)chartPanel0.getScreenDataArea((-1838), 3);
      xYPlot0.drawDomainMarkers((Graphics2D) null, rectangle2D_Double0, 680, layer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StackedXYAreaRenderer[] stackedXYAreaRendererArray0 = new StackedXYAreaRenderer[0];
      DefaultComboBoxModel<StackedXYAreaRenderer> defaultComboBoxModel0 = new DefaultComboBoxModel<StackedXYAreaRenderer>(stackedXYAreaRendererArray0);
      JList<StackedXYAreaRenderer> jList0 = new JList<StackedXYAreaRenderer>(defaultComboBoxModel0);
      jList0.indexToLocation(10);
      xYPlot0.zoomDomainAxes(10.0, (-1490.656806708467), plotRenderingInfo0, (Point2D) null);
      xYPlot0.getDomainMarkers((-2488), layer0);
      assertTrue(xYPlot0.isRangeZoomable());
      assertTrue(xYPlot0.isDomainZoomable());
      assertEquals(1, xYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultIntervalXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYBoxAndWhiskerRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("I~u8h~L`0p7C", xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(65, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      xYPlot0.setRangeAxis((ValueAxis) cyclicNumberAxis0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1.0F);
      candlestickRenderer0.getBaseURLGenerator();
      xYBoxAndWhiskerRenderer0.setSeriesURLGenerator(10, (XYURLGenerator) null);
      bufferedImage0.setAccelerationPriority(0.5F);
      Float float0 = new Float((float) 0);
      xYPlot0.setRangeGridlinePaint(xYBoxAndWhiskerRenderer0.DEFAULT_PAINT);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.clone();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      xYPlot0.drawAnnotations(graphics2D0, (Rectangle2D) null, plotRenderingInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(2109135725);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      AxisSpace axisSpace0 = combinedDomainCategoryPlot0.calculateAxisSpace(graphics2D0, rectangle0);
      AxisSpace axisSpace1 = combinedRangeCategoryPlot0.calculateDomainAxisSpace(graphics2D0, rectangle0, axisSpace0);
      xYPlot0.setFixedRangeAxisSpace(axisSpace1);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "e3*J");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      XYBarDataset xYBarDataset0 = new XYBarDataset(defaultIntervalXYDataset0, 10);
      xYBarDataset0.setBarWidth(5696);
      combinedDomainXYPlot0.setDataset(5696, (XYDataset) xYBarDataset0);
      combinedDomainXYPlot0.getQuadrantOrigin();
      SystemColor systemColor0 = SystemColor.textText;
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(5696);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultXYDataset0, (ValueAxis) null, (ValueAxis) null, candlestickRenderer0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[8];
      valueAxisArray0[0] = null;
      valueAxisArray0[1] = null;
      valueAxisArray0[3] = null;
      valueAxisArray0[4] = null;
      valueAxisArray0[5] = null;
      valueAxisArray0[6] = null;
      valueAxisArray0[7] = null;
      Layer layer0 = Layer.BACKGROUND;
      Color color0 = (Color)xYPlot0.getDomainZeroBaselinePaint();
      assertEquals((-16777216), color0.getRGB());
      
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)chartPanel0.getScreenDataArea((-1838), 3);
      xYPlot0.drawDomainMarkers((Graphics2D) null, rectangle2D_Double0, 680, layer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StackedXYAreaRenderer[] stackedXYAreaRendererArray0 = new StackedXYAreaRenderer[0];
      DefaultComboBoxModel<StackedXYAreaRenderer> defaultComboBoxModel0 = new DefaultComboBoxModel<StackedXYAreaRenderer>(stackedXYAreaRendererArray0);
      JList<StackedXYAreaRenderer> jList0 = new JList<StackedXYAreaRenderer>(defaultComboBoxModel0);
      jList0.indexToLocation(10);
      xYPlot0.zoomDomainAxes(10.0, (-1490.656806708467), plotRenderingInfo0, (Point2D) null);
      xYPlot0.setDomainGridlineStroke(candlestickRenderer0.DEFAULT_STROKE);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(xYPlot0.isDomainZoomable());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.lookupSectionOutlineStroke("I-|RQO\"0X4HvTb", true);
      JFreeChart jFreeChart0 = new JFreeChart("I-|RQO\"0X4HvTb", (Font) null, ringPlot0, true);
      ringPlot0.setLabelOutlinePaint(jFreeChart0.DEFAULT_BACKGROUND_PAINT);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainCrosshairPaint(jFreeChart0.DEFAULT_BACKGROUND_PAINT);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker(3383, xYPlot0.DEFAULT_GRIDLINE_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.addDomainMarker(3383, (Marker) valueMarker0, layer0);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      xYPlot0.setDataset((XYDataset) categoryTableXYDataset0);
      int int0 = (-1335);
      Marker marker0 = null;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)60;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(5069, byteArray0);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, xYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, renderingHints0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(860, 5069);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      combinedDomainXYPlot0.removeDomainMarker((Marker) valueMarker0);
      combinedDomainXYPlot0.clearDomainMarkers(860);
      combinedDomainXYPlot0.clearDomainAxes();
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      combinedDomainXYPlot0.clearDomainMarkers(860);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getRangeMarkers(860, layer0);
      combinedDomainXYPlot0.setRangeCrosshairLockedOnData(false);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 10;
      doubleArray0[1] = (double) 10;
      doubleArray0[2] = (double) 1.0F;
      doubleArray0[3] = (double) 1.0F;
      doubleArray0[4] = (double) 1.0F;
      doubleArray0[5] = (-1.0);
      doubleArray0[6] = 4719.7;
      doubleArray0[7] = (double) 1.0F;
      doubleArray0[8] = (double) 10;
      XYPolygonAnnotation xYPolygonAnnotation0 = null;
      try {
        xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'polygon' array must contain an even number of items.
         //
         verifyException("org.jfree.chart.annotations.XYPolygonAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultXYDataset0, (ValueAxis) null, (ValueAxis) null, candlestickRenderer0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[8];
      valueAxisArray0[0] = null;
      valueAxisArray0[1] = null;
      valueAxisArray0[3] = null;
      valueAxisArray0[4] = null;
      valueAxisArray0[5] = null;
      valueAxisArray0[6] = null;
      valueAxisArray0[7] = null;
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getDomainZeroBaselinePaint();
      xYPlot0.getDomainAxis(2);
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea((-1838), 3);
      Point2D.Double point2D_Double0 = new Point2D.Double(14.0, 10);
      rectangle2D0.setFrameFromCenter((Point2D) point2D_Double0, (Point2D) point2D_Double0);
      xYPlot0.drawDomainMarkers((Graphics2D) null, rectangle2D0, 680, layer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StackedXYAreaRenderer[] stackedXYAreaRendererArray0 = new StackedXYAreaRenderer[0];
      DefaultComboBoxModel<StackedXYAreaRenderer> defaultComboBoxModel0 = new DefaultComboBoxModel<StackedXYAreaRenderer>(stackedXYAreaRendererArray0);
      JList<StackedXYAreaRenderer> jList0 = new JList<StackedXYAreaRenderer>(defaultComboBoxModel0);
      jList0.indexToLocation(10);
      xYPlot0.zoomDomainAxes(10.0, (-1490.656806708467), plotRenderingInfo0, (Point2D) null);
      xYPlot0.indexOf(defaultXYDataset0);
      System.setCurrentTimeMillis((-941L));
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultXYDataset0, (ValueAxis) null, (ValueAxis) null, candlestickRenderer0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[8];
      valueAxisArray0[0] = null;
      valueAxisArray0[1] = null;
      valueAxisArray0[3] = null;
      valueAxisArray0[4] = null;
      valueAxisArray0[5] = null;
      valueAxisArray0[6] = null;
      valueAxisArray0[7] = null;
      Layer layer0 = Layer.BACKGROUND;
      Color color0 = (Color)xYPlot0.getDomainZeroBaselinePaint();
      assertEquals(0, color0.getBlue());
      
      xYPlot0.getDomainAxis(2);
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)chartPanel0.getScreenDataArea((-1838), 3);
      xYPlot0.setBackgroundImageAlignment(420);
      xYPlot0.drawDomainMarkers((Graphics2D) null, rectangle2D_Double0, 680, layer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StackedXYAreaRenderer[] stackedXYAreaRendererArray0 = new StackedXYAreaRenderer[0];
      DefaultComboBoxModel<StackedXYAreaRenderer> defaultComboBoxModel0 = new DefaultComboBoxModel<StackedXYAreaRenderer>(stackedXYAreaRendererArray0);
      JList<StackedXYAreaRenderer> jList0 = new JList<StackedXYAreaRenderer>(defaultComboBoxModel0);
      jList0.indexToLocation(10);
      xYPlot0.zoomDomainAxes(10.0, (-1490.656806708467), plotRenderingInfo0, (Point2D) null);
      CrosshairState crosshairState0 = new CrosshairState(false);
      xYPlot0.render((Graphics2D) null, rectangle2D_Double0, (-1565), plotRenderingInfo0, crosshairState0);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      DefaultDrawingSupplier defaultDrawingSupplier0 = new DefaultDrawingSupplier();
      combinedDomainXYPlot0.setDrawingSupplier(defaultDrawingSupplier0);
      combinedDomainXYPlot0.clearDomainMarkers(860);
      combinedDomainXYPlot0.getRangeMarkers(2, (Layer) null);
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      
      combinedDomainXYPlot0.getDomainMarkers(860, (Layer) null);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      combinedDomainXYPlot0.clearDomainMarkers(881);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDatasetRenderingOrder((DatasetRenderingOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultIntervalXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYBoxAndWhiskerRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("I~u8h~L`0p7C", xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(65, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      xYPlot0.setRangeAxis((ValueAxis) cyclicNumberAxis0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1.0F);
      candlestickRenderer0.getBaseURLGenerator();
      xYBoxAndWhiskerRenderer0.setSeriesURLGenerator(10, (XYURLGenerator) null);
      bufferedImage0.setAccelerationPriority(0.5F);
      Float float0 = new Float((float) 0);
      xYPlot0.setRangeGridlinePaint(xYBoxAndWhiskerRenderer0.DEFAULT_PAINT);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      xYPlot0.drawAnnotations(graphics2D0, (Rectangle2D) null, plotRenderingInfo0);
      xYPlot0.clearDomainAxes();
      PlotState plotState0 = new PlotState();
      // Undeclared exception!
      try { 
        xYPlot0.draw(graphics2D0, (Rectangle2D) null, (Point2D) null, plotState0, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      numberAxis3D0.setTickMarkStroke(combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeXYPlot0.setDomainZeroBaselinePaint(numberAxis3D0.DEFAULT_TICK_LABEL_PAINT);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      combinedRangeXYPlot0.setAxisOffset(numberAxis3D0.DEFAULT_TICK_LABEL_INSETS);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedRangeXYPlot0.setRangeCrosshairPaint(numberAxis3D0.DEFAULT_TICK_MARK_PAINT);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      plotRenderingInfo0.clone();
      Arc2D.Double arc2D_Double0 = new Arc2D.Double();
      plotRenderingInfo0.clone();
      Point2D point2D0 = arc2D_Double0.getEndPoint();
      combinedRangeXYPlot0.zoomRangeAxes((double) 2.0F, plotRenderingInfo0, point2D0, true);
      combinedRangeXYPlot0.setRangeZeroBaselineVisible(true);
      combinedRangeXYPlot0.clearAnnotations();
      SeriesRenderingOrder seriesRenderingOrder0 = combinedRangeXYPlot0.getSeriesRenderingOrder();
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedRangeXYPlot0.setRangeGridlinesVisible(true);
      combinedRangeXYPlot0.getDomainCrosshairStroke();
      combinedRangeXYPlot0.getRangeAxisEdge(2109135725);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.removeRangeMarker(2109135725, (Marker) categoryMarker0, layer0, true);
      combinedRangeXYPlot0.setRangeAxis(695, (ValueAxis) numberAxis3D0, true);
      combinedRangeXYPlot0.getSeriesCount();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getRangeAxisLocation((-203));
      combinedRangeXYPlot0.setDomainAxisLocation(60, axisLocation0, false);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.addAnnotation((XYAnnotation) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "5DS<6*");
      XYPlot xYPlot0 = new XYPlot();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      AxisLocation axisLocation0 = xYPlot0.getDomainAxisLocation();
      AxisLocation axisLocation1 = AxisLocation.getOpposite(axisLocation0);
      axisLocation1.getOpposite();
      xYPlot0.setDomainAxisLocation(6, axisLocation1, true);
      xYPlot0.getDomainAxisEdge(1);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getSeriesFillPaint(3);
      // Undeclared exception!
      try { 
        xYPlot0.setRangeZeroBaselinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultXYDataset0, (ValueAxis) null, (ValueAxis) null, candlestickRenderer0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[8];
      valueAxisArray0[1] = null;
      valueAxisArray0[3] = null;
      valueAxisArray0[4] = null;
      valueAxisArray0[6] = null;
      valueAxisArray0[7] = null;
      Layer layer0 = Layer.BACKGROUND;
      Color color0 = (Color)xYPlot0.getDomainZeroBaselinePaint();
      assertEquals(0, color0.getGreen());
      
      xYPlot0.getDomainAxis(2);
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)chartPanel0.getScreenDataArea((-1838), 3);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      xYPlot0.drawDomainMarkers((Graphics2D) null, rectangle2D_Double0, 680, layer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StackedXYAreaRenderer[] stackedXYAreaRendererArray0 = new StackedXYAreaRenderer[0];
      DefaultComboBoxModel<StackedXYAreaRenderer> defaultComboBoxModel0 = new DefaultComboBoxModel<StackedXYAreaRenderer>(stackedXYAreaRendererArray0);
      JList<StackedXYAreaRenderer> jList0 = new JList<StackedXYAreaRenderer>(defaultComboBoxModel0);
      jList0.indexToLocation(10);
      xYPlot0.zoomDomainAxes(10.0, (-1490.656806708467), plotRenderingInfo0, (Point2D) null);
      ArrayList<StackedXYBarRenderer> arrayList0 = new ArrayList<StackedXYBarRenderer>();
      xYPlot0.drawRangeTickBands((Graphics2D) null, rectangle2D_Double0, arrayList0);
      assertTrue(chartPanel0.isRangeZoomable());
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker(784.927234301889, xYPlot0.DEFAULT_GRIDLINE_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      TextAnchor textAnchor0 = TextAnchor.BASELINE_RIGHT;
      valueMarker0.setLabelTextAnchor(textAnchor0);
      Layer layer0 = Layer.FOREGROUND;
      valueMarker0.removeChangeListener(xYPlot0);
      xYPlot0.addDomainMarker(3388, (Marker) valueMarker0, layer0);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      xYPlot0.setDataset((XYDataset) categoryTableXYDataset0);
      Layer layer1 = Layer.FOREGROUND;
      xYPlot0.getAnnotations();
      xYPlot0.addDomainMarker(3388, (Marker) valueMarker0, layer1);
      Layer layer2 = Layer.BACKGROUND;
      xYPlot0.removeRangeMarker((Marker) valueMarker0, layer2);
      xYPlot0.getPlotType();
      xYPlot0.getRangeAxisLocation();
      xYPlot0.clearRangeMarkers();
      // Undeclared exception!
      try { 
        xYPlot0.getRangeAxisForDataset(4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 4 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("NpS]", xYPlot0);
      XYPlot xYPlot1 = jFreeChart0.getXYPlot();
      xYPlot1.setDomainCrosshairVisible(false);
      assertEquals(1, xYPlot1.getWeight());
      assertTrue(xYPlot1.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultIntervalXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYBoxAndWhiskerRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("I~u8h~L`0p7C", xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(65, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      xYPlot0.setRangeAxis((ValueAxis) cyclicNumberAxis0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1.0F);
      candlestickRenderer0.getBaseURLGenerator();
      xYBoxAndWhiskerRenderer0.setSeriesURLGenerator(10, (XYURLGenerator) null);
      bufferedImage0.setAccelerationPriority(0.5F);
      Float float0 = new Float((float) 0);
      xYPlot0.setRangeGridlinePaint(xYBoxAndWhiskerRenderer0.DEFAULT_PAINT);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      xYPlot0.drawAnnotations(graphics2D0, (Rectangle2D) null, plotRenderingInfo0);
      CrosshairState crosshairState0 = new CrosshairState(true);
      crosshairState0.getAnchor();
      xYPlot0.zoomRangeAxes((double) candlestickRenderer0.ZERO, 0.0, plotRenderingInfo0, (Point2D) null);
      ValueMarker valueMarker0 = new ValueMarker(0, xYPlot0.DEFAULT_OUTLINE_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
      // Undeclared exception!
      try { 
        xYPlot0.addDomainMarker((-1453), (Marker) valueMarker0, (Layer) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10, xYPlot0.DEFAULT_GRIDLINE_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.addDomainMarker(3383, (Marker) valueMarker0, layer0);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      xYPlot0.setDataset((XYDataset) categoryTableXYDataset0);
      Layer layer1 = Layer.FOREGROUND;
      xYPlot0.addDomainMarker((-1335), (Marker) valueMarker0, layer1);
      Layer layer2 = Layer.BACKGROUND;
      xYPlot0.removeRangeMarker((Marker) valueMarker0, layer2);
      xYPlot0.getPlotType();
      xYPlot0.getRangeAxisLocation();
      xYPlot0.clearRangeMarkers();
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[0];
      JFreeChart jFreeChart0 = new JFreeChart("73P+BZSK#9n?dw71qhI", xYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(iCC_ProfileArray0, renderingHints0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(3383, 3383, chartRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultIntervalXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYBoxAndWhiskerRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("I~u8h~L`0p7C", xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      bufferedImage0.createGraphics();
      xYPlot0.setRangeAxis((ValueAxis) cyclicNumberAxis0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      // Undeclared exception!
      try { 
        jFreeChart0.getSubtitle((-3258));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index out of range.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultXYDataset0, (ValueAxis) null, (ValueAxis) null, candlestickRenderer0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[8];
      valueAxisArray0[0] = null;
      valueAxisArray0[1] = null;
      valueAxisArray0[3] = null;
      valueAxisArray0[4] = null;
      valueAxisArray0[5] = null;
      valueAxisArray0[6] = null;
      valueAxisArray0[7] = null;
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getDomainZeroBaselinePaint();
      xYPlot0.getDomainAxis(2);
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea((-1838), 3);
      xYPlot0.drawDomainMarkers((Graphics2D) null, rectangle2D0, 680, layer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      xYPlot0.setDomainZeroBaselineVisible(true);
      StackedXYAreaRenderer[] stackedXYAreaRendererArray0 = new StackedXYAreaRenderer[0];
      DefaultComboBoxModel<StackedXYAreaRenderer> defaultComboBoxModel0 = new DefaultComboBoxModel<StackedXYAreaRenderer>(stackedXYAreaRendererArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.jfree.data.general.AbstractSeriesDataset");
      JList<StackedXYAreaRenderer> jList0 = new JList<StackedXYAreaRenderer>(defaultComboBoxModel0);
      jList0.indexToLocation(10);
      xYPlot0.zoomDomainAxes(10.0, (-1490.656806708467), plotRenderingInfo0, (Point2D) null);
      xYPlot0.drawRangeMarkers((Graphics2D) null, rectangle2D0, 2, layer0);
      xYPlot0.clone();
      assertTrue(xYPlot0.isDomainZeroBaselineVisible());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultIntervalXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYBoxAndWhiskerRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("I~u8h~L`0p7C", xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(65, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      xYPlot0.setRangeAxis((ValueAxis) cyclicNumberAxis0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1.0F);
      candlestickRenderer0.getBaseURLGenerator();
      xYBoxAndWhiskerRenderer0.setSeriesURLGenerator(10, (XYURLGenerator) null);
      bufferedImage0.setAccelerationPriority(0.5F);
      Float float0 = new Float((float) 0);
      xYPlot0.setRangeGridlinePaint(xYBoxAndWhiskerRenderer0.DEFAULT_PAINT);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer();
      Graphics2D graphics2D1 = bufferedImage0.createGraphics();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      XYItemRendererState xYItemRendererState0 = xYDifferenceRenderer0.initialise(graphics2D1, (Rectangle2D) null, xYPlot0, defaultIntervalXYDataset0, plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      standardEntityCollection0.addAll(entityCollection0);
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo(chartRenderingInfo0);
      xYPlot0.drawAnnotations(graphics2D0, (Rectangle2D) null, plotRenderingInfo1);
      xYPlot0.getRangeAxisIndex(cyclicNumberAxis0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      xYPlot0.drawDomainCrosshair(graphics2D0, (Rectangle2D) null, plotOrientation0, (-1), cyclicNumberAxis0, ((SunGraphics2D) graphics2D0).stroke, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_PAINT);
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker(771.1812283841161, xYPlot0.DEFAULT_GRIDLINE_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(236.252, 0.0, 1.0F, 2.0E8);
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getFrame();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      xYPlot0.drawRangeCrosshair((Graphics2D) null, rectangle2D0, plotOrientation0, (-3072.0502169379), symbolAxis0, categoryPlot0.DEFAULT_CROSSHAIR_STROKE, symbolAxis0.DEFAULT_GRID_BAND_ALTERNATE_PAINT);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.addDomainMarker(3383, (Marker) valueMarker0, layer0);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      xYPlot0.setDataset((XYDataset) categoryTableXYDataset0);
      Marker marker0 = null;
      Layer layer1 = Layer.FOREGROUND;
      xYPlot0.getAnnotations();
      // Undeclared exception!
      try { 
        xYPlot0.addDomainMarker((-1307), (Marker) null, layer1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      int int0 = 2;
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getSeriesFillPaint(2);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultIntervalXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYBoxAndWhiskerRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("", xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(65, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      xYPlot0.setRangeAxis((ValueAxis) cyclicNumberAxis0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1.0F);
      candlestickRenderer0.getBaseURLGenerator();
      xYBoxAndWhiskerRenderer0.setSeriesURLGenerator(10, (XYURLGenerator) null);
      bufferedImage0.setAccelerationPriority(0.5F);
      Float float0 = new Float((float) 0);
      xYPlot0.setRangeGridlinePaint(xYBoxAndWhiskerRenderer0.DEFAULT_PAINT);
      Rectangle2D rectangle2D0 = null;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      xYPlot0.drawAnnotations(graphics2D0, (Rectangle2D) null, plotRenderingInfo0);
      xYPlot0.setRangeCrosshairValue(1728.4587469446, true);
      xYPlot0.setRangeCrosshairPaint(((SunGraphics2D) graphics2D0).paint);
      // Undeclared exception!
      try { 
        xYPlot0.getRangeAxisForDataset((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index -1 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.getDomainAxisForDataset((-1449));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index -1449 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      numberAxis3D0.setTickMarkStroke(combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeXYPlot0.setDomainZeroBaselinePaint(numberAxis3D0.DEFAULT_TICK_LABEL_PAINT);
      combinedRangeXYPlot0.setAxisOffset(numberAxis3D0.DEFAULT_TICK_LABEL_INSETS);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      plotRenderingInfo0.clone();
      Arc2D.Double arc2D_Double0 = new Arc2D.Double();
      Point2D point2D0 = arc2D_Double0.getEndPoint();
      combinedRangeXYPlot0.zoomRangeAxes((double) 2.0F, plotRenderingInfo0, point2D0, true);
      combinedRangeXYPlot0.zoomRangeAxes(0.0, plotRenderingInfo0, point2D0);
      combinedRangeXYPlot0.setRangeZeroBaselineVisible(true);
      combinedRangeXYPlot0.clearAnnotations();
      SeriesRenderingOrder seriesRenderingOrder0 = combinedRangeXYPlot0.getSeriesRenderingOrder();
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedRangeXYPlot0.setRangeGridlinesVisible(true);
      combinedRangeXYPlot0.getDomainCrosshairStroke();
      combinedRangeXYPlot0.getRangeAxisEdge(2109135725);
      combinedRangeXYPlot0.setRangeAxis(695, (ValueAxis) numberAxis3D0, true);
      combinedRangeXYPlot0.getSeriesCount();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeXYPlot0.getRangeAxisLocation((-203));
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(10, 1949, chartRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedRangeXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      DefaultDrawingSupplier defaultDrawingSupplier0 = new DefaultDrawingSupplier();
      combinedDomainXYPlot0.setDrawingSupplier(defaultDrawingSupplier0);
      combinedDomainXYPlot0.clearDomainMarkers(860);
      combinedDomainXYPlot0.getRangeMarkers(2, (Layer) null);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(70.0);
      candlestickRenderer0.lookupSeriesFillPaint(2);
      candlestickRenderer0.getSeriesOutlineStroke(10);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker((-506.95), xYPlot0.DEFAULT_GRIDLINE_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.addDomainMarker(3383, (Marker) valueMarker0, layer0);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      xYPlot0.setDataset((XYDataset) categoryTableXYDataset0);
      Layer layer1 = Layer.FOREGROUND;
      List list0 = new Stack<GradientPaint>();
      Layer layer2 = Layer.BACKGROUND;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D0, rectangleAnchor0);
      xYPlot0.setQuadrantOrigin(point2D0);
      // Undeclared exception!
      try { 
        xYPlot0.removeRangeMarker((Marker) null, layer2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      int int0 = 795;
      TextBox textBox0 = new TextBox();
      RectangleInsets rectangleInsets0 = textBox0.getInteriorGap();
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte) (-116);
      defaultPolarItemRenderer0.getItemLabelPaint(10, 10);
      byteArray0[0] = (byte) (-116);
      byte byte1 = (byte)95;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte) (-45);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      combinedRangeXYPlot0.setInsets(rectangleInsets0, true);
      defaultPolarItemRenderer0.getSeriesStroke(795);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeZeroBaselineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 10;
      doubleArray0[1] = (double) 1.0F;
      doubleArray0[2] = (double) 10;
      doubleArray0[3] = (double) 1.0F;
      doubleArray0[4] = (double) 1.0F;
      doubleArray0[5] = (double) 10;
      doubleArray0[6] = 1567.61350504549;
      doubleArray0[7] = (double) 1.0F;
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, xYPlot0.DEFAULT_GRIDLINE_STROKE, xYPlot0.DEFAULT_OUTLINE_PAINT, xYPlot0.DEFAULT_BACKGROUND_PAINT);
      String string0 = "u<B6_";
      xYPolygonAnnotation0.setToolTipText("u<B6_");
      xYPlot0.addAnnotation((XYAnnotation) xYPolygonAnnotation0, true);
      int int0 = (-394);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      xYPlot0.clearDomainMarkers((-394));
      xYPlot0.removeAnnotation((XYAnnotation) xYPolygonAnnotation0, true);
      xYPlot0.clone();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance((-394));
      Font font0 = CompassPlot.DEFAULT_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("u<B6_", font0, xYPlot0, true);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      int int1 = (-2676);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage((-2676), 1159, 726.80772, 75.0, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (-2676) and height (1159) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2576.812793392339), "&TcXI>AfNMG9~ucvx(1");
      Color color0 = (Color)AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
      cyclicNumberAxis0.setLabelPaint(color0);
      cyclicNumberAxis0.setLabel("&TcXI>AfNMG9~ucvx(1");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.setRangeCrosshairLockedOnData(false);
      combinedRangeXYPlot0.setDomainGridlineStroke(cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PolarPlot polarPlot0 = new PolarPlot();
      JFreeChart jFreeChart0 = new JFreeChart("&TcXI>AfNMG9~ucvx(1", cyclicNumberAxis0.DEFAULT_AXIS_LABEL_FONT, combinedRangeXYPlot0, false);
      jFreeChart0.setBorderStroke(cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedRangeXYPlot0.setRangeCrosshairStroke(polarPlot0.DEFAULT_OUTLINE_STROKE);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1525, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle(10, 10);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.drawVerticalLine(graphics2D0, rectangle0, 10, polarPlot0.DEFAULT_GRIDLINE_STROKE, polarPlot0.DEFAULT_OUTLINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-106);
      byteArray0[1] = (byte) (-117);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      XYPlot xYPlot0 = new XYPlot();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)Plot.DEFAULT_LEGEND_ITEM_BOX;
      Point point0 = new Point();
      Dimension dimension0 = new Dimension();
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      Rectangle2D rectangle2D0 = rectangle2D_Double0.createIntersection(rectangle0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D0, rectangleAnchor0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      xYPlot0.zoomDomainAxes(4.0, (PlotRenderingInfo) null, point2D0);
      Object object0 = xYPlot0.clone();
      Paint[] paintArray0 = new Paint[0];
      Stroke[] strokeArray0 = new Stroke[4];
      strokeArray0[0] = xYPlot0.DEFAULT_GRIDLINE_STROKE;
      strokeArray0[1] = xYPlot0.DEFAULT_GRIDLINE_STROKE;
      strokeArray0[2] = xYPlot0.DEFAULT_CROSSHAIR_STROKE;
      strokeArray0[3] = xYPlot0.DEFAULT_OUTLINE_STROKE;
      Shape[] shapeArray0 = new Shape[5];
      shapeArray0[0] = xYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE;
      shapeArray0[1] = (Shape) rectangle2D_Double0;
      shapeArray0[2] = xYPlot0.DEFAULT_LEGEND_ITEM_BOX;
      shapeArray0[3] = (Shape) rectangle0;
      shapeArray0[4] = (Shape) rectangle2D0;
      DefaultDrawingSupplier defaultDrawingSupplier0 = new DefaultDrawingSupplier(paintArray0, paintArray0, strokeArray0, strokeArray0, shapeArray0);
      Stroke stroke0 = defaultDrawingSupplier0.getNextStroke();
      xYPlot0.setDomainZeroBaselineStroke(stroke0);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertFalse(xYPlot0.equals((Object)object0));
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Base item URL generator not cloneable.";
      stringArray0[1] = "Base item URL generator not cloneable.";
      stringArray0[2] = "Base item URL generator not cloneable.";
      stringArray0[3] = "Base item URL generator not cloneable.";
      SymbolAxis symbolAxis0 = new SymbolAxis("Base item URL generator not cloneable.", stringArray0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Base item URL generator not cloneable.");
      YIntervalRenderer yIntervalRenderer0 = new YIntervalRenderer();
      XYPlot xYPlot0 = new XYPlot(categoryTableXYDataset0, symbolAxis0, logarithmicAxis0, yIntervalRenderer0);
      logarithmicAxis0.setLabelURL("");
      xYPlot0.setRangeCrosshairLockedOnData(true);
      xYPlot0.getDomainAxisIndex(logarithmicAxis0);
      AffineTransform affineTransform0 = new AffineTransform();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, 1);
      int int0 = (-4040);
      int int1 = (-374);
      int[] intArray0 = new int[8];
      intArray0[0] = 500;
      intArray0[1] = 500;
      intArray0[2] = 1;
      intArray0[3] = 500;
      intArray0[4] = 10;
      intArray0[5] = (-1);
      intArray0[6] = 500;
      intArray0[7] = (-374);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(10, (-2130), intArray0, 500, false, 1, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Map size (-2130) must be >= 1
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 10;
      doubleArray0[1] = (double) 1.0F;
      doubleArray0[2] = (double) 10;
      doubleArray0[3] = (double) 1.0F;
      doubleArray0[4] = (double) 1.0F;
      doubleArray0[5] = (double) 10;
      doubleArray0[6] = 1567.61350504549;
      doubleArray0[7] = (double) 1.0F;
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, xYPlot0.DEFAULT_GRIDLINE_STROKE, xYPlot0.DEFAULT_OUTLINE_PAINT, xYPlot0.DEFAULT_BACKGROUND_PAINT);
      xYPolygonAnnotation0.setToolTipText("u<B6_");
      xYPlot0.addAnnotation((XYAnnotation) xYPolygonAnnotation0, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      xYPlot0.clearDomainMarkers((-394));
      xYPlot0.removeAnnotation((XYAnnotation) xYPolygonAnnotation0, false);
      xYPlot0.clone();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance((-394));
      Font font0 = CompassPlot.DEFAULT_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("u<B6_", font0, xYPlot0, false);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      int int0 = 1159;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage((-2676), 1159, 726.80772, 75.0, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (-2676) and height (1159) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      String string0 = "";
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      HistogramDataset histogramDataset0 = new HistogramDataset();
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(2429);
      XYPlot xYPlot0 = new XYPlot(histogramDataset0, (ValueAxis) null, (ValueAxis) null, xYAreaRenderer0);
      String string1 = "rX(C";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "rX(C");
      histogramDataset0.removeChangeListener(xYPlot0);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getDomainMarkers(2429, layer0);
      xYPlot0.setDomainZeroBaselineStroke(xYAreaRenderer0.DEFAULT_STROKE);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultCategoryDataset0);
      spiderWebPlot0.getBaseSeriesPaint();
      // Undeclared exception!
      try { 
        xYPlot0.setDomainZeroBaselinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer((-356));
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, logAxis0, logAxis0, xYAreaRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("z40}j", xYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2356, 3229, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(737.23865F, 4, 3, 0.0F);
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      PeriodAxis periodAxis0 = new PeriodAxis("z40}j");
      RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getFixedRangeAxisSpace();
      AxisSpace axisSpace0 = periodAxis0.reserveSpace(graphics2D0, xYPlot0, rectangle2D0, rectangleEdge0, (AxisSpace) null);
      // Undeclared exception!
      try { 
        axisSpace0.ensureAtLeast((AxisSpace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.AxisSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultIntervalXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYBoxAndWhiskerRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("I~u8h~L`0p7C", xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(65, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      xYPlot0.setRangeAxis((ValueAxis) cyclicNumberAxis0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1.0F);
      candlestickRenderer0.getBaseURLGenerator();
      xYBoxAndWhiskerRenderer0.setSeriesURLGenerator(10, (XYURLGenerator) null);
      bufferedImage0.setAccelerationPriority(0.5F);
      Float float0 = new Float((float) 0);
      xYPlot0.setRangeGridlinePaint(xYBoxAndWhiskerRenderer0.DEFAULT_PAINT);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      xYPlot0.drawAnnotations(graphics2D0, (Rectangle2D) null, plotRenderingInfo0);
      CrosshairState crosshairState0 = new CrosshairState(true);
      crosshairState0.getAnchor();
      standardEntityCollection0.getEntity((double) 140, 0.05);
      xYPlot0.zoomRangeAxes((double) candlestickRenderer0.ZERO, 0.0, plotRenderingInfo0, (Point2D) null);
      xYPlot0.handleClick(1508, 15, plotRenderingInfo0);
      assertFalse(cyclicNumberAxis0.isAutoRange());
      assertEquals(0.0, cyclicNumberAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setAxisOffset((RectangleInsets) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'offset' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.removeAnnotation((XYAnnotation) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      String string0 = "&cXI>ANMG9~ucvW(S1";
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2576.812793392339), "&cXI>ANMG9~ucvW(S1");
      Color color0 = Color.GRAY;
      cyclicNumberAxis0.setLabelPaint(color0);
      cyclicNumberAxis0.setLabel("&cXI>ANMG9~ucvW(S1");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      combinedRangeXYPlot0.setRangeCrosshairLockedOnData(false);
      combinedRangeXYPlot0.setDomainGridlineStroke(cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setSeriesRenderingOrder((SeriesRenderingOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultIntervalXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYBoxAndWhiskerRenderer0);
      xYPlot0.setRangeAxis((ValueAxis) cyclicNumberAxis0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1.0F);
      candlestickRenderer0.getBaseURLGenerator();
      xYBoxAndWhiskerRenderer0.setSeriesURLGenerator(10, (XYURLGenerator) null);
      xYPlot0.setRangeGridlinePaint(xYBoxAndWhiskerRenderer0.DEFAULT_PAINT);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      xYPlot0.setRangeCrosshairValue(1728.4587469446, true);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getDomainMarkers(1830, layer0);
      ValueMarker valueMarker0 = new ValueMarker(Double.NEGATIVE_INFINITY, xYBoxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_PAINT, xYPlot0.DEFAULT_OUTLINE_STROKE);
      xYPlot0.removeDomainMarker((-1458), (Marker) valueMarker0, layer0, false);
      xYPlot0.setDomainCrosshairLockedOnData(true);
      xYPlot0.drawHorizontalLine((Graphics2D) null, (Rectangle2D) null, (-1386.8201645814), cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE, xYBoxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      // Undeclared exception!
      try { 
        xYPlot0.drawDomainCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 1, cyclicNumberAxis0, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, xYBoxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CyclicNumberAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setDataset(159072863, (XYDataset) null);
      StandardGradientPaintTransformer standardGradientPaintTransformer0 = new StandardGradientPaintTransformer();
      standardGradientPaintTransformer0.clone();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(standardGradientPaintTransformer0, (Dataset) null);
      combinedRangeXYPlot0.datasetChanged(datasetChangeEvent0);
      double double0 = 3383.0;
      JFreeChart jFreeChart0 = new JFreeChart("-R~ArD})obWg)VG@2(", (Font) null, combinedRangeXYPlot0, false);
      boolean boolean0 = true;
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10, xYPlot0.DEFAULT_GRIDLINE_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.addDomainMarker(0, (Marker) valueMarker0, layer0);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      xYPlot0.setDataset((XYDataset) categoryTableXYDataset0);
      xYPlot0.addDomainMarker((-1335), (Marker) valueMarker0, layer0);
      Layer layer1 = Layer.BACKGROUND;
      xYPlot0.removeRangeMarker((Marker) valueMarker0, layer1);
      xYPlot0.getPlotType();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)57;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      xYPlot0.getRangeAxisLocation();
      xYPlot0.clearRangeMarkers();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(15.0, (double) (-1335));
      JFreeChart jFreeChart0 = new JFreeChart("C", xYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("XY Plot");
      xYPlot0.setDomainAxis(2187, (ValueAxis) numberAxis3D0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(187, 187, (ChartRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      int int0 = 102261127;
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = StandardXYToolTipGenerator.getTimeSeriesInstance();
      AxisLocation axisLocation0 = xYPlot0.getDomainAxisLocation();
      standardXYToolTipGenerator0.equals(axisLocation0);
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(102261127, standardXYToolTipGenerator0, (XYURLGenerator) null);
      stackedXYAreaRenderer0.getShapePaint();
      // Undeclared exception!
      try { 
        xYPlot0.setDomainCrosshairPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10, xYPlot0.DEFAULT_GRIDLINE_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.addDomainMarker(3383, (Marker) valueMarker0, layer0);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      xYPlot0.setDataset((XYDataset) categoryTableXYDataset0);
      Layer layer1 = Layer.FOREGROUND;
      xYPlot0.addDomainMarker((-1335), (Marker) valueMarker0, layer1);
      Layer layer2 = Layer.BACKGROUND;
      xYPlot0.removeRangeMarker((Marker) valueMarker0, layer2);
      xYPlot0.getPlotType();
      xYPlot0.clearDomainMarkers((-1335));
      xYPlot0.getRangeAxisLocation();
      xYPlot0.clearRangeMarkers();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(15.0, (double) (-1335));
      JFreeChart jFreeChart0 = new JFreeChart("C", xYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      xYPlot0.getDomainAxisEdge(3383);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(187, 187, (ChartRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultIntervalXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, xYBoxAndWhiskerRenderer0);
      xYPlot0.setRangeAxis((ValueAxis) cyclicNumberAxis0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1.0F);
      candlestickRenderer0.getBaseURLGenerator();
      xYBoxAndWhiskerRenderer0.setSeriesURLGenerator(10, (XYURLGenerator) null);
      xYPlot0.setRangeGridlinePaint(xYBoxAndWhiskerRenderer0.DEFAULT_PAINT);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      xYPlot0.setRangeCrosshairValue(1728.4587469446, true);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.getDomainMarkers(1830, layer0);
      ValueMarker valueMarker0 = new ValueMarker(Double.NEGATIVE_INFINITY, xYBoxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_PAINT, xYPlot0.DEFAULT_OUTLINE_STROKE);
      xYPlot0.removeDomainMarker((-1458), (Marker) valueMarker0, layer0, false);
      xYPlot0.setDomainCrosshairLockedOnData(true);
      xYPlot0.drawHorizontalLine((Graphics2D) null, (Rectangle2D) null, (-1386.8201645814), cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE, xYBoxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT);
      xYPlot0.getRangeAxisEdge((-1458));
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      // Undeclared exception!
      try { 
        xYPlot0.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 0.0F, cyclicNumberAxis0, candlestickRenderer0.DEFAULT_OUTLINE_STROKE, categoryAxis0.DEFAULT_AXIS_LABEL_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CyclicNumberAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultXYDataset0, (ValueAxis) null, (ValueAxis) null, candlestickRenderer0);
      ValueMarker valueMarker0 = new ValueMarker((double) candlestickRenderer0.ZERO, xYPlot0.DEFAULT_CROSSHAIR_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE, xYPlot0.DEFAULT_BACKGROUND_PAINT, candlestickRenderer0.DEFAULT_STROKE, 0.0F);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addRangeMarker((-1838), (Marker) valueMarker0, layer0, true);
      xYPlot0.getDomainZeroBaselinePaint();
      xYPlot0.getDomainAxis(2);
      xYPlot0.getRangeGridlineStroke();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      xYPlot0.setOrientation(plotOrientation0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      DefaultDrawingSupplier defaultDrawingSupplier0 = new DefaultDrawingSupplier();
      defaultDrawingSupplier0.getNextOutlinePaint();
      combinedDomainXYPlot0.setDrawingSupplier(defaultDrawingSupplier0);
      combinedDomainXYPlot0.clearDomainMarkers(860);
      combinedDomainXYPlot0.getRangeMarkers(2, (Layer) null);
      combinedDomainXYPlot0.clearDomainMarkers();
      combinedDomainXYPlot0.addRangeMarker(1297, (Marker) valueMarker0, (Layer) null, true);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      XYPlot xYPlot0 = new XYPlot();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(10);
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator();
      candlestickRenderer0.setSeriesURLGenerator(10, (XYURLGenerator) standardXYURLGenerator0);
      candlestickRenderer0.getSeriesOutlineStroke(10);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      xYPlot0.setRangeAxisLocation(axisLocation0);
      // Undeclared exception!
      try { 
        xYPlot0.setDomainZeroBaselineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Font font0 = MeterPlot.DEFAULT_LABEL_FONT;
      boolean boolean0 = true;
      JFreeChart jFreeChart0 = new JFreeChart("X%MizGF5b3O//E*Z", font0, xYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(300, 0.0F, 0.5F, (-392.7F));
      Rectangle2D.Float rectangle2D_Float1 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.createIntersection(rectangle2D_Float1);
      Point2D point2D0 = spiderWebPlot0.calculateLabelLocation(rectangle2D0, (-392.7F), rectangle2D_Float0, 0.5F);
      xYPlot0.zoomRangeAxes((-2323.0), 5000000.0, plotRenderingInfo0, point2D0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-117);
      byte byte0 = (byte)119;
      byteArray0[1] = (byte)119;
      byteArray0[2] = (byte) (-128);
      byteArray0[3] = (byte)46;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)17;
      byteArray0[6] = (byte) (-125);
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(500);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, logAxis0, logAxis0, xYAreaRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("z40}j", xYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      jFreeChart0.createBufferedImage(2356, 5, chartRenderingInfo0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(737.23865F, 4, 3, 0.0F);
      rectangle2D_Float0.getBounds2D();
      PeriodAxis periodAxis0 = new PeriodAxis("z40}j");
      RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getFixedRangeAxisSpace();
      combinedDomainXYPlot0.getDataRange(logAxis0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CrosshairState crosshairState0 = new CrosshairState();
      xYPlot0.getRangeAxisEdge(1);
      CategoryMarker categoryMarker0 = new CategoryMarker(4.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeDomainMarker(1, (Marker) categoryMarker0, layer0, true);
      xYPlot0.getRangeAxisEdge(15);
      combinedDomainXYPlot0.clone();
      Graphics2D graphics2D0 = null;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.calculateDomainAxisSpace((Graphics2D) null, rectangle2D_Float0, (AxisSpace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultBoxAndWhiskerCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(70, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      JFreeChart jFreeChart1 = new JFreeChart(multiplePiePlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart1);
      Point2D.Float point2D_Float0 = new Point2D.Float(0.0F, 0.5F);
      Point point0 = chartPanel0.translateJava2DToScreen(point2D_Float0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Point point1 = chartPanel0.getLocation(point0);
      point1.setLocation(163.80078125, (double) 10);
      defaultCaret0.isActive();
      PlotState plotState0 = new PlotState();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedRangeXYPlot0.draw(graphics2D0, defaultCaret0, point1, plotState0, plotRenderingInfo0);
      combinedRangeXYPlot0.getLegendItems();
      combinedRangeXYPlot0.drawAxes(graphics2D0, defaultCaret0, defaultCaret0, plotRenderingInfo0);
      Graphics2D graphics2D1 = bufferedImage0.createGraphics();
      combinedRangeXYPlot0.draw(graphics2D1, defaultCaret0, point2D_Float0, plotState0, plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultXYDataset0, (ValueAxis) null, (ValueAxis) null, candlestickRenderer0);
      int int0 = (-1838);
      xYPlot0.setDataset((XYDataset) defaultXYDataset0);
      ValueMarker valueMarker0 = new ValueMarker((double) candlestickRenderer0.ZERO, xYPlot0.DEFAULT_CROSSHAIR_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE, xYPlot0.DEFAULT_BACKGROUND_PAINT, candlestickRenderer0.DEFAULT_STROKE, 0.0F);
      Layer layer0 = Layer.BACKGROUND;
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) 0;
      floatArray0[1] = 0.0F;
      floatArray0[2] = (float) 2;
      floatArray0[3] = (float) 1;
      floatArray0[4] = (float) (-1838);
      floatArray0[5] = 1.0F;
      floatArray0[6] = (float) 5806;
      floatArray0[7] = (float) 2;
      floatArray0[8] = 1.0F;
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(5806, 2176, floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data array too small (is 9 and should be 12633856
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2366.0, 0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeAxis((ValueAxis) cyclicNumberAxis0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1.0F);
      candlestickRenderer0.getBaseURLGenerator();
      xYBoxAndWhiskerRenderer0.setSeriesURLGenerator(10, (XYURLGenerator) null);
      combinedDomainXYPlot0.setRangeGridlinePaint(xYBoxAndWhiskerRenderer0.DEFAULT_PAINT);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      combinedDomainXYPlot0.setRangeCrosshairValue(1728.4587469446, true);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getDomainMarkers(1830, layer0);
      ValueMarker valueMarker0 = new ValueMarker(Double.NEGATIVE_INFINITY, xYBoxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainXYPlot0.removeDomainMarker((-1458), (Marker) valueMarker0, layer0, false);
      combinedDomainXYPlot0.setDomainCrosshairLockedOnData(true);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.drawHorizontalLine((Graphics2D) null, (Rectangle2D) null, (-1386.8201645814), cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE, xYBoxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CyclicNumberAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      DateAxis dateAxis0 = new DateAxis("");
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      XYPlot xYPlot0 = new XYPlot(timePeriodValuesCollection0, dateAxis0, dateAxis0, xYErrorRenderer0);
      BufferedImage bufferedImage0 = new BufferedImage(500, 2187, 10);
      Vector<LinearGradientPaint> vector0 = new Vector<LinearGradientPaint>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Vector) null, vector0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JTable jTable0 = new JTable(defaultTableModel0, (TableColumnModel) null);
      JTableHeader jTableHeader0 = new JTableHeader((TableColumnModel) null);
      jTableHeader0.getGraphicsConfiguration();
      jTableHeader0.getHeaderRect(226);
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.drawRangeMarkers(graphics2D0, (Rectangle2D) null, 11, layer0);
      bufferedImage0.addTileObserver(tileObserver0);
      bufferedImage0.createGraphics();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Quarter outside valid range.");
      Rectangle rectangle0 = new Rectangle(8, (-3009), 2060, 500);
      xYPlot0.getFixedDomainAxisSpace();
      xYPlot0.setDomainCrosshairValue(1000.0, true);
      xYPlot0.getRenderer();
      xYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle0, (AxisSpace) null);
      // Undeclared exception!
      try { 
        xYPlot0.setQuadrantPaint(2187, xYErrorRenderer0.DEFAULT_OUTLINE_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (2187) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2477.45867), 1.0F, "David Forslund");
      combinedRangeXYPlot0.getRangeAxisIndex(cyclicNumberAxis0);
      combinedRangeXYPlot0.setDomainZeroBaselineStroke(cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
      Graphics2D graphics2D0 = null;
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getSeriesFillPaint(10);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeCrosshairPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultXYDataset0, (ValueAxis) null, (ValueAxis) null, candlestickRenderer0);
      ValueMarker valueMarker0 = new ValueMarker((double) candlestickRenderer0.ZERO, xYPlot0.DEFAULT_CROSSHAIR_PAINT, xYPlot0.DEFAULT_GRIDLINE_STROKE, xYPlot0.DEFAULT_BACKGROUND_PAINT, candlestickRenderer0.DEFAULT_STROKE, 0.0F);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addRangeMarker((-1838), (Marker) valueMarker0, layer0, true);
      xYPlot0.getDomainZeroBaselinePaint();
      xYPlot0.getDomainAxis(2);
      xYPlot0.getRangeGridlineStroke();
      xYPlot0.clearRangeMarkers();
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10, xYPlot0.DEFAULT_GRIDLINE_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addDomainMarker(2, (Marker) valueMarker0, layer0);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      xYPlot0.setDataset((XYDataset) categoryTableXYDataset0);
      xYPlot0.addDomainMarker(2, (Marker) valueMarker0, layer0);
      xYPlot0.removeRangeMarker((Marker) valueMarker0, layer0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)57;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      xYPlot0.clearRangeMarkers();
      AffineTransform.getRotateInstance(15.0, (double) 2);
      xYPlot0.getFixedLegendItems();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(500);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, logAxis0, logAxis0, xYAreaRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("z40}j", xYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2356, 3229, chartRenderingInfo0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(737.23865F, 4, 3, 0.0F);
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      PeriodAxis periodAxis0 = new PeriodAxis("z40}j");
      RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = xYPlot0.getRangeAxisLocation(5806);
      xYPlot0.setRangeAxisLocation(axisLocation0);
      combinedDomainXYPlot0.getFixedRangeAxisSpace();
      combinedDomainXYPlot0.getDataRange(logAxis0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CrosshairState crosshairState0 = new CrosshairState();
      xYPlot0.getRangeAxisEdge(1);
      CategoryMarker categoryMarker0 = new CategoryMarker(4.0F);
      Layer layer0 = Layer.FOREGROUND;
      bufferedImage0.getSubimage(11, 11, 10, 1322);
      combinedDomainXYPlot0.removeDomainMarker(1, (Marker) categoryMarker0, layer0, true);
      xYPlot0.getRangeAxisEdge(3229);
      CombinedDomainXYPlot combinedDomainXYPlot1 = (CombinedDomainXYPlot)combinedDomainXYPlot0.clone();
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      combinedDomainXYPlot1.drawVerticalLine(sunGraphics2D0, rectangle2D0, 737.23865F, periodAxis0.DEFAULT_TICK_MARK_STROKE, periodAxis0.DEFAULT_AXIS_LINE_PAINT);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      DefaultDrawingSupplier defaultDrawingSupplier0 = new DefaultDrawingSupplier();
      defaultDrawingSupplier0.getNextOutlinePaint();
      combinedDomainXYPlot0.setDrawingSupplier(defaultDrawingSupplier0);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(valueMarker0);
      combinedDomainXYPlot0.markerChanged(markerChangeEvent0);
      combinedDomainXYPlot0.clearDomainMarkers(860);
      combinedDomainXYPlot0.getRangeMarkers(2, (Layer) null);
      combinedDomainXYPlot0.clearDomainMarkers();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeCrosshairStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(500);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, logAxis0, logAxis0, xYAreaRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("z40}j", xYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      jFreeChart0.createBufferedImage(2356, 3229, chartRenderingInfo0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(737.23865F, 4, 3, 0.0F);
      rectangle2D_Float0.getBounds2D();
      PeriodAxis periodAxis0 = new PeriodAxis("z40}j");
      RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = xYPlot0.getRangeAxisLocation(5806);
      xYPlot0.setRangeAxisLocation(axisLocation0);
      combinedDomainXYPlot0.getFixedRangeAxisSpace();
      combinedDomainXYPlot0.getDataRange(logAxis0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CrosshairState crosshairState0 = new CrosshairState();
      xYPlot0.getRangeAxisEdge(1);
      CategoryMarker categoryMarker0 = new CategoryMarker(4.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeDomainMarker(1, (Marker) categoryMarker0, layer0, true);
      xYPlot0.getRangeAxisEdge(3229);
      CombinedDomainXYPlot combinedDomainXYPlot1 = (CombinedDomainXYPlot)combinedDomainXYPlot0.clone();
      combinedDomainXYPlot1.drawRangeGridlines((Graphics2D) null, rectangle2D_Float0, (List) null);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      int int0 = 390;
      String string0 = "Null 'marker' argument.";
      DateAxis dateAxis0 = new DateAxis("Null 'marker' argument.");
      xYPlot0.setRangeAxis(390, (ValueAxis) dateAxis0, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, dateAxis0.DEFAULT_AXIS_LINE_PAINT, xYPlot0.DEFAULT_OUTLINE_STROKE);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(categoryMarker0);
      xYPlot0.markerChanged(markerChangeEvent0);
      // Undeclared exception!
      try { 
        xYPlot0.getRangeAxisForDataset((-918));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index -918 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10, xYPlot0.DEFAULT_GRIDLINE_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.addDomainMarker(2, (Marker) valueMarker0, layer0);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      xYPlot0.setDataset((XYDataset) categoryTableXYDataset0);
      xYPlot0.addDomainMarker(2, (Marker) valueMarker0, layer0);
      xYPlot0.removeRangeMarker((Marker) valueMarker0, layer0);
      xYPlot0.getPlotType();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)57;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      xYPlot0.clearRangeMarkers();
      AffineTransform.getRotateInstance(15.0, (double) 2);
      JFreeChart jFreeChart0 = new JFreeChart("XY Plot", xYPlot0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      xYPlot0.setDomainAxis(2187, (ValueAxis) numberAxis3D0);
      xYPlot0.getLegendItems();
      xYPlot0.removeDomainMarker((int) (byte)57, (Marker) valueMarker0, layer0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (byte)57, (byte)57, (-306), 1, (-1), (-546), true, true, false, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        xYPlot0.drawAxes((Graphics2D) null, (Rectangle2D) null, (Rectangle2D) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10, xYPlot0.DEFAULT_GRIDLINE_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.addDomainMarker(2, (Marker) valueMarker0, layer0);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      xYPlot0.setDataset((XYDataset) categoryTableXYDataset0);
      xYPlot0.addDomainMarker(2, (Marker) valueMarker0, layer0);
      xYPlot0.removeRangeMarker((Marker) valueMarker0, layer0);
      xYPlot0.getPlotType();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)57;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      xYPlot0.clearRangeMarkers();
      AffineTransform.getRotateInstance(15.0, (double) 2);
      JFreeChart jFreeChart0 = new JFreeChart("XY Plot", xYPlot0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("XY Plot");
      Locale locale0 = Locale.GERMAN;
      NumberAxis.createStandardTickUnits(locale0);
      xYPlot0.setDomainAxis(2187, (ValueAxis) numberAxis3D0);
      xYPlot0.getLegendItems();
      xYPlot0.clearDomainMarkers();
      xYPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(0.0, 0.0, 1.0F, 1.0F, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT);
      xYBoxAnnotation0.clone();
      xYBoxAnnotation0.clone();
      xYBoxAnnotation0.setToolTipText((String) null);
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYBoxAnnotation0, false);
      Color color0 = (Color)AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
      combinedDomainXYPlot0.setRangeCrosshairPaint(color0);
      combinedDomainXYPlot0.getQuadrantPaint(3);
      combinedDomainXYPlot0.setDomainCrosshairValue(5.0E-6, false);
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0E10, 0.0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addRangeMarker(2, (Marker) intervalMarker0, layer0, false);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      logarithmicAxis0.setTickLabelPaint(combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedDomainXYPlot0.getRangeAxisIndex(logarithmicAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      chartRenderingInfo0.clone();
      JViewport jViewport0 = new JViewport();
      JViewport jViewport1 = new JViewport();
      Point point0 = jViewport1.getViewPosition();
      plotRenderingInfo0.getSubplotIndex(point0);
      Point point1 = jViewport0.getViewPosition();
      combinedDomainXYPlot0.zoomDomainAxes(1994.07935982, plotRenderingInfo0, (Point2D) point1, true);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainAxisLocation(0, (AxisLocation) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      DateAxis dateAxis0 = new DateAxis("");
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      XYPlot xYPlot0 = new XYPlot(timePeriodValuesCollection0, dateAxis0, dateAxis0, xYErrorRenderer0);
      BufferedImage bufferedImage0 = new BufferedImage(500, 2187, 10);
      Vector<LinearGradientPaint> vector0 = new Vector<LinearGradientPaint>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Vector) null, vector0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JTable jTable0 = new JTable(defaultTableModel0, (TableColumnModel) null);
      JTableHeader jTableHeader0 = new JTableHeader((TableColumnModel) null);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(226);
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.drawRangeMarkers(graphics2D0, (Rectangle2D) null, 11, layer0);
      bufferedImage0.addTileObserver(tileObserver0);
      Graphics2D graphics2D1 = bufferedImage0.createGraphics();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Quarter outside valid range.");
      Rectangle rectangle1 = new Rectangle(8, (-3009), 2060, 500);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      xYPlot0.calculateAxisSpace(graphics2D1, rectangle1);
      xYPlot0.setDomainCrosshairValue(1000.0, true);
      xYPlot0.getRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      xYPlot0.drawRangeCrosshair(graphics2D0, rectangle0, plotOrientation0, 0, dateAxis0, xYErrorRenderer0.DEFAULT_OUTLINE_STROKE, xYErrorRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      // Undeclared exception!
      try { 
        xYPlot0.setQuadrantPaint(2187, xYErrorRenderer0.DEFAULT_OUTLINE_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (2187) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }
}
