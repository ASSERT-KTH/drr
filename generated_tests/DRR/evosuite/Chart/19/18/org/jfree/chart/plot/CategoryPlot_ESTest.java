/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 22 13:15:41 GMT 2019
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics2D;
import java.awt.GridBagLayout;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Stroke;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.sql.Connection;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import javax.swing.JList;
import javax.swing.border.BevelBorder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.labels.BoxAndWhiskerXYToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.Size2D;
import org.jfree.chart.util.SortOrder;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;


public class CategoryPlot_ESTest {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation(10);
      combinedDomainCategoryPlot0.setRangeAxisLocation(151, axisLocation0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      combinedRangeCategoryPlot0.getIndexOf(lineAndShapeRenderer0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      int int0 = categoryPlot0.getDatasetCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot0.setDrawSharedDomainAxis(false);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertFalse(combinedDomainCategoryPlot0.getDrawSharedDomainAxis());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("1DldY1%wf'3T4@SPq)S", combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point2D.Float point2D_Float0 = new Point2D.Float(0.8F, 0.8F);
      combinedDomainCategoryPlot0.zoomDomainAxes(0.0, plotRenderingInfo0, (Point2D) point2D_Float0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(chartPanel0.isRangeZoomable());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation0 = categoryPlot0.getDomainAxisLocation(500);
      categoryPlot0.setDomainAxisLocation(2132, axisLocation0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)categoryPlot0.getRangeCrosshairStroke();
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(2, basicStroke0.getLineJoin());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeAxisCount();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Null 'categoryParameterName' argument.");
      DateAxis dateAxis0 = new DateAxis();
      BarRenderer barRenderer0 = new BarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, extendedCategoryAxis0, dateAxis0, barRenderer0);
      double double0 = categoryPlot0.getAnchorValue();
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2454.7063452234);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation(0);
      categoryPlot0.setRangeAxisLocation(axisLocation0);
      assertEquals(1.0F, categoryPlot0.getForegroundAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      RectangleInsets rectangleInsets0 = combinedDomainCategoryPlot0.getAxisOffset();
      assertEquals(4.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(4.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDrawSharedDomainAxis();
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.8, (-1045.52742));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setFixedRangeAxisSpace((AxisSpace) null);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation0 = categoryPlot0.getDomainAxisLocation(1802);
      categoryPlot0.setDomainAxisLocation(axisLocation0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, (ValueAxis) null, areaRenderer0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 1566, 89, 89, 18, 5, 10, false, true, false, false, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point point0 = new Point();
      categoryPlot0.zoomRangeAxes((-472.5699002481061), plotRenderingInfo0, (Point2D) point0);
      assertTrue(chartPanel0.isRangeZoomable());
      assertTrue(categoryPlot0.isRangeZoomable());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeCategoryPlot0.setAnchorValue((-2929.915941739));
      assertEquals((-2929.915941739), combinedRangeCategoryPlot0.getAnchorValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainAxisCount();
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      int int0 = combinedDomainCategoryPlot0.getWeight();
      assertEquals(0, int0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.8, (-1045.52742));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      combinedRangeCategoryPlot0.setRenderer(913, (CategoryItemRenderer) stackedAreaRenderer0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1104.37037743), 0.0, "YcL}:F");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      SortOrder sortOrder0 = combinedRangeCategoryPlot0.getRowRenderingOrder();
      combinedRangeCategoryPlot0.setRowRenderingOrder(sortOrder0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, (ValueAxis) null, areaRenderer0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      categoryPlot0.setRenderer((CategoryItemRenderer) categoryStepRenderer0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      assertEquals(1, bufferedImage0.getNumYTiles());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(")<#3JA1r0&\"uW>p");
      DateAxis dateAxis0 = new DateAxis();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-2613.2520099), 30.27513);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, subCategoryAxis0, dateAxis0, barRenderer3D0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage((int) (byte)45, 378, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        categoryPlot0.calculateDomainAxisSpace(graphics2D0, (Rectangle2D) null, (AxisSpace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, (ValueAxis) null, areaRenderer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      categoryPlot0.zoomDomainAxes(0.2, plotRenderingInfo0, (Point2D) point0, true);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      double double0 = combinedRangeCategoryPlot0.getRangeCrosshairValue();
      assertEquals(0.0, double0, 0.01);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      LegendItemCollection legendItemCollection0 = areaRenderer0.getLegendItems();
      categoryPlot0.setFixedLegendItems(legendItemCollection0);
      assertTrue(categoryPlot0.isRangeZoomable());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      LogAxis logAxis0 = new LogAxis("org.jfree.chart.plot.FastScatterPlot");
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, (CategoryAxis) null, logAxis0, statisticalLineAndShapeRenderer0);
      categoryPlot0.setDataset((CategoryDataset) defaultCategoryDataset0);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Color color0 = (Color)combinedDomainCategoryPlot0.getRangeCrosshairPaint();
      assertEquals(0, color0.getRed());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.8, (-1045.52742));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setRangeCrosshairValue(0.0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertEquals(0.0, combinedRangeCategoryPlot0.getRangeCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      DateAxis dateAxis0 = new DateAxis();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, dateAxis0, categoryStepRenderer0);
      categoryPlot0.getPlotType();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      Year year0 = new Year();
      Week week0 = new Week(0, year0);
      PeriodAxis periodAxis0 = new PeriodAxis(">r :<[ (kr", week0, year0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(500, 4.0, true);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, periodAxis0, stackedBarRenderer3D0);
      Color color0 = (Color)categoryPlot0.getDomainGridlinePaint();
      assertEquals(255, color0.getBlue());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("^b", combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedRangeCategoryPlot0.zoomDomainAxes(0.0, 10.0, plotRenderingInfo0, (Point2D) null);
      assertEquals(1, combinedRangeCategoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      boolean boolean0 = combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.clearAnnotations();
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.8, (-1045.52742));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      combinedRangeCategoryPlot0.setRenderer((CategoryItemRenderer) stackedAreaRenderer0, false);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      LogAxis logAxis0 = new LogAxis("org.jfree.chart.plot.FastScatterPlot");
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, (CategoryAxis) null, logAxis0, statisticalLineAndShapeRenderer0);
      categoryPlot0.getFixedRangeAxisSpace();
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDomainGridlinePosition();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      BarRenderer barRenderer0 = new BarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, extendedCategoryAxis0, (ValueAxis) null, barRenderer0);
      BasicStroke basicStroke0 = (BasicStroke)categoryPlot0.getDomainGridlineStroke();
      assertEquals(0, basicStroke0.getEndCap());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setOrientation((PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PolarPlot polarPlot0 = new PolarPlot();
      combinedDomainCategoryPlot0.setAxisOffset(polarPlot0.DEFAULT_INSETS);
      assertTrue(polarPlot0.isRadiusGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setAxisOffset((RectangleInsets) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'offset' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearDomainAxes();
      combinedDomainCategoryPlot0.getDomainAxis();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[5];
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
      assertEquals(5, combinedDomainCategoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis("+|N2AW2. 69$");
      combinedDomainCategoryPlot0.getDomainAxisIndex(categoryAxis0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("6@:%N]GE");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, numberAxis3D0, lineRenderer3D0);
      // Undeclared exception!
      try { 
        categoryPlot0.getDomainAxisIndex((CategoryAxis) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'axis' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setDomainAxisLocation((AxisLocation) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.clearDomainAxes();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(")<#3JA1r0&\"uW>p");
      DateAxis dateAxis0 = new DateAxis();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-2613.2520099), 30.27513);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, subCategoryAxis0, dateAxis0, barRenderer3D0);
      CategoryPlot categoryPlot1 = (CategoryPlot)categoryPlot0.clone();
      categoryPlot1.clearRangeMarkers();
      assertEquals((-1.0), dateAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[3];
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      assertEquals(3, combinedDomainCategoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F, "p%L?$LB");
      int int0 = combinedDomainCategoryPlot0.getRangeAxisIndex(cyclicNumberAxis0);
      assertEquals((-1), int0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.getRangeAxisIndex((ValueAxis) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'axis' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(")<#3JA1r0&\"uW>p");
      DateAxis dateAxis0 = new DateAxis();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-2613.2520099), 30.27513);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, subCategoryAxis0, dateAxis0, barRenderer3D0);
      int int0 = categoryPlot0.getRangeAxisIndex(dateAxis0);
      assertEquals((-1.0), dateAxis0.getLowerBound(), 0.01);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RectangleEdge rectangleEdge0 = combinedDomainCategoryPlot0.getRangeAxisEdge(10);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals("RectangleEdge.RIGHT", rectangleEdge0.toString());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        categoryPlot0.setRangeAxisLocation((AxisLocation) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearRangeAxes();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(489.6718855059799, 489.6718855059799);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.clearRangeAxes();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.mapDatasetToRangeAxis(1228, 1425);
      assertFalse(categoryPlot0.isSubplot());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1104.37037743), 0.0, "YcL}:F");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setDataset(10, (CategoryDataset) null);
      assertEquals(11, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = combinedDomainCategoryPlot0.getDomainAxisForDataset((-1967));
      assertNotNull(categoryAxis0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, categoryAxis0, valueAxis0, intervalBarRenderer0);
      ValueAxis valueAxis1 = categoryPlot0.getRangeAxisForDataset((-736));
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("project.name", categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle(2, 10, 1576, 1558);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.drawDomainMarkers(sunGraphics2D0, rectangle0, 1576, layer0);
      assertEquals((-1), sunGraphics2D0.pixel);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[6];
      combinedRangeCategoryPlot0.setRenderers(categoryItemRendererArray0);
      assertFalse(combinedRangeCategoryPlot0.isSubplot());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryItemRenderer categoryItemRenderer0 = combinedDomainCategoryPlot0.getRendererForDataset(taskSeriesCollection0);
      assertNull(categoryItemRenderer0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, (ValueAxis) null, areaRenderer0);
      DatasetRenderingOrder datasetRenderingOrder0 = categoryPlot0.getDatasetRenderingOrder();
      categoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("6@:%N]GE");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, numberAxis3D0, lineRenderer3D0);
      // Undeclared exception!
      try { 
        categoryPlot0.setDatasetRenderingOrder((DatasetRenderingOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, (ValueAxis) null, areaRenderer0);
      SortOrder sortOrder0 = categoryPlot0.getRowRenderingOrder();
      categoryPlot0.setColumnRenderingOrder(sortOrder0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setColumnRenderingOrder((SortOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("9[sl~_jL");
      DateAxis dateAxis0 = new DateAxis();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis3D0, dateAxis0, barRenderer3D0);
      // Undeclared exception!
      try { 
        categoryPlot0.setRowRenderingOrder((SortOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setDomainGridlinesVisible(false);
      assertEquals(1, combinedRangeCategoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setDomainGridlinesVisible(true);
      assertTrue(combinedRangeCategoryPlot0.isDomainGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("6@:%N]GE");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, numberAxis3D0, lineRenderer3D0);
      CategoryAnchor categoryAnchor0 = CategoryAnchor.START;
      categoryPlot0.setDomainGridlinePosition(categoryAnchor0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1104.37037743), 0.0, "YcL}:F");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setDomainGridlinePosition((CategoryAnchor) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'position' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(")<#3JA1r0&\"uW>p");
      DateAxis dateAxis0 = new DateAxis();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-2613.2520099), 30.27513);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, subCategoryAxis0, dateAxis0, barRenderer3D0);
      categoryPlot0.setDomainGridlineStroke(dateAxis0.DEFAULT_TICK_MARK_STROKE);
      assertEquals((-1.0), dateAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(")<#3JA1r0&\"uW>p");
      DateAxis dateAxis0 = new DateAxis();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-2613.2520099), 30.27513);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, subCategoryAxis0, dateAxis0, barRenderer3D0);
      categoryPlot0.setDomainGridlinePaint(dateAxis0.DEFAULT_TICK_LABEL_PAINT);
      assertEquals((-1.0), dateAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setDomainGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.8, (-1045.52742));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setRangeGridlinesVisible(true);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeGridlinesVisible(false);
      assertFalse(combinedDomainCategoryPlot0.isRangeGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      BasicStroke basicStroke0 = (BasicStroke)defaultPolarItemRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeGridlineStroke(basicStroke0);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      Color color0 = (Color)Axis.DEFAULT_AXIS_LABEL_PAINT;
      combinedDomainCategoryPlot0.setRangeGridlinePaint(color0);
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, (ValueAxis) null, areaRenderer0);
      ArrayDeque<CyclicNumberAxis> arrayDeque0 = new ArrayDeque<CyclicNumberAxis>();
      Vector<NumberAxis> vector0 = new Vector<NumberAxis>(arrayDeque0);
      defaultMultiValueCategoryDataset0.add(vector0, true, 0.0F);
      LegendItemCollection legendItemCollection0 = categoryPlot0.getLegendItems();
      assertEquals(1, legendItemCollection0.getItemCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("6@:%N]GE");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, numberAxis3D0, lineRenderer3D0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      categoryPlot0.handleClick(500, 500, plotRenderingInfo0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("");
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) null, numberAxis0, categoryStepRenderer0);
      categoryPlot0.zoom((-1.5707963267948966));
      assertTrue(categoryPlot0.isOutlineVisible());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1104.37037743), 0.0, "YcL}:F");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.zoom(24.80078125);
      assertEquals(13.020410156250001, cyclicNumberAxis0.getUpperBound(), 0.01);
      assertEquals((-13.020410156250001), cyclicNumberAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(")<#3JA1r0&\"uW>p");
      DateAxis dateAxis0 = new DateAxis();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-2613.2520099), 30.27513);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, subCategoryAxis0, dateAxis0, barRenderer3D0);
      barRenderer3D0.setSeriesItemLabelGenerator((int) (byte)45, (CategoryItemLabelGenerator) null, true);
      assertTrue(barRenderer3D0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        categoryPlot0.addDomainMarker(402, (CategoryMarker) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addDomainMarker(1177, categoryMarker0, (Layer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, (ValueAxis) null, areaRenderer0);
      Layer layer0 = Layer.BACKGROUND;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CategoryMarker categoryMarker0 = new CategoryMarker(false, areaRenderer0.DEFAULT_OUTLINE_PAINT, categoryAxis0.DEFAULT_TICK_MARK_STROKE, categoryPlot0.DEFAULT_GRIDLINE_PAINT, categoryStepRenderer0.DEFAULT_OUTLINE_STROKE, 0.9F);
      categoryPlot0.addDomainMarker((-1387), categoryMarker0, layer0);
      categoryPlot0.clearDomainMarkers();
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1104.37037743), 0.0, "YcL}:F");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      CategoryMarker categoryMarker0 = new CategoryMarker(false, cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1104.37037743), 0.0, "YcL}:F");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      CategoryMarker categoryMarker0 = new CategoryMarker(false, cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.clearDomainMarkers();
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDomainMarkers((Layer) null);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, (ValueAxis) null, areaRenderer0);
      Layer layer0 = Layer.BACKGROUND;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CategoryMarker categoryMarker0 = new CategoryMarker(false, areaRenderer0.DEFAULT_OUTLINE_PAINT, categoryAxis0.DEFAULT_TICK_MARK_STROKE, categoryPlot0.DEFAULT_GRIDLINE_PAINT, categoryStepRenderer0.DEFAULT_OUTLINE_STROKE, 0.9F);
      categoryPlot0.addDomainMarker((-1387), categoryMarker0, layer0);
      Collection collection0 = categoryPlot0.getDomainMarkers((-1387), layer0);
      assertNotNull(collection0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("P8zrXO>1:Oo(s\"On", categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(225, 355);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PiePlot piePlot0 = new PiePlot((PieDataset) null);
      Stroke stroke0 = piePlot0.lookupSectionOutlineStroke(1.0F);
      CategoryMarker categoryMarker0 = new CategoryMarker((-1), ((SunGraphics2D) graphics2D0).foregroundColor, stroke0);
      categoryPlot0.addRangeMarker((-1), (Marker) categoryMarker0, (Layer) null);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(0, ganttRenderer0.DEFAULT_PAINT, ganttRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.addRangeMarker(0, (Marker) categoryMarker0, layer0);
      assertFalse(categoryMarker0.getDrawAsLine());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, (ValueAxis) null, areaRenderer0);
      categoryPlot0.clearRangeMarkers();
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      Paint paint0 = candlestickRenderer0.getBaseFillPaint();
      CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE, paint0, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE, 0);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) categoryMarker0);
      combinedDomainCategoryPlot0.clearRangeMarkers();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Collection collection0 = categoryPlot0.getRangeMarkers((Layer) null);
      assertNull(collection0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, (ValueAxis) null, areaRenderer0);
      categoryPlot0.setRangeCrosshairVisible(false);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("6@:%N]GE");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, numberAxis3D0, lineRenderer3D0);
      categoryPlot0.setRangeCrosshairVisible(true);
      categoryPlot0.setRangeCrosshairValue(24.80078125, false);
      assertTrue(categoryPlot0.isRangeCrosshairVisible());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setRangeCrosshairLockedOnData(true);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot0.setRangeCrosshairLockedOnData(false);
      assertFalse(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("6@:%N]GE");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, numberAxis3D0, lineRenderer3D0);
      categoryPlot0.setRangeCrosshairVisible(true);
      categoryPlot0.setRangeCrosshairValue((double) 496, true);
      assertTrue(categoryPlot0.isRangeCrosshairVisible());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      combinedDomainCategoryPlot0.setRangeCrosshairStroke(layeredBarRenderer0.DEFAULT_STROKE);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        categoryPlot0.setRangeCrosshairStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DateAxis dateAxis0 = new DateAxis();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, categoryAxis3D0, dateAxis0, stackedBarRenderer3D0);
      categoryPlot0.setRangeCrosshairPaint(categoryAxis3D0.DEFAULT_AXIS_LINE_PAINT);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeCrosshairPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", false, 1.0E-100, 1.0F);
      combinedDomainCategoryPlot0.addAnnotation(categoryPointerAnnotation0);
      combinedDomainCategoryPlot0.removeAnnotation(categoryPointerAnnotation0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, (ValueAxis) null, areaRenderer0);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(true, 0.0, 0.0F, 2.0F, areaRenderer0.DEFAULT_VALUE_LABEL_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE);
      boolean boolean0 = categoryPlot0.removeAnnotation(categoryLineAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.removeAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("project.name", categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle(2, 10, 1576, 1558);
      AxisSpace axisSpace0 = categoryPlot0.calculateRangeAxisSpace(graphics2D0, rectangle0, (AxisSpace) null);
      assertEquals(0.0, axisSpace0.getTop(), 0.01);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      jFreeChart0.createBufferedImage(201, 3, chartRenderingInfo0);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertFalse(chartPanel0.isDomainZoomable());
      assertFalse(categoryPlot0.isDomainZoomable());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("project.name", categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle(2, 10, 1576, 1558);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultKeyedValues2DDataset0);
      Point2D point2D0 = spiderWebPlot0.getWebPoint(rectangle0, 1558, 24.80078125);
      PlotState plotState0 = new PlotState();
      categoryPlot0.draw(graphics2D0, rectangle0, point2D0, plotState0, plotRenderingInfo0);
      assertEquals(14, rectangle0.y);
      assertEquals(1564.0, rectangle0.getMaxY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      Size2D size2D0 = new Size2D(201.0, 1.0F);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, (-41.98054322), (-41.98054322), rectangleAnchor0);
      LinkedList<BarRenderer> linkedList0 = new LinkedList<BarRenderer>();
      combinedDomainCategoryPlot0.drawRangeGridlines((Graphics2D) null, rectangle2D0, linkedList0);
      assertTrue(combinedDomainCategoryPlot0.isRangeGridlinesVisible());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      double[][] doubleArray0 = new double[5][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("8/");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 2.0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, extendedCategoryAxis0, cyclicNumberAxis0, minMaxCategoryRenderer0);
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      categoryPlot0.drawRangeLine(sunGraphics2D0, rectangle2D_Double0, 2.0, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, minMaxCategoryRenderer0.DEFAULT_OUTLINE_PAINT);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0, sunGraphics2D0.strokeState);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Size2D size2D0 = new Size2D(201.0, 1.0F);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 10.0, 10.0, rectangleAnchor0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      LogAxis logAxis0 = new LogAxis("U_ . &-Zh*C:1jH");
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.drawRangeCrosshair((Graphics2D) null, rectangle2D0, plotOrientation0, 0.0F, logAxis0, categoryAxis0.DEFAULT_TICK_MARK_STROKE, (Paint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = combinedDomainCategoryPlot0.DEFAULT_INSETS.createOutsetRectangle((Rectangle2D) rectangle2D_Float0, false, false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-84.58), "");
      combinedDomainCategoryPlot0.drawRangeCrosshair((Graphics2D) null, rectangle2D0, plotOrientation0, 336.9929597865696, cyclicNumberAxis0, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      Size2D size2D0 = new Size2D(201.0, 1.0F);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 1.0, 1.0, rectangleAnchor0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      LogAxis logAxis0 = new LogAxis();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.drawRangeCrosshair((Graphics2D) null, rectangle2D0, plotOrientation0, 0.0F, logAxis0, categoryAxis0.DEFAULT_TICK_MARK_STROKE, (Paint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      combinedRangeCategoryPlot0.add(categoryPlot0);
      assertEquals(1, categoryPlot0.getWeight());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("Null 'orientation' argument.");
      DateAxis dateAxis0 = new DateAxis("Null 'orientation' argument.");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, dateAxis0, (CategoryItemRenderer) null);
      assertTrue(categoryPlot0.isOutlineVisible());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryPlot0.getCategoriesForAxis(categoryAxis3D0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis3D0, (ValueAxis) null, areaRenderer0);
      List list0 = categoryPlot0.getCategoriesForAxis((CategoryAxis) null);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("6@:%N]GE");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, numberAxis3D0, lineRenderer3D0);
      categoryPlot0.setDataset(10, (CategoryDataset) taskSeriesCollection0);
      assertEquals(11, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(489.6718855059799, 489.6718855059799);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.getCategories();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, periodAxis0, levelRenderer0);
      categoryPlot0.getCategories();
      assertEquals(0.0, periodAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, (ValueAxis) null, areaRenderer0);
      ArrayDeque<CyclicNumberAxis> arrayDeque0 = new ArrayDeque<CyclicNumberAxis>();
      Vector<NumberAxis> vector0 = new Vector<NumberAxis>(arrayDeque0);
      defaultMultiValueCategoryDataset0.add(vector0, true, 0.0F);
      List list0 = categoryPlot0.getCategoriesForAxis(categoryAxis0);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("6@:%N]GE");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, numberAxis3D0, lineRenderer3D0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(taskSeriesCollection0);
      Color color0 = Color.YELLOW;
      BevelBorder bevelBorder0 = new BevelBorder((-2956), color0, color0, color0, color0);
      JList<CategoryPlot> jList0 = new JList<CategoryPlot>();
      Rectangle rectangle0 = bevelBorder0.getInteriorRectangle((Component) jList0, 10, 1587, 500, 10);
      Point2D point2D0 = spiderWebPlot0.getWebPoint(rectangle0, 10, (-1796.17817008811));
      categoryPlot0.zoomRangeAxes(8.0, plotRenderingInfo0, point2D0, true);
      assertEquals(Double.POSITIVE_INFINITY, numberAxis3D0.getLowerBound(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, numberAxis3D0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("}b\"k(zj<#V}");
      NumberAxis numberAxis0 = new NumberAxis();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, subCategoryAxis0, numberAxis0, defaultCategoryItemRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      categoryPlot0.zoomRangeAxes((double) 2.0F, plotRenderingInfo0, (Point2D) null, false);
      assertTrue(chartPanel0.getRefreshBuffer());
      assertFalse(numberAxis0.isAutoRange());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Rectangle rectangle0 = new Rectangle(2, 10, 1576, 1558);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultKeyedValues2DDataset0);
      Point2D point2D0 = spiderWebPlot0.getWebPoint(rectangle0, 1558, 24.80078125);
      categoryPlot0.zoomRangeAxes((double) 0.5F, 5.0, plotRenderingInfo0, point2D0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("6@:%N]GE");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, numberAxis3D0, lineRenderer3D0);
      categoryPlot0.zoomRangeAxes(10.0, 1479.060556742, (PlotRenderingInfo) null, (Point2D) null);
      assertEquals(10.5, numberAxis3D0.getLowerBound(), 0.01);
      assertFalse(numberAxis3D0.isAutoRange());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      BoxAndWhiskerXYToolTipGenerator boxAndWhiskerXYToolTipGenerator0 = new BoxAndWhiskerXYToolTipGenerator();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(2.0, false, boxAndWhiskerXYToolTipGenerator0);
      combinedDomainCategoryPlot0.setAnchorValue((double) candlestickRenderer0.ZERO, false);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      boolean boolean0 = categoryPlot0.equals(levelRenderer0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1104.37037743), 0.0, "YcL}:F");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = (CombinedRangeCategoryPlot)combinedRangeCategoryPlot0.clone();
      assertTrue(combinedRangeCategoryPlot1.equals((Object)combinedRangeCategoryPlot0));
      
      combinedRangeCategoryPlot1.setInsets(cyclicNumberAxis0.DEFAULT_AXIS_LABEL_INSETS);
      combinedRangeCategoryPlot1.clearRangeMarkers();
      assertFalse(combinedRangeCategoryPlot1.equals((Object)combinedRangeCategoryPlot0));
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1104.37037743), 0.0, "YcL}:F");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = (CombinedRangeCategoryPlot)combinedRangeCategoryPlot0.clone();
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation();
      assertTrue(combinedRangeCategoryPlot0.equals((Object)combinedRangeCategoryPlot1));
      
      combinedRangeCategoryPlot0.setDomainAxisLocation(axisLocation0);
      combinedRangeCategoryPlot1.clearRangeMarkers();
      assertFalse(combinedRangeCategoryPlot1.equals((Object)combinedRangeCategoryPlot0));
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(")<#3JA1r0&\"uW>p");
      DateAxis dateAxis0 = new DateAxis();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-2613.2520099), 30.27513);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, subCategoryAxis0, dateAxis0, barRenderer3D0);
      CategoryPlot categoryPlot1 = (CategoryPlot)categoryPlot0.clone();
      dateAxis0.setTickUnit(dateAxis0.DEFAULT_DATE_TICK_UNIT);
      categoryPlot1.clearRangeMarkers();
      assertEquals((-1.0), dateAxis0.getLowerBound(), 0.01);
      assertEquals(1, categoryPlot1.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = (CombinedRangeCategoryPlot)combinedRangeCategoryPlot0.clone();
      assertEquals(1, combinedRangeCategoryPlot1.getDatasetCount());
      assertEquals(0, combinedRangeCategoryPlot1.getDomainAxisCount());
  }
}
