/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 03 12:57:06 GMT 2019
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

 
public class StrBuilder_ESTest {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Skw");
      assertEquals(3, strBuilder0.size());
      
      strBuilder0.deleteAll("Skw");
      assertTrue(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[2];
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(charArray0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "");
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      int int0 = strBuilder0.capacity();
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1372));
      strBuilder0.getNewLineText();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1372));
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst(strMatcher0);
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1372));
      char[] charArray0 = new char[2];
      charArray0[0] = 'h';
      StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance(charArray0);
      strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "V'CZS9J7R");
      assertEquals(27, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.dir");
      int int0 = strBuilder0.indexOf('L');
      assertEquals(40, strBuilder0.capacity());
      assertEquals((-1), int0);
      assertEquals(8, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      strBuilder0.asWriter();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$NoMatcher");
      String string0 = strBuilder0.substring(14);
      assertEquals("mons.lang.text.StrMatcher$NoMatcher", string0);
      assertEquals(81, strBuilder0.capacity());
      assertEquals(49, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      int int0 = strBuilder0.lastIndexOf('j');
      assertEquals((-1), int0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-69));
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      assertNotNull(string0);
      assertEquals(32, strBuilder0.capacity());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("|O%4A<8h#%97X/XghQ");
      strBuilder0.appendFixedWidthPadLeft(32, 624, 't');
      strBuilder0.deleteFirst('t');
      assertEquals(642, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(":9&)n#q^23i4^");
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(strMatcher0, "APz\"v;r,t#q");
      assertEquals(46, strBuilder1.capacity());
      assertEquals(14, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf((String) null);
      assertEquals(32, strBuilder0.capacity());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append(0);
      int int0 = strBuilder0.lastIndexOf(",O1ptE3^>?By", 0);
      assertFalse(strBuilder0.isEmpty());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("|O%4A<8h#%97X/XghQ");
      strBuilder0.append((long) 624);
      assertEquals(21, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.asReader();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.asTokenizer();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("|O%4A<8h#%97X/XghQ");
      strBuilder0.insert(0, (long) 0);
      assertEquals(19, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.version");
      strBuilder0.insert(0, 0);
      assertEquals(16, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(5);
      // Undeclared exception!
      try { 
        strBuilder0.insert(3, (float) (-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1), (double) (-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("VkJpiy_]#2w[)dj6y");
      int int0 = strBuilder0.lastIndexOf("");
      assertEquals(18, int0);
      assertEquals(19, strBuilder0.length());
      assertEquals(51, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append((-1.0F));
      assertFalse(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("T)cPl'e'e#yJ");
      strBuilder0.append((double) (-1));
      assertEquals(16, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(454);
      strBuilder0.insert(0, '&');
      assertFalse(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      assertEquals(2, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      assertEquals(32, strBuilder0.capacity());
      assertFalse(strBuilder_StrBuilderReader0.ready());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      assertTrue(boolean0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.append('N');
      assertEquals(1, strBuilder0.size());
      assertFalse(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(" \t\n\r\f");
      assertFalse(strBuilder0.isEmpty());
      assertEquals(5, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Kw!~UT&");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      assertEquals(39, strBuilder0.capacity());
      assertEquals(7, strBuilder0.length());
      assertFalse(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((char[]) null, 3494, 3494);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("tG8/-riH6 *W&{V;*`M", 2114, 1081);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(14);
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      assertEquals(14, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(32);
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("T)cPl'e'e#yJ");
      StrBuilder strBuilder1 = strBuilder0.setNullText("T)cPl'e'e#yJ");
      strBuilder1.appendNull();
      assertEquals(24, strBuilder1.size());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      assertEquals(32, strBuilder1.capacity());
      assertEquals(0, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-1217));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1217
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("YG-7(-kg");
      assertEquals(9, strBuilder0.size());
      
      strBuilder0.setLength(0);
      strBuilder0.reverse();
      assertTrue(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(39);
      strBuilder0.appendPadding(39, '\\');
      strBuilder1.append(strBuilder0, 39, 39);
      assertEquals(117, strBuilder0.size());
      assertEquals(117, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      assertEquals(32, strBuilder0.capacity());
      
      strBuilder0.minimizeCapacity();
      strBuilder0.minimizeCapacity();
      assertEquals(0, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      boolean boolean0 = strBuilder0.isEmpty();
      assertFalse(boolean0);
      assertEquals(16, strBuilder0.length());
      assertEquals(48, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      boolean boolean0 = strBuilder0.isEmpty();
      assertTrue(boolean0);
      assertEquals(2, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1229));
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-1229));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1229
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("YG-7(-kg");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      assertEquals(41, strBuilder0.capacity());
      assertEquals(127, int0);
      assertEquals(9, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      // Undeclared exception!
      try { 
        strBuilder0.charAt(3869);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3869
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-70));
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1250), '9');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1250
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(1355, 'Y');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1355
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(false);
      strBuilder1.setCharAt(0, 'G');
      assertEquals(5, strBuilder0.size());
      assertEquals(5, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-1453));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1453
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("YG-7(-kg");
      strBuilder0.deleteCharAt(0);
      assertEquals(8, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(9);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 9
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("', has a length less than 2");
      char[] charArray0 = strBuilder0.toCharArray();
      assertEquals(27, strBuilder0.length());
      assertEquals(27, charArray0.length);
      assertEquals(59, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      strBuilder0.toCharArray();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.append(32);
      strBuilder0.toCharArray(0, 2124);
      assertEquals(2, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = strBuilder0.toCharArray(0, 0);
      assertEquals(0, charArray0.length);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.version");
      char[] charArray0 = strBuilder0.getChars((char[]) null);
      assertEquals(15, charArray0.length);
      assertEquals(47, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      char[] charArray0 = new char[1];
      char[] charArray1 = strBuilder0.getChars(charArray0);
      assertEquals(1, charArray1.length);
      assertEquals(0, strBuilder0.length());
      assertEquals(2, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.vm.version");
      char[] charArray0 = new char[5];
      char[] charArray1 = strBuilder0.getChars(charArray0);
      assertEquals(15, charArray1.length);
      assertEquals(47, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(735);
      char[] charArray0 = new char[5];
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-2937), 1131, charArray0, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2937
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(14);
      char[] charArray0 = new char[5];
      // Undeclared exception!
      try { 
        strBuilder0.getChars(14, (-2464), charArray0, (-2464));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2464
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(338);
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try { 
        strBuilder0.getChars(338, 338, charArray0, 4630);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 338
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      char[] charArray0 = new char[7];
      // Undeclared exception!
      try { 
        strBuilder0.getChars(835, 10, charArray0, 2002);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.setNewLineText("/]r7Ry47kM5:`");
      strBuilder0.appendNewLine();
      assertFalse(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("j0P3z2");
      Object[] objectArray0 = new Object[7];
      strBuilder0.appendWithSeparators(objectArray0, "Invalid offset: ");
      char[] charArray0 = new char[9];
      // Undeclared exception!
      try { 
        strBuilder0.insert(81, charArray0, (-81), (-81));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -81
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("j0P3z2");
      StrBuilder strBuilder1 = strBuilder0.append((String) null);
      assertEquals(38, strBuilder1.capacity());
      assertEquals(6, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("iD4dmXWwyR?");
      StrBuilder strBuilder1 = strBuilder0.append((String) null, 5, 5);
      assertEquals(11, strBuilder1.length());
      assertEquals(43, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.endorsed.dirs");
      // Undeclared exception!
      try { 
        strBuilder0.append("java.endorsed.dirs", (-70), 1004);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1244));
      // Undeclared exception!
      try { 
        strBuilder0.append("+X0''6RGc", 1, (-1244));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("iD4dmXWwyR?");
      strBuilder0.append("iD4dmXWwyR?java.lang.String@0000000003<BE?QN.9`u9;]N$java.lang.Integer@0000000004<BE?QN.9`u9;]N$java.lang.Integer@0000000004<BE?QN.9`u9;]N$java.lang.Object@0000000005<BE?QN.9`u9;]N$<BE?QN.9`u9;]N$org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer@0000000006<BE?QN.9`u9;]N$org.apache.commons.lang.text.StrBuilder@0000000001", 5, 5);
      assertEquals(16, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append(" \t\n\r\f", 0, 31);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("java.home", 0, 0);
      assertEquals(32, strBuilder1.capacity());
      assertTrue(strBuilder1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("YG-7(-kg");
      StringBuffer stringBuffer0 = new StringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      assertEquals(9, strBuilder1.length());
      assertEquals(41, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null);
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid length: ");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "Invalid length: ");
      strBuilder0.append(stringBuffer0);
      assertEquals(32, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("|O%4A<8h#%97X/XghQ");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "|O%4A<8h#%97X/XghQ");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, (-1103));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null, 0, 39);
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "|O%4A<8h#%97X/XghQ");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-1), (-1103));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer(44);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 44, 44);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("|O%4A<8h#%97X/XghQ");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "|O%4A<8h#%97X/XghQ");
      strBuilder0.append(stringBuffer0, 0, 4);
      assertEquals(22, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer(102);
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, 114);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      assertEquals("", stringBuffer0.toString());
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null);
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(strBuilder0);
      assertEquals(32, strBuilder1.capacity());
      assertTrue(strBuilder1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null, 9, 9);
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder0, (-1148), 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1231);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder0, 1231, 273);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder0, 0, (-2537));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.setLength(39);
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder0, 39, 39);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(strBuilder0, 0, 0);
      assertEquals(32, strBuilder1.capacity());
      assertEquals(0, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write((char[]) null);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1231);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[0];
      strBuilder_StrBuilderWriter0.write(charArray0);
      assertEquals(1231, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("X4 A^HM");
      char[] charArray0 = new char[7];
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-109), (-109));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -109
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(":9&)n#q^23i4^");
      char[] charArray0 = new char[2];
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 1849, 1849);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 1849
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(454);
      char[] charArray0 = new char[8];
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, (-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(454);
      char[] charArray0 = new char[8];
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, 32);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 32
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(":9&)n#q^23i4^");
      char[] charArray0 = new char[2];
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
      assertEquals(46, strBuilder1.capacity());
      assertEquals(14, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1372));
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Object[]) null, "'\"");
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*Evx+");
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "!*[RcgKz");
      assertEquals(37, strBuilder1.capacity());
      assertEquals(5, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[5];
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, (String) null);
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) null, "");
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      LinkedList<StrBuilder> linkedList0 = new LinkedList<StrBuilder>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "00ix{e:juE5)T%u!m4");
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("rp]F&i:FMp5}E@BN");
      strBuilder0.appendWithSeparators((Collection) linkedList0, "yJNG7{X7@");
      strBuilder0.replaceFirst('g', 'd');
      assertFalse(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("rp]F&i:FMp5}E@BN");
      strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      assertFalse(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.offerFirst("dA)5NDej3d|");
      linkedList0.add("rp]F&i:FMp5}E@BN");
      strBuilder0.appendWithSeparators((Collection) linkedList0, "yJNG7{X7@");
      assertFalse(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, (String) null);
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, (String) null);
      assertEquals(32, strBuilder1.capacity());
      assertEquals(0, strBuilder1.size());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2621);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      char[] charArray0 = new char[9];
      charArray0[3] = ' ';
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset(charArray0);
      strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "end < start");
      assertEquals(2, strTokenizer0.nextIndex());
      assertEquals(65, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2621);
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-529), ':');
      assertEquals(2621, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) "", 0, 'l');
      assertEquals(32, strBuilder1.capacity());
      assertEquals(0, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("(>7\"j(Hi6`w");
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) null, 4, '2');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1372));
      strBuilder0.appendFixedWidthPadLeft((Object) strBuilder0, 4, 'i');
      assertFalse(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("iD4dmXWwyR?");
      Integer integer0 = new Integer(5);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) integer0, (-463), '/');
      assertEquals(11, strBuilder1.length());
      assertEquals(43, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3160);
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) null, 8, 'y');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("user.dir");
      strBuilder0.insert(4, (Object) strBuilder0);
      assertEquals(58, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.insert(4, (Object) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("iD4dmXWwyR?");
      Integer integer0 = new Integer(5);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "iD4dmXWwyR?";
      objectArray0[1] = (Object) integer0;
      objectArray0[2] = (Object) integer0;
      objectArray0[3] = (Object) "iD4dmXWwyR?";
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      objectArray0[5] = (Object) strBuilder_StrBuilderTokenizer0;
      objectArray0[6] = (Object) strBuilder0;
      strBuilder0.appendWithSeparators(objectArray0, "vvB3#QJItP.E5(8W5A");
      strBuilder0.insert(348, (char[]) null, 57, (-1));
      assertEquals(349, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append(true);
      strBuilder0.insert(3, (char[]) null);
      assertEquals(4, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("iD4dmXWwyR?");
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.insert(5, charArray0);
      assertEquals(43, strBuilder1.capacity());
      assertEquals(11, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 5, 5);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 5
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Array element ");
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        strBuilder0.insert(2, charArray0, 2, 2);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 2
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 0, (-108));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -108
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Array element ");
      char[] charArray0 = new char[1];
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0, 0, 0);
      assertEquals(46, strBuilder1.capacity());
      assertEquals(14, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.setLength(5);
      char[] charArray0 = new char[9];
      strBuilder0.insert(3, charArray0, 3, 3);
      assertEquals(8, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.appendFixedWidthPadRight(2875, 639, '4');
      strBuilder0.insert(639, false);
      assertEquals(644, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.insert(0, true);
      assertEquals(4, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.delete(0, 0);
      assertEquals(32, strBuilder1.capacity());
      assertTrue(strBuilder1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(39);
      strBuilder1.trim();
      assertEquals(39, strBuilder0.capacity());
      assertEquals(0, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(39);
      char[] charArray0 = new char[6];
      charArray0[0] = '4';
      strBuilder0.insert(39, charArray0);
      strBuilder1.deleteAll('4');
      assertEquals(45, strBuilder0.capacity());
      assertEquals(44, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight((Object) strBuilder0, 117, '4');
      strBuilder1.deleteAll('4');
      assertFalse(strBuilder0.isEmpty());
      assertEquals(50, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("iD4dmXWwyR?");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('~');
      assertEquals(11, strBuilder1.length());
      assertEquals(43, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(187);
      StrBuilder strBuilder1 = strBuilder0.deleteAll((String) null);
      assertEquals(187, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((String) null);
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("tG8/-riH6 *W&{V;*`M");
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("startIndex must be valid");
      strBuilder0.deleteFirst("startIndex must be valid");
      assertEquals(0, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("iD4dmXWwyR?");
      Object[] objectArray0 = new Object[7];
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "vvB3#QJItP.E5(8W5A");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher(" TESkK");
      strBuilder1.deleteFirst(strMatcher0);
      assertEquals(119, strBuilder0.capacity());
      assertEquals(118, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Array element ");
      strBuilder0.replace(0, 117, (String) null);
      assertTrue(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll('L', 'L');
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      char[] charArray0 = new char[8];
      charArray0[0] = ']';
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      strBuilder1.replaceAll(']', 'C');
      assertEquals(8, strBuilder0.length());
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('G', 'G');
      assertEquals(59, strBuilder1.length());
      assertEquals(91, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('g', 'd');
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll((String) null, "#DC<*}");
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = strBuilder0.replaceAll("+@@-A%xe$", (String) null);
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("T)cPl'e'e#yJ");
      strBuilder0.replaceAll("T)cPl'e'e#yJ", "");
      assertTrue(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("|O%4A<8h#%97X/XghQ");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((String) null, (String) null);
      assertEquals(50, strBuilder1.capacity());
      assertEquals(18, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("j0P3z2");
      strBuilder0.replaceFirst("j0P3z2", (String) null);
      assertEquals(0, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) null, "");
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append("4U/dLC $G");
      char[] charArray0 = new char[3];
      charArray0[0] = '$';
      StrMatcher.CharSetMatcher strMatcher_CharSetMatcher0 = new StrMatcher.CharSetMatcher(charArray0);
      strBuilder0.deleteAll((StrMatcher) strMatcher_CharSetMatcher0);
      assertFalse(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(":Q");
      StrBuilder strBuilder1 = strBuilder0.reverse();
      assertEquals(2, strBuilder1.length());
      assertEquals(34, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1372));
      StrBuilder strBuilder1 = strBuilder0.trim();
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.setLength(39);
      StrBuilder strBuilder1 = strBuilder0.insert(39, 0.0);
      strBuilder1.trim();
      assertFalse(strBuilder0.isEmpty());
      assertEquals(3, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Array element ");
      assertEquals(14, strBuilder0.size());
      
      strBuilder0.trim();
      assertEquals(13, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("j0P3z2");
      boolean boolean0 = strBuilder0.startsWith("j0P3z2");
      assertTrue(boolean0);
      assertEquals(38, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      boolean boolean0 = strBuilder0.startsWith((String) null);
      assertFalse(boolean0);
      assertEquals(3, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Skw");
      boolean boolean0 = strBuilder0.startsWith("");
      assertEquals(3, strBuilder0.length());
      assertTrue(boolean0);
      assertEquals(35, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.startsWith("yJNG7{X7@");
      assertEquals(32, strBuilder0.capacity());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("rp]F&i:FMp5}E@BN");
      strBuilder0.appendWithSeparators((Collection) linkedList0, "yJNG7{X7@");
      boolean boolean0 = strBuilder0.startsWith("yJNG7{X7@");
      assertFalse(strBuilder0.isEmpty());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.endsWith("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      assertEquals(32, strBuilder0.capacity());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      boolean boolean0 = strBuilder0.endsWith((String) null);
      assertFalse(boolean0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.endsWith("");
      assertTrue(boolean0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      boolean boolean0 = strBuilder0.endsWith("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      assertEquals(91, strBuilder0.capacity());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("*X0f_*\"\"uS]a'&3U");
      boolean boolean0 = strBuilder0.endsWith("4.1");
      assertEquals(48, strBuilder0.capacity());
      assertFalse(boolean0);
      assertEquals(16, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.leftString('_');
      assertEquals(32, strBuilder0.capacity());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("j0P3z2");
      strBuilder0.leftString((-81));
      assertEquals(38, strBuilder0.capacity());
      assertEquals(6, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("|O%4A<8h#%97X/XghQ");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(32, 624, 't');
      String string0 = strBuilder1.leftString(624);
      assertEquals(642, strBuilder0.size());
      assertEquals("|O%4A<8h#%97X/XghQtttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttjava.lang", string0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      String string0 = strBuilder0.rightString('G');
      assertEquals("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer", string0);
      assertEquals(91, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Array element ");
      String string0 = strBuilder0.rightString(0);
      assertEquals(46, strBuilder0.capacity());
      assertEquals("", string0);
      assertEquals(14, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$NoMatcher");
      String string0 = strBuilder0.rightString(5);
      assertEquals("tcher", string0);
      assertEquals(81, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("|O%4A<8h#%97X/XghQ");
      String string0 = strBuilder0.midString(0, 272);
      assertEquals(50, strBuilder0.capacity());
      assertEquals("|O%4A<8h#%97X/XghQ", string0);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      strBuilder0.midString((-1), 0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrMatcher$NoMatcher");
      StrBuilder strBuilder1 = strBuilder0.replace(5, 79, "tcher");
      String string0 = strBuilder1.midString(14, 79);
      assertEquals(10, strBuilder0.length());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("|O%4A<8h#%97X/XghQ");
      strBuilder0.appendFixedWidthPadLeft(32, 624, 't');
      strBuilder0.midString(0, 272);
      assertEquals(642, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("iD4dmXWwyR?");
      boolean boolean0 = strBuilder0.contains(';');
      assertFalse(boolean0);
      assertEquals(43, strBuilder0.capacity());
      assertEquals(11, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("iD4dmXWwyR?");
      Object[] objectArray0 = new Object[7];
      strBuilder0.appendWithSeparators(objectArray0, "<BE?QN.9`u9;]N$");
      boolean boolean0 = strBuilder0.contains(';');
      assertEquals(101, strBuilder0.size());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.contains("Invalid startIndex: ");
      assertFalse(boolean0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.appendNewLine();
      boolean boolean0 = strBuilder0.contains("");
      assertEquals(1, strBuilder0.size());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("j0P3z2");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("Invalid offset: ");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      assertEquals(38, strBuilder0.capacity());
      assertEquals(6, strBuilder0.length());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("T)cPl'e'e#yJ");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("2y!-JUh_[k");
      boolean boolean0 = strBuilder0.contains(strMatcher0);
      assertTrue(boolean0);
      assertEquals(12, strBuilder0.length());
      assertEquals(44, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("iD4dmXWwyR?");
      int int0 = strBuilder0.indexOf(';', (-463));
      assertEquals((-1), int0);
      assertEquals(43, strBuilder0.capacity());
      assertEquals(11, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-69));
      int int0 = strBuilder0.indexOf('W', (-1));
      assertEquals(32, strBuilder0.capacity());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("iD4dmXWwyR?");
      Object[] objectArray0 = new Object[7];
      strBuilder0.appendWithSeparators(objectArray0, "<BE?QN.9`u9;]N$");
      int int0 = strBuilder0.indexOf(';', (-463));
      assertEquals(101, strBuilder0.size());
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("|O%4A<8h#%97X/XghQ");
      int int0 = strBuilder0.indexOf("|O%4A<8h#%97X/XghQ", (-1103));
      assertEquals(0, int0);
      assertEquals(50, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("q");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("q", "8");
      assertEquals(1, strBuilder1.size());
      assertEquals(33, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append('*');
      strBuilder0.replaceFirst("{*2\"pA_|h", "{*2\"pA_|h");
      assertEquals(1, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(39);
      strBuilder1.deleteAll("oYU,R5I)qxoB#7");
      assertFalse(strBuilder0.isEmpty());
      assertEquals(39, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-69));
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("w");
      int int0 = strBuilder0.indexOf(strMatcher0, (-5634));
      assertEquals(32, strBuilder0.capacity());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.indexOf((StrMatcher) null);
      assertEquals((-1), int0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf('?', 11);
      assertEquals(32, strBuilder0.capacity());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[8];
      strBuilder0.appendWithSeparators(objectArray0, "startIndex must be valid");
      int int0 = strBuilder0.lastIndexOf(' ', 1804);
      assertEquals(168, strBuilder0.size());
      assertEquals(162, int0);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf("", 1111);
      assertEquals(32, strBuilder0.capacity());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      int int0 = strBuilder0.lastIndexOf((String) null, 0);
      assertEquals((-1), int0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("=S{91''sF");
      int int0 = strBuilder0.lastIndexOf("=S{91''sF", 56);
      assertEquals(42, strBuilder0.capacity());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("VkJpiy_]#2w[)dj6y");
      int int0 = strBuilder0.lastIndexOf("X");
      assertEquals(19, strBuilder0.size());
      assertEquals((-1), int0);
      assertEquals(51, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      strBuilder0.appendFixedWidthPadLeft(108, 108, 'i');
      int int0 = strBuilder0.lastIndexOf("ps4cPU=;LG{>0l", 3595);
      assertEquals(108, strBuilder0.size());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.splitMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, (-1363));
      assertEquals(32, strBuilder0.capacity());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null);
      assertEquals((-1), int0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("|O%4A<8h#%97X/XghQ");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("'>54D'Fx>");
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 624);
      assertEquals(18, strBuilder0.size());
      assertEquals(3, int0);
      assertEquals(50, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append("4U/dLC $G");
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = strBuilder1.lastIndexOf(strMatcher0);
      assertEquals(9, strBuilder0.length());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("j0P3z2");
      StrBuilder strBuilder1 = new StrBuilder(217);
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      assertEquals(217, strBuilder1.capacity());
      assertEquals(38, strBuilder0.capacity());
      assertFalse(boolean0);
      assertEquals(6, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("@S-(5f1M");
      StrBuilder strBuilder1 = new StrBuilder("@S-(5f1M");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      assertEquals(8, strBuilder1.length());
      assertEquals(40, strBuilder1.capacity());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("iD4dmXWwyR?");
      StrBuilder strBuilder1 = new StrBuilder("+N,%FS#v0\"2");
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder0);
      assertEquals(43, strBuilder1.capacity());
      assertEquals(11, strBuilder1.length());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("j0P3z2");
      StrBuilder strBuilder1 = new StrBuilder(217);
      boolean boolean0 = strBuilder1.equals(strBuilder0);
      assertEquals(38, strBuilder0.capacity());
      assertEquals(6, strBuilder0.length());
      assertFalse(boolean0);
      assertEquals(217, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("iD4dmXWwyR?");
      StrBuilder strBuilder1 = new StrBuilder("+N,%FS#v0\"2");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      assertFalse(boolean0);
      assertEquals(11, strBuilder1.length());
      assertEquals(43, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder strBuilder1 = new StrBuilder();
      Integer integer0 = new Integer(641);
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight((Object) integer0, 641, '?');
      strBuilder0.append(strBuilder1);
      boolean boolean0 = strBuilder0.equals(strBuilder2);
      assertFalse(strBuilder1.isEmpty());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      boolean boolean0 = strBuilder0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals((Object) strBuilder0);
      assertTrue(boolean0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(":9&)n#q^23i4^");
      strBuilder0.hashCode();
      assertEquals(46, strBuilder0.capacity());
      assertEquals(14, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.substring((-146), 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -146
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer");
      // Undeclared exception!
      try { 
        strBuilder0.replace((int) 'G', 1, "org.apache.commons.lang.text.StrBuilder");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(0);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      strBuilder_StrBuilderTokenizer0.reset("");
      strBuilder_StrBuilderTokenizer0.getContent();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      assertFalse(strBuilder_StrBuilderReader0.ready());
      
      int int0 = strBuilder_StrBuilderReader0.read();
      assertEquals((-1), int0);
      assertEquals(32, strBuilder0.capacity());
      assertEquals(0, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[2];
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-2478), 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      assertEquals(32, strBuilder0.capacity());
      assertEquals((-1), int0);
      assertEquals(0, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 4, (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2882);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 2882, 2882);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("CVfc*");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[4];
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 2, 3376);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      StringBuffer stringBuffer0 = new StringBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      int int0 = strBuilder_StrBuilderReader0.read(charBuffer0);
      assertEquals(0, int0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      strBuilder0.appendFixedWidthPadLeft(108, 108, 'i');
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      assertEquals(108, strBuilder0.capacity());
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[7];
      strBuilder0.appendFixedWidthPadRight(9, 6, 'i');
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      assertEquals(6, strBuilder0.size());
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("YG-7(-kg");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(3024L);
      assertFalse(strBuilder_StrBuilderReader0.ready());
      assertEquals(9L, long0);
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("|O%4A<8h#%97X/XghQ");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-1));
      assertEquals(18, strBuilder0.size());
      assertEquals(0L, long0);
      assertEquals(18, strBuilder0.length());
      assertEquals(50, strBuilder0.capacity());
  }
}
