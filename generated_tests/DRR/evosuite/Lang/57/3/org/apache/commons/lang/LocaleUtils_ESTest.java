/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 03 10:58:45 GMT 2019
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.lang.LocaleUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

 
public class LocaleUtils_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale((String) null);
      assertNull(locale0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("|;kPSbUrty:-=I%;");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: |;kPSbUrty:-=I%;
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("Pn-)6");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: Pn-)6
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("7qlh");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: 7qlh
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("f2gm<U:$\"G7@");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: f2gm<U:$\"G7@
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("fv_GA^P");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: fv_GA^P
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("uw`N[SwJ,YD@DYsQvHG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: uw`N[SwJ,YD@DYsQvHG
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("rv_/=qYdiKX,E3MlH'e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: rv_/=qYdiKX,E3MlH'e
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("rv_[=qYdiKX,E3MlH'e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: rv_[=qYdiKX,E3MlH'e
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("rv_G=qYdiKX,EMlH'e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: rv_G=qYdiKX,EMlH'e
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("rv_G[=qYdiKX,E3MlH'e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: rv_G[=qYdiKX,E3MlH'e
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale("fv_GA_P");
      assertEquals("GAB", locale0.getISO3Country());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Locale locale0 = new Locale("", "org.apache.commons.lang.LocaleUtils", "");
      List list0 = LocaleUtils.localeLookupList((Locale) null, locale0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Locale locale0 = new Locale("", "", ":,=`lgX");
      List list0 = LocaleUtils.localeLookupList(locale0);
      assertEquals(2, list0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LocaleUtils.availableLocaleSet();
      Set set0 = LocaleUtils.availableLocaleSet();
      assertEquals(160, set0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      boolean boolean0 = LocaleUtils.isAvailableLocale((Locale) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      List list0 = LocaleUtils.languagesByCountry("JP");
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      List list0 = LocaleUtils.languagesByCountry("eKn\fd-GfNx");
      LocaleUtils.countriesByLanguage((String) null);
      LocaleUtils.languagesByCountry("eKn\fd-GfNx");
      List list1 = LocaleUtils.languagesByCountry((String) null);
      assertTrue(list1.equals((Object)list0));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LocaleUtils.availableLocaleList();
      Locale locale0 = Locale.FRENCH;
      locale0.toLanguageTag();
      locale0.getDisplayName();
      LocaleUtils.localeLookupList(locale0, locale0);
      LocaleUtils.toLocale("fr");
      LocaleUtils.localeLookupList(locale0);
      LocaleUtils.isAvailableLocale(locale0);
      LocaleUtils localeUtils0 = new LocaleUtils();
      Locale locale1 = Locale.US;
      LocaleUtils.localeLookupList(locale1, locale0);
      List list0 = LocaleUtils.countriesByLanguage("French");
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LocaleUtils.languagesByCountry("eKn\fd-GfNx");
      LocaleUtils.countriesByLanguage((String) null);
      LocaleUtils.languagesByCountry("eKn\fd-GfNx");
      List list0 = LocaleUtils.availableLocaleList();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = "pI$";
      LocaleUtils.countriesByLanguage("pI$");
      String string1 = "th";
      LocaleUtils.countriesByLanguage("th");
      String string2 = "d{S=H[ D/pI";
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("d{S=H[ D/pI");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: d{S=H[ D/pI
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }
}
