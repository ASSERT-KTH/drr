/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 03 08:05:59 GMT 2019
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang.WordUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

 
public class WordUtils_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = WordUtils.capitalize("LR");
      assertEquals("LR", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully(")+\n\"Qh?j\nS");
      assertEquals(")+\n\"qh?j\nS", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = WordUtils.wrap("Li-X{n", 0);
      assertEquals("Li-X{n", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = WordUtils.uncapitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WordUtils wordUtils0 = new WordUtils();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, (-1716));
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = WordUtils.wrap(")+ \"Qh?j S", 0, "4.9", false);
      assertEquals(")+4.9\"Qh?j4.9S", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = WordUtils.wrap("LDZe8i", 3316);
      assertEquals("LDZe8i", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = WordUtils.wrap(" 8", (-1549), "", true);
      assertEquals("8", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = WordUtils.wrap("EzsW\u0000- !6^KM8;`", 0, "{b|(\"=E.SF, P0O$!y3", true);
      assertEquals("E{b|(\"=E.SF, P0O$!y3z{b|(\"=E.SF, P0O$!y3s{b|(\"=E.SF, P0O$!y3W{b|(\"=E.SF, P0O$!y3\u0000{b|(\"=E.SF, P0O$!y3-{b|(\"=E.SF, P0O$!y3!{b|(\"=E.SF, P0O$!y36{b|(\"=E.SF, P0O$!y3^{b|(\"=E.SF, P0O$!y3K{b|(\"=E.SF, P0O$!y3M{b|(\"=E.SF, P0O$!y38{b|(\"=E.SF, P0O$!y3;{b|(\"=E.SF, P0O$!y3`", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[1];
      String string0 = WordUtils.capitalizeFully("{b|(\"=E.SF, P0O$!y3", charArray0);
      assertEquals("{b|(\"=e.sf, p0o$!y3", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize("PN~o", charArray0);
      assertEquals("PN~o", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully("V=", charArray0);
      assertEquals("V=", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[2];
      String string0 = WordUtils.uncapitalize("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize("LkB` Rz_AWFkrhd4jO", charArray0);
      assertEquals("LkB` Rz_AWFkrhd4jO", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[2] = '?';
      String string0 = WordUtils.uncapitalize("%Fo@<?(qSq?G7", charArray0);
      assertEquals("%Fo@<?(qSq?g7", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = WordUtils.swapCase((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = WordUtils.swapCase("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = WordUtils.swapCase("jRz1-}.rvhs?Tt6");
      assertEquals("JrZ1-}.RVHS?tT6", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = WordUtils.initials((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[4];
      String string0 = WordUtils.initials("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.initials("XIR.q:%G3b", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[1];
      String string0 = WordUtils.initials("E{b|(\"=E.SF, P0O$!y3z{b|(\"=E.SF, P0O$!y3s{b|(\"=E.SF, P0O$!y3W{b|(\"=E.SF, P0O$!y3{b|(\"=E.SF, P0O$!y30{b|(\"=E.SF, P0O$!y3-{b|(\"=E.SF, P0O$!y3!{b|(\"=E.SF, P0O$!y36{b|(\"=E.SF, P0O$!y3^{b|(\"=E.SF, P0O$!y3{b|(\"=E.SF, P0O$!y3K{b|(\"=E.SF, P0O$!y3M{b|(\"=E.SF, P0O$!y38{b|(\"=E.SF, P0O$!y3;{b|(\"=E.SF, P0O$!y3`", charArray0);
      assertEquals("E", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = WordUtils.initials("LkB` Rz_AWFkrhd4jO");
      assertEquals("LR", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = WordUtils.abbreviate((String) null, (-1716), (-1716), (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = WordUtils.abbreviate("", 1176, 1176, "nx)VRv$w");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = WordUtils.abbreviate("(0)^3gr*}z", 32, 0, "org.apache.commons.lang.WordUtils");
      assertEquals("(0)^3gr*}z", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = WordUtils.abbreviate("Ggv'rr%!=7\"m", (-226), (-1), "gGv'Rr%!=7\"m");
      assertEquals("Ggv'rr%!=7\"m", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" ", 0, 10, " ");
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = WordUtils.abbreviate("-+n/p?oI\"d&1Rv", 11, (-1436), "AZaC}>`7USSUdQ2.P");
      assertEquals("-+n/p?oI\"d&AZaC}>`7USSUdQ2.P", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        WordUtils.abbreviate("cQ[:W;F;9`x2j #", (-1689), (-53), (String) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
