/*
 * This file was automatically generated by EvoSuite
 * Sun Jun 23 16:44:14 GMT 2019
 */

package org.apache.commons.math3.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.distribution.FDistribution;
import org.apache.commons.math3.random.Well44497a;
import org.apache.commons.math3.random.Well512a;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;


public class FDistribution_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FDistribution fDistribution0 = new FDistribution(742.733, 742.733);
      // Undeclared exception!
      fDistribution0.sample(121);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FDistribution fDistribution0 = new FDistribution(1113.374049239116, 1113.374049239116);
      boolean boolean0 = fDistribution0.isSupportUpperBoundInclusive();
      assertEquals(1.0017995741410097, fDistribution0.getNumericalMean(), 0.01);
      assertEquals(1113.374049239116, fDistribution0.getNumeratorDegreesOfFreedom(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FDistribution fDistribution0 = new FDistribution(4229.0, 4229.0);
      boolean boolean0 = fDistribution0.isSupportLowerBoundInclusive();
      assertEquals(1.0004731488052994, fDistribution0.getNumericalMean(), 0.01);
      assertFalse(boolean0);
      assertEquals(4229.0, fDistribution0.getNumeratorDegreesOfFreedom(), 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int[] intArray0 = new int[2];
      Well512a well512a0 = new Well512a(intArray0);
      FDistribution fDistribution0 = new FDistribution(well512a0, 986, 1.0, (-3816));
      double double0 = fDistribution0.density(986);
      assertEquals(1.2875500631233312E-5, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FDistribution fDistribution0 = null;
      try {
        fDistribution0 = new FDistribution((-1412.671568995802), 2.3686132431030273);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // degrees of freedom (-1,412.672)
         //
         verifyException("org.apache.commons.math3.distribution.FDistribution", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Well44497a well44497a0 = new Well44497a(0L);
      FDistribution fDistribution0 = null;
      try {
        fDistribution0 = new FDistribution(well44497a0, 992.1402056, (-1848.330921632935), 0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // degrees of freedom (-1,848.331)
         //
         verifyException("org.apache.commons.math3.distribution.FDistribution", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FDistribution fDistribution0 = new FDistribution(0.5984715223312378, 0.5984715223312378);
      double double0 = fDistribution0.sample();
      assertEquals(Double.NaN, fDistribution0.getNumericalMean(), 0.01);
      assertEquals(334.09061607348616, double0, 0.01);
  }
}
