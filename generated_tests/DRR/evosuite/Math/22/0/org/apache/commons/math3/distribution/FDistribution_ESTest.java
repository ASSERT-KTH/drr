/*
 * This file was automatically generated by EvoSuite
 * Sun Jun 23 16:35:08 GMT 2019
 */

package org.apache.commons.math3.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.distribution.FDistribution;
import org.apache.commons.math3.random.Well512a;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;


public class FDistribution_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FDistribution fDistribution0 = new FDistribution(1092.5791, 1092.5791, Double.NaN);
      boolean boolean0 = fDistribution0.isSupportUpperBoundInclusive();
      assertFalse(boolean0);
      assertEquals(1.001833888069192, fDistribution0.getNumericalMean(), 0.01);
      assertEquals(1092.5791, fDistribution0.getNumeratorDegreesOfFreedom(), 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FDistribution fDistribution0 = new FDistribution(1869.94035, 0.5);
      boolean boolean0 = fDistribution0.isSupportLowerBoundInclusive();
      assertEquals(0.5, fDistribution0.getDenominatorDegreesOfFreedom(), 0.01);
      assertEquals(1869.94035, fDistribution0.getNumeratorDegreesOfFreedom(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FDistribution fDistribution0 = new FDistribution(775.2669, 192.6);
      double double0 = fDistribution0.density(775.2669);
      assertEquals(9.271672412081055E-235, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FDistribution fDistribution0 = null;
      try {
        fDistribution0 = new FDistribution(0.0, 0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // degrees of freedom (0)
         //
         verifyException("org.apache.commons.math3.distribution.FDistribution", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Well512a well512a0 = new Well512a(336);
      FDistribution fDistribution0 = null;
      try {
        fDistribution0 = new FDistribution(well512a0, 336, (-1124.1248138), 69.5123515561);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // degrees of freedom (-1,124.125)
         //
         verifyException("org.apache.commons.math3.distribution.FDistribution", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FDistribution fDistribution0 = new FDistribution(Double.NaN, Double.NaN, Double.NaN);
      // Undeclared exception!
      try { 
        fDistribution0.sample();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [0, 1], values: [-0.903, \uFFFD]
         //
         verifyException("org.apache.commons.math3.analysis.solvers.BrentSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FDistribution fDistribution0 = new FDistribution(171.67638054534, 171.67638054534);
      double double0 = fDistribution0.getNumericalVariance();
      assertEquals(Double.POSITIVE_INFINITY, fDistribution0.getSupportUpperBound(), 0.01);
      assertEquals(0.024278915889943704, double0, 0.01);
      
      double double1 = fDistribution0.sample();
      assertEquals(1.011787144407324, fDistribution0.getNumericalMean(), 0.01);
      assertEquals(1.219424467582335, double1, 0.01);
      assertTrue(fDistribution0.isSupportConnected());
  }
}
