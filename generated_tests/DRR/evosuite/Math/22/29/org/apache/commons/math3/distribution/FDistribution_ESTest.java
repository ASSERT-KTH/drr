/*
 * This file was automatically generated by EvoSuite
 * Sun Jun 23 16:52:40 GMT 2019
 */

package org.apache.commons.math3.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.distribution.FDistribution;
import org.apache.commons.math3.random.Well19937c;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;


public class FDistribution_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FDistribution fDistribution0 = new FDistribution(6206.5801, 6206.5801, 1258.37901323);
      assertEquals(Double.POSITIVE_INFINITY, fDistribution0.getSupportUpperBound(), 0.01);
      
      double double0 = fDistribution0.sample();
      assertEquals(1.0003223425224215, fDistribution0.getNumericalMean(), 0.01);
      assertEquals(1.0776599094895696, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FDistribution fDistribution0 = new FDistribution(1376.677431025469, 1376.677431025469);
      boolean boolean0 = fDistribution0.isSupportUpperBoundInclusive();
      assertFalse(boolean0);
      assertEquals(1376.677431025469, fDistribution0.getNumeratorDegreesOfFreedom(), 0.01);
      assertEquals(1376.677431025469, fDistribution0.getDenominatorDegreesOfFreedom(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c(3276L);
      FDistribution fDistribution0 = new FDistribution(well19937c0, 3276L, 673.0, 3276L);
      boolean boolean0 = fDistribution0.isSupportLowerBoundInclusive();
      assertEquals(3276.0, fDistribution0.getNumeratorDegreesOfFreedom(), 0.01);
      assertEquals(673.0, fDistribution0.getDenominatorDegreesOfFreedom(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FDistribution fDistribution0 = new FDistribution(4710.19, 1995.976);
      double double0 = fDistribution0.density(4710.19);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FDistribution fDistribution0 = null;
      try {
        fDistribution0 = new FDistribution((-669.5987703477673), (-669.5987703477673));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // degrees of freedom (-669.599)
         //
         verifyException("org.apache.commons.math3.distribution.FDistribution", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FDistribution fDistribution0 = null;
      try {
        fDistribution0 = new FDistribution(2038.6, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // degrees of freedom (0)
         //
         verifyException("org.apache.commons.math3.distribution.FDistribution", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FDistribution fDistribution0 = new FDistribution(1.9653234116333892E-184, 1.9653234116333892E-184, 1.9653234116333892E-184);
      // Undeclared exception!
      fDistribution0.sample(57);
  }
}
