/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 03 21:01:49 GMT 2019
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.function.Asinh;
import org.apache.commons.math.analysis.function.Atan;
import org.apache.commons.math.analysis.function.Ceil;
import org.apache.commons.math.analysis.function.Cos;
import org.apache.commons.math.analysis.function.Gaussian;
import org.apache.commons.math.analysis.function.Signum;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.IllinoisSolver;
import org.apache.commons.math.analysis.solvers.PegasusSolver;
import org.apache.commons.math.analysis.solvers.RegulaFalsiSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

 
public class BaseSecantSolver_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1690.5265977594438), (-8.68878));
      Atan atan0 = new Atan();
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      illinoisSolver0.solve(651914164, (UnivariateRealFunction) atan0, (-5064.235423846632), 0.087, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver((-2786.089));
      Cos cos0 = new Cos();
      double double0 = pegasusSolver0.solve(24, (UnivariateRealFunction) cos0, (-2786.089), (double) 24);
      assertEquals(24.0, pegasusSolver0.getMax(), 0.01);
      assertEquals((-2175.5529126109323), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(851.91567, 851.91567, 851.91567);
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = regulaFalsiSolver0.solve(2310, (UnivariateRealFunction) signum0, (-259.2263824), 851.91567, allowedSolution0);
      assertEquals(851.91567, regulaFalsiSolver0.getMax(), 0.01);
      assertEquals(296.3446438, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(0.0, 0.0);
      Ceil ceil0 = new Ceil();
      double double0 = regulaFalsiSolver0.solve(473, (UnivariateRealFunction) ceil0, 0.0, 0.0, (double) 473);
      assertEquals(473.0, regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver(1139.94547336, 1139.94547336);
      Gaussian gaussian0 = new Gaussian();
      pegasusSolver0.setup(543, gaussian0, 0.0, 187.869, 1139.94547336);
      double double0 = pegasusSolver0.doSolve();
      assertEquals(187.869, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(0.0, 0.0, (-1721.21));
      Asinh asinh0 = new Asinh();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = regulaFalsiSolver0.solve(2047, (UnivariateRealFunction) asinh0, (-1721.21), (double) 2047, 1186.07260627, allowedSolution0);
      assertEquals(2047.0, regulaFalsiSolver0.getMax(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(851.91567, 851.91567, 851.91567);
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = regulaFalsiSolver0.solve(2306, (UnivariateRealFunction) signum0, (-252.4298713266973), 851.91567, allowedSolution0);
      assertEquals(299.7428993366513, regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals((-252.4298713266973), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(851.91567, 851.91567, 851.91567);
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = regulaFalsiSolver0.solve(2310, (UnivariateRealFunction) signum0, (-259.0361505363684), 851.91567, allowedSolution0);
      assertEquals(851.91567, regulaFalsiSolver0.getMax(), 0.01);
      assertEquals(296.4397597318158, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1029033.6339198482, 1029033.6339198482, 1029033.6339198482);
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = regulaFalsiSolver0.solve(152, (UnivariateRealFunction) signum0, (-84.796350562), 1029033.6339198482, allowedSolution0);
      assertEquals(1029033.6339198482, regulaFalsiSolver0.getMax(), 0.01);
      assertEquals((-84.796350562), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(851.91567, 851.91567, 851.91567);
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = regulaFalsiSolver0.solve(2306, (UnivariateRealFunction) signum0, (-1245.143314216753), 851.91567, allowedSolution0);
      assertEquals((-196.61382210837655), regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals((-196.61382210837644), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(851.91567, 851.91567, 851.91567);
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = regulaFalsiSolver0.solve(2306, (UnivariateRealFunction) signum0, (-2090.15), 851.91567, allowedSolution0);
      assertEquals(851.91567, regulaFalsiSolver0.getMax(), 0.01);
      assertEquals(851.91567, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.0, 1.0, 1.0);
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = regulaFalsiSolver0.solve(2310, (UnivariateRealFunction) signum0, (-259.2263824), 1.0, allowedSolution0);
      assertEquals(1.0, regulaFalsiSolver0.getMax(), 0.01);
      assertEquals((-129.1131912), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(851.91567, 851.91567, 851.91567);
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = regulaFalsiSolver0.solve(2283, (UnivariateRealFunction) signum0, (-983.08688), 851.91567, allowedSolution0);
      assertEquals(851.91567, regulaFalsiSolver0.getMax(), 0.01);
      assertEquals(851.91567, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.2238432100901486, 1.2238432100901486);
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = regulaFalsiSolver0.solve(2310, (UnivariateRealFunction) signum0, (-259.2263824), 1.2238432100901486, allowedSolution0);
      assertEquals(1.2238432100901486, regulaFalsiSolver0.getMax(), 0.01);
      assertEquals((-129.00126959495492), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.0E-6, 1.0E-6);
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = regulaFalsiSolver0.solve(2310, (UnivariateRealFunction) signum0, (-259.2263824), 1.0E-6, allowedSolution0);
      assertEquals((-129.6131907), regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals(3.4306468814611484E-8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.0E-6, 1.0E-6);
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = regulaFalsiSolver0.solve(2310, (UnivariateRealFunction) signum0, (-157.375), (double) 2310, (-5277.44), allowedSolution0);
      assertEquals(2310.0, regulaFalsiSolver0.getMax(), 0.01);
      assertEquals((-2.1982123143970966E-7), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.0E-6, 1.0E-6);
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = regulaFalsiSolver0.solve(2310, (UnivariateRealFunction) signum0, (-259.2263824), 1.0E-6, allowedSolution0);
      assertEquals((-129.6131907), regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals(3.4306468814611484E-8, double0, 0.01);
  }
}
