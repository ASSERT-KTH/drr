/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 10 22:54:38 GMT 2017
 */

package org.apache.commons.math.ode.nonstiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math.ode.TestProblem5;
import org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator;
import org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator;
import org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator;
import org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math.ode.nonstiff.HighamHall54Integrator;
import org.apache.commons.math.ode.nonstiff.StepProblem;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

public class AdaptiveStepsizeIntegrator_ESTest  {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 100.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(100.0, 2570.451309854285, doubleArray0, doubleArray0);
      StepProblem stepProblem0 = new StepProblem(299.0, 100.0, 2570.451309854285);
      graggBulirschStoerIntegrator0.addEventHandler(stepProblem0, (-2828.113072), (-143.627907179), (-1914));
      graggBulirschStoerIntegrator0.integrate(stepProblem0, 386, doubleArray0, (-1593.536333674717), doubleArray0);
      assertEquals(38, graggBulirschStoerIntegrator0.getEvaluations());
  }

  ////@Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-1147.0), 0.01, (-26.041666666666668), 0.0);
      StepProblem stepProblem0 = new StepProblem(0.0, 240.317167507186, 0.01);
      try { 
        highamHall54Integrator0.integrate(stepProblem0, 0.0, doubleArray0, 976.680922582883, doubleArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // minimal step size (1.15E03) reached, integration needs 1.00E-01
         //
         verifyException("org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2288.95), (-2288.95), (-2288.95), (-2288.95));
      double double0 = graggBulirschStoerIntegrator0.filterStep((-2288.95), true, true);
      assertEquals(2288.95, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals((-2288.95), double0, 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AdamsMoultonIntegrator adamsMoultonIntegrator0 = new AdamsMoultonIntegrator(10, (double) 10, (-1318.67), (double) 10, (-1318.67));
      TestProblem5 testProblem5_0 = new TestProblem5();
      double[] doubleArray0 = new double[7];
      adamsMoultonIntegrator0.setInitialStepSize(10.0);
      double double0 = adamsMoultonIntegrator0.initializeStep(testProblem5_0, true, 10, doubleArray0, 10.0, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      assertEquals(114.83335752297762, adamsMoultonIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(10.0, double0, 0.01);
      assertEquals(Double.NaN, adamsMoultonIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1070.8801, (-9.332130526430229), (-2041.0822795), (-2041.0822795));
      TestProblem5 testProblem5_0 = new TestProblem5();
      double[] doubleArray0 = new double[2];
      graggBulirschStoerIntegrator0.sanityChecks(testProblem5_0, Double.NaN, doubleArray0, 1070.8801, doubleArray0);
      assertEquals(99.96795922372657, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(1.0E-6, 960.71159869824, (-5899.9575486029), (-5899.9575486029));
      dormandPrince54Integrator0.resetInternalState();
      assertEquals(Double.NaN, dormandPrince54Integrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.03099534801705314, dormandPrince54Integrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = new double[5];
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(0.0, 100.0, doubleArray0, doubleArray1);
      double double0 = dormandPrince853Integrator0.getMinStep();
      assertEquals(Double.NaN, dormandPrince853Integrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.0, dormandPrince853Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(100.0, dormandPrince853Integrator0.getMaxStep(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-59.01644871084), (-59.01644871084), doubleArray0, doubleArray0);
      double double0 = graggBulirschStoerIntegrator0.getMinStep();
      assertEquals(59.01644871084, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals((-59.01644871084), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(542.224482333, 0.0, doubleArray0, doubleArray0);
      double double0 = dormandPrince853Integrator0.getMaxStep();
      assertEquals(542.224482333, dormandPrince853Integrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, dormandPrince853Integrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.0, dormandPrince853Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(3664.47572, (-2093.04938739932), doubleArray0, doubleArray0);
      double double0 = highamHall54Integrator0.getMaxStep();
      assertEquals(3664.47572, highamHall54Integrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, highamHall54Integrator0.getCurrentStepStart(), 0.01);
      assertEquals((-2093.04938739932), double0, 0.01);
      assertEquals(Double.NaN, highamHall54Integrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      double double0 = graggBulirschStoerIntegrator0.filterStep(7.4356, false, false);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  ////@Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-9.147934308113573), (-1444.21041), doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.sanityChecks((FirstOrderDifferentialEquations) null, (-9.147934308113573), doubleArray0, 0.0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.AbstractIntegrator", e);
      }
  }

  ////@Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(69.617990354, 69.617990354, (-1.3020833333333333), 0.75);
      TestProblem5 testProblem5_0 = new TestProblem5();
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(testProblem5_0, (-1.3020833333333333), (double[]) null, 31, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.AbstractIntegrator", e);
      }
  }

  ////@Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(248.0, (-0.05), doubleArray0, doubleArray0);
      StepProblem stepProblem0 = new StepProblem(248.0, 248.0, 100.0);
      double[] doubleArray1 = new double[8];
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.initializeStep(stepProblem0, true, 0, doubleArray1, 100.0, doubleArray1, doubleArray0, doubleArray1, doubleArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  ////@Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(3523.128422, 357.6391179106141, 357.6391179106141, 0.6931471805599453);
      try { 
        dormandPrince54Integrator0.filterStep(2288.95, false, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // minimal step size (3.52E03) reached, integration needs 2.29E03
         //
         verifyException("org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 2391.561636524276;
      doubleArray0[1] = (-906.377);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-906.377), 2391.561636524276, doubleArray0, doubleArray0);
      TestProblem5 testProblem5_0 = new TestProblem5();
      graggBulirschStoerIntegrator0.integrate(testProblem5_0, (-2570.0275980139636), doubleArray0, (-2683.645693703537), doubleArray0);
      double double0 = graggBulirschStoerIntegrator0.initializeStep(testProblem5_0, false, 1287, doubleArray0, 10.06766199577777, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {(-4.790173670915683E52), 1.8154260275028718E52}, doubleArray0, 0.01);
      assertEquals((-0.9961598834166373), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TestProblem5 testProblem5_0 = new TestProblem5();
      double[] doubleArray0 = new double[7];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(431.9019, 3.0, doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.initializeStep(testProblem5_0, true, 4334, doubleArray0, 2.4936055526796523, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(0.01, 0.01, 0.01, 0.01);
      StepProblem stepProblem0 = new StepProblem(0.01, (-587.573522), (-587.573522));
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        dormandPrince853Integrator0.initializeStep(stepProblem0, true, (-2608), doubleArray0, 0.01, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AdamsMoultonIntegrator adamsMoultonIntegrator0 = new AdamsMoultonIntegrator(10, (double) 10, (-1318.67), (double) 10, (-1318.67));
      TestProblem5 testProblem5_0 = new TestProblem5();
      double[] doubleArray0 = new double[7];
      adamsMoultonIntegrator0.setInitialStepSize(10.0);
      double double0 = adamsMoultonIntegrator0.initializeStep(testProblem5_0, false, 10, doubleArray0, 10.0, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      assertEquals((-10.0), double0, 0.01);
      assertEquals(Double.NaN, adamsMoultonIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(114.83335752297762, adamsMoultonIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-1180.9661507218318), 336.0865021495752, (-3022.865112782351), (-3022.865112782351));
      double double0 = dormandPrince54Integrator0.getMinStep();
      assertEquals(630.0053831144211, dormandPrince54Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1180.9661507218318, double0, 0.01);
      assertEquals(Double.NaN, dormandPrince54Integrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(1.0E-6, 960.71159869824, (-5899.9575486029), (-5899.9575486029));
      double double0 = dormandPrince54Integrator0.getMaxStep();
      assertEquals(0.03099534801705314, dormandPrince54Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(960.71159869824, double0, 0.01);
      assertEquals(Double.NaN, dormandPrince54Integrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator((-8.44889721677438), (-8.44889721677438), (-8.44889721677438), (-8.44889721677438));
      double double0 = dormandPrince853Integrator0.filterStep(0.0, true, true);
      assertEquals(Double.NaN, dormandPrince853Integrator0.getCurrentStepStart(), 0.01);
      assertEquals(8.44889721677438, dormandPrince853Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(8.44889721677438, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(5369.3915442912985, 5369.3915442912985, 5369.3915442912985, 5369.3915442912985);
      StepProblem stepProblem0 = new StepProblem(5369.3915442912985, 5369.3915442912985, 1336.0608527);
      double[] doubleArray0 = new double[1];
      graggBulirschStoerIntegrator0.integrate(stepProblem0, 1336.0608527, doubleArray0, 5369.3915442912985, doubleArray0);
      double[] doubleArray1 = new double[6];
      double double0 = graggBulirschStoerIntegrator0.initializeStep(stepProblem0, false, (-807), doubleArray0, 1336.0608527, doubleArray0, doubleArray1, doubleArray1, doubleArray0);
      assertEquals(9, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals((-5369.3915442912985), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 100.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(100.0, 2570.451309854285, doubleArray0, doubleArray0);
      StepProblem stepProblem0 = new StepProblem(299.0, 100.0, 2570.451309854285);
      graggBulirschStoerIntegrator0.integrate(stepProblem0, 2570.451309854285, doubleArray0, 1.0E-15, doubleArray0);
      graggBulirschStoerIntegrator0.integrate(stepProblem0, 386, doubleArray0, 900.478046763693, doubleArray0);
      assertArrayEquals(new double[] {(-614636.0056640869)}, doubleArray0, 0.01);
      assertEquals(15, graggBulirschStoerIntegrator0.getEvaluations());
  }

  ////@Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(100.0, 2570.451309854285, doubleArray0, doubleArray0);
      StepProblem stepProblem0 = new StepProblem(299.0, 100.0, 2570.451309854285);
      graggBulirschStoerIntegrator0.setInitialStepSize(855.912242474479);
      try { 
        graggBulirschStoerIntegrator0.integrate(stepProblem0, 366, doubleArray0, (-1593.536333674717), doubleArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // minimal step size (1.00E02) reached, integration needs 5.35E01
         //
         verifyException("org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  ////@Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double[] doubleArray1 = new double[2];
      StepProblem stepProblem0 = new StepProblem((-1147.0), 240.317167507186, 0.01);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1147.0), (-29.227195169889825), doubleArray1, doubleArray0);
      try { 
        graggBulirschStoerIntegrator0.sanityChecks(stepProblem0, 2.0779220779220777, doubleArray0, 1.6643771824549864, doubleArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // dimensions mismatch: state vector has dimension 1, absolute tolerance vector has dimension 2
         //
         verifyException("org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(5349.41, 5349.41, 5349.41, 5349.41);
      StepProblem stepProblem0 = new StepProblem(5349.41, 5349.41, 1336.0608527);
      double[] doubleArray0 = new double[1];
      graggBulirschStoerIntegrator0.integrate(stepProblem0, 1336.0608527, doubleArray0, 5349.41, doubleArray0);
      double double0 = graggBulirschStoerIntegrator0.initializeStep(stepProblem0, true, (-807), doubleArray0, 1336.0608527, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      assertEquals(4013.3491473, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(5349.41, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-1225.7870005847055), (-1225.7870005847055), doubleArray0, doubleArray0);
      dormandPrince54Integrator0.setInitialStepSize(0.0);
      assertEquals(1225.7870005847055, dormandPrince54Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, dormandPrince54Integrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(3523.128422, 357.6391179106141, 357.6391179106141, 0.6931471805599453);
      dormandPrince54Integrator0.setInitialStepSize(357.6391179106141);
      assertEquals(Double.NaN, dormandPrince54Integrator0.getCurrentStepStart(), 0.01);
      assertEquals(1122.501020547373, dormandPrince54Integrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-1147.0), (-1147.0), (-1147.0), (-1147.0));
      double double0 = dormandPrince54Integrator0.getCurrentStepStart();
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(1147.0, dormandPrince54Integrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator((-8.44889721677438), (-8.44889721677438), (-8.44889721677438), (-8.44889721677438));
      dormandPrince853Integrator0.setInitialStepSize(8.44889721677438);
      StepProblem stepProblem0 = new StepProblem((-8.44889721677438), (-587.573522), 0.0);
      double[] doubleArray0 = new double[6];
      double double0 = dormandPrince853Integrator0.initializeStep(stepProblem0, true, (-1073741824), doubleArray0, (-587.573522), doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      assertEquals(8.44889721677438, double0, 0.01);
      assertEquals(Double.NaN, dormandPrince853Integrator0.getCurrentStepStart(), 0.01);
      assertEquals(8.44889721677438, dormandPrince853Integrator0.getCurrentSignedStepsize(), 0.01);
  }
}
