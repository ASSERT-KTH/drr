/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 10 16:51:28 GMT 2017
 */

package org.apache.commons.math.ode.nonstiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math.ode.TestProblem5;
import org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator;
import org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator;
import org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator;
import org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math.ode.nonstiff.HighamHall54Integrator;
import org.apache.commons.math.ode.nonstiff.StepProblem;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

public class AdaptiveStepsizeIntegrator_ESTest  {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(84.62331999448358, 84.62331999448358, 1.0E-12, 1.0E-12);
      double double0 = highamHall54Integrator0.filterStep(84.62331999448358, true, true);
      assertEquals(84.62331999448358, double0, 0.01);
      assertEquals(Double.NaN, highamHall54Integrator0.getCurrentStepStart(), 0.01);
      assertEquals(84.62331999448358, highamHall54Integrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-5588.113870368137), 230.0, doubleArray0, doubleArray0);
      StepProblem stepProblem0 = new StepProblem(551636.0, 0.0, (-5588.113870368137));
      dormandPrince54Integrator0.setInitialStepSize(0.0);
      // Undeclared exception!
      try { 
        dormandPrince54Integrator0.initializeStep(stepProblem0, true, (-1), doubleArray0, (-3320.308), doubleArray0, doubleArray0, doubleArray0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator((-3171.8391670165), (-3171.8391670165), doubleArray0, doubleArray0);
      dormandPrince853Integrator0.setInitialStepSize((-3171.8391670165));
      assertEquals(3171.8391670165, dormandPrince853Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, dormandPrince853Integrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-2742.682), (-1135.0), doubleArray0, doubleArray0);
      StepProblem stepProblem0 = new StepProblem((-220.71), 715.1865139342, 715.1865139342);
      dormandPrince54Integrator0.sanityChecks(stepProblem0, (-1611.1768336344), doubleArray0, 653.97054484054, doubleArray0);
      assertEquals(Double.NaN, dormandPrince54Integrator0.getCurrentStepStart(), 0.01);
      assertEquals(1764.353725872451, dormandPrince54Integrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-3.75), (-11.595793324188385), 2.4936055526796523, (-11.595793324188385));
      graggBulirschStoerIntegrator0.resetInternalState();
      assertEquals(6.594256968431428, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 248.266272332312;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(248.266272332312, 248.266272332312, doubleArray0, doubleArray0);
      StepProblem stepProblem0 = new StepProblem(1.0E-15, 248.266272332312, 0.0);
      graggBulirschStoerIntegrator0.integrate(stepProblem0, 4239.0, doubleArray0, 248.266272332312, doubleArray0);
      assertArrayEquals(new double[] {248.26627233230838}, doubleArray0, 0.01);
      assertEquals(248.266272332312, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, Double.NaN, 441.997637);
      double double0 = graggBulirschStoerIntegrator0.getMinStep();
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-5588.113870368137), 230.0, doubleArray0, doubleArray0);
      double double0 = dormandPrince54Integrator0.getMinStep();
      assertEquals(230.0, dormandPrince54Integrator0.getMaxStep(), 0.01);
      assertEquals((-5588.113870368137), double0, 0.01);
      assertEquals(Double.NaN, dormandPrince54Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, dormandPrince54Integrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, Double.NaN, 441.997637);
      double double0 = graggBulirschStoerIntegrator0.getMaxStep();
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(512.751, (-1066.674759340278), doubleArray0, doubleArray0);
      double double0 = dormandPrince54Integrator0.getMaxStep();
      assertEquals(Double.NaN, dormandPrince54Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, dormandPrince54Integrator0.getCurrentStepStart(), 0.01);
      assertEquals((-1066.674759340278), double0, 0.01);
      assertEquals(512.751, dormandPrince54Integrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(0.0, 0.0, doubleArray0, doubleArray0);
      double double0 = dormandPrince853Integrator0.filterStep(3503.62624585, true, true);
      assertEquals(Double.NaN, dormandPrince853Integrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.0, dormandPrince853Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1796.9742891364, 8.72406186, 2464.644741555, 2464.644741555);
      double double0 = graggBulirschStoerIntegrator0.filterStep((-969), true, true);
      assertEquals(125.20748723321414, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(8.72406186, double0, 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-15, (-749.3794), (-749.3794), (-172.7700509711));
      double double0 = graggBulirschStoerIntegrator0.filterStep((-1.0), false, true);
      assertEquals(8.656670260556307E-7, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals((-1.0), double0, 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  ////@Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-957.1807880658073), 1329.0, doubleArray0, doubleArray0);
      TestProblem5 testProblem5_0 = new TestProblem5();
      try { 
        graggBulirschStoerIntegrator0.sanityChecks(testProblem5_0, 1329.0, doubleArray0, 1329.0, doubleArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // dimensions mismatch: ODE problem has dimension 2, initial state vector has dimension 0
         //
         verifyException("org.apache.commons.math.ode.AbstractIntegrator", e);
      }
  }

  ////@Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-2710.4066319644), 0.0, 0.0, 0.0);
      TestProblem5 testProblem5_0 = new TestProblem5();
      // Undeclared exception!
      try { 
        highamHall54Integrator0.sanityChecks(testProblem5_0, (-2615.5), (double[]) null, 0.0, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.AbstractIntegrator", e);
      }
  }

  ////@Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(1.0E-12, 69.504469485, doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        dormandPrince853Integrator0.integrate((FirstOrderDifferentialEquations) null, (-1722.4262), doubleArray0, 0.0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.AbstractIntegrator", e);
      }
  }

  ////@Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(2464.3543, 0.0, doubleArray0, doubleArray0);
      StepProblem stepProblem0 = new StepProblem(0.0, 2464.3543, 2613.010795);
      double[] doubleArray1 = new double[2];
      // Undeclared exception!
      try { 
        highamHall54Integrator0.initializeStep(stepProblem0, true, (-1), doubleArray1, 2613.010795, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  ////@Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(3936.079, 3936.079, 2384.86301412, 2384.86301412);
      try { 
        dormandPrince853Integrator0.filterStep(2384.86301412, false, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // minimal step size (3.94E03) reached, integration needs 2.38E03
         //
         verifyException("org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3643.496648, 2231.833, 3643.496648, 2231.833);
      StepProblem stepProblem0 = new StepProblem((-1.0), 2231.833, 2231.833);
      double[] doubleArray0 = new double[1];
      graggBulirschStoerIntegrator0.integrate(stepProblem0, (-2280.92295061), doubleArray0, (-0.4056513826321985), doubleArray0);
      double double0 = graggBulirschStoerIntegrator0.initializeStep(stepProblem0, true, (-1128), doubleArray0, 3643.496648, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      assertEquals(1.8318679906315083E-15, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(2231.833, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(1060.26876846651, 1060.26876846651, 0.0, (-2755.0852575));
      TestProblem5 testProblem5_0 = new TestProblem5();
      double[] doubleArray0 = new double[5];
      // Undeclared exception!
      try { 
        dormandPrince853Integrator0.initializeStep(testProblem5_0, false, (-829), doubleArray0, (-3920.64199379064), doubleArray0, doubleArray0, doubleArray0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(4144.832714285714, 4144.832714285714, 4144.832714285714, 4239.0);
      double[] doubleArray0 = new double[1];
      double[] doubleArray1 = new double[0];
      // Undeclared exception!
      try { 
        dormandPrince853Integrator0.initializeStep((FirstOrderDifferentialEquations) null, true, 47689, doubleArray0, (-2717.22768631), doubleArray1, doubleArray0, doubleArray0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(284.1094, 284.1094, 284.1094, 4239.0);
      double double0 = dormandPrince853Integrator0.getMinStep();
      assertEquals(284.1094, double0, 0.01);
      assertEquals(284.1094, dormandPrince853Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, dormandPrince853Integrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator((-2030.05), (-2030.05), 58.3684969519, 1.0E-15);
      double double0 = dormandPrince853Integrator0.getMaxStep();
      assertEquals(Double.NaN, dormandPrince853Integrator0.getCurrentStepStart(), 0.01);
      assertEquals(2030.05, dormandPrince853Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(2030.05, double0, 0.01);
  }

  ////@Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AdamsBashforthIntegrator adamsBashforthIntegrator0 = new AdamsBashforthIntegrator(8, (double) 8, (double) 8, 16.0, 16.0);
      TestProblem5 testProblem5_0 = new TestProblem5();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 2714.62;
      try { 
        adamsBashforthIntegrator0.integrate(testProblem5_0, (-949.1487), doubleArray0, (-2806.9470168379), doubleArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // minimal step size (8.00E00) reached, integration needs 4.50E00
         //
         verifyException("org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-5588.113870368137), 230.0, doubleArray0, doubleArray0);
      StepProblem stepProblem0 = new StepProblem(551636.0, 0.0, (-5588.113870368137));
      dormandPrince54Integrator0.setInitialStepSize(2.0938199754234488E-7);
      double double0 = dormandPrince54Integrator0.initializeStep(stepProblem0, false, (-1), doubleArray0, (-3320.3081880937), doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      assertEquals((-5588.113870368137), dormandPrince54Integrator0.getMinStep(), 0.01);
      assertEquals(230.0, dormandPrince54Integrator0.getMaxStep(), 0.01);
      assertEquals((-2.0938199754234488E-7), double0, 0.01);
      assertEquals(Double.NaN, dormandPrince54Integrator0.getCurrentStepStart(), 0.01);
      assertEquals(Double.NaN, dormandPrince54Integrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-5588.113870368137), 230.0, doubleArray0, doubleArray0);
      StepProblem stepProblem0 = new StepProblem(551636.0, 0.0, (-5588.113870368137));
      dormandPrince54Integrator0.setInitialStepSize(2.0938199754234488E-7);
      double double0 = dormandPrince54Integrator0.initializeStep(stepProblem0, true, (-1), doubleArray0, (-3320.3081880937), doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      assertEquals(2.0938199754234488E-7, double0, 0.01);
      assertEquals(Double.NaN, dormandPrince54Integrator0.getCurrentStepStart(), 0.01);
      assertEquals(Double.NaN, dormandPrince54Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(230.0, dormandPrince54Integrator0.getMaxStep(), 0.01);
      assertEquals((-5588.113870368137), dormandPrince54Integrator0.getMinStep(), 0.01);
  }

  ////@Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(100.0, 100.0, doubleArray0, doubleArray0);
      StepProblem stepProblem0 = new StepProblem(45.0, 45.0, 0.001);
      double[] doubleArray1 = new double[1];
      try { 
        graggBulirschStoerIntegrator0.integrate(stepProblem0, (-72.7876910366), doubleArray1, (-1562.0535353063515), doubleArray1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // dimensions mismatch: state vector has dimension 1, absolute tolerance vector has dimension 7
         //
         verifyException("org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3643.496648, 2231.833, 3643.496648, 2231.833);
      StepProblem stepProblem0 = new StepProblem((-1.0), 0.08091123139307155, 2231.833);
      double[] doubleArray0 = new double[1];
      graggBulirschStoerIntegrator0.integrate(stepProblem0, (-2280.92295061), doubleArray0, 1.0E-12, doubleArray0);
      double double0 = graggBulirschStoerIntegrator0.initializeStep(stepProblem0, false, (-1128), doubleArray0, 3643.496648, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      assertEquals(16, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals((-2231.833), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AdamsBashforthIntegrator adamsBashforthIntegrator0 = new AdamsBashforthIntegrator(8, (double) 8, (double) 8, 16.0, 16.0);
      adamsBashforthIntegrator0.setInitialStepSize(2714.62);
      assertEquals(8.0, adamsBashforthIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, adamsBashforthIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-3.75), (-11.595793324188385), 2.4936055526796523, (-11.595793324188385));
      graggBulirschStoerIntegrator0.setInitialStepSize((-434.45));
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(6.594256968431428, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(100.0, 100.0, doubleArray0, doubleArray0);
      double double0 = graggBulirschStoerIntegrator0.getCurrentStepStart();
      assertEquals(100.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(284.1094, 284.1094, 284.1094, 4239.0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) (-1579);
      double[] doubleArray1 = new double[2];
      // Undeclared exception!
      try { 
        dormandPrince853Integrator0.initializeStep((FirstOrderDifferentialEquations) null, true, 47661, doubleArray0, (-2717.22768631), doubleArray0, doubleArray1, doubleArray1, doubleArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
