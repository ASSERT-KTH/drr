/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 16 23:47:17 GMT 2017
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.geom.Arc2D;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.ConvolveOp;
import java.awt.image.Kernel;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.JViewport;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.renderer.LookupPaintScale;
import org.jfree.chart.renderer.PaintScale;
import org.jfree.chart.renderer.WaferMapRenderer;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.XYBlockRenderer;
import org.jfree.chart.renderer.xy.XYLine3DRenderer;
import org.jfree.chart.text.TextBox;
import org.jfree.chart.title.PaintScaleLegend;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.ValueDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.time.DateRange;
import org.jfree.data.time.FixedMillisecond;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

public class AbstractCategoryItemRenderer_ESTest  {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-2104.9784491156524), (-2104.9784491156524));
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      StandardEntityCollection standardEntityCollection0 = (StandardEntityCollection)categoryStepRenderer_State0.getEntityCollection();
      double[][] doubleArray0 = new double[9][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      barRenderer3D0.addEntity(standardEntityCollection0, categoryStepRenderer_State0.line, defaultIntervalCategoryDataset0, 2, 2, false);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation((Comparable) 0.2, 0.0, (Comparable) stackedBarRenderer0.ZERO, (-4689.14334), stackedBarRenderer0.DEFAULT_PAINT, stackedBarRenderer0.DEFAULT_OUTLINE_STROKE);
      stackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
      assertEquals(2.0, stackedBarRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ValueAxis valueAxis0 = stackedBarRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 3);
      assertNull(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      DateAxis dateAxis0 = new DateAxis();
      dateAxis0.setAutoTickUnitSelection(false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) dateAxis0);
      DateAxis dateAxis1 = (DateAxis)defaultCategoryItemRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 1575);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) dateAxis0);
      dateAxis0.resizeRange(2464.8);
      DateAxis dateAxis1 = (DateAxis)defaultCategoryItemRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 1575);
      assertNull(dateAxis1.getLabel());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPlot categoryPlot0 = lineRenderer3D0.getPlot();
      assertNull(categoryPlot0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = boxAndWhiskerRenderer0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      LegendItem legendItem0 = groupedStackedBarRenderer0.getLegendItem((-2129), (-4630));
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedBarRenderer0.getItemLabelGenerator(1856, 1856, false);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis categoryAxis0 = scatterRenderer0.getDomainAxis(categoryPlot0, (CategoryDataset) null);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, (double) 2.0F, (String) null);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultMultiValueCategoryDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) groupedStackedBarRenderer0);
      CategoryAxis3D categoryAxis3D1 = (CategoryAxis3D)levelRenderer0.getDomainAxis(categoryPlot0, defaultMultiValueCategoryDataset0);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      boolean boolean0 = categoryStepRenderer0.equals("Null 'anchor' argument.");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = stackedBarRenderer3D0.createState(plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
  }

  //@Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setSeriesURLGenerator((-3016), (CategoryURLGenerator) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  //@Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.setSeriesURLGenerator((-183), (CategoryURLGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  //@Test(timeout = 4000)
  public void test015()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, lineAndShapeRenderer0.DEFAULT_OUTLINE_PAINT, lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT, lineAndShapeRenderer0.DEFAULT_PAINT);
      Locale locale0 = Locale.CHINA;
      DecimalFormat decimalFormat0 = (DecimalFormat)NumberFormat.getCurrencyInstance(locale0);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("", (NumberFormat) decimalFormat0);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.setSeriesToolTipGenerator((-9999), (CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  //@Test(timeout = 4000)
  public void test016()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.setSeriesItemLabelGenerator((-1), (CategoryItemLabelGenerator) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  //@Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      // Undeclared exception!
      try { 
        scatterRenderer0.setSeriesItemLabelGenerator((-2143), (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  //@Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float(1.0F, 1.0F, 0.0F, 1.0F);
      Rectangle2D.Float rectangle2D_Float0 = (Rectangle2D.Float)line2D_Float0.getBounds2D();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.initialise((Graphics2D) null, rectangle2D_Float0, (CategoryPlot) null, defaultKeyedValues2DDataset0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  //@Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)chartPanel0.getScreenDataArea(15, 2000);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("d@-o&h\"@N9Dc>DKL@");
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        stackedBarRenderer0.hitTest((-1.0), (-1.0), (Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, extendedCategoryAxis0, (ValueAxis) null, defaultCategoryDataset0, 1024, 768, false, (CategoryItemRendererState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  //@Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.getRangeAxis((CategoryPlot) null, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  //@Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("ItemLabelGenerator not cloneable.");
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(913.17F, (float) 17, 0.0F, 0.0F);
      NumberAxis numberAxis0 = new NumberAxis("ItemLabelGenerator not cloneable.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) numberAxis0);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getDomainAxisEdge(703);
      // Undeclared exception!
      try { 
        scatterRenderer0.getItemMiddle(' ', "ItemLabelGenerator not cloneable.", defaultMultiValueCategoryDataset0, subCategoryAxis0, rectangle2D_Float0, rectangleEdge0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  //@Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      double[][] doubleArray0 = new double[8][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.getDomainAxis((CategoryPlot) null, defaultIntervalCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  //@Test(timeout = 4000)
  public void test023()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        lineRenderer3D0.getDomainAxis(combinedRangeCategoryPlot0, defaultMultiValueCategoryDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  //@Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      double[][] doubleArray0 = new double[5][6];
      double[] doubleArray1 = new double[1];
      doubleArray0[1] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  //@Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("=`0~v}w_DJ'6at");
      PeriodAxis periodAxis0 = new PeriodAxis("=`0~v}w_DJ'6at");
      // Undeclared exception!
      try { 
        scatterRenderer0.drawAnnotations((Graphics2D) null, (Rectangle2D) null, subCategoryAxis0, periodAxis0, (Layer) null, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  //@Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Arc2D.Double arc2D_Double0 = new Arc2D.Double(1);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity((EntityCollection) null, arc2D_Double0, (CategoryDataset) null, 1, 1, false, (-1025.9283740079181), (-2094.1310666));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  //@Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.addEntity(standardEntityCollection0, stackedBarRenderer3D0.DEFAULT_SHAPE, defaultCategoryDataset0, 771, 771, true, (-1828.51), (double) stackedBarRenderer3D0.ZERO);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 771, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  //@Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      double[][] doubleArray0 = new double[9][4];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, statisticalBarRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, (-477), 1626, true, (-2126.363356438922), (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  //@Test(timeout = 4000)
  public void test029()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      Color color0 = (Color)xYLine3DRenderer0.getWallPaint();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(lineRenderer3D0.DEFAULT_OUTLINE_PAINT, boxAndWhiskerRenderer0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, (Paint) color0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addEntity((EntityCollection) null, waterfallBarRenderer0.DEFAULT_SHAPE, defaultMultiValueCategoryDataset0, 7, 4, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 7, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  //@Test(timeout = 4000)
  public void test030()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-2104.9784491156524), (-2104.9784491156524));
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      StandardEntityCollection standardEntityCollection0 = (StandardEntityCollection)categoryStepRenderer_State0.getEntityCollection();
      double[][] doubleArray0 = new double[9][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        barRenderer3D0.addEntity(standardEntityCollection0, categoryStepRenderer_State0.line, defaultIntervalCategoryDataset0, 24, 24, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-388.4277276377), (-1523.23867584632));
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      LookupPaintScale lookupPaintScale0 = (LookupPaintScale)xYBlockRenderer0.getPaintScale();
      NumberAxis numberAxis0 = new NumberAxis();
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend((PaintScale) lookupPaintScale0, (ValueAxis) numberAxis0);
      Rectangle2D.Float rectangle2D_Float0 = (Rectangle2D.Float)paintScaleLegend0.getBounds();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        barRenderer3D0.addEntity(standardEntityCollection0, rectangle2D_Float0, defaultKeyedValues2DDataset0, (-97), 363, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //@Test(timeout = 4000)
  public void test032()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation((Comparable) 0.2, 0.2, (Comparable) 3.0, 2468.777, waterfallBarRenderer0.DEFAULT_PAINT, waterfallBarRenderer0.DEFAULT_OUTLINE_STROKE);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, (Layer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      DrawingSupplier drawingSupplier0 = statisticalLineAndShapeRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      Range range0 = stackedAreaRenderer0.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0, false);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultKeyedValues2DDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) stackedAreaRenderer0);
      CategoryItemRendererState categoryItemRendererState0 = stackedAreaRenderer0.initialise((Graphics2D) null, rectangle2D_Float0, categoryPlot0, defaultKeyedValues2DDataset0, (PlotRenderingInfo) null);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
  }

  //@Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) null, true);
      assertEquals(2, stackedAreaRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = intervalBarRenderer0.getURLGenerator(334, (-339), true);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DecimalFormat decimalFormat0 = (DecimalFormat)NumberFormat.getInstance(locale0);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("6m", (NumberFormat) decimalFormat0);
      intervalBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      assertTrue(intervalBarRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      Color color0 = (Color)textBox0.getOutlinePaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer((Paint) color0, (Paint) color0, (Paint) color0, (Paint) color0);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      waterfallBarRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlineStroke());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = categoryStepRenderer0.getToolTipGenerator(0, 0, false);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      stackedBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      assertEquals(4.0, stackedBarRenderer0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DecimalFormat decimalFormat0 = (DecimalFormat)NumberFormat.getInstance();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("java.util.RandomAccess", (NumberFormat) decimalFormat0);
      intervalBarRenderer0.setSeriesItemLabelGenerator(39, (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      assertEquals(4.0, intervalBarRenderer0.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 0.0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      stackedBarRenderer3D0.setPlot(categoryPlot0);
      assertEquals(12.0, BarRenderer3D.DEFAULT_X_OFFSET, 0.01);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = boxAndWhiskerRenderer0.getSeriesToolTipGenerator(0);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = scatterRenderer0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0, false);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity((EntityCollection) null, scatterRenderer0.DEFAULT_SHAPE, defaultKeyedValues2DDataset0, (-175), (-175), false, (double) scatterRenderer0.ZERO, (double) scatterRenderer0.ZERO);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      LegendItemCollection legendItemCollection0 = lineRenderer3D0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  //@Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("5v%}");
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, true);
      try { 
        scatterRenderer0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Base item URL generator not cloneable.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = (BoxAndWhiskerRenderer)boxAndWhiskerRenderer0.clone();
      assertTrue(boxAndWhiskerRenderer1.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 1, 1.0E8, 25.0, (ChartRenderingInfo) null);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      CategoryAxis categoryAxis0 = new CategoryAxis("Tv]");
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("Tv]", stringArray0);
      Layer layer0 = Layer.BACKGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      statisticalLineAndShapeRenderer0.drawAnnotations(sunGraphics2D0, rectangle0, categoryAxis0, symbolAxis0, layer0, plotRenderingInfo0);
      assertEquals(2.0F, categoryAxis0.getMinorTickMarkOutsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot((ValueDataset) null);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      scatterRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, (CategoryDataset) null, 3, 2, false, 2, (-1157.9562990621), false);
      assertEquals(2.0, scatterRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      barRenderer0.updateCrosshairValues((CategoryCrosshairState) null, 0.0F, 0.0F, 1237.434F, 0, 1237.434F, (-909.3215), plotOrientation0);
      assertTrue(barRenderer0.getAutoPopulateSeriesPaint());
  }

  //@Test(timeout = 4000)
  public void test054()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      // Undeclared exception!
      try { 
        barRenderer0.updateCrosshairValues((CategoryCrosshairState) null, (-1662.59F), (-1662.59F), 0.0F, 0, 1237.434F, (-909.3215), (PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  //@Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.0, 0.0, 0.0, (-5205), 14.0, 0.0, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      boolean boolean0 = lineRenderer3D0.equals(lineRenderer3D1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      assertTrue(lineRenderer3D1.equals((Object)lineRenderer3D0));
      
      lineRenderer3D1.setSeriesLinesVisible(1, true);
      boolean boolean0 = lineRenderer3D0.equals(lineRenderer3D1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Color color0 = Color.DARK_GRAY;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer((Paint) color0, (Paint) color0, (Paint) color0, (Paint) color0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-4956.2622268877));
      ThermometerPlot thermometerPlot0 = new ThermometerPlot((ValueDataset) defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      JViewport jViewport0 = new JViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      Point2D.Double point2D_Double0 = (Point2D.Double)waterfallBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, rectangle0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(4.0, point2D_Double0.y, 0.01);
  }

  //@Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1498.519599286876), 3.0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, cyclicNumberAxis0, intervalMarker0, rectangle2D_Float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedRangeXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(86, 5, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImageRenderingSource0.createGraphics2D();
      NumberAxis numberAxis0 = new NumberAxis("");
      float[] floatArray0 = new float[7];
      Kernel kernel0 = new Kernel(0, 0, floatArray0);
      ConvolveOp convolveOp0 = new ConvolveOp(kernel0, 61, sunGraphics2D0.hints);
      Rectangle rectangle0 = (Rectangle)convolveOp0.getBounds2D(bufferedImage0);
      IntervalMarker intervalMarker0 = new IntervalMarker((double) 10, (double) (-1));
      statisticalLineAndShapeRenderer0.drawRangeMarker(sunGraphics2D0, (CategoryPlot) null, numberAxis0, intervalMarker0, rectangle0);
      assertEquals(1, sunGraphics2D0.antialiasHint);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedRangeXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(86, 5, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImageRenderingSource0.createGraphics2D();
      NumberAxis numberAxis0 = new NumberAxis("");
      float[] floatArray0 = new float[7];
      Kernel kernel0 = new Kernel(0, 0, floatArray0);
      ConvolveOp convolveOp0 = new ConvolveOp(kernel0, 61, sunGraphics2D0.hints);
      Rectangle rectangle0 = (Rectangle)convolveOp0.getBounds2D(bufferedImage0);
      statisticalLineAndShapeRenderer0.drawRangeLine(sunGraphics2D0, (CategoryPlot) null, numberAxis0, rectangle0, 1963.271003965712, numberAxis0.DEFAULT_AXIS_LINE_PAINT, numberAxis0.DEFAULT_TICK_MARK_STROKE);
      assertFalse(rectangle0.isEmpty());
  }

  //@Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedRangeXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(86, 5, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImageRenderingSource0.createGraphics2D();
      NumberAxis numberAxis0 = new NumberAxis("");
      float[] floatArray0 = new float[7];
      Kernel kernel0 = new Kernel(0, 0, floatArray0);
      ConvolveOp convolveOp0 = new ConvolveOp(kernel0, 61, sunGraphics2D0.hints);
      Rectangle rectangle0 = (Rectangle)convolveOp0.getBounds2D(bufferedImage0);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.drawRangeLine(sunGraphics2D0, (CategoryPlot) null, numberAxis0, rectangle0, 0, numberAxis0.DEFAULT_AXIS_LINE_PAINT, numberAxis0.DEFAULT_TICK_MARK_STROKE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedRangeXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(86, 5, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImageRenderingSource0.createGraphics2D();
      NumberAxis numberAxis0 = new NumberAxis("");
      float[] floatArray0 = new float[7];
      Kernel kernel0 = new Kernel(0, 0, floatArray0);
      ConvolveOp convolveOp0 = new ConvolveOp(kernel0, 61, sunGraphics2D0.hints);
      Rectangle rectangle0 = (Rectangle)convolveOp0.getBounds2D(bufferedImage0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis0);
      stackedAreaRenderer0.drawDomainLine(sunGraphics2D0, combinedRangeCategoryPlot0, rectangle0, 0.0, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
      assertEquals((-8355712), sunGraphics2D0.pixel);
      assertEquals((-8355712), sunGraphics2D0.eargb);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) null);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      WaferMapDataset waferMapDataset0 = new WaferMapDataset((-339), 335);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0, waferMapRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart((Plot) waferMapPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(334, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryItemRendererState categoryItemRendererState0 = intervalBarRenderer0.initialise(sunGraphics2D0, rectangle0, combinedDomainCategoryPlot0, (CategoryDataset) null, (PlotRenderingInfo) null);
      assertEquals(0, intervalBarRenderer0.getColumnCount());
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
  }

  //@Test(timeout = 4000)
  public void test066()  throws Throwable  {
      JViewport jViewport0 = new JViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      DateRange dateRange0 = DateAxis.DEFAULT_DATE_RANGE;
      ModuloAxis moduloAxis0 = new ModuloAxis("ItemLabelGenerator not cloneable.", (Range) dateRange0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, (ValueAxis) moduloAxis0, (CategoryItemRenderer) layeredBarRenderer0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        barRenderer3D0.initialise((Graphics2D) null, rectangle0, categoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultKeyedValues2DDataset0, (CategoryAxis) categoryAxis3D0, (ValueAxis) cyclicNumberAxis0, (CategoryItemRenderer) stackedAreaRenderer0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      defaultKeyedValues2DDataset0.setValue(0.0, (Comparable) "({0}, {1}) = {2}", (Comparable) 0.2);
      statisticalBarRenderer0.initialise((Graphics2D) null, rectangle2D_Float0, categoryPlot0, defaultKeyedValues2DDataset0, (PlotRenderingInfo) null);
      assertEquals(1, statisticalBarRenderer0.getColumnCount());
  }

  //@Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      // Undeclared exception!
      try { 
        stackedBarRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      stackedBarRenderer0.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
      assertFalse(stackedBarRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("J,_qt#;[z8]kbsr", (Comparable) 8.0, (double) lineRenderer3D0.ZERO, 0.0);
      Layer layer0 = Layer.BACKGROUND;
      lineRenderer3D0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      assertTrue(lineRenderer3D0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation((Comparable) lineRenderer3D0.ZERO, 107.0, (Comparable) 12.0, 154.5, lineRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      defaultCategoryItemRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      assertFalse(defaultCategoryItemRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0, false);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertTrue(scatterRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setSeriesURLGenerator(43, (CategoryURLGenerator) null, false);
      assertEquals(8.0, BarRenderer3D.DEFAULT_Y_OFFSET, 0.01);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, false);
      assertTrue(categoryStepRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      TextBox textBox0 = new TextBox();
      Color color0 = (Color)textBox0.getOutlinePaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer((Paint) color0, (Paint) color0, (Paint) color0, (Paint) color0);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      waterfallBarRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      assertEquals(1.0, waterfallBarRenderer0.getMaximumBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = (StandardCategoryItemLabelGenerator)spiderWebPlot0.getLabelGenerator();
      defaultCategoryItemRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      assertTrue(defaultCategoryItemRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      stackedBarRenderer0.setSeriesItemLabelGenerator(3, (CategoryItemLabelGenerator) null, false);
      assertFalse(stackedBarRenderer0.getAutoPopulateSeriesFillPaint());
  }

  //@Test(timeout = 4000)
  public void test078()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      // Undeclared exception!
      try { 
        categoryStepRenderer0.setPlot((CategoryPlot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.0, (-1376.943570652986));
      barRenderer3D0.setSeriesURLGenerator(633, (CategoryURLGenerator) null);
      assertEquals(8.0, BarRenderer3D.DEFAULT_Y_OFFSET, 0.01);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryURLGenerator categoryURLGenerator0 = scatterRenderer0.getSeriesURLGenerator(234);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = groupedStackedBarRenderer0.getBaseItemLabelGenerator();
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
      assertTrue(scatterRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      int int0 = defaultCategoryItemRenderer0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setSeriesToolTipGenerator(1696, (CategoryToolTipGenerator) null);
      assertEquals(0, defaultCategoryItemRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      assertTrue(scatterRenderer0.getBaseShapesFilled());
  }

  //@Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.drawBackground((Graphics2D) null, combinedDomainCategoryPlot0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = scatterRenderer0.getSeriesItemLabelGenerator((-477));
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = boxAndWhiskerRenderer0.getLegendItemURLGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.removeAnnotations();
      assertTrue(levelRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      assertTrue(scatterRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryURLGenerator categoryURLGenerator0 = lineRenderer3D0.getBaseURLGenerator();
      assertNull(categoryURLGenerator0);
  }

  //@Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-4956.2622268877));
      ThermometerPlot thermometerPlot0 = new ThermometerPlot((ValueDataset) defaultValueDataset0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.addEntity((EntityCollection) null, thermometerPlot0.DEFAULT_LEGEND_ITEM_BOX, (CategoryDataset) null, 1, 1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.hashCode();
  }

  //@Test(timeout = 4000)
  public void test095()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-0.7853981633974483), 1937.411883, (double) lineAndShapeRenderer0.ZERO, (double) 0.0F);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Unrecognised title position.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) logarithmicAxis0);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge(500);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.getItemMiddle(fixedMillisecond0, fixedMillisecond0, (CategoryDataset) null, categoryAxis0, rectangle2D_Double0, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = scatterRenderer0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      assertFalse(lineRenderer3D0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = (StandardCategorySeriesLabelGenerator)categoryStepRenderer0.getLegendItemLabelGenerator();
      assertNotNull(standardCategorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      boolean boolean0 = categoryStepRenderer0.removeAnnotation((CategoryAnnotation) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      Range range0 = boxAndWhiskerRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      assertNull(range0);
  }

  //@Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = defaultCategoryItemRenderer0.getBaseToolTipGenerator();
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setSeriesItemLabelGenerator(6, (CategoryItemLabelGenerator) null);
      assertEquals(2.0, scatterRenderer0.getItemLabelAnchorOffset(), 0.01);
  }
}
