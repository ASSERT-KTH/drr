/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 16:39:35 GMT 2014
 */

package org.jfree.data.time;

import static org.junit.Assert.*;
import org.junit.Test;
import java.util.Date;
import java.util.Locale;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
 import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.System;

import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.jfree.data.time.Day;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.TimePeriodFormatException;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

 
public class WeekEvoSuite_branch_Test   {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "z-;9H01OW";
      // Undeclared exception!
      try {
        Week week0 = Week.parseWeek(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't evaluate the year.
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "Week ";
      // Undeclared exception!
      try {
        Week week0 = Week.parseWeek(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Could not find separator.
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = null;
      Week week0 = Week.parseWeek(string0);
      assertNull(week0);
  }

  @Test(timeout = 4000)
  public void test03() {}
//   @Test(timeout = 4000)
//   public void test03()  throws Throwable  {
//       int int0 = 0;
//       MockDate mockDate0 = new MockDate(int0, int0, int0, int0, int0);
//       assertNotNull(mockDate0);
//       assertEquals("Sun Dec 31 00:00:00 GMT 1899", mockDate0.toString());
//       
//       Year year0 = new Year((Date) mockDate0);
//       assertNotNull(year0);
//       assertEquals("Sun Dec 31 00:00:00 GMT 1899", mockDate0.toString());
//       assertEquals((-2240524800000L), year0.getFirstMillisecond());
//       assertEquals(1899, year0.getYear());
//       assertEquals((-2208988800001L), year0.getLastMillisecond());
//       assertEquals(1899L, year0.getSerialIndex());
//       assertEquals("1899", year0.toString());
//       assertEquals((-2224756800001L), year0.getMiddleMillisecond());
//       
//       Week week0 = new Week(int0, year0);
//       assertNotNull(week0);
//       assertEquals("Sun Dec 31 00:00:00 GMT 1899", mockDate0.toString());
//       assertEquals(1899, week0.getYearValue());
//       assertEquals((-2240524800001L), week0.getLastMillisecond());
//       assertEquals(100647L, week0.getSerialIndex());
//       assertEquals((-2240827200001L), week0.getMiddleMillisecond());
//       assertEquals((-2241129600000L), week0.getFirstMillisecond());
//       assertEquals(0, week0.getWeek());
//       assertEquals((-2240524800000L), year0.getFirstMillisecond());
//       assertEquals(1899, year0.getYear());
//       assertEquals((-2208988800001L), year0.getLastMillisecond());
//       assertEquals(1899L, year0.getSerialIndex());
//       assertEquals("1899", year0.toString());
//       assertEquals((-2224756800001L), year0.getMiddleMillisecond());
//       
//       Integer integer0 = new Integer(int0);
//       assertEquals(0, (int)integer0);
//       assertTrue(integer0.equals((Object)int0));
//       
//       int int1 = week0.compareTo((Object) integer0);
//       assertEquals(1, int1);
//       assertTrue(integer0.equals((Object)int0));
//       assertFalse(integer0.equals((Object)int1));
//       assertFalse(int0 == int1);
//       assertFalse(int1 == int0);
//       assertEquals("Sun Dec 31 00:00:00 GMT 1899", mockDate0.toString());
//       assertEquals(1899, week0.getYearValue());
//       assertEquals((-2240524800001L), week0.getLastMillisecond());
//       assertEquals(100647L, week0.getSerialIndex());
//       assertEquals((-2240827200001L), week0.getMiddleMillisecond());
//       assertEquals((-2241129600000L), week0.getFirstMillisecond());
//       assertEquals(0, week0.getWeek());
//       assertEquals((-2240524800000L), year0.getFirstMillisecond());
//       assertEquals(1899, year0.getYear());
//       assertEquals((-2208988800001L), year0.getLastMillisecond());
//       assertEquals(1899L, year0.getSerialIndex());
//       assertEquals("1899", year0.toString());
//       assertEquals((-2224756800001L), year0.getMiddleMillisecond());
//   }

  @Test(timeout = 4000)
  public void test04() {}
//   @Test(timeout = 4000)
//   public void test04()  throws Throwable  {
//       long long0 = (-590L);
//       System.setCurrentTimeMillis(long0);
//       Quarter quarter0 = new Quarter();
//       assertNotNull(quarter0);
//       assertEquals((-1L), quarter0.getLastMillisecond());
//       assertEquals((-3974400001L), quarter0.getMiddleMillisecond());
//       assertEquals((-7948800000L), quarter0.getFirstMillisecond());
//       assertEquals(4, quarter0.getQuarter());
//       assertEquals(7880L, quarter0.getSerialIndex());
//       assertEquals(1969, quarter0.getYearValue());
//       
//       MockDate mockDate0 = (MockDate)quarter0.getEnd();
//       assertNotNull(mockDate0);
//       assertEquals("Wed Dec 31 23:59:59 GMT 1969", mockDate0.toString());
//       assertEquals((-1L), quarter0.getLastMillisecond());
//       assertEquals((-3974400001L), quarter0.getMiddleMillisecond());
//       assertEquals((-7948800000L), quarter0.getFirstMillisecond());
//       assertEquals(4, quarter0.getQuarter());
//       assertEquals(7880L, quarter0.getSerialIndex());
//       assertEquals(1969, quarter0.getYearValue());
//       
//       Week week0 = new Week((Date) mockDate0);
//       assertNotNull(week0);
//       assertEquals("Wed Dec 31 23:59:59 GMT 1969", mockDate0.toString());
//       assertEquals(259199999L, week0.getLastMillisecond());
//       assertEquals((-43200001L), week0.getMiddleMillisecond());
//       assertEquals(104411L, week0.getSerialIndex());
//       assertEquals((-345600000L), week0.getFirstMillisecond());
//       assertEquals(1970, week0.getYearValue());
//       assertEquals(1, week0.getWeek());
//       assertEquals((-1L), quarter0.getLastMillisecond());
//       assertEquals((-3974400001L), quarter0.getMiddleMillisecond());
//       assertEquals((-7948800000L), quarter0.getFirstMillisecond());
//       assertEquals(4, quarter0.getQuarter());
//       assertEquals(7880L, quarter0.getSerialIndex());
//       assertEquals(1969, quarter0.getYearValue());
//       
//       Week week1 = (Week)week0.previous();
//       assertNotNull(week1);
//       assertFalse(week0.equals((Object)week1));
//       assertFalse(week1.equals((Object)week0));
//       assertNotSame(week0, week1);
//       assertNotSame(week1, week0);
//       assertEquals("Wed Dec 31 23:59:59 GMT 1969", mockDate0.toString());
//       assertEquals(259199999L, week0.getLastMillisecond());
//       assertEquals((-43200001L), week0.getMiddleMillisecond());
//       assertEquals(104411L, week0.getSerialIndex());
//       assertEquals((-345600000L), week0.getFirstMillisecond());
//       assertEquals(1970, week0.getYearValue());
//       assertEquals(1, week0.getWeek());
//       assertEquals((-345600001L), week1.getLastMillisecond());
//       assertEquals(1969, week1.getYearValue());
//       assertEquals(52, week1.getWeek());
//       assertEquals((-648000001L), week1.getMiddleMillisecond());
//       assertEquals((-950400000L), week1.getFirstMillisecond());
//       assertEquals(104409L, week1.getSerialIndex());
//       assertEquals((-1L), quarter0.getLastMillisecond());
//       assertEquals((-3974400001L), quarter0.getMiddleMillisecond());
//       assertEquals((-7948800000L), quarter0.getFirstMillisecond());
//       assertEquals(4, quarter0.getQuarter());
//       assertEquals(7880L, quarter0.getSerialIndex());
//       assertEquals(1969, quarter0.getYearValue());
//       
//       int int0 = week0.compareTo((Object) week1);
//       assertEquals(1, int0);
//       assertFalse(week0.equals((Object)week1));
//       assertFalse(week1.equals((Object)week0));
//       assertNotSame(week0, week1);
//       assertNotSame(week1, week0);
//       assertEquals("Wed Dec 31 23:59:59 GMT 1969", mockDate0.toString());
//       assertEquals(259199999L, week0.getLastMillisecond());
//       assertEquals((-43200001L), week0.getMiddleMillisecond());
//       assertEquals(104411L, week0.getSerialIndex());
//       assertEquals((-345600000L), week0.getFirstMillisecond());
//       assertEquals(1970, week0.getYearValue());
//       assertEquals(1, week0.getWeek());
//       assertEquals((-345600001L), week1.getLastMillisecond());
//       assertEquals(1969, week1.getYearValue());
//       assertEquals(52, week1.getWeek());
//       assertEquals((-648000001L), week1.getMiddleMillisecond());
//       assertEquals((-950400000L), week1.getFirstMillisecond());
//       assertEquals(104409L, week1.getSerialIndex());
//       assertEquals((-1L), quarter0.getLastMillisecond());
//       assertEquals((-3974400001L), quarter0.getMiddleMillisecond());
//       assertEquals((-7948800000L), quarter0.getFirstMillisecond());
//       assertEquals(4, quarter0.getQuarter());
//       assertEquals(7880L, quarter0.getSerialIndex());
//       assertEquals(1969, quarter0.getYearValue());
//   }

  @Test(timeout = 4000)
  public void test05() {}
//   @Test(timeout = 4000)
//   public void test05()  throws Throwable  {
//       int int0 = 497;
//       int int1 = (-2);
//       Week week0 = new Week(int0, int1);
//       assertNotNull(week0);
//       assertFalse(int1 == int0);
//       assertFalse(int0 == int1);
//       assertEquals(-15, week0.getWeek());
//       assertEquals((-62240011200001L), week0.getMiddleMillisecond());
//       assertEquals((-62239708800001L), week0.getLastMillisecond());
//       assertEquals(-2, week0.getYearValue());
//       assertEquals((-121L), week0.getSerialIndex());
//       assertEquals((-62240313600000L), week0.getFirstMillisecond());
//       
//       Week week1 = new Week(int0, int0);
//       assertNotNull(week1);
//       assertFalse(week1.equals((Object)week0));
//       assertFalse(int0 == int1);
//       assertNotSame(week1, week0);
//       assertEquals(26326L, week1.getSerialIndex());
//       assertEquals((-46492531200001L), week1.getLastMillisecond());
//       assertEquals((-46492833600001L), week1.getMiddleMillisecond());
//       assertEquals(-15, week1.getWeek());
//       assertEquals(497, week1.getYearValue());
//       assertEquals((-46493136000000L), week1.getFirstMillisecond());
//       
//       boolean boolean0 = week0.equals((Object) week1);
//       assertFalse(boolean0);
//       assertFalse(week0.equals((Object)week1));
//       assertFalse(week1.equals((Object)week0));
//       assertFalse(int1 == int0);
//       assertFalse(int0 == int1);
//       assertNotSame(week0, week1);
//       assertNotSame(week1, week0);
//       assertEquals(-15, week0.getWeek());
//       assertEquals((-62240011200001L), week0.getMiddleMillisecond());
//       assertEquals((-62239708800001L), week0.getLastMillisecond());
//       assertEquals(-2, week0.getYearValue());
//       assertEquals((-121L), week0.getSerialIndex());
//       assertEquals((-62240313600000L), week0.getFirstMillisecond());
//       assertEquals(26326L, week1.getSerialIndex());
//       assertEquals((-46492531200001L), week1.getLastMillisecond());
//       assertEquals((-46492833600001L), week1.getMiddleMillisecond());
//       assertEquals(-15, week1.getWeek());
//       assertEquals(497, week1.getYearValue());
//       assertEquals((-46493136000000L), week1.getFirstMillisecond());
//   }

  @Test(timeout = 4000)
  public void test06() {}
//   @Test(timeout = 4000)
//   public void test06()  throws Throwable  {
//       Week week0 = new Week();
//       assertNotNull(week0);
//       assertEquals(1391904000000L, week0.getFirstMillisecond());
//       assertEquals(2014, week0.getYearValue());
//       assertEquals(7, week0.getWeek());
//       assertEquals(106749L, week0.getSerialIndex());
//       assertEquals(1392508799999L, week0.getLastMillisecond());
//       assertEquals(1392206399999L, week0.getMiddleMillisecond());
//       
//       Week week1 = (Week)week0.next();
//       assertNotNull(week1);
//       assertFalse(week1.equals((Object)week0));
//       assertFalse(week0.equals((Object)week1));
//       assertNotSame(week1, week0);
//       assertNotSame(week0, week1);
//       assertEquals(2014, week1.getYearValue());
//       assertEquals(1392508800000L, week1.getFirstMillisecond());
//       assertEquals(8, week1.getWeek());
//       assertEquals(1393113599999L, week1.getLastMillisecond());
//       assertEquals(106750L, week1.getSerialIndex());
//       assertEquals(1392811199999L, week1.getMiddleMillisecond());
//       assertEquals(1391904000000L, week0.getFirstMillisecond());
//       assertEquals(2014, week0.getYearValue());
//       assertEquals(7, week0.getWeek());
//       assertEquals(106749L, week0.getSerialIndex());
//       assertEquals(1392508799999L, week0.getLastMillisecond());
//       assertEquals(1392206399999L, week0.getMiddleMillisecond());
//       
//       boolean boolean0 = week0.equals((Object) week1);
//       assertFalse(boolean0);
//       assertFalse(week1.equals((Object)week0));
//       assertFalse(week0.equals((Object)week1));
//       assertNotSame(week1, week0);
//       assertNotSame(week0, week1);
//       assertEquals(2014, week1.getYearValue());
//       assertEquals(1392508800000L, week1.getFirstMillisecond());
//       assertEquals(8, week1.getWeek());
//       assertEquals(1393113599999L, week1.getLastMillisecond());
//       assertEquals(106750L, week1.getSerialIndex());
//       assertEquals(1392811199999L, week1.getMiddleMillisecond());
//       assertEquals(1391904000000L, week0.getFirstMillisecond());
//       assertEquals(2014, week0.getYearValue());
//       assertEquals(7, week0.getWeek());
//       assertEquals(106749L, week0.getSerialIndex());
//       assertEquals(1392508799999L, week0.getLastMillisecond());
//       assertEquals(1392206399999L, week0.getMiddleMillisecond());
//   }

  @Test(timeout = 4000)
  public void test07() {}
//   @Test(timeout = 4000)
//   public void test07()  throws Throwable  {
//       Week week0 = new Week();
//       assertNotNull(week0);
//       assertEquals(1392508799999L, week0.getLastMillisecond());
//       assertEquals(106749L, week0.getSerialIndex());
//       assertEquals(2014, week0.getYearValue());
//       assertEquals(1392206399999L, week0.getMiddleMillisecond());
//       assertEquals(1391904000000L, week0.getFirstMillisecond());
//       assertEquals(7, week0.getWeek());
//       
//       FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
//       assertNotNull(fixedMillisecond0);
//       assertEquals(1392409281320L, fixedMillisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, fixedMillisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, fixedMillisecond0.getSerialIndex());
//       assertEquals(1392409281320L, fixedMillisecond0.getFirstMillisecond());
//       
//       MockDate mockDate0 = (MockDate)fixedMillisecond0.getTime();
//       assertNotNull(mockDate0);
//       assertEquals(1392409281320L, fixedMillisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, fixedMillisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, fixedMillisecond0.getSerialIndex());
//       assertEquals(1392409281320L, fixedMillisecond0.getFirstMillisecond());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       
//       Week week1 = new Week((Date) mockDate0);
//       assertNotNull(week1);
//       assertTrue(week1.equals((Object)week0));
//       assertNotSame(week1, week0);
//       assertEquals(1392409281320L, fixedMillisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, fixedMillisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, fixedMillisecond0.getSerialIndex());
//       assertEquals(1392409281320L, fixedMillisecond0.getFirstMillisecond());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(1392206399999L, week1.getMiddleMillisecond());
//       assertEquals(106749L, week1.getSerialIndex());
//       assertEquals(1391904000000L, week1.getFirstMillisecond());
//       assertEquals(1392508799999L, week1.getLastMillisecond());
//       assertEquals(2014, week1.getYearValue());
//       assertEquals(7, week1.getWeek());
//       
//       boolean boolean0 = week0.equals((Object) week1);
//       assertTrue(boolean0);
//       assertTrue(week0.equals((Object)week1));
//       assertTrue(week1.equals((Object)week0));
//       assertNotSame(week0, week1);
//       assertNotSame(week1, week0);
//       assertEquals(1392409281320L, fixedMillisecond0.getMiddleMillisecond());
//       assertEquals(1392409281320L, fixedMillisecond0.getLastMillisecond());
//       assertEquals(1392409281320L, fixedMillisecond0.getSerialIndex());
//       assertEquals(1392409281320L, fixedMillisecond0.getFirstMillisecond());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       assertEquals(1392508799999L, week0.getLastMillisecond());
//       assertEquals(106749L, week0.getSerialIndex());
//       assertEquals(2014, week0.getYearValue());
//       assertEquals(1392206399999L, week0.getMiddleMillisecond());
//       assertEquals(1391904000000L, week0.getFirstMillisecond());
//       assertEquals(7, week0.getWeek());
//       assertEquals(1392206399999L, week1.getMiddleMillisecond());
//       assertEquals(106749L, week1.getSerialIndex());
//       assertEquals(1391904000000L, week1.getFirstMillisecond());
//       assertEquals(1392508799999L, week1.getLastMillisecond());
//       assertEquals(2014, week1.getYearValue());
//       assertEquals(7, week1.getWeek());
//   }

//  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
      //  // Unstable assertion: assertNotNull(fixedMillisecond0);
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getSerialIndex());
      
      MockDate mockDate0 = (MockDate)fixedMillisecond0.getStart();
      //  // Unstable assertion: assertNotNull(mockDate0);
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getSerialIndex());
      
      ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
      //  // Unstable assertion: assertNotNull(zoneInfo0);
      //  // Unstable assertion: assertEquals("r++t0eggY\"Q", zoneInfo0.getID());
      
      Locale locale0 = Locale.CANADA_FRENCH;
      //  // Unstable assertion: assertNotNull(locale0);
      //  // Unstable assertion: assertEquals("fr", locale0.getLanguage());
      //  // Unstable assertion: assertEquals("CA", locale0.getCountry());
      //  // Unstable assertion: assertEquals("fra", locale0.getISO3Language());
      //  // Unstable assertion: assertEquals("", locale0.getVariant());
      //  // Unstable assertion: assertEquals("CAN", locale0.getISO3Country());
      //  // Unstable assertion: assertEquals("fr_CA", locale0.toString());
      
      Week week0 = new Week((Date) mockDate0, (TimeZone) zoneInfo0, locale0);
      //  // Unstable assertion: assertNotNull(week0);
      //  // Unstable assertion: assertEquals("fr", locale0.getLanguage());
      //  // Unstable assertion: assertEquals("CA", locale0.getCountry());
      //  // Unstable assertion: assertEquals("fra", locale0.getISO3Language());
      //  // Unstable assertion: assertEquals("", locale0.getVariant());
      //  // Unstable assertion: assertEquals("CAN", locale0.getISO3Country());
      //  // Unstable assertion: assertEquals("fr_CA", locale0.toString());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1392206399999L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392508799999L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1391904000000L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getSerialIndex());
      //  // Unstable assertion: assertEquals("r++t0eggY\"Q", zoneInfo0.getID());
      
      boolean boolean0 = week0.equals((Object) fixedMillisecond0);
      //  // Unstable assertion: assertFalse(boolean0);
      //  // Unstable assertion: assertEquals("fr", locale0.getLanguage());
      //  // Unstable assertion: assertEquals("CA", locale0.getCountry());
      //  // Unstable assertion: assertEquals("fra", locale0.getISO3Language());
      //  // Unstable assertion: assertEquals("", locale0.getVariant());
      //  // Unstable assertion: assertEquals("CAN", locale0.getISO3Country());
      //  // Unstable assertion: assertEquals("fr_CA", locale0.toString());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1392206399999L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392508799999L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1391904000000L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getSerialIndex());
      //  // Unstable assertion: assertEquals("r++t0eggY\"Q", zoneInfo0.getID());
  }

  @Test(timeout = 4000)
  public void test09() {}
//   @Test(timeout = 4000)
//   public void test09()  throws Throwable  {
//       int int0 = (-444);
//       int int1 = 10001;
//       Week week0 = new Week(int0, int1);
//       assertNotNull(week0);
//       assertFalse(int0 == int1);
//       assertFalse(int1 == int0);
//       assertEquals(253474963199999L, week0.getLastMillisecond());
//       assertEquals(10001, week0.getYearValue());
//       assertEquals(530121L, week0.getSerialIndex());
//       assertEquals(68, week0.getWeek());
//       assertEquals(253474660799999L, week0.getMiddleMillisecond());
//       assertEquals(253474358400000L, week0.getFirstMillisecond());
//       
//       RegularTimePeriod regularTimePeriod0 = week0.next();
//       assertNull(regularTimePeriod0);
//       assertFalse(int0 == int1);
//       assertFalse(int1 == int0);
//       assertEquals(253474963199999L, week0.getLastMillisecond());
//       assertEquals(10001, week0.getYearValue());
//       assertEquals(530121L, week0.getSerialIndex());
//       assertEquals(68, week0.getWeek());
//       assertEquals(253474660799999L, week0.getMiddleMillisecond());
//       assertEquals(253474358400000L, week0.getFirstMillisecond());
//   }

  @Test(timeout = 4000)
  public void test10() {}
//   @Test(timeout = 4000)
//   public void test10()  throws Throwable  {
//       int int0 = (-444);
//       Week week0 = new Week(int0, int0);
//       assertNotNull(week0);
//       assertEquals((-76138617600000L), week0.getFirstMillisecond());
//       assertEquals(-444, week0.getYearValue());
//       assertEquals((-23464L), week0.getSerialIndex());
//       assertEquals(68, week0.getWeek());
//       assertEquals((-76138012800001L), week0.getLastMillisecond());
//       assertEquals((-76138315200001L), week0.getMiddleMillisecond());
//       
//       Week week1 = (Week)week0.next();
//       assertNotNull(week1);
//       assertFalse(week1.equals((Object)week0));
//       assertFalse(week0.equals((Object)week1));
//       assertNotSame(week1, week0);
//       assertNotSame(week0, week1);
//       assertEquals((-76147387200001L), week1.getMiddleMillisecond());
//       assertEquals(-443, week1.getYearValue());
//       assertEquals((-23478L), week1.getSerialIndex());
//       assertEquals((-76147084800001L), week1.getLastMillisecond());
//       assertEquals((-76147689600000L), week1.getFirstMillisecond());
//       assertEquals(1, week1.getWeek());
//       assertEquals((-76138617600000L), week0.getFirstMillisecond());
//       assertEquals(-444, week0.getYearValue());
//       assertEquals((-23464L), week0.getSerialIndex());
//       assertEquals(68, week0.getWeek());
//       assertEquals((-76138012800001L), week0.getLastMillisecond());
//       assertEquals((-76138315200001L), week0.getMiddleMillisecond());
//   }

  @Test(timeout = 4000)
  public void test11() {}
//   @Test(timeout = 4000)
//   public void test11()  throws Throwable  {
//       int int0 = 0;
//       MockDate mockDate0 = new MockDate(int0, int0, int0);
//       assertNotNull(mockDate0);
//       assertEquals("Sun Dec 31 00:00:00 GMT 1899", mockDate0.toString());
//       
//       Week week0 = new Week((Date) mockDate0);
//       assertNotNull(week0);
//       assertEquals("Sun Dec 31 00:00:00 GMT 1899", mockDate0.toString());
//       assertEquals(100701L, week0.getSerialIndex());
//       assertEquals(1900, week0.getYearValue());
//       assertEquals((-2208772800001L), week0.getMiddleMillisecond());
//       assertEquals((-2209075200000L), week0.getFirstMillisecond());
//       assertEquals(1, week0.getWeek());
//       assertEquals((-2208470400001L), week0.getLastMillisecond());
//       
//       RegularTimePeriod regularTimePeriod0 = week0.previous();
//       assertNull(regularTimePeriod0);
//       assertEquals("Sun Dec 31 00:00:00 GMT 1899", mockDate0.toString());
//       assertEquals(100701L, week0.getSerialIndex());
//       assertEquals(1900, week0.getYearValue());
//       assertEquals((-2208772800001L), week0.getMiddleMillisecond());
//       assertEquals((-2209075200000L), week0.getFirstMillisecond());
//       assertEquals(1, week0.getWeek());
//       assertEquals((-2208470400001L), week0.getLastMillisecond());
//   }

  @Test(timeout = 4000)
  public void test12() {}
//   @Test(timeout = 4000)
//   public void test12()  throws Throwable  {
//       long long0 = 18L;
//       System.setCurrentTimeMillis(long0);
//       MockDate mockDate0 = new MockDate();
//       assertNotNull(mockDate0);
//       assertEquals("Thu Jan 01 00:00:00 GMT 1970", mockDate0.toString());
//       
//       Week week0 = new Week((Date) mockDate0);
//       assertNotNull(week0);
//       assertEquals(104411L, week0.getSerialIndex());
//       assertEquals(1, week0.getWeek());
//       assertEquals((-43200001L), week0.getMiddleMillisecond());
//       assertEquals(1970, week0.getYearValue());
//       assertEquals((-345600000L), week0.getFirstMillisecond());
//       assertEquals(259199999L, week0.getLastMillisecond());
//       assertEquals("Thu Jan 01 00:00:00 GMT 1970", mockDate0.toString());
//   }

  @Test(timeout = 4000)
  public void test13() {}
//   @Test(timeout = 4000)
//   public void test13()  throws Throwable  {
//       ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getDefault();
//       assertNotNull(zoneInfo0);
//       assertEquals("GMT", zoneInfo0.getID());
//       
//       Locale locale0 = null;
//       MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
//       assertNotNull(mockGregorianCalendar0);
//       assertEquals(1, mockGregorianCalendar0.getFirstDayOfWeek());
//       assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=1392409281320,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2014,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=45,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=8,HOUR_OF_DAY=20,MINUTE=21,SECOND=21,MILLISECOND=320,ZONE_OFFSET=0,DST_OFFSET=0]", mockGregorianCalendar0.toString());
//       assertEquals(true, mockGregorianCalendar0.isLenient());
//       assertEquals(1, mockGregorianCalendar0.getMinimalDaysInFirstWeek());
//       
//       Date date0 = mockGregorianCalendar0.getTime();
//       assertNotNull(date0);
//       assertEquals(1, mockGregorianCalendar0.getFirstDayOfWeek());
//       assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=1392409281320,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2014,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=45,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=8,HOUR_OF_DAY=20,MINUTE=21,SECOND=21,MILLISECOND=320,ZONE_OFFSET=0,DST_OFFSET=0]", mockGregorianCalendar0.toString());
//       assertEquals(true, mockGregorianCalendar0.isLenient());
//       assertEquals(1, mockGregorianCalendar0.getMinimalDaysInFirstWeek());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
//       
//       Week week0 = null;
//       try {
//         week0 = new Week(date0, (TimeZone) zoneInfo0, locale0);
//         fail("Expecting exception: IllegalArgumentException");
//       
//       } catch(IllegalArgumentException e) {
//          //
//          // Null 'locale' argument.
//          //
//       }
//   }

//  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 3;
      MockDate mockDate0 = new MockDate(int0, int0, int0);
      assertNotNull(mockDate0);
      assertEquals("Fri Apr 03 00:00:00 GMT 1903", mockDate0.toString());
      
      TimeZone timeZone0 = null;
      Locale locale0 = Locale.CHINA;
      assertNotNull(locale0);
      assertEquals("CN", locale0.getCountry());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("zho", locale0.getISO3Language());
      assertEquals("CHN", locale0.getISO3Country());
      assertEquals("zh", locale0.getLanguage());
      
      Week week0 = null;
      try {
        week0 = new Week((Date) mockDate0, timeZone0, locale0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'zone' argument.
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Date date0 = null;
      Week week0 = null;
      try {
        week0 = new Week(date0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'time' argument.
         //
      }
  }

  @Test(timeout = 4000)
  public void test16() {}
//   @Test(timeout = 4000)
//   public void test16()  throws Throwable  {
//       int int0 = 2749;
//       Year year0 = new Year();
//       assertNotNull(year0);
//       assertEquals(1420070399999L, year0.getLastMillisecond());
//       assertEquals(2014, year0.getYear());
//       assertEquals(2014L, year0.getSerialIndex());
//       assertEquals(1404302399999L, year0.getMiddleMillisecond());
//       assertEquals(1388534400000L, year0.getFirstMillisecond());
//       assertEquals("2014", year0.toString());
//       
//       Week week0 = new Week(int0, year0);
//       assertNotNull(week0);
//       assertEquals(1420070399999L, year0.getLastMillisecond());
//       assertEquals(2014, year0.getYear());
//       assertEquals(2014L, year0.getSerialIndex());
//       assertEquals(1404302399999L, year0.getMiddleMillisecond());
//       assertEquals(1388534400000L, year0.getFirstMillisecond());
//       assertEquals("2014", year0.toString());
//       assertEquals(2014, week0.getYearValue());
//       assertEquals(1347148800000L, week0.getFirstMillisecond());
//       assertEquals(1347451199999L, week0.getMiddleMillisecond());
//       assertEquals(1347753599999L, week0.getLastMillisecond());
//       assertEquals(106675L, week0.getSerialIndex());
//       assertEquals(-67, week0.getWeek());
//   }

//  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
      //  // Unstable assertion: assertNotNull(fixedMillisecond0);
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getMiddleMillisecond());
      
      MockDate mockDate0 = (MockDate)fixedMillisecond0.getStart();
      //  // Unstable assertion: assertNotNull(mockDate0);
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
      
      ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
      //  // Unstable assertion: assertNotNull(zoneInfo0);
      //  // Unstable assertion: assertEquals("r++t0eggY\"Q", zoneInfo0.getID());
      
      Locale locale0 = Locale.CANADA_FRENCH;
      //  // Unstable assertion: assertNotNull(locale0);
      //  // Unstable assertion: assertEquals("fr", locale0.getLanguage());
      //  // Unstable assertion: assertEquals("CAN", locale0.getISO3Country());
      //  // Unstable assertion: assertEquals("CA", locale0.getCountry());
      //  // Unstable assertion: assertEquals("", locale0.getVariant());
      //  // Unstable assertion: assertEquals("fr_CA", locale0.toString());
      //  // Unstable assertion: assertEquals("fra", locale0.getISO3Language());
      
      Week week0 = new Week((Date) mockDate0, (TimeZone) zoneInfo0, locale0);
      //  // Unstable assertion: assertNotNull(week0);
      //  // Unstable assertion: assertEquals("r++t0eggY\"Q", zoneInfo0.getID());
      //  // Unstable assertion: assertEquals("fr", locale0.getLanguage());
      //  // Unstable assertion: assertEquals("CAN", locale0.getISO3Country());
      //  // Unstable assertion: assertEquals("CA", locale0.getCountry());
      //  // Unstable assertion: assertEquals("", locale0.getVariant());
      //  // Unstable assertion: assertEquals("fr_CA", locale0.toString());
      //  // Unstable assertion: assertEquals("fra", locale0.getISO3Language());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1392206399999L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392508799999L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1391904000000L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
      
      int int0 = week0.compareTo((Object) fixedMillisecond0);
      //  // Unstable assertion: assertEquals(0, int0);
      //  // Unstable assertion: assertEquals("r++t0eggY\"Q", zoneInfo0.getID());
      //  // Unstable assertion: assertEquals("fr", locale0.getLanguage());
      //  // Unstable assertion: assertEquals("CAN", locale0.getISO3Country());
      //  // Unstable assertion: assertEquals("CA", locale0.getCountry());
      //  // Unstable assertion: assertEquals("", locale0.getVariant());
      //  // Unstable assertion: assertEquals("fr_CA", locale0.toString());
      //  // Unstable assertion: assertEquals("fra", locale0.getISO3Language());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1392206399999L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392508799999L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1391904000000L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
      
      Week week1 = new Week(int0, int0);
      //  // Unstable assertion: assertNotNull(week1);
      //  // Unstable assertion: assertFalse(week1.equals((Object)week0));
      //  // Unstable assertion: assertFalse(week0.equals((Object)week1));
      //  // Unstable assertion: assertNotSame(week1, week0);
      //  // Unstable assertion: assertNotSame(week0, week1);
      //  // Unstable assertion: assertEquals("r++t0eggY\"Q", zoneInfo0.getID());
      //  // Unstable assertion: assertEquals("fr", locale0.getLanguage());
      //  // Unstable assertion: assertEquals("CAN", locale0.getISO3Country());
      //  // Unstable assertion: assertEquals("CA", locale0.getCountry());
      //  // Unstable assertion: assertEquals("", locale0.getVariant());
      //  // Unstable assertion: assertEquals("fr_CA", locale0.toString());
      //  // Unstable assertion: assertEquals("fra", locale0.getISO3Language());
      //  // Unstable assertion: assertEquals((-62168040000001L), week1.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(0, week1.getWeek());
      //  // Unstable assertion: assertEquals(0, week1.getYearValue());
      //  // Unstable assertion: assertEquals(0L, week1.getSerialIndex());
      //  // Unstable assertion: assertEquals((-62168342400000L), week1.getFirstMillisecond());
      //  // Unstable assertion: assertEquals((-62167737600001L), week1.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(1392409281320L, fixedMillisecond0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1392206399999L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392508799999L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1391904000000L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
  }

//  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Day day0 = new Day();
      //  // Unstable assertion: assertNotNull(day0);
      //  // Unstable assertion: assertEquals(2, day0.getMonth());
      //  // Unstable assertion: assertEquals(1392422399999L, day0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392336000000L, day0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, day0.getYear());
      //  // Unstable assertion: assertEquals(1392379199999L, day0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(41684L, day0.getSerialIndex());
      //  // Unstable assertion: assertEquals(14, day0.getDayOfMonth());
      
      MockDate mockDate0 = (MockDate)day0.getEnd();
      //  // Unstable assertion: assertNotNull(mockDate0);
      //  // Unstable assertion: assertEquals("Fri Feb 14 23:59:59 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(2, day0.getMonth());
      //  // Unstable assertion: assertEquals(1392422399999L, day0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392336000000L, day0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, day0.getYear());
      //  // Unstable assertion: assertEquals(1392379199999L, day0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(41684L, day0.getSerialIndex());
      //  // Unstable assertion: assertEquals(14, day0.getDayOfMonth());
      
      ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
      //  // Unstable assertion: assertNotNull(zoneInfo0);
      //  // Unstable assertion: assertEquals("r++t0eggY\"Q", zoneInfo0.getID());
      
      Week week0 = new Week((Date) mockDate0, (TimeZone) zoneInfo0);
      //  // Unstable assertion: assertNotNull(week0);
      //  // Unstable assertion: assertEquals("Fri Feb 14 23:59:59 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1392508799999L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392206399999L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1391904000000L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2, day0.getMonth());
      //  // Unstable assertion: assertEquals(1392422399999L, day0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392336000000L, day0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, day0.getYear());
      //  // Unstable assertion: assertEquals(1392379199999L, day0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(41684L, day0.getSerialIndex());
      //  // Unstable assertion: assertEquals(14, day0.getDayOfMonth());
      //  // Unstable assertion: assertEquals("r++t0eggY\"Q", zoneInfo0.getID());
      
      String string0 = week0.toString();
      //  // Unstable assertion: assertEquals("Week 7, 2014", string0);
      //  // Unstable assertion: assertNotNull(string0);
      //  // Unstable assertion: assertEquals("Fri Feb 14 23:59:59 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1392508799999L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392206399999L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(1391904000000L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2, day0.getMonth());
      //  // Unstable assertion: assertEquals(1392422399999L, day0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(1392336000000L, day0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2014, day0.getYear());
      //  // Unstable assertion: assertEquals(1392379199999L, day0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(41684L, day0.getSerialIndex());
      //  // Unstable assertion: assertEquals(14, day0.getDayOfMonth());
      //  // Unstable assertion: assertEquals("r++t0eggY\"Q", zoneInfo0.getID());
      
      // Undeclared exception!
      try {
        Week week1 = Week.parseWeek(string0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // Can't evaluate the week.
         //
      }
  }

  @Test(timeout = 4000)
  public void test19() {}
//   @Test(timeout = 4000)
//   public void test19()  throws Throwable  {
//       int int0 = 497;
//       Week week0 = new Week(int0, int0);
//       assertNotNull(week0);
//       assertEquals((-46492531200001L), week0.getLastMillisecond());
//       assertEquals(-15, week0.getWeek());
//       assertEquals(497, week0.getYearValue());
//       assertEquals((-46493136000000L), week0.getFirstMillisecond());
//       assertEquals(26326L, week0.getSerialIndex());
//       assertEquals((-46492833600001L), week0.getMiddleMillisecond());
//       
//       int int1 = week0.getYearValue();
//       assertEquals(497, int1);
//       assertTrue(int0 == int1);
//       assertTrue(int1 == int0);
//       assertEquals((-46492531200001L), week0.getLastMillisecond());
//       assertEquals(-15, week0.getWeek());
//       assertEquals(497, week0.getYearValue());
//       assertEquals((-46493136000000L), week0.getFirstMillisecond());
//       assertEquals(26326L, week0.getSerialIndex());
//       assertEquals((-46492833600001L), week0.getMiddleMillisecond());
//   }

  @Test(timeout = 4000)
  public void test20() {}
//   @Test(timeout = 4000)
//   public void test20()  throws Throwable  {
//       MockDate mockDate0 = new MockDate();
//       assertNotNull(mockDate0);
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       
//       Week week0 = new Week((Date) mockDate0);
//       assertNotNull(week0);
//       assertEquals(7, week0.getWeek());
//       assertEquals(2014, week0.getYearValue());
//       assertEquals(106749L, week0.getSerialIndex());
//       assertEquals(1392508799999L, week0.getLastMillisecond());
//       assertEquals(1392206399999L, week0.getMiddleMillisecond());
//       assertEquals(1391904000000L, week0.getFirstMillisecond());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//       
//       long long0 = week0.getMiddleMillisecond();
//       assertEquals(1392206399999L, long0);
//       assertEquals(7, week0.getWeek());
//       assertEquals(2014, week0.getYearValue());
//       assertEquals(106749L, week0.getSerialIndex());
//       assertEquals(1392508799999L, week0.getLastMillisecond());
//       assertEquals(1392206399999L, week0.getMiddleMillisecond());
//       assertEquals(1391904000000L, week0.getFirstMillisecond());
//       assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
//   }

//  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Day day0 = new Day();
      //  // Unstable assertion: assertNotNull(day0);
      //  // Unstable assertion: assertEquals(41684L, day0.getSerialIndex());
      //  // Unstable assertion: assertEquals(14, day0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1392336000000L, day0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2, day0.getMonth());
      //  // Unstable assertion: assertEquals(1392379199999L, day0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392422399999L, day0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2014, day0.getYear());
      
      MockDate mockDate0 = (MockDate)day0.getEnd();
      //  // Unstable assertion: assertNotNull(mockDate0);
      //  // Unstable assertion: assertEquals("Fri Feb 14 23:59:59 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(41684L, day0.getSerialIndex());
      //  // Unstable assertion: assertEquals(14, day0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1392336000000L, day0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2, day0.getMonth());
      //  // Unstable assertion: assertEquals(1392379199999L, day0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392422399999L, day0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2014, day0.getYear());
      
      ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
      //  // Unstable assertion: assertNotNull(zoneInfo0);
      //  // Unstable assertion: assertEquals("r++t0eggY\"Q", zoneInfo0.getID());
      
      Week week0 = new Week((Date) mockDate0, (TimeZone) zoneInfo0);
      //  // Unstable assertion: assertNotNull(week0);
      //  // Unstable assertion: assertEquals("Fri Feb 14 23:59:59 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(41684L, day0.getSerialIndex());
      //  // Unstable assertion: assertEquals(14, day0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1392336000000L, day0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2, day0.getMonth());
      //  // Unstable assertion: assertEquals(1392379199999L, day0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392422399999L, day0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2014, day0.getYear());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1391904000000L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392206399999L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392508799999L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals("r++t0eggY\"Q", zoneInfo0.getID());
      
      int int0 = week0.compareTo((Object) week0);
      //  // Unstable assertion: assertEquals(0, int0);
      //  // Unstable assertion: assertEquals("Fri Feb 14 23:59:59 GMT 2014", mockDate0.toString());
      //  // Unstable assertion: assertEquals(41684L, day0.getSerialIndex());
      //  // Unstable assertion: assertEquals(14, day0.getDayOfMonth());
      //  // Unstable assertion: assertEquals(1392336000000L, day0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(2, day0.getMonth());
      //  // Unstable assertion: assertEquals(1392379199999L, day0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392422399999L, day0.getLastMillisecond());
      //  // Unstable assertion: assertEquals(2014, day0.getYear());
      //  // Unstable assertion: assertEquals(2014, week0.getYearValue());
      //  // Unstable assertion: assertEquals(7, week0.getWeek());
      //  // Unstable assertion: assertEquals(1391904000000L, week0.getFirstMillisecond());
      //  // Unstable assertion: assertEquals(106749L, week0.getSerialIndex());
      //  // Unstable assertion: assertEquals(1392206399999L, week0.getMiddleMillisecond());
      //  // Unstable assertion: assertEquals(1392508799999L, week0.getLastMillisecond());
      //  // Unstable assertion: assertEquals("r++t0eggY\"Q", zoneInfo0.getID());
  }

  @Test(timeout = 4000)
  public void test22() {}
//   @Test(timeout = 4000)
//   public void test22()  throws Throwable  {
//       Quarter quarter0 = new Quarter();
//       assertNotNull(quarter0);
//       assertEquals(1388534400000L, quarter0.getFirstMillisecond());
//       assertEquals(1396310399999L, quarter0.getLastMillisecond());
//       assertEquals(2014, quarter0.getYearValue());
//       assertEquals(1392422399999L, quarter0.getMiddleMillisecond());
//       assertEquals(1, quarter0.getQuarter());
//       assertEquals(8057L, quarter0.getSerialIndex());
//       
//       MockDate mockDate0 = (MockDate)quarter0.getEnd();
//       assertNotNull(mockDate0);
//       assertEquals(1388534400000L, quarter0.getFirstMillisecond());
//       assertEquals(1396310399999L, quarter0.getLastMillisecond());
//       assertEquals(2014, quarter0.getYearValue());
//       assertEquals(1392422399999L, quarter0.getMiddleMillisecond());
//       assertEquals(1, quarter0.getQuarter());
//       assertEquals(8057L, quarter0.getSerialIndex());
//       assertEquals("Mon Mar 31 23:59:59 GMT 2014", mockDate0.toString());
//       
//       Week week0 = new Week((Date) mockDate0);
//       assertNotNull(week0);
//       assertEquals(1388534400000L, quarter0.getFirstMillisecond());
//       assertEquals(1396310399999L, quarter0.getLastMillisecond());
//       assertEquals(2014, quarter0.getYearValue());
//       assertEquals(1392422399999L, quarter0.getMiddleMillisecond());
//       assertEquals(1, quarter0.getQuarter());
//       assertEquals(8057L, quarter0.getSerialIndex());
//       assertEquals(2014, week0.getYearValue());
//       assertEquals(14, week0.getWeek());
//       assertEquals(1396137600000L, week0.getFirstMillisecond());
//       assertEquals(1396742399999L, week0.getLastMillisecond());
//       assertEquals(1396439999999L, week0.getMiddleMillisecond());
//       assertEquals(106756L, week0.getSerialIndex());
//       assertEquals("Mon Mar 31 23:59:59 GMT 2014", mockDate0.toString());
//       
//       long long0 = week0.getSerialIndex();
//       assertEquals(106756L, long0);
//       assertEquals(1388534400000L, quarter0.getFirstMillisecond());
//       assertEquals(1396310399999L, quarter0.getLastMillisecond());
//       assertEquals(2014, quarter0.getYearValue());
//       assertEquals(1392422399999L, quarter0.getMiddleMillisecond());
//       assertEquals(1, quarter0.getQuarter());
//       assertEquals(8057L, quarter0.getSerialIndex());
//       assertEquals(2014, week0.getYearValue());
//       assertEquals(14, week0.getWeek());
//       assertEquals(1396137600000L, week0.getFirstMillisecond());
//       assertEquals(1396742399999L, week0.getLastMillisecond());
//       assertEquals(1396439999999L, week0.getMiddleMillisecond());
//       assertEquals(106756L, week0.getSerialIndex());
//       assertEquals("Mon Mar 31 23:59:59 GMT 2014", mockDate0.toString());
//   }

  @Test(timeout = 4000)
  public void test23() {}
//   @Test(timeout = 4000)
//   public void test23()  throws Throwable  {
//       int int0 = 0;
//       MockDate mockDate0 = new MockDate(int0, int0, int0, int0, int0);
//       assertNotNull(mockDate0);
//       assertEquals("Sun Dec 31 00:00:00 GMT 1899", mockDate0.toString());
//       
//       Year year0 = new Year((Date) mockDate0);
//       assertNotNull(year0);
//       assertEquals(1899, year0.getYear());
//       assertEquals((-2208988800001L), year0.getLastMillisecond());
//       assertEquals((-2240524800000L), year0.getFirstMillisecond());
//       assertEquals((-2224756800001L), year0.getMiddleMillisecond());
//       assertEquals("1899", year0.toString());
//       assertEquals(1899L, year0.getSerialIndex());
//       assertEquals("Sun Dec 31 00:00:00 GMT 1899", mockDate0.toString());
//       
//       Week week0 = new Week(int0, year0);
//       assertNotNull(week0);
//       assertEquals(1899, year0.getYear());
//       assertEquals((-2208988800001L), year0.getLastMillisecond());
//       assertEquals((-2240524800000L), year0.getFirstMillisecond());
//       assertEquals((-2224756800001L), year0.getMiddleMillisecond());
//       assertEquals("1899", year0.toString());
//       assertEquals(1899L, year0.getSerialIndex());
//       assertEquals(0, week0.getWeek());
//       assertEquals((-2240827200001L), week0.getMiddleMillisecond());
//       assertEquals(100647L, week0.getSerialIndex());
//       assertEquals(1899, week0.getYearValue());
//       assertEquals((-2240524800001L), week0.getLastMillisecond());
//       assertEquals((-2241129600000L), week0.getFirstMillisecond());
//       assertEquals("Sun Dec 31 00:00:00 GMT 1899", mockDate0.toString());
//       
//       int int1 = week0.hashCode();
//       assertEquals(25172, int1);
//       assertFalse(int0 == int1);
//       assertFalse(int1 == int0);
//       assertEquals(1899, year0.getYear());
//       assertEquals((-2208988800001L), year0.getLastMillisecond());
//       assertEquals((-2240524800000L), year0.getFirstMillisecond());
//       assertEquals((-2224756800001L), year0.getMiddleMillisecond());
//       assertEquals("1899", year0.toString());
//       assertEquals(1899L, year0.getSerialIndex());
//       assertEquals(0, week0.getWeek());
//       assertEquals((-2240827200001L), week0.getMiddleMillisecond());
//       assertEquals(100647L, week0.getSerialIndex());
//       assertEquals(1899, week0.getYearValue());
//       assertEquals((-2240524800001L), week0.getLastMillisecond());
//       assertEquals((-2241129600000L), week0.getFirstMillisecond());
//       assertEquals("Sun Dec 31 00:00:00 GMT 1899", mockDate0.toString());
//   }
}
