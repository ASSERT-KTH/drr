/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 20:18:43 GMT 2014
 */

package com.google.javascript.jscomp;

import static org.junit.Assert.*;
import org.junit.Test;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.AbstractPeepholeOptimization;
import com.google.javascript.jscomp.ControlFlowAnalysis;
import com.google.javascript.jscomp.PeepholeOptimizationsPass;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
 import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;

 
public class ControlFlowAnalysisEvoSuite_branch_Test   {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int int0 = 0;
      Node node0 = new Node(int0);
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isString());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isTypeOf());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNew());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isObjectLit());
      assertEquals(0, node0.getType());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isWhile());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabel());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVoid());
      assertNotNull(node0);
      
      // Undeclared exception!
      try {
        Node node1 = ControlFlowAnalysis.getExceptionHandler(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int int0 = 110;
      String string0 = "h]`}&a^nh`QFTvOl";
      Node node0 = Node.newString(int0, string0);
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(true, node0.isSwitch());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDebugger());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getChildCount());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isIf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isComma());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLabel());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isLabelName());
      assertEquals(110, node0.getType());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isStringKey());
      assertNotNull(node0);
      
      // Undeclared exception!
      try {
        boolean boolean0 = ControlFlowAnalysis.isBreakTarget(node0, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      int int0 = 5914;
      String string0 = "8g";
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(5914, node0.getLineno());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTypeOf());
      assertEquals(4095, node0.getCharno());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThis());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isVar());
      assertEquals(5914, node0.getType());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCatch());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSwitch());
      assertEquals(24227839, node0.getSourcePosition());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLabel());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isRegExp());
      assertNotNull(node0);
      
      boolean boolean0 = ControlFlowAnalysis.isBreakTarget(node0, string0);
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(5914, node0.getLineno());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTypeOf());
      assertEquals(4095, node0.getCharno());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThis());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isVar());
      assertEquals(5914, node0.getType());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCatch());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSwitch());
      assertEquals(24227839, node0.getSourcePosition());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLabel());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isRegExp());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Node node0 = null;
      String string0 = null;
      // Undeclared exception!
      try {
        boolean boolean0 = ControlFlowAnalysis.isBreakTarget(node0, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int int0 = (-553);
      Node[] nodeArray0 = new Node[3];
      String string0 = "Parent";
      Node node0 = Node.newString(string0, int0, int0);
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isNull());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLabel());
      assertEquals(-1, node0.getLineno());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isCatch());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNE());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNew());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getLength());
      assertNotNull(node0);
      
      nodeArray0[1] = node0;
      assertEquals(false, nodeArray0[1].isSyntheticBlock());
      assertEquals(false, nodeArray0[1].isThis());
      assertEquals(0, nodeArray0[1].getLength());
      assertEquals(false, nodeArray0[1].isDefaultCase());
      assertEquals(false, nodeArray0[1].isFalse());
      assertEquals(false, nodeArray0[1].isOnlyModifiesThisCall());
      assertEquals(false, nodeArray0[1].hasOneChild());
      assertEquals(false, nodeArray0[1].isIn());
      assertEquals(false, nodeArray0[1].isCatch());
      assertEquals(false, nodeArray0[1].isGetElem());
      assertEquals(false, nodeArray0[1].isDec());
      assertEquals(false, nodeArray0[1].isQuotedString());
      assertEquals(false, nodeArray0[1].isObjectLit());
      assertEquals(false, nodeArray0[1].isTypeOf());
      assertEquals(true, nodeArray0[1].isString());
      assertEquals(false, nodeArray0[1].isNumber());
      assertEquals(false, nodeArray0[1].isHook());
      assertEquals(false, nodeArray0[1].isDelProp());
      assertEquals(false, nodeArray0[1].isWhile());
      assertEquals(40, nodeArray0[1].getType());
      assertEquals(false, nodeArray0[1].isTrue());
      assertEquals(false, nodeArray0[1].isOr());
      assertEquals(false, nodeArray0[1].isVarArgs());
      assertEquals(false, nodeArray0[1].isAdd());
      assertEquals(false, nodeArray0[1].isBreak());
      assertEquals(-1, nodeArray0[1].getLineno());
      assertEquals(false, nodeArray0[1].isArrayLit());
      assertEquals(false, nodeArray0[1].isWith());
      assertEquals(false, nodeArray0[1].isDebugger());
      assertEquals(false, nodeArray0[1].isNew());
      assertEquals(false, nodeArray0[1].isNoSideEffectsCall());
      assertEquals(false, nodeArray0[1].wasEmptyNode());
      assertEquals(false, nodeArray0[1].isOptionalArg());
      assertEquals(false, nodeArray0[1].isFunction());
      assertEquals(false, nodeArray0[1].isLabel());
      assertEquals(false, nodeArray0[1].isNull());
      assertEquals(false, nodeArray0[1].isVoid());
      assertEquals(false, nodeArray0[1].isContinue());
      assertEquals(false, nodeArray0[1].isSwitch());
      assertEquals(false, nodeArray0[1].isLocalResultCall());
      assertNull(nodeArray0[1].getSourceFileName());
      assertEquals(false, nodeArray0[1].isNot());
      assertEquals(false, nodeArray0[1].isEmpty());
      assertEquals(false, nodeArray0[1].hasChildren());
      assertEquals(false, nodeArray0[1].isFromExterns());
      assertEquals(-1, nodeArray0[1].getSourcePosition());
      assertEquals(false, nodeArray0[1].isReturn());
      assertEquals(false, nodeArray0[1].isDo());
      assertEquals(false, nodeArray0[1].isAnd());
      assertEquals(false, nodeArray0[1].isSetterDef());
      assertEquals(false, nodeArray0[1].isComma());
      assertEquals(false, nodeArray0[1].isRegExp());
      assertEquals(0, nodeArray0[1].getChildCount());
      assertEquals(false, nodeArray0[1].isCall());
      assertEquals(false, nodeArray0[1].isGetProp());
      assertEquals(false, nodeArray0[1].isVar());
      assertEquals(false, nodeArray0[1].isTry());
      assertEquals(false, nodeArray0[1].isStringKey());
      assertEquals(false, nodeArray0[1].hasMoreThanOneChild());
      assertEquals(false, nodeArray0[1].isAssign());
      assertEquals(false, nodeArray0[1].isNE());
      assertEquals(false, nodeArray0[1].isLabelName());
      assertEquals(false, nodeArray0[1].isCase());
      assertEquals(false, nodeArray0[1].isParamList());
      assertEquals(false, nodeArray0[1].isAssignAdd());
      assertEquals(false, nodeArray0[1].isFor());
      assertEquals(0, nodeArray0[1].getSideEffectFlags());
      assertEquals(false, nodeArray0[1].isScript());
      assertEquals(false, nodeArray0[1].isBlock());
      assertEquals(false, nodeArray0[1].isInstanceOf());
      assertEquals(false, nodeArray0[1].isGetterDef());
      assertEquals(false, nodeArray0[1].isIf());
      assertEquals(false, nodeArray0[1].isExprResult());
      assertEquals(-1, nodeArray0[1].getCharno());
      assertEquals(false, nodeArray0[1].isThrow());
      assertEquals(false, nodeArray0[1].isName());
      assertEquals(false, nodeArray0[1].isInc());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isNull());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLabel());
      assertEquals(-1, node0.getLineno());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isCatch());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNE());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNew());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getLength());
      assertNotNull(nodeArray0[1]);
      
      nodeArray0[0] = nodeArray0[1];
      assertEquals(false, nodeArray0[0].isCase());
      assertEquals(false, nodeArray0[0].isSwitch());
      assertEquals(false, nodeArray0[0].isFromExterns());
      assertEquals(false, nodeArray0[0].isDo());
      assertEquals(0, nodeArray0[0].getLength());
      assertEquals(false, nodeArray0[0].isParamList());
      assertEquals(false, nodeArray0[0].isLabelName());
      assertEquals(false, nodeArray0[0].isBlock());
      assertEquals(40, nodeArray0[0].getType());
      assertEquals(false, nodeArray0[0].isOnlyModifiesThisCall());
      assertEquals(false, nodeArray0[0].isCatch());
      assertEquals(false, nodeArray0[0].isTry());
      assertEquals(false, nodeArray0[0].isNew());
      assertEquals(false, nodeArray0[0].isThis());
      assertEquals(false, nodeArray0[0].isInc());
      assertEquals(-1, nodeArray0[0].getSourcePosition());
      assertEquals(false, nodeArray0[0].isNE());
      assertEquals(false, nodeArray0[0].isScript());
      assertEquals(false, nodeArray0[0].isComma());
      assertEquals(false, nodeArray0[0].isDefaultCase());
      assertEquals(false, nodeArray0[0].isContinue());
      assertEquals(false, nodeArray0[0].hasMoreThanOneChild());
      assertEquals(false, nodeArray0[0].isSyntheticBlock());
      assertEquals(false, nodeArray0[0].isNull());
      assertEquals(false, nodeArray0[0].wasEmptyNode());
      assertEquals(false, nodeArray0[0].isGetterDef());
      assertEquals(false, nodeArray0[0].hasChildren());
      assertEquals(false, nodeArray0[0].isWith());
      assertEquals(false, nodeArray0[0].isInstanceOf());
      assertEquals(0, nodeArray0[0].getSideEffectFlags());
      assertEquals(-1, nodeArray0[0].getLineno());
      assertEquals(false, nodeArray0[0].isHook());
      assertEquals(false, nodeArray0[0].isVoid());
      assertEquals(false, nodeArray0[0].isQuotedString());
      assertNull(nodeArray0[0].getSourceFileName());
      assertEquals(false, nodeArray0[0].isGetProp());
      assertEquals(false, nodeArray0[0].isOptionalArg());
      assertEquals(false, nodeArray0[0].isAnd());
      assertEquals(false, nodeArray0[0].isIf());
      assertEquals(false, nodeArray0[0].isWhile());
      assertEquals(false, nodeArray0[0].hasOneChild());
      assertEquals(false, nodeArray0[0].isEmpty());
      assertEquals(false, nodeArray0[0].isDec());
      assertEquals(false, nodeArray0[0].isDebugger());
      assertEquals(false, nodeArray0[0].isIn());
      assertEquals(false, nodeArray0[0].isVar());
      assertEquals(false, nodeArray0[0].isObjectLit());
      assertEquals(false, nodeArray0[0].isStringKey());
      assertEquals(false, nodeArray0[0].isExprResult());
      assertEquals(false, nodeArray0[0].isLabel());
      assertEquals(false, nodeArray0[0].isArrayLit());
      assertEquals(false, nodeArray0[0].isCall());
      assertEquals(false, nodeArray0[0].isVarArgs());
      assertEquals(false, nodeArray0[0].isNot());
      assertEquals(false, nodeArray0[0].isAdd());
      assertEquals(false, nodeArray0[0].isLocalResultCall());
      assertEquals(false, nodeArray0[0].isGetElem());
      assertEquals(false, nodeArray0[0].isThrow());
      assertEquals(false, nodeArray0[0].isName());
      assertEquals(false, nodeArray0[0].isBreak());
      assertEquals(false, nodeArray0[0].isRegExp());
      assertEquals(false, nodeArray0[0].isFor());
      assertEquals(false, nodeArray0[0].isNumber());
      assertEquals(-1, nodeArray0[0].getCharno());
      assertEquals(false, nodeArray0[0].isTrue());
      assertEquals(false, nodeArray0[0].isNoSideEffectsCall());
      assertEquals(false, nodeArray0[0].isAssign());
      assertEquals(0, nodeArray0[0].getChildCount());
      assertEquals(false, nodeArray0[0].isDelProp());
      assertEquals(true, nodeArray0[0].isString());
      assertEquals(false, nodeArray0[0].isAssignAdd());
      assertEquals(false, nodeArray0[0].isReturn());
      assertEquals(false, nodeArray0[0].isOr());
      assertEquals(false, nodeArray0[0].isFunction());
      assertEquals(false, nodeArray0[0].isTypeOf());
      assertEquals(false, nodeArray0[0].isFalse());
      assertEquals(false, nodeArray0[0].isSetterDef());
      assertNotNull(nodeArray0[0]);
      
      nodeArray0[0].addChildToFront(nodeArray0[0]);
      // Undeclared exception!
      try {
        Node node1 = ControlFlowAnalysis.computeFollowNode(node0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AbstractCompiler abstractCompiler0 = null;
      AbstractPeepholeOptimization[] abstractPeepholeOptimizationArray0 = new AbstractPeepholeOptimization[7];
      int int0 = 117;
      Node node0 = new Node(int0, int0, int0);
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isObjectLit());
      assertEquals(117, node0.getLineno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isRegExp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(117, node0.getType());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(117, node0.getCharno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(479349, node0.getSourcePosition());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isParamList());
      assertEquals(true, node0.isContinue());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAnd());
      assertNotNull(node0);
      
      boolean boolean0 = ControlFlowAnalysis.isContinueStructure(node0);
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isObjectLit());
      assertEquals(117, node0.getLineno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isRegExp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(117, node0.getType());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(117, node0.getCharno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(479349, node0.getSourcePosition());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isParamList());
      assertEquals(true, node0.isContinue());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAnd());
      assertFalse(boolean0);
      
      boolean boolean1 = true;
      assertFalse(boolean1 == boolean0);
      
      PeepholeOptimizationsPass peepholeOptimizationsPass0 = new PeepholeOptimizationsPass(abstractCompiler0, abstractPeepholeOptimizationArray0);
      assertNotNull(peepholeOptimizationsPass0);
      
      AbstractCompiler abstractCompiler1 = peepholeOptimizationsPass0.getCompiler();
      assertNull(abstractCompiler1);
      
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(abstractCompiler1, boolean1, boolean0);
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isObjectLit());
      assertEquals(117, node0.getLineno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isRegExp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(117, node0.getType());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(117, node0.getCharno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(479349, node0.getSourcePosition());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isParamList());
      assertEquals(true, node0.isContinue());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAnd());
      assertNotNull(controlFlowAnalysis0);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      
      String string0 = "Cannot find break target.";
      Node node1 = Node.newString(string0);
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isInc());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isInstanceOf());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isDec());
      assertEquals(40, node1.getType());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isLabel());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isHook());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isFromExterns());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(true, node1.isString());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isEmpty());
      assertNotSame(node1, node0);
      assertNotNull(node1);
      assertFalse(node1.equals((Object)node0));
      
      controlFlowAnalysis0.process(node1, node1);
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isObjectLit());
      assertEquals(117, node0.getLineno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isRegExp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(117, node0.getType());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(117, node0.getCharno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(479349, node0.getSourcePosition());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isParamList());
      assertEquals(true, node0.isContinue());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isInc());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isInstanceOf());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isDec());
      assertEquals(40, node1.getType());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isLabel());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isHook());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isFromExterns());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(true, node1.isString());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isEmpty());
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      assertFalse(boolean0 == boolean1);
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AbstractCompiler abstractCompiler0 = null;
      AbstractPeepholeOptimization[] abstractPeepholeOptimizationArray0 = new AbstractPeepholeOptimization[7];
      int int0 = 117;
      Node node0 = new Node(int0, int0, int0);
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.hasChildren());
      assertEquals(true, node0.isContinue());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(117, node0.getCharno());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isParamList());
      assertEquals(479349, node0.getSourcePosition());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFromExterns());
      assertEquals(117, node0.getType());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDelProp());
      assertEquals(0, node0.getLength());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTry());
      assertEquals(117, node0.getLineno());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCall());
      assertNotNull(node0);
      
      boolean boolean0 = ControlFlowAnalysis.isContinueStructure(node0);
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.hasChildren());
      assertEquals(true, node0.isContinue());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(117, node0.getCharno());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isParamList());
      assertEquals(479349, node0.getSourcePosition());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFromExterns());
      assertEquals(117, node0.getType());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDelProp());
      assertEquals(0, node0.getLength());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTry());
      assertEquals(117, node0.getLineno());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCall());
      assertFalse(boolean0);
      
      PeepholeOptimizationsPass peepholeOptimizationsPass0 = new PeepholeOptimizationsPass(abstractCompiler0, abstractPeepholeOptimizationArray0);
      assertNotNull(peepholeOptimizationsPass0);
      
      AbstractCompiler abstractCompiler1 = peepholeOptimizationsPass0.getCompiler();
      assertNull(abstractCompiler1);
      
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(abstractCompiler1, boolean0, boolean0);
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.hasChildren());
      assertEquals(true, node0.isContinue());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(117, node0.getCharno());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isParamList());
      assertEquals(479349, node0.getSourcePosition());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFromExterns());
      assertEquals(117, node0.getType());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDelProp());
      assertEquals(0, node0.getLength());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTry());
      assertEquals(117, node0.getLineno());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCall());
      assertNotNull(controlFlowAnalysis0);
      
      String string0 = "Cannot find break target.";
      Node node1 = Node.newString(string0);
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isNumber());
      assertEquals(true, node1.isString());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isSetterDef());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isTry());
      assertEquals(40, node1.getType());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isContinue());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isRegExp());
      assertEquals(0, node1.getSideEffectFlags());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isHook());
      assertNotSame(node1, node0);
      assertNotNull(node1);
      assertFalse(node1.equals((Object)node0));
      
      controlFlowAnalysis0.process(node1, node1);
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.hasChildren());
      assertEquals(true, node0.isContinue());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(117, node0.getCharno());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isParamList());
      assertEquals(479349, node0.getSourcePosition());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFromExterns());
      assertEquals(117, node0.getType());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDelProp());
      assertEquals(0, node0.getLength());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTry());
      assertEquals(117, node0.getLineno());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCall());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isNumber());
      assertEquals(true, node1.isString());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isSetterDef());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isTry());
      assertEquals(40, node1.getType());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isContinue());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isRegExp());
      assertEquals(0, node1.getSideEffectFlags());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isHook());
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
  }
}
