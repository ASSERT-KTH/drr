/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 20:09:18 GMT 2014
 */

package com.google.javascript.jscomp;

import static org.junit.Assert.*;
import org.junit.Test;
import com.google.javascript.jscomp.CodeGenerator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
 import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;

 
public class CodeGeneratorEvoSuite_branch_Test   {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = "\u04F9!8\u0E7F$_w x";
      String string1 = CodeGenerator.identifierEscape(string0);
      assertNotNull(string1);
      assertEquals("\\u04f9!8\\u0e7f$_w x", string1);
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      
      String string2 = CodeGenerator.identifierEscape(string1);
      assertNotNull(string2);
      assertEquals("\\u04f9!8\\u0e7f$_w x", string2);
      assertNotSame(string1, string0);
      assertSame(string1, string2);
      assertSame(string2, string1);
      assertNotSame(string2, string0);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String string0 = "9";
      double double0 = CodeGenerator.getSimpleNumber(string0);
      assertEquals(9.0, double0, 0.01D);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = "\u0000\u00AD\u0600\u06DD\u070F\u1680\u180E\u2000\u2028\u205F\u206A\u3000\uD800\uFEFF\uFFF9\uFFFA";
      String string1 = CodeGenerator.identifierEscape(string0);
      assertNotNull(string1);
      assertEquals("\\u0000\\u007f\\u00ad\\u0600\\u06dd\\u070f\\u1680\\u180e\\u2000\\u2028\\u205f\\u206a\\u3000\\ud800\\ufeff\\ufff9\\ufffa", string1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      double double0 = CodeGenerator.getSimpleNumber(string1);
      assertEquals(Double.NaN, double0, 0.01D);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String string0 = "\u0000\u00AD\u0600\u06DD\u070F\u1680\u180E\u2000\u2028\u205F\u206A\u3000\uD800\uFEFF\uFFF9\uFFFA";
      boolean boolean0 = CodeGenerator.isSimpleNumber(string0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String string0 = "";
      double double0 = CodeGenerator.getSimpleNumber(string0);
      assertEquals(Double.NaN, double0, 0.01D);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String string0 = "17";
      double double0 = CodeGenerator.getSimpleNumber(string0);
      assertEquals(17.0, double0, 0.01D);
  }
}
