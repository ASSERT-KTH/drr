--- /src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	
+++ /src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
@@ -34,6 +34,7 @@
 import org.apache.commons.math3.optimization.GoalType;
 import org.apache.commons.math3.optimization.PointValuePair;
 import org.apache.commons.math3.util.Precision;
+import sketch4j.request.Sketch4J;
 
 /**
  * A tableau for use in the Simplex method.
@@ -335,7 +336,7 @@
         // positive cost non-artificial variables
         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
             final double entry = tableau.getEntry(0, i);
-            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
+            if (Precision.compareTo(entry, 0d, ((Double) Sketch4J.EXP(double.class, new String[] { "entry", "columnsToDrop", "f", "NEGATIVE_VAR_COLUMN_LABEL", "restrictToNonNegative", "constraints", "numDecisionVariables", "maxUlps", "numSlackVariables", "epsilon", "serialVersionUID", "tableau", "numArtificialVariables", "columnLabels", "DEFAULT_ULPS" }, new Object[] { entry, columnsToDrop, f, NEGATIVE_VAR_COLUMN_LABEL, restrictToNonNegative, constraints, numDecisionVariables, maxUlps, numSlackVariables, epsilon, serialVersionUID, tableau, numArtificialVariables, columnLabels, DEFAULT_ULPS }, 0, true, 1, 0))) > 0) {
                 columnsToDrop.add(i);
             }
         }
