/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 03 16:45:51 GMT 2019
 */

package org.apache.commons.math3.geometry.euclidean.twod;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.AffineTransform;
import java.util.LinkedList;
import org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D;
import org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet;
import org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D;
import org.apache.commons.math3.geometry.euclidean.twod.Line;
import org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
import org.apache.commons.math3.geometry.euclidean.twod.Segment;
import org.apache.commons.math3.geometry.euclidean.twod.SubLine;
import org.apache.commons.math3.geometry.euclidean.twod.Vector2D;
import org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane;
import org.apache.commons.math3.geometry.partitioning.BSPTree;
import org.apache.commons.math3.geometry.partitioning.SubHyperplane;
import org.apache.commons.math3.geometry.partitioning.Transform;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

 
public class PolygonsSet_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PolygonsSet polygonsSet0 = new PolygonsSet(2573.59, (-0.9999999999), (-0.9999999999), (-344.632270529633));
      BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>();
      PolygonsSet polygonsSet1 = polygonsSet0.buildNew(bSPTree0);
      assertNotSame(polygonsSet0, polygonsSet1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<SubLine> linkedList0 = new LinkedList<SubLine>();
      LinkedList<SubHyperplane<Euclidean2D>> linkedList1 = new LinkedList<SubHyperplane<Euclidean2D>>(linkedList0);
      PolygonsSet polygonsSet0 = new PolygonsSet(linkedList1);
      polygonsSet0.computeGeometricalProperties();
      assertFalse(polygonsSet0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<SubLine> linkedList0 = new LinkedList<SubLine>();
      Vector2D vector2D0 = new Vector2D(1546.412862219764, 1546.412862219764);
      Vector2D vector2D1 = new Vector2D(1546.412862219764, vector2D0, 1546.412862219764, vector2D0);
      Line line0 = new Line(vector2D1, (-1703.898755));
      IntervalsSet intervalsSet0 = new IntervalsSet();
      SubLine subLine0 = new SubLine(line0, intervalsSet0);
      linkedList0.add(subLine0);
      SubLine subLine1 = new SubLine(vector2D0, vector2D0);
      Vector2D vector2D2 = vector2D0.normalize();
      linkedList0.add(subLine1);
      SubLine subLine2 = new SubLine(vector2D0, vector2D2);
      linkedList0.add(subLine2);
      LinkedList<SubHyperplane<Euclidean2D>> linkedList1 = new LinkedList<SubHyperplane<Euclidean2D>>(linkedList0);
      PolygonsSet polygonsSet0 = new PolygonsSet(linkedList1);
      polygonsSet0.computeGeometricalProperties();
      assertFalse(polygonsSet0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>();
      Boolean boolean0 = new Boolean(false);
      bSPTree0.setAttribute(boolean0);
      PolygonsSet polygonsSet0 = new PolygonsSet(bSPTree0);
      polygonsSet0.computeGeometricalProperties();
      assertTrue(polygonsSet0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedList<SubLine> linkedList0 = new LinkedList<SubLine>();
      Vector2D vector2D0 = new Vector2D(1557.0, 1680.584570363);
      Line line0 = new Line(vector2D0, vector2D0);
      Segment segment0 = new Segment(vector2D0, vector2D0, line0);
      SubLine subLine0 = new SubLine(segment0);
      linkedList0.add(subLine0);
      LinkedList<SubHyperplane<Euclidean2D>> linkedList1 = new LinkedList<SubHyperplane<Euclidean2D>>(linkedList0);
      PolygonsSet polygonsSet0 = new PolygonsSet(linkedList1);
      polygonsSet0.computeGeometricalProperties();
      assertFalse(polygonsSet0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PolygonsSet polygonsSet0 = new PolygonsSet(3.0, (-820.0642), 2.0, (-7.800414592973399E-9));
      polygonsSet0.computeGeometricalProperties();
      polygonsSet0.computeGeometricalProperties();
      assertFalse(polygonsSet0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LinkedList<SubLine> linkedList0 = new LinkedList<SubLine>();
      Vector2D vector2D0 = new Vector2D(1557.0, 1680.584570363);
      SubLine subLine0 = new SubLine(vector2D0, vector2D0);
      linkedList0.add(subLine0);
      Vector2D vector2D1 = new Vector2D(11.72931280450883, 11.72931280450883);
      Line line0 = new Line(vector2D1, vector2D1);
      Segment segment0 = new Segment(vector2D1, vector2D1, line0);
      SubLine subLine1 = new SubLine(segment0);
      line0.reset(vector2D1, vector2D0);
      linkedList0.add(subLine1);
      LinkedList<SubHyperplane<Euclidean2D>> linkedList1 = new LinkedList<SubHyperplane<Euclidean2D>>(linkedList0);
      PolygonsSet polygonsSet0 = new PolygonsSet(linkedList1);
      // Undeclared exception!
      try { 
        polygonsSet0.computeGeometricalProperties();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.geometry.euclidean.twod.Line", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LinkedList<SubLine> linkedList0 = new LinkedList<SubLine>();
      Vector2D vector2D0 = new Vector2D(1557.0, 1680.584570363);
      SubLine subLine0 = new SubLine(vector2D0, vector2D0);
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(1557.0, 5600.3632);
      Transform<Euclidean2D, Euclidean1D> transform0 = Line.getTransform(affineTransform0);
      AbstractSubHyperplane<Euclidean2D, Euclidean1D> abstractSubHyperplane0 = subLine0.applyTransform(transform0);
      linkedList0.add(subLine0);
      Vector2D vector2D1 = new Vector2D(11.72931280450883, 11.72931280450883);
      Line line0 = new Line(vector2D1, vector2D1);
      Segment segment0 = new Segment(vector2D1, vector2D1, line0);
      SubLine subLine1 = new SubLine(segment0);
      line0.reset(vector2D1, vector2D0);
      linkedList0.add(subLine1);
      LinkedList<SubHyperplane<Euclidean2D>> linkedList1 = new LinkedList<SubHyperplane<Euclidean2D>>(linkedList0);
      linkedList1.add((SubHyperplane<Euclidean2D>) abstractSubHyperplane0);
      PolygonsSet polygonsSet0 = new PolygonsSet(linkedList1);
      polygonsSet0.computeGeometricalProperties();
      assertFalse(polygonsSet0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PolygonsSet polygonsSet0 = new PolygonsSet(0, (-819.4249801435429), 2.0, (-7.800414592973399E-9));
      polygonsSet0.computeGeometricalProperties();
      assertFalse(polygonsSet0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      PolygonsSet polygonsSet0 = new PolygonsSet(3.4028234663852886E38, 3.4028234663852886E38, (-912.5972691502662), Double.NaN);
      // Undeclared exception!
      try { 
        polygonsSet0.computeGeometricalProperties();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: internal error, please fill a bug report at https://issues.apache.org/jira/browse/MATH
         //
         verifyException("org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet", e);
      }
  }
}
