/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 22 14:25:09 GMT 2019
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Paint;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.data.time.FixedMillisecond;
import org.junit.runner.RunWith;


public class ValueMarker_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(0.65);
      double double0 = valueMarker0.getValue();
      assertEquals(0.65, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(0.65);
      valueMarker0.setValue((-70.98131156));
      assertEquals((-70.98131156), valueMarker0.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Paint paint0 = combinedDomainXYPlot0.getDomainGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(1.0, paint0, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      assertEquals(1.0, valueMarker0.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Color color0 = (Color)CyclicNumberAxis.DEFAULT_ADVANCE_LINE_PAINT;
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(0L);
      ValueMarker valueMarker0 = new ValueMarker(0.0, color0, basicStroke0, color0, basicStroke0, 0.0F);
      boolean boolean0 = valueMarker0.equals(fixedMillisecond0);
      assertEquals(0.0, valueMarker0.getValue(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Color color0 = (Color)CyclicNumberAxis.DEFAULT_ADVANCE_LINE_PAINT;
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      ValueMarker valueMarker0 = new ValueMarker(0.0, color0, basicStroke0, color0, basicStroke0, 0.0F);
      ValueMarker valueMarker1 = (ValueMarker)valueMarker0.clone();
      boolean boolean0 = valueMarker0.equals(valueMarker1);
      assertTrue(boolean0);
      assertEquals(0.0, valueMarker1.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Color color0 = (Color)CyclicNumberAxis.DEFAULT_ADVANCE_LINE_PAINT;
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      ValueMarker valueMarker0 = new ValueMarker(0.0, color0, basicStroke0, color0, basicStroke0, 0.0F);
      valueMarker0.setValue(315.0);
      Object object0 = valueMarker0.clone();
      valueMarker0.setValue(0.0);
      boolean boolean0 = valueMarker0.equals(object0);
      assertEquals(0.0, valueMarker0.getValue(), 0.01);
      assertFalse(boolean0);
  }
}
