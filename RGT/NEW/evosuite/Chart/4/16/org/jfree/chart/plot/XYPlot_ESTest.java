/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 22 17:16:55 GMT 2019
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Button;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridBagLayout;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.color.ColorSpace;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Arc2D;
import java.awt.geom.Area;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RectangularShape;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.ColorConvertOp;
import java.awt.image.ColorModel;
import java.awt.image.ComponentColorModel;
import java.awt.image.ComponentSampleModel;
import java.awt.image.ConvolveOp;
import java.awt.image.DataBuffer;
import java.awt.image.DataBufferByte;
import java.awt.image.DataBufferUShort;
import java.awt.image.DirectColorModel;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.awt.image.LookupTable;
import java.awt.image.Raster;
import java.awt.image.RescaleOp;
import java.awt.image.SampleModel;
import java.awt.image.ShortLookupTable;
import java.awt.image.WritableRaster;
import java.io.InputStream;
import java.net.URL;
import java.sql.Connection;
import java.sql.Statement;
import java.text.AttributedCharacterIterator;
import java.text.CharacterIterator;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.StringCharacterIterator;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.Chronology;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import java.util.SimpleTimeZone;
import java.util.Stack;
import java.util.TimeZone;
import java.util.Vector;
import javax.swing.DebugGraphics;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JApplet;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JEditorPane;
import javax.swing.JFormattedTextField;
import javax.swing.JLayeredPane;
import javax.swing.JList;
import javax.swing.JMenuBar;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JPopupMenu;
import javax.swing.JProgressBar;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JSpinner;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.JTree;
import javax.swing.JViewport;
import javax.swing.KeyStroke;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.TransferHandler;
import javax.swing.border.AbstractBorder;
import javax.swing.border.Border;
import javax.swing.border.StrokeBorder;
import javax.swing.event.MenuDragMouseEvent;
import javax.swing.plaf.basic.BasicCheckBoxUI;
import javax.swing.plaf.basic.BasicListUI;
import javax.swing.plaf.basic.BasicTextPaneUI;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.plaf.metal.MetalPopupMenuSeparatorUI;
import javax.swing.plaf.metal.MetalTabbedPaneUI;
import javax.swing.plaf.metal.MetalTreeUI;
import javax.swing.plaf.multi.MultiListUI;
import javax.swing.plaf.multi.MultiTextUI;
import javax.swing.plaf.multi.MultiTreeUI;
import javax.swing.plaf.synth.SynthListUI;
import javax.swing.plaf.synth.SynthToolBarUI;
import javax.swing.plaf.synth.SynthTreeUI;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import javax.swing.text.DefaultCaret;
import javax.swing.text.InternationalFormatter;
import javax.swing.text.JTextComponent;
import javax.swing.text.Position;
import javax.swing.tree.TreePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.RenderingSource;
import org.jfree.chart.annotations.TextAnnotation;
import org.jfree.chart.annotations.XYAnnotation;
import org.jfree.chart.annotations.XYBoxAnnotation;
import org.jfree.chart.annotations.XYDataImageAnnotation;
import org.jfree.chart.annotations.XYDrawableAnnotation;
import org.jfree.chart.annotations.XYImageAnnotation;
import org.jfree.chart.annotations.XYLineAnnotation;
import org.jfree.chart.annotations.XYPointerAnnotation;
import org.jfree.chart.annotations.XYShapeAnnotation;
import org.jfree.chart.annotations.XYTextAnnotation;
import org.jfree.chart.annotations.XYTitleAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.LabelBlock;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.AxisChangeEvent;
import org.jfree.chart.event.ChartChangeEventType;
import org.jfree.chart.event.MarkerChangeEvent;
import org.jfree.chart.event.PlotChangeEvent;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.BoxAndWhiskerXYToolTipGenerator;
import org.jfree.chart.labels.MultipleXYSeriesLabelGenerator;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.chart.labels.StandardXYZToolTipGenerator;
import org.jfree.chart.labels.XYToolTipGenerator;
import org.jfree.chart.needle.WindNeedle;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.CrosshairState;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.DefaultDrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SeriesRenderingOrder;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.XYCrosshairState;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.GrayPaintScale;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.ClusteredXYBarRenderer;
import org.jfree.chart.renderer.xy.CyclicXYItemRenderer;
import org.jfree.chart.renderer.xy.DeviationRenderer;
import org.jfree.chart.renderer.xy.SamplingXYLineRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer2;
import org.jfree.chart.renderer.xy.StackedXYBarRenderer;
import org.jfree.chart.renderer.xy.StandardXYItemRenderer;
import org.jfree.chart.renderer.xy.WindItemRenderer;
import org.jfree.chart.renderer.xy.XYAreaRenderer;
import org.jfree.chart.renderer.xy.XYAreaRenderer2;
import org.jfree.chart.renderer.xy.XYBarRenderer;
import org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer;
import org.jfree.chart.renderer.xy.XYDifferenceRenderer;
import org.jfree.chart.renderer.xy.XYDotRenderer;
import org.jfree.chart.renderer.xy.XYErrorRenderer;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.chart.renderer.xy.XYSplineRenderer;
import org.jfree.chart.renderer.xy.XYStepAreaRenderer;
import org.jfree.chart.text.TextAnchor;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.PaintScaleLegend;
import org.jfree.chart.title.TextTitle;
import org.jfree.chart.title.Title;
import org.jfree.chart.urls.StandardXYURLGenerator;
import org.jfree.chart.urls.XYURLGenerator;
import org.jfree.chart.util.HorizontalAlignment;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.Rotation;
import org.jfree.chart.util.Size2D;
import org.jfree.chart.util.TableOrder;
import org.jfree.chart.util.VerticalAlignment;
import org.jfree.data.RangeType;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DefaultKeyedValueDataset;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.ValueDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.jdbc.JDBCPieDataset;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset;
import org.jfree.data.time.Day;
import org.jfree.data.time.DynamicTimeSeriesCollection;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Minute;
import org.jfree.data.time.Month;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.SimpleTimePeriod;
import org.jfree.data.time.SpreadsheetDate;
import org.jfree.data.time.TimePeriodValues;
import org.jfree.data.time.TimePeriodValuesCollection;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.time.Year;
import org.jfree.data.xy.DefaultHighLowDataset;
import org.jfree.data.xy.DefaultIntervalXYDataset;
import org.jfree.data.xy.DefaultOHLCDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.DefaultWindDataset;
import org.jfree.data.xy.DefaultXYZDataset;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.jfree.data.xy.OHLCDataItem;
import org.jfree.data.xy.VectorSeriesCollection;
import org.jfree.data.xy.XIntervalSeries;
import org.jfree.data.xy.XIntervalSeriesCollection;
import org.jfree.data.xy.XYBarDataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.data.xy.YIntervalSeriesCollection;
import org.junit.runner.RunWith;


public class XYPlot_ESTest {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      Locale locale0 = JComponent.getDefaultLocale();
      locale0.getUnicodeLocaleAttributes();
      timeZone0.getDisplayName(false, 0, locale0);
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(timeZone0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("hD");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|j1E");
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer();
      logarithmicAxis0.setAutoRangeNextLogFlag(true);
      Font font0 = SpiderWebPlot.DEFAULT_LABEL_FONT;
      font0.getFamily();
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      zoneOffset0.equals(xYErrorRenderer0);
      logarithmicAxis0.setTickLabelFont(font0);
      XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, logarithmicAxis0, logarithmicAxis0, xYStepAreaRenderer0);
      xYPlot0.setDataset(2, (XYDataset) timeTableXYDataset0);
      xYStepAreaRenderer0.getAnnotations();
      xYPlot0.isRangePannable();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo1.getPlotInfo();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((-1.0), Double.POSITIVE_INFINITY);
      JFreeChart jFreeChart0 = new JFreeChart("hD", xYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(1.0F, 10, renderingHints0);
      Point point0 = new Point();
      Point2D point2D0 = rescaleOp0.getPoint2D(point0, point0);
      Point2D point2D1 = affineTransform0.deltaTransform(point2D0, point2D0);
      xYPlot0.zoomDomainAxes(1.0, plotRenderingInfo1, point2D1, true);
      // Undeclared exception!
      try { 
        xYPlot0.setRangeAxis((-1088), (ValueAxis) logarithmicAxis0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getLegendItems();
      PeriodAxis periodAxis0 = new PeriodAxis("");
      Stroke stroke0 = periodAxis0.getMinorTickMarkStroke();
      xYPlot0.setDomainZeroBaselineStroke(stroke0);
      xYPlot0.getDataset(65535);
      xYPlot0.getRangeZeroBaselineStroke();
      IntervalMarker intervalMarker0 = new IntervalMarker(65535, 0.0, periodAxis0.DEFAULT_TICK_MARK_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addDomainMarker(500, (Marker) intervalMarker0, layer0);
      ValueAxis valueAxis0 = xYPlot0.getDomainAxis();
      intervalMarker0.setLabelOffset(xYPlot0.DEFAULT_INSETS);
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.removeDomainMarker(500, (Marker) intervalMarker0, layer0, true);
      periodAxis0.hasListener(xYPlot0);
      xYPlot0.removeDomainMarker(1036, (Marker) intervalMarker0, layer0);
      xYPlot0.setDomainCrosshairValue(0.05, false);
      xYPlot0.clearRangeMarkers(902);
      xYPlot0.setRangeZeroBaselineStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(xYPlot0.DEFAULT_LEGEND_ITEM_BOX, (Stroke) null, xYPlot0.DEFAULT_OUTLINE_PAINT);
      xYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0);
      xYPlot0.removeDomainMarker(0, (Marker) intervalMarker0, layer0);
      xYPlot0.getRangeAxis(65535);
      xYPlot0.setDomainMinorGridlineStroke(stroke0);
      xYPlot0.setDomainAxis(1036, (ValueAxis) periodAxis0, true);
      xYPlot0.setRangeZeroBaselinePaint(valueAxis0.DEFAULT_AXIS_LINE_PAINT);
      xYPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      xYPlot0.drawZeroRangeBaseline((Graphics2D) null, (Rectangle2D) null);
      xYPlot0.getDataRange((ValueAxis) null);
      assertEquals(1037, xYPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      DateAxis dateAxis0 = new DateAxis("");
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getPlotInfo();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      fastScatterPlot0.getPlotType();
      windItemRenderer0.hasListener(fastScatterPlot0);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, symbolAxis0, dateAxis0, windItemRenderer0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.05, (-385.8623088), 392.01, 1476.0);
      Rectangle2D rectangle2D0 = xYPlot0.DEFAULT_INSETS.createInsetRectangle((Rectangle2D) rectangle2D_Double0, true, true);
      Rectangle2D rectangle2D1 = rectangle2D_Double0.createIntersection(rectangle2D0);
      Vector<LogAxis> vector0 = new Vector<LogAxis>();
      xYPlot0.drawRangeTickBands((Graphics2D) null, rectangle2D1, vector0);
      // Undeclared exception!
      try { 
        xYPlot0.setQuadrantOrigin((Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'origin' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainMinorGridlinesVisible();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      FileSystemHandling.shouldAllThrowIOExceptions();
      combinedRangeXYPlot0.clone();
      combinedRangeXYPlot0.setDomainZeroBaselineVisible(true);
      combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null, false);
      BasicStroke basicStroke0 = null;
      try {
        basicStroke0 = new BasicStroke(0.0F, 0, 10, 1.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal line join value
         //
         verifyException("java.awt.BasicStroke", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("ISk$inZc\"-(26I~_");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.getRangeZeroBaselinePaint();
      CategoryMarker categoryMarker0 = new CategoryMarker(2.0F, logAxis0.DEFAULT_AXIS_LABEL_PAINT, logAxis0.DEFAULT_TICK_MARK_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addDomainMarker(500, (Marker) categoryMarker0, layer0);
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      PeriodAxis periodAxis0 = new PeriodAxis("ISk$inZc\"-(26I~_");
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(1, (XYToolTipGenerator) null);
      XYPlot xYPlot0 = new XYPlot(defaultWindDataset0, logAxis0, periodAxis0, standardXYItemRenderer0);
      categoryMarker0.addChangeListener(xYPlot0);
      combinedRangeXYPlot0.removeDomainMarker((Marker) categoryMarker0);
      StandardXYItemRenderer standardXYItemRenderer1 = new StandardXYItemRenderer();
      ValueMarker valueMarker0 = new ValueMarker(424.084);
      combinedRangeXYPlot0.addDomainMarker(832, (Marker) valueMarker0, layer0, false);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      logAxis0.setTickMarkOutsideLength(3);
      combinedRangeXYPlot0.setRenderer(10, (XYItemRenderer) standardXYItemRenderer1, false);
      categoryMarker0.setKey(true);
      combinedRangeXYPlot0.clearDomainMarkers();
      ValueMarker valueMarker1 = null;
      try {
        valueMarker1 = new ValueMarker(500, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, standardXYItemRenderer1.DEFAULT_OUTLINE_PAINT, standardXYItemRenderer1.DEFAULT_STROKE, 343);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'alpha' value must be in the range 0.0f to 1.0f
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(500, layer0);
      combinedDomainXYPlot0.clearRangeMarkers(500);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      Layer layer1 = Layer.BACKGROUND;
      boolean boolean0 = combinedDomainXYPlot0.removeRangeMarker((-1095), (Marker) categoryMarker0, layer1, true);
      assertFalse(boolean0);
      
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedDomainXYPlot0.addRangeMarker((Marker) categoryMarker0);
      JEditorPane jEditorPane0 = new JEditorPane();
      jEditorPane0.modelToView(0);
      combinedDomainXYPlot0.drawDomainMarkers((Graphics2D) null, (Rectangle2D) null, 4, layer1);
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      combinedDomainXYPlot0.setOrientation(plotOrientation0);
      combinedDomainXYPlot0.drawZeroDomainBaseline((Graphics2D) null, (Rectangle2D) null);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getRangeAxisForDataset(2650);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 2650 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("AvY[wWr+Q");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      combinedDomainXYPlot0.setDomainCrosshairStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 10);
      TextAnchor textAnchor0 = TextAnchor.HALF_ASCENT_LEFT;
      intervalMarker0.setLabelTextAnchor(textAnchor0);
      intervalMarker0.setLabelTextAnchor(textAnchor0);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      combinedDomainXYPlot0.markerChanged(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getRangeMarkers(1017, layer0);
      SystemColor systemColor0 = SystemColor.desktop;
      combinedDomainXYPlot0.setDomainGridlinePaint(systemColor0);
      combinedDomainXYPlot0.addDomainMarker(1, (Marker) intervalMarker0, layer0, false);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      chartRenderingInfo1.getRenderingSource();
      combinedDomainXYPlot0.select(2038.5708998214377, Double.NEGATIVE_INFINITY, (Rectangle2D) rectangle2D_Double0, (RenderingSource) null);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect((-1489));
      combinedDomainXYPlot0.drawQuadrants(graphics2D0, rectangle0);
      combinedDomainXYPlot0.setRangeCrosshairValue(2038.5708998214377, false);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.drawHorizontalLine(graphics2D0, rectangle2D_Double0, 1476.0, multiplePiePlot0.DEFAULT_OUTLINE_STROKE, multiplePiePlot0.DEFAULT_BACKGROUND_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      String string0 = "M1t4!3gQt:B$L";
      SeriesRenderingOrder seriesRenderingOrder0 = combinedRangeXYPlot0.getSeriesRenderingOrder();
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      JFreeChart jFreeChart0 = new JFreeChart("M1t4!3gQt:B$L", logAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeXYPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 42);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 500, 1.0E-8, (-5066.5553), (-5066.5553));
      combinedRangeXYPlot0.removeAnnotation((XYAnnotation) xYDataImageAnnotation0, false);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.getDomainMarkers(1393, layer0);
      System.setCurrentTimeMillis(1393);
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      combinedRangeXYPlot0.setDataset(42, (XYDataset) defaultWindDataset0);
      combinedRangeXYPlot0.getRangeAxisIndex(logAxis0);
      combinedRangeXYPlot0.setDomainMinorGridlinePaint(logAxis0.DEFAULT_AXIS_LINE_PAINT);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      BasicListUI basicListUI0 = new BasicListUI();
      YIntervalSeriesCollection[] yIntervalSeriesCollectionArray0 = new YIntervalSeriesCollection[1];
      JList<YIntervalSeriesCollection> jList0 = new JList<YIntervalSeriesCollection>(yIntervalSeriesCollectionArray0);
      // Undeclared exception!
      try { 
        basicListUI0.indexToLocation(jList0, 3793);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.plaf.basic.BasicListUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangePannable(false);
      combinedRangeXYPlot0.clearRangeMarkers();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 1.0F, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addDomainMarker((-850), (Marker) intervalMarker0, layer0, true);
      combinedRangeXYPlot0.getSeriesCount();
      RingPlot ringPlot0 = new RingPlot();
      Paint paint0 = ringPlot0.lookupSectionPaint(10);
      combinedRangeXYPlot0.setDomainCrosshairPaint(paint0);
      byte[][] byteArray0 = new byte[1][7];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-93);
      byteArray1[1] = (byte) (-110);
      byteArray1[2] = (byte) (-49);
      byteArray1[3] = (byte)76;
      byteArray1[4] = (byte) (-20);
      byteArray1[5] = (byte)2;
      byteArray0[0] = byteArray1;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(2380, byteArray0);
      JFreeChart jFreeChart0 = new JFreeChart("?", ringPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, renderingHints0);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(2690, 1026, byteArray1, (-2), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^a{)1QY&i!Z+");
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(10, "P@");
      DateAxis dateAxis0 = new DateAxis("org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState", simpleTimeZone0);
      combinedDomainXYPlot0.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 6.0, dateAxis0, dateAxis0.DEFAULT_AXIS_LINE_STROKE, dateAxis0.DEFAULT_AXIS_LABEL_PAINT);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedDomainXYPlot0.setRangeCrosshairStroke(dateAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.setDomainCrosshairPaint(dateAxis0.DEFAULT_TICK_LABEL_PAINT);
      combinedDomainXYPlot0.setDomainCrosshairValue((double) 2.0F, false);
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      
      JFreeChart jFreeChart0 = new JFreeChart("", dateAxis0.DEFAULT_AXIS_LABEL_FONT, combinedDomainXYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, false, true, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.drawAxes((Graphics2D) null, (Rectangle2D) null, (Rectangle2D) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(65535, 2887);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JTextArea jTextArea0 = new JTextArea("");
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jTextArea0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getTextBounds(0, (-2110));
      xYPlot0.drawDomainMarkers(graphics2D0, (Rectangle2D) null, 59, (Layer) null);
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(0.0, xYPlot0.getDomainCrosshairValue(), 0.01);
      
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 0, (-1744), 65535, (-1744), (-1), 65535, true, true, true, true, false, true, false);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      TimeZone timeZone0 = TimeZone.getDefault();
      DateAxis dateAxis0 = new DateAxis("ZOOM_IN_DOMAIN", timeZone0);
      xYPlot0.drawDomainCrosshair(graphics2D0, (Rectangle2D) null, plotOrientation0, Double.NaN, dateAxis0, dateAxis0.DEFAULT_AXIS_LINE_STROKE, dateAxis0.DEFAULT_AXIS_LABEL_PAINT);
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(0.0, xYPlot0.getRangeCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getOrientation();
      combinedDomainXYPlot0.clearSelection();
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer();
      XYPlot xYPlot0 = new XYPlot(vectorSeriesCollection0, valueAxis0, valueAxis0, stackedXYBarRenderer0);
      xYPlot0.getLegendItems();
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.getDomainMarkers(3, layer0);
      // Undeclared exception!
      try { 
        xYPlot0.removeAnnotation((XYAnnotation) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis("%JBsu<");
      Stroke stroke0 = categoryAxis0.getAxisLineStroke();
      xYPlot0.setRangeMinorGridlineStroke(stroke0);
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      plotRenderingInfo0.clone();
      combinedRangeXYPlot0.handleClick((-1355), (-1355), plotRenderingInfo0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.zoomRangeAxes(5000000.0, (-1525.9988753695357), plotRenderingInfo0, (Point2D) point0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (5250000.0) <= upper (-1602.2988191380125).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearRangeMarkers();
      combinedDomainXYPlot0.getOrientation();
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      
      combinedDomainXYPlot0.clearSelection();
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 2264, (-722), 4033, 3, 377, 6, false, false, false, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(420);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 420, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 1578.016983, xYPlot0.DEFAULT_OUTLINE_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addRangeMarker((Marker) intervalMarker0, layer0);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, xYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      PeriodAxis periodAxis0 = new PeriodAxis("{`'{d422f|]");
      combinedRangeXYPlot0.setDomainAxis(285, (ValueAxis) periodAxis0);
      combinedRangeXYPlot0.getQuadrantOrigin();
      combinedRangeXYPlot0.configureRangeAxes();
      combinedRangeXYPlot0.getRangeMinorGridlinePaint();
      combinedRangeXYPlot0.setRangeMinorGridlinePaint(periodAxis0.DEFAULT_TICK_MARK_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.addRangeMarker((Marker) null, layer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeCrosshairValue(270.0);
      Stack<DefaultIntervalXYDataset> stack0 = new Stack<DefaultIntervalXYDataset>();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.mapDatasetToRangeAxes(3, stack0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty list not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearDomainAxes();
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("kl{i~L}&lw ILLe6)");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, numberAxis3D0.DEFAULT_TICK_MARK_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getDomainMarkers(layer0);
      Layer layer1 = Layer.FOREGROUND;
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      NumberTickUnit numberTickUnit0 = new NumberTickUnit((-2736.137), numberFormat0);
      intervalMarker0.setEndValue((-1959.0));
      numberAxis3D0.setTickUnit(numberTickUnit0, false, true);
      combinedDomainXYPlot0.removeRangeMarker((Marker) intervalMarker0, layer1);
      numberAxis3D0.setVisible(true);
      combinedDomainXYPlot0.getRangeMarkers(0, layer1);
      combinedDomainXYPlot0.getDataRange(numberAxis3D0);
      combinedDomainXYPlot0.getSeriesRenderingOrder();
      combinedDomainXYPlot0.getRangeCrosshairStroke();
      ValueAxis valueAxis0 = combinedDomainXYPlot0.getDomainAxisForDataset(0);
      assertNotNull(valueAxis0);
      
      combinedDomainXYPlot0.canSelectByRegion();
      Color color0 = (Color)combinedDomainXYPlot0.getDomainGridlinePaint();
      assertEquals(255, color0.getRed());
      
      XYLineAnnotation xYLineAnnotation0 = new XYLineAnnotation(2.0F, 0.0F, 2.0F, 0.05);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYLineAnnotation0);
      combinedDomainXYPlot0.getRangeZeroBaselineStroke();
      assertEquals(1, combinedDomainXYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      combinedDomainXYPlot0.setRangeAxis(4, valueAxis0);
      combinedDomainXYPlot0.getDomainTickBandPaint();
      int int0 = combinedDomainXYPlot0.getWeight();
      assertEquals(5, combinedDomainXYPlot0.getRangeAxisCount());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("C");
      logarithmicAxis0.setLabel((String) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logarithmicAxis0);
      Locale locale0 = Locale.CHINESE;
      NumberAxis.createStandardTickUnits(locale0);
      combinedDomainXYPlot0.setDomainCrosshairPaint(logarithmicAxis0.DEFAULT_AXIS_LABEL_PAINT);
      combinedDomainXYPlot0.setRangeAxis(500, (ValueAxis) logarithmicAxis0);
      logarithmicAxis0.centerRange((-3000.19));
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setQuadrantPaint((-783), logarithmicAxis0.DEFAULT_TICK_MARK_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (-783) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "~Gs%U*y<O'+,";
      stringArray0[1] = "~Gs%U*y<O'+,";
      SymbolAxis symbolAxis0 = new SymbolAxis("~Gs%U*y<O'+,", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("TL0jM;@G.GdJcB}z", combinedRangeXYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 500, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(2376.293877472721, 1.0F, 0.0, (-2043.4874));
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      AxisSpace axisSpace0 = combinedRangeCategoryPlot0.calculateAxisSpace(graphics2D0, rectangle2D0);
      combinedRangeXYPlot0.setFixedRangeAxisSpace(axisSpace0);
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(Double.POSITIVE_INFINITY);
      candlestickRenderer0.getBaseURLGenerator();
      candlestickRenderer0.setSeriesURLGenerator(1462, (XYURLGenerator) null, false);
      Paint paint0 = candlestickRenderer0.getItemFillPaint(77, 3647, false);
      combinedRangeXYPlot0.setDomainGridlinePaint(paint0);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer();
      combinedRangeXYPlot0.setRenderer((XYItemRenderer) cyclicXYItemRenderer0);
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation(3);
      assertNotNull(axisLocation0);
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeXYPlot0.getRendererCount());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "org.jfree.data.ComparableObjectSeries";
      stringArray0[1] = "org.jfree.data.ComparableObjectSeries";
      stringArray0[2] = "org.jfree.data.ComparableObjectSeries";
      SymbolAxis symbolAxis0 = new SymbolAxis("org.jfree.data.ComparableObjectSeries", stringArray0);
      combinedDomainXYPlot0.setRangeAxis((ValueAxis) symbolAxis0);
      combinedDomainXYPlot0.getPlotType();
      combinedDomainXYPlot0.setRangeCrosshairValue((-3664.31));
      combinedDomainXYPlot0.isDomainPannable();
      assertEquals(1, combinedDomainXYPlot0.getRangeAxisCount());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ValueMarker valueMarker0 = new ValueMarker((-1434.0643176551));
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.addDomainMarker(545, (Marker) valueMarker0, layer0, false);
      assertEquals(1, xYPlot0.getWeight());
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      LogAxis logAxis0 = new LogAxis();
      AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(logAxis0);
      axisChangeEvent0.getChart();
      combinedRangeXYPlot0.getDomainAxisLocation(500);
      axisChangeEvent0.setChart((JFreeChart) null);
      ChartChangeEventType chartChangeEventType0 = ChartChangeEventType.GENERAL;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeAxisLocation((AxisLocation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("");
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer();
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, numberAxis0, numberAxis0, xYDifferenceRenderer0);
      int int0 = xYPlot0.getWeight();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeCrosshairVisible(false);
      int int0 = 0;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeAxisLocation(0, (AxisLocation) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Date[] dateArray0 = new Date[0];
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 10;
      doubleArray0[1] = (double) 1.0F;
      doubleArray0[2] = (double) 1.0F;
      doubleArray0[3] = (-1382.86581715);
      doubleArray0[4] = (double) 10;
      DefaultHighLowDataset defaultHighLowDataset0 = new DefaultHighLowDataset(10, dateArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      XYBarDataset xYBarDataset0 = new XYBarDataset(defaultHighLowDataset0, 0.0);
      combinedRangeXYPlot0.equals(xYBarDataset0);
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(63);
      combinedRangeXYPlot0.getIndexOf(standardXYItemRenderer0);
      ValueMarker valueMarker0 = new ValueMarker(1, standardXYItemRenderer0.DEFAULT_VALUE_LABEL_PAINT, standardXYItemRenderer0.DEFAULT_STROKE);
      standardXYItemRenderer0.getLegendShape(500);
      combinedRangeXYPlot0.setRangeGridlinesVisible(false);
      combinedRangeXYPlot0.removeDomainMarker(63, (Marker) valueMarker0, (Layer) null);
      combinedRangeXYPlot0.getDomainCrosshairPaint();
      combinedRangeXYPlot0.getRangeMinorGridlineStroke();
      combinedRangeXYPlot0.getRangeGridlineStroke();
      combinedRangeXYPlot0.setDomainGridlineStroke(standardXYItemRenderer0.DEFAULT_OUTLINE_STROKE);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      combinedRangeXYPlot0.equals(integer0);
      assertFalse(combinedRangeXYPlot0.isRangeGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      boolean boolean0 = false;
      combinedDomainXYPlot0.setDomainCrosshairVisible(false);
      combinedDomainXYPlot0.setWeight(56);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      combinedDomainXYPlot0.equals(extendedCategoryAxis0);
      combinedDomainXYPlot0.isRangeZeroBaselineVisible();
      combinedDomainXYPlot0.getFixedLegendItems();
      combinedDomainXYPlot0.getQuadrantOrigin();
      double double0 = (-1.0);
      MetalTabbedPaneUI metalTabbedPaneUI0 = new MetalTabbedPaneUI();
      JTabbedPane jTabbedPane0 = new JTabbedPane();
      // Undeclared exception!
      try { 
        metalTabbedPaneUI0.getTabBounds(jTabbedPane0, 56);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.plaf.basic.BasicTabbedPaneUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYPlot xYPlot0 = new XYPlot(xYSeriesCollection0, cyclicNumberAxis0, cyclicNumberAxis0, xYBoxAndWhiskerRenderer0);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.getRangeMarkers((-2469), layer0);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      AxisLocation axisLocation0 = combinedRangeXYPlot0.getRangeAxisLocation(1571);
      BasicStroke basicStroke0 = (BasicStroke)PolarPlot.DEFAULT_GRIDLINE_STROKE;
      combinedRangeXYPlot0.setDomainMinorGridlineStroke(basicStroke0);
      combinedRangeXYPlot0.setRangeAxisLocation(0, axisLocation0);
      combinedRangeXYPlot0.setRangeZeroBaselineStroke(basicStroke0);
      combinedRangeXYPlot0.setDomainAxisLocation(axisLocation0);
      int int0 = 2148;
      Date date0 = null;
      String string0 = "W1IgkN?* zPd[^`XxS";
      SimpleTimeZone simpleTimeZone0 = null;
      try {
        simpleTimeZone0 = new SimpleTimeZone(10, "W1IgkN?* zPd[^`XxS", 3, (-1133), 2148, 2148, 0, (-1133), (-4108), 10, 2723);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal start day of week 2148
         //
         verifyException("java.util.SimpleTimeZone", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.FORWARD;
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Paint paint0 = ganttRenderer0.getIncompletePaint();
      combinedDomainXYPlot0.setRangeCrosshairPaint(paint0);
      combinedDomainXYPlot0.setWeight(1832);
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker(58, (Marker) valueMarker0, layer0);
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(ganttRenderer0.DEFAULT_OUTLINE_STROKE);
      assertEquals(1832, combinedDomainXYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(50.0, 50.0, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(50.0);
      intervalMarker0.setStartValue(1585.728);
      Font font0 = candlestickRenderer0.getBaseItemLabelFont();
      intervalMarker0.setLabelFont(font0);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addDomainMarker((-604), (Marker) intervalMarker0, layer0);
      combinedRangeXYPlot0.getOrientation();
      combinedRangeXYPlot0.getRangeMarkers(layer0);
      combinedRangeXYPlot0.configureRangeAxes();
      combinedRangeXYPlot0.setRangeCrosshairValue((double) 0, false);
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(0.0, combinedRangeXYPlot0.getRangeCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("Rich Unger");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      ValueMarker valueMarker0 = new ValueMarker(2.0F, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, dateAxis0.DEFAULT_TICK_MARK_STROKE);
      boolean boolean0 = combinedDomainXYPlot0.removeRangeMarker((Marker) valueMarker0);
      assertFalse(boolean0);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XIntervalSeriesCollection xIntervalSeriesCollection0 = new XIntervalSeriesCollection();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "l0H|?ct>@t";
      stringArray0[1] = "l0H|?ct>@t";
      stringArray0[2] = "l0H|?ct>@t";
      stringArray0[3] = "l0H|?ct>@t";
      stringArray0[4] = "l0H|?ct>@t";
      stringArray0[5] = "l0H|?ct>@t";
      SymbolAxis symbolAxis0 = new SymbolAxis("l0H|?ct>@t", stringArray0);
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      XYPlot xYPlot0 = new XYPlot(xIntervalSeriesCollection0, symbolAxis0, symbolAxis0, deviationRenderer0);
      // Undeclared exception!
      try { 
        xYPlot0.setQuadrantPaint(3567, deviationRenderer0.DEFAULT_VALUE_LABEL_PAINT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (3567) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      xYShapeAnnotation0.clone();
      xYShapeAnnotation0.setToolTipText("M!z ^~q?H(:%-");
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0, true);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(valueAxis0);
      Marker marker0 = null;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.addDomainMarker((Marker) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      Locale locale0 = Locale.UK;
      locale0.getUnicodeLocaleAttributes();
      timeZone0.getDisplayName(false, 0, locale0);
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(timeZone0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("hD");
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer();
      logarithmicAxis0.setAutoRangeNextLogFlag(true);
      Font font0 = SpiderWebPlot.DEFAULT_LABEL_FONT;
      font0.getFamily();
      logarithmicAxis0.setTickLabelFont(font0);
      XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, logarithmicAxis0, logarithmicAxis0, xYStepAreaRenderer0);
      xYPlot0.isRangePannable();
      // Undeclared exception!
      try { 
        xYPlot0.setRangeAxis((-1088), (ValueAxis) logarithmicAxis0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearRangeMarkers();
      combinedDomainXYPlot0.getRangeGridlinePaint();
      int int0 = 1297;
      Year year0 = new Year();
      year0.getMiddleMillisecond();
      RegularTimePeriod regularTimePeriod0 = year0.previous();
      year0.getMiddleMillisecond();
      regularTimePeriod0.getStart();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(1297, 10, regularTimePeriod0);
      dynamicTimeSeriesCollection0.hasListener(combinedDomainXYPlot0);
      combinedDomainXYPlot0.setDataset(0, (XYDataset) dynamicTimeSeriesCollection0);
      combinedDomainXYPlot0.isRangeZoomable();
      combinedDomainXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      combinedDomainXYPlot0.setFixedRangeAxisSpace((AxisSpace) null, true);
      String string0 = null;
      int int1 = 1323;
      Quarter quarter0 = null;
      try {
        quarter0 = new Quarter(1323, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Quarter outside valid range.
         //
         verifyException("org.jfree.data.time.Quarter", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers((-2922), layer0);
      combinedDomainXYPlot0.setDomainMinorGridlinesVisible(true);
      assertTrue(combinedDomainXYPlot0.isDomainMinorGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      int int0 = 4;
      xYPlot0.getDomainAxisLocation(4);
      xYPlot0.getDomainAxisLocation();
      int int1 = (-102);
      // Undeclared exception!
      try { 
        xYPlot0.getDomainAxisForDataset((-102));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index -102 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Plot plot0 = xYPlot0.getRootPlot();
      JFreeChart jFreeChart0 = new JFreeChart(plot0);
      XYPlot xYPlot1 = jFreeChart0.getXYPlot();
      xYPlot0.configureDomainAxes();
      xYPlot1.getRangeCrosshairPaint();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      xYPlot1.setRenderer(0, (XYItemRenderer) xYBoxAndWhiskerRenderer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      BasicListUI basicListUI0 = new BasicListUI();
      SamplingXYLineRenderer[] samplingXYLineRendererArray0 = new SamplingXYLineRenderer[8];
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      samplingXYLineRendererArray0[0] = samplingXYLineRenderer0;
      SamplingXYLineRenderer samplingXYLineRenderer1 = new SamplingXYLineRenderer();
      samplingXYLineRendererArray0[1] = samplingXYLineRenderer1;
      SamplingXYLineRenderer samplingXYLineRenderer2 = new SamplingXYLineRenderer();
      samplingXYLineRendererArray0[2] = samplingXYLineRenderer2;
      SamplingXYLineRenderer samplingXYLineRenderer3 = new SamplingXYLineRenderer();
      samplingXYLineRendererArray0[3] = samplingXYLineRenderer3;
      SamplingXYLineRenderer samplingXYLineRenderer4 = new SamplingXYLineRenderer();
      samplingXYLineRendererArray0[4] = samplingXYLineRenderer4;
      SamplingXYLineRenderer samplingXYLineRenderer5 = new SamplingXYLineRenderer();
      samplingXYLineRendererArray0[5] = samplingXYLineRenderer5;
      SamplingXYLineRenderer samplingXYLineRenderer6 = new SamplingXYLineRenderer();
      samplingXYLineRendererArray0[6] = samplingXYLineRenderer6;
      SamplingXYLineRenderer samplingXYLineRenderer7 = new SamplingXYLineRenderer();
      samplingXYLineRendererArray0[7] = samplingXYLineRenderer7;
      JList<SamplingXYLineRenderer> jList0 = new JList<SamplingXYLineRenderer>(samplingXYLineRendererArray0);
      // Undeclared exception!
      try { 
        basicListUI0.indexToLocation(jList0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.plaf.basic.BasicListUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      MockDate mockDate0 = new MockDate(30, 30, 30);
      TimeZone timeZone0 = TimeZone.getTimeZone("TimeSeriesDataset.addSeries(): cannot add null array of values.");
      Day day0 = new Day(mockDate0, timeZone0);
      RegularTimePeriod regularTimePeriod0 = day0.next();
      PeriodAxis periodAxis0 = new PeriodAxis("HH:mm:ss", regularTimePeriod0, regularTimePeriod0);
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
      StandardXYURLGenerator standardXYURLGenerator0 = new StandardXYURLGenerator("%", "{0}: ({1}, {2})", "TimeSeriesDataset.addSeries(): cannot add null array of values.");
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer(30, standardXYZToolTipGenerator0, standardXYURLGenerator0);
      XYPlot xYPlot0 = new XYPlot(yIntervalSeriesCollection0, periodAxis0, periodAxis0, xYStepAreaRenderer0);
      // Undeclared exception!
      try { 
        xYPlot0.getQuadrantPaint((-2970));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (-2970) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 0);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addRangeMarker((Marker) intervalMarker0, layer0);
      PropertyResourceBundle propertyResourceBundle0 = (PropertyResourceBundle)XYPlot.localizationResources;
      TextAnchor textAnchor0 = TextAnnotation.DEFAULT_ROTATION_ANCHOR;
      intervalMarker0.setLabelTextAnchor(textAnchor0);
      XYPlot.localizationResources = (ResourceBundle) propertyResourceBundle0;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      intervalMarker0.setLabelAnchor(rectangleAnchor0);
      boolean boolean0 = combinedRangeXYPlot0.removeRangeMarker(0, (Marker) intervalMarker0, layer0, false);
      assertTrue(boolean0);
      
      ValueAxis valueAxis0 = combinedRangeXYPlot0.getDomainAxis();
      Color color0 = (Color)combinedRangeXYPlot0.getDomainZeroBaselinePaint();
      assertEquals((-16777216), color0.getRGB());
      
      combinedRangeXYPlot0.removeRangeMarker(0, (Marker) intervalMarker0, layer0);
      combinedRangeXYPlot0.setDomainZeroBaselineStroke(valueAxis0.DEFAULT_TICK_MARK_STROKE);
      boolean boolean1 = combinedRangeXYPlot0.isDomainPannable();
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainAxisLocation(0);
      combinedRangeXYPlot0.getDomainMinorGridlineStroke();
      AffineTransform affineTransform0 = AffineTransform.getShearInstance(4.0, 10);
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: 10
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setDomainGridlinesVisible(false);
      XYLineAnnotation xYLineAnnotation0 = new XYLineAnnotation(10, 1.0F, (-682.475960534322), 10);
      combinedDomainXYPlot0.equals(xYLineAnnotation0);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      Layer layer0 = Layer.FOREGROUND;
      categoryMarker0.clone();
      combinedDomainXYPlot0.addDomainMarker((-1091), (Marker) categoryMarker0, layer0, false);
      combinedDomainXYPlot0.setDomainCrosshairValue(1868.376753161);
      assertFalse(combinedDomainXYPlot0.isDomainGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("The index value (");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      assertNotNull(axisLocation0);
      
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = StandardXYToolTipGenerator.getTimeSeriesInstance();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Chronology.ofLocale(locale0);
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer(0, standardXYToolTipGenerator0, (XYURLGenerator) null);
      xYStepAreaRenderer0.setBaseLegendTextFont(logAxis0.DEFAULT_AXIS_LABEL_FONT);
      logAxis0.equals(xYStepAreaRenderer0);
      AxisLocation.getOpposite(axisLocation0);
      combinedDomainXYPlot0.setDomainAxisLocation(500, axisLocation0, false);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(valueAxis0);
      combinedRangeXYPlot0.getRangeAxisEdge(0);
      Marker marker0 = null;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.addDomainMarker((Marker) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      periodAxis0.setRightArrow(xYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      xYPlot0.setDomainAxis((ValueAxis) periodAxis0);
      xYPlot0.getDomainCrosshairStroke();
      ValueMarker valueMarker0 = new ValueMarker(10, xYPlot0.DEFAULT_GRIDLINE_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.removeDomainMarker(500, (Marker) valueMarker0, layer0, false);
      xYPlot0.getRangeAxisCount();
      ArrayList<ModuloAxis> arrayList0 = new ArrayList<ModuloAxis>();
      // Undeclared exception!
      try { 
        xYPlot0.mapDatasetToRangeAxes(1, arrayList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty list not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setDomainZeroBaselineVisible(false);
      Color color0 = (Color)LabelBlock.DEFAULT_PAINT;
      xYPlot0.setBackgroundPaint(color0);
      WindNeedle windNeedle0 = new WindNeedle();
      Stroke stroke0 = windNeedle0.getOutlineStroke();
      ValueMarker valueMarker0 = new ValueMarker(10, xYPlot0.DEFAULT_BACKGROUND_PAINT, stroke0);
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.removeDomainMarker((Marker) valueMarker0, layer0);
      double double0 = (-2.147483648E9);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker((-3062.53639480796), 10, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedRangeXYPlot0.removeDomainMarker((Marker) intervalMarker0);
      AxisSpace axisSpace0 = new AxisSpace();
      axisSpace0.setLeft((-3062.53639480796));
      Font font0 = LegendTitle.DEFAULT_ITEM_FONT;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", font0, combinedDomainXYPlot0, false);
      int int0 = (-2190);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage((-2190), (-2190));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (-2190) and height (-2190) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("ISk$inZc\"-(26I~_");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.getRangeZeroBaselinePaint();
      CategoryMarker categoryMarker0 = new CategoryMarker(2.0F, logAxis0.DEFAULT_AXIS_LABEL_PAINT, logAxis0.DEFAULT_TICK_MARK_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addDomainMarker(0, (Marker) categoryMarker0, layer0);
      combinedRangeXYPlot0.removeDomainMarker((Marker) categoryMarker0);
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer();
      standardXYItemRenderer0.lookupSeriesShape(343);
      logAxis0.setTickMarkOutsideLength(3);
      combinedRangeXYPlot0.setRenderer(0, (XYItemRenderer) standardXYItemRenderer0, false);
      categoryMarker0.setKey(true);
      combinedRangeXYPlot0.setRangeTickBandPaint(logAxis0.DEFAULT_AXIS_LABEL_PAINT);
      combinedRangeXYPlot0.removeRangeMarker((Marker) categoryMarker0);
      DatasetChangeEvent datasetChangeEvent0 = null;
      combinedRangeXYPlot0.datasetChanged((DatasetChangeEvent) null);
      combinedRangeXYPlot0.clearDomainMarkers();
      ValueMarker valueMarker0 = new ValueMarker((-2880.845675148627), combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      valueMarker0.addChangeListener(combinedRangeXYPlot0);
      combinedRangeXYPlot0.addDomainMarker(0, (Marker) valueMarker0, layer0);
      combinedRangeXYPlot0.clearDomainAxes();
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(85, (-139), (-1758));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -1758
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("J(~5");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation(3);
      axisLocation0.getOpposite();
      axisLocation0.getOpposite();
      combinedDomainXYPlot0.clearDomainAxes();
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0, true);
      combinedDomainXYPlot0.getAnnotations();
      combinedDomainXYPlot0.getDatasetRenderingOrder();
      int int0 = combinedDomainXYPlot0.getSeriesCount();
      assertEquals(0, int0);
      
      combinedDomainXYPlot0.mapDatasetToRangeAxis(0, 492);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[7];
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer(0);
      xYItemRendererArray0[0] = (XYItemRenderer) xYStepAreaRenderer0;
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      xYItemRendererArray0[1] = (XYItemRenderer) deviationRenderer0;
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer();
      xYItemRendererArray0[2] = (XYItemRenderer) xYBarRenderer0;
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(81.0);
      xYItemRendererArray0[3] = (XYItemRenderer) candlestickRenderer0;
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer();
      xYItemRendererArray0[4] = (XYItemRenderer) stackedXYBarRenderer0;
      XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2();
      xYItemRendererArray0[5] = (XYItemRenderer) xYAreaRenderer2_0;
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      candlestickRenderer0.getURLGenerator(2, 1, true);
      XYStepAreaRenderer xYStepAreaRenderer1 = new XYStepAreaRenderer(0, standardXYToolTipGenerator0, (XYURLGenerator) null);
      xYItemRendererArray0[6] = (XYItemRenderer) xYStepAreaRenderer1;
      combinedRangeXYPlot0.setRenderers(xYItemRendererArray0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point point0 = new Point(2582, 2582);
      AffineTransform affineTransform0 = AffineTransform.getTranslateInstance(0.0, (-786.39387));
      XYSeriesCollection[] xYSeriesCollectionArray0 = new XYSeriesCollection[9];
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection((XYSeries) null);
      xYSeriesCollectionArray0[0] = xYSeriesCollection0;
      XYSeriesCollection xYSeriesCollection1 = new XYSeriesCollection();
      xYSeriesCollectionArray0[1] = xYSeriesCollection1;
      XYSeriesCollection xYSeriesCollection2 = new XYSeriesCollection();
      xYSeriesCollectionArray0[2] = xYSeriesCollection2;
      XYSeriesCollection xYSeriesCollection3 = new XYSeriesCollection();
      xYSeriesCollectionArray0[3] = xYSeriesCollection3;
      XYSeriesCollection xYSeriesCollection4 = new XYSeriesCollection();
      xYSeriesCollectionArray0[4] = xYSeriesCollection4;
      XYSeriesCollection xYSeriesCollection5 = new XYSeriesCollection();
      xYSeriesCollectionArray0[5] = xYSeriesCollection5;
      XYSeriesCollection xYSeriesCollection6 = new XYSeriesCollection((XYSeries) null);
      xYSeriesCollectionArray0[6] = xYSeriesCollection6;
      XYSeries xYSeries0 = new XYSeries(stackedXYBarRenderer0.ZERO, true);
      XYSeriesCollection xYSeriesCollection7 = new XYSeriesCollection(xYSeries0);
      xYSeriesCollectionArray0[7] = xYSeriesCollection7;
      XYSeriesCollection xYSeriesCollection8 = new XYSeriesCollection((XYSeries) null);
      xYSeriesCollectionArray0[8] = xYSeriesCollection8;
      JList<XYSeriesCollection> jList0 = new JList<XYSeriesCollection>(xYSeriesCollectionArray0);
      Point point1 = jList0.indexToLocation(1);
      Point2D point2D0 = affineTransform0.deltaTransform((Point2D) point1, (Point2D) point0);
      point0.setLocation(point2D0);
      combinedRangeXYPlot0.zoomDomainAxes((double) 3, plotRenderingInfo0, (Point2D) point0);
      combinedRangeXYPlot0.getRangeAxis(0);
      assertEquals(7, combinedRangeXYPlot0.getRendererCount());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      DateAxis dateAxis0 = new DateAxis("labelPaint");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      LegendItemCollection legendItemCollection0 = combinedRangeCategoryPlot0.getLegendItems();
      legendItemCollection0.iterator();
      xYPlot0.setFixedLegendItems(legendItemCollection0);
      assertFalse(XYPlot.DEFAULT_CROSSHAIR_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot((ValueDataset) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "2S=zO]77dA.b{6|";
      stringArray0[2] = "";
      stringArray0[3] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(symbolAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(thermometerPlot0);
      axisChangeEvent0.setChart(jFreeChart0);
      thermometerPlot0.axisChanged(axisChangeEvent0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(valueAxis0);
      combinedRangeXYPlot0.getRenderer();
      TextTitle textTitle0 = new TextTitle("");
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(1876.00597520028, 0, textTitle0);
      combinedRangeXYPlot0.addAnnotation((XYAnnotation) xYTitleAnnotation0, false);
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeXYPlot0.getWeight());
      assertTrue(combinedRangeXYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      double double0 = 322.07379774244;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      chartRenderingInfo0.clear();
      Point2D.Float point2D_Float0 = new Point2D.Float();
      chartRenderingInfo0.getEntityCollection();
      combinedDomainXYPlot0.setDomainMinorGridlinesVisible(false);
      BasicStroke basicStroke0 = null;
      try {
        basicStroke0 = new BasicStroke(2024.624F, 10, 680, (-2212.4F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal end cap value
         //
         verifyException("java.awt.BasicStroke", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setNoDataMessage("Overwritten values from: ");
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      Stroke stroke0 = stackedAreaRenderer0.getBaseStroke();
      combinedRangeXYPlot0.setDomainCrosshairStroke(stroke0);
      combinedRangeXYPlot0.getFixedLegendItems();
      BasicStroke basicStroke0 = (BasicStroke)combinedRangeXYPlot0.getDomainCrosshairStroke();
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      
      NumberAxis numberAxis0 = (NumberAxis)combinedRangeXYPlot0.getRangeAxis(0);
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      assertNotNull(numberAxis0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Index ", xYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp((-4435.32F), 1.0F, renderingHints0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      jFreeChart0.createBufferedImage(10, 1514, 10, chartRenderingInfo0);
      int[] intArray0 = new int[2];
      intArray0[0] = 10;
      intArray0[1] = 15;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-1167), (-1167), intArray0, 1245, false, 0, 5003);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation0 = categoryPlot0.getDomainAxisLocation(10);
      float[][] floatArray0 = new float[9][5];
      float[] floatArray1 = new float[1];
      floatArray1[0] = (float) 10;
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[7];
      floatArray2[0] = 1.0F;
      floatArray2[1] = 1.0F;
      floatArray2[2] = (float) 10;
      floatArray2[3] = (float) 10;
      floatArray2[4] = 1.0F;
      floatArray2[5] = (float) 10;
      floatArray2[6] = (float) 10;
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[9];
      floatArray3[0] = 1.0F;
      floatArray3[1] = 1.0F;
      floatArray3[2] = 1.0F;
      floatArray3[3] = 1.0F;
      floatArray3[4] = 1.0F;
      floatArray3[5] = 1.0F;
      floatArray3[6] = 1.0F;
      floatArray3[7] = 0.5F;
      floatArray3[8] = (float) 10;
      floatArray0[2] = floatArray3;
      float[] floatArray4 = new float[7];
      floatArray4[0] = 1.0F;
      floatArray4[1] = 1.0F;
      floatArray4[2] = 1.0F;
      floatArray4[3] = (float) 10;
      floatArray4[4] = (float) 10;
      floatArray4[5] = 2246.7F;
      floatArray4[6] = 1.0F;
      floatArray0[3] = floatArray4;
      float[] floatArray5 = new float[9];
      floatArray5[0] = 2246.7F;
      floatArray5[1] = 1.0F;
      floatArray5[2] = (-1198.3F);
      floatArray5[3] = 1.0F;
      floatArray5[4] = 1.0F;
      floatArray5[5] = 1.0F;
      floatArray5[6] = (float) 10;
      floatArray5[7] = (-1803.1454F);
      floatArray5[8] = 1.0F;
      floatArray0[4] = floatArray5;
      float[] floatArray6 = new float[7];
      floatArray6[0] = (float) 10;
      floatArray6[1] = 1.0F;
      floatArray6[2] = (-1198.3F);
      floatArray6[3] = 1.0F;
      floatArray6[4] = (float) 10;
      floatArray6[5] = (float) 10;
      floatArray6[6] = 1.0F;
      floatArray0[5] = floatArray6;
      float[] floatArray7 = new float[1];
      floatArray7[0] = 2246.7F;
      floatArray0[6] = floatArray7;
      float[] floatArray8 = new float[6];
      floatArray8[0] = 0.0F;
      floatArray8[1] = 1.0F;
      floatArray8[2] = 1114.4653F;
      floatArray8[3] = (-1198.3F);
      floatArray8[4] = 1.0F;
      floatArray8[5] = (-4.0F);
      floatArray0[7] = floatArray8;
      float[] floatArray9 = new float[2];
      floatArray9[0] = (float) 10;
      floatArray9[1] = 1.0F;
      floatArray0[8] = floatArray9;
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, numberAxis3D0, numberAxis3D0);
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      Plot.resolveDomainAxisLocation(axisLocation0, plotOrientation0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainAxisLocation((AxisLocation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(10);
      candlestickRenderer0.clearSeriesStrokes(false);
      Paint paint0 = candlestickRenderer0.lookupSeriesOutlinePaint((-1433));
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(paint0);
      combinedDomainXYPlot0.getDomainCrosshairStroke();
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(0, 43, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 0
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getSeriesRenderingOrder();
      combinedDomainXYPlot0.isRangeMinorGridlinesVisible();
      combinedDomainXYPlot0.getDatasetRenderingOrder();
      combinedDomainXYPlot0.getDatasetRenderingOrder();
      Color color0 = null;
      try {
        color0 = new Color(1.0F, 1.0F, (-1995.3485F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Color parameter outside of expected range: Blue
         //
         verifyException("java.awt.Color", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Color color0 = (Color)XYTextAnnotation.DEFAULT_PAINT;
      combinedDomainXYPlot0.setBackgroundPaint(color0);
      combinedDomainXYPlot0.getRangeCrosshairPaint();
      combinedDomainXYPlot0.canSelectByPoint();
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      combinedDomainXYPlot0.getDomainZeroBaselinePaint();
      boolean boolean0 = combinedDomainXYPlot0.isDomainGridlinesVisible();
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.canSelectByRegion();
      combinedDomainXYPlot0.getRenderer();
      combinedDomainXYPlot0.getDomainMinorGridlinePaint();
      String string0 = "";
      Font font0 = Font.decode("AmGAuPrl");
      Color color0 = DebugGraphics.flashColor();
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.LEFT;
      TextTitle textTitle0 = null;
      try {
        textTitle0 = new TextTitle("", font0, color0, (RectangleEdge) null, horizontalAlignment0, (VerticalAlignment) null, combinedDomainXYPlot0.DEFAULT_INSETS);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'position' argument.
         //
         verifyException("org.jfree.chart.title.Title", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      int int0 = (-923);
      combinedDomainXYPlot0.clearDomainMarkers((-923));
      int int1 = 679;
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      Class<CategoryAxis3D> class0 = CategoryAxis3D.class;
      // Undeclared exception!
      try { 
        categoryMarker0.getListeners(class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.jfree.chart.axis.CategoryAxis3D; cannot be cast to [Ljava.util.EventListener;
         //
         verifyException("javax.swing.event.EventListenerList", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.getSeriesItemLabelPaint(10);
      combinedDomainXYPlot0.setDomainTickBandPaint((Paint) null);
      int int0 = 0;
      int int1 = 66;
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(0, 0, 66);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 66
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
      defaultKeyedValues2DDataset0.removeChangeListener(multiplePiePlot0);
      Paint paint0 = multiplePiePlot0.getAggregatedItemsPaint();
      xYPlot0.setDomainMinorGridlinePaint(paint0);
      // Undeclared exception!
      try { 
        xYPlot0.getDomainAxisForDataset(2542);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 2542 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.clearDomainAxes();
      PlotOrientation plotOrientation0 = xYPlot0.getOrientation();
      xYPlot0.setOrientation(plotOrientation0);
      XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[7];
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      xYItemRendererArray0[0] = (XYItemRenderer) xYErrorRenderer0;
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      xYItemRendererArray0[1] = (XYItemRenderer) clusteredXYBarRenderer0;
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer();
      xYItemRendererArray0[2] = (XYItemRenderer) xYAreaRenderer0;
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer(0);
      xYItemRendererArray0[3] = (XYItemRenderer) stackedXYAreaRenderer0;
      xYPlot0.getSeriesCount();
      xYPlot0.getDomainAxisEdge(3);
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
      xYItemRendererArray0[4] = (XYItemRenderer) stackedXYAreaRenderer2_0;
      // Undeclared exception!
      try { 
        clusteredXYBarRenderer0.setLegendShape((-1643), stackedXYAreaRenderer0.DEFAULT_SHAPE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(2.5E11, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeRangeMarker((Marker) valueMarker0, layer0);
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainXYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1127, 232, 0.0, (double) 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      int[] intArray0 = new int[0];
      Polygon polygon0 = null;
      try {
        polygon0 = new Polygon(intArray0, intArray0, 15);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // npoints > xpoints.length || npoints > ypoints.length
         //
         verifyException("java.awt.Polygon", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.isDomainZoomable();
      combinedDomainXYPlot0.getFixedDomainAxisSpace();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getSeriesOutlinePaint(10);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeCrosshairPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainMinorGridlinesVisible();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedRangeXYPlot0.removeRangeMarker((Marker) categoryMarker0);
      combinedRangeXYPlot0.clone();
      int int0 = 0;
      BasicStroke basicStroke0 = null;
      try {
        basicStroke0 = new BasicStroke(0.0F, 0, 10, 1.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal line join value
         //
         verifyException("java.awt.BasicStroke", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      boolean boolean0 = true;
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation((-4466));
      axisLocation0.getOpposite();
      AxisLocation.getOpposite(axisLocation0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainAxisLocation((-4466), axisLocation0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot1 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.add((XYPlot) combinedDomainXYPlot1);
      combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 2357.2367471287);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      JDBCPieDataset jDBCPieDataset0 = null;
      try {
        jDBCPieDataset0 = new JDBCPieDataset((Connection) null, "v%|\"Tt(S_3'(E=77^nn");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // A connection must be supplied.
         //
         verifyException("org.jfree.data.jdbc.JDBCPieDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(0);
      XYPlot xYPlot0 = new XYPlot(timePeriodValuesCollection0, (ValueAxis) null, (ValueAxis) null, xYAreaRenderer0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation0 = categoryPlot0.getRangeAxisLocation();
      xYAreaRenderer0.clearSeriesPaints(false);
      xYPlot0.setRangeAxisLocation(5, axisLocation0, false);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(4, 1.0F, 0.0, 0.0);
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      rectangle2D_Double0.setRect((double) 1.0F, 25.5, 0.0, (double) 0);
      ArrayList<NumberAxis> arrayList0 = new ArrayList<NumberAxis>();
      xYPlot0.drawRangeGridlines((Graphics2D) null, rectangle0, arrayList0);
      xYPlot0.setRangeMinorGridlineStroke(xYAreaRenderer0.DEFAULT_STROKE);
      xYPlot0.clearSelection();
      xYPlot0.setDomainCrosshairLockedOnData(true);
      assertTrue(xYPlot0.isNotify());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.getDomainGridlineStroke();
      TimeSeries timeSeries0 = new TimeSeries(false);
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
      String string0 = "Null 'stroke' argument.";
      // Undeclared exception!
      try { 
        timeSeries0.update((RegularTimePeriod) null, (Number) 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'period' argument.
         //
         verifyException("org.jfree.data.time.TimeSeriesDataItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeCrosshairVisible(false);
      int int0 = (-272);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToDomainAxis((-2472), (-272));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'index' >= 0.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
      
      combinedRangeXYPlot0.setRangeCrosshairLockedOnData(false);
      assertFalse(combinedRangeXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DateAxis dateAxis0 = new DateAxis("$Zr$@X]dH");
      dateAxis0.getRange();
      dateAxis0.setRightArrow(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      combinedDomainXYPlot0.setDomainAxis(1, (ValueAxis) dateAxis0, true);
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(500);
      AffineTransform affineTransform1 = new AffineTransform(affineTransform0);
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform1, true, true);
      Rectangle2D rectangle2D0 = dateAxis0.DEFAULT_TICK_LABEL_FONT.getMaxCharBounds(fontRenderContext0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo1);
      xYItemRendererState0.getCrosshairState();
      boolean boolean0 = combinedDomainXYPlot0.render((Graphics2D) null, rectangle2D0, 4, plotRenderingInfo0, (CrosshairState) null);
      assertEquals(2, combinedDomainXYPlot0.getDomainAxisCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      LegendItemCollection legendItemCollection0 = xYPlot0.getLegendItems();
      xYPlot0.setFixedLegendItems(legendItemCollection0);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      Stroke stroke0 = periodAxis0.getMinorTickMarkStroke();
      xYPlot0.setDomainZeroBaselineStroke(stroke0);
      xYPlot0.getDataset(65535);
      xYPlot0.getRangeZeroBaselineStroke();
      IntervalMarker intervalMarker0 = new IntervalMarker(65535, 0.0, periodAxis0.DEFAULT_TICK_MARK_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addDomainMarker(500, (Marker) intervalMarker0, layer0);
      ValueAxis valueAxis0 = xYPlot0.getDomainAxis();
      intervalMarker0.setLabelOffset(xYPlot0.DEFAULT_INSETS);
      xYPlot0.getFixedRangeAxisSpace();
      periodAxis0.hasListener(xYPlot0);
      xYPlot0.removeDomainMarker(1036, (Marker) intervalMarker0, layer0);
      intervalMarker0.setLabelPaint(periodAxis0.DEFAULT_TICK_MARK_PAINT);
      xYPlot0.setDomainCrosshairValue(0.05, true);
      xYPlot0.clearRangeMarkers(902);
      xYPlot0.setRangeZeroBaselineStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
      xYPlot0.removeDomainMarker(0, (Marker) intervalMarker0, layer0);
      xYPlot0.getRangeAxis(65535);
      xYPlot0.setDomainMinorGridlineStroke(stroke0);
      xYPlot0.setDomainAxis(1036, (ValueAxis) periodAxis0, true);
      xYPlot0.setRangeZeroBaselinePaint(valueAxis0.DEFAULT_AXIS_LINE_PAINT);
      assertEquals(1037, xYPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      DateAxis dateAxis0 = new DateAxis("");
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      JFreeChart jFreeChart0 = new JFreeChart("7SgAYDY#~t[4(", dateAxis0.DEFAULT_TICK_LABEL_FONT, combinedDomainCategoryPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Point point0 = new Point(10, 4);
      Point point1 = new Point(point0);
      Point2D point2D0 = chartPanel0.translateScreenToJava2D(point1);
      combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point2D0);
      symbolAxis0.setPlot((Plot) null);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, symbolAxis0, dateAxis0, windItemRenderer0);
      // Undeclared exception!
      try { 
        xYPlot0.setQuadrantOrigin((Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'origin' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Month month0 = new Month();
      RegularTimePeriod regularTimePeriod0 = month0.previous();
      PeriodAxis periodAxis0 = new PeriodAxis("Null 'layer' not permitted.", regularTimePeriod0, month0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(5.0E-7);
      AffineTransform affineTransform1 = new AffineTransform(affineTransform0);
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform1, 500);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: 500
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod((-2131L), 2051L);
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset(simpleTimePeriod0);
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer();
      XYPlot xYPlot0 = new XYPlot(defaultBoxAndWhiskerXYDataset0, symbolAxis0, symbolAxis0, xYBoxAndWhiskerRenderer0);
      xYPlot0.setRangeAxis(0, (ValueAxis) symbolAxis0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      xYPlot0.setRangeAxisLocation(54, axisLocation0);
      xYPlot0.getDomainAxisCount();
      double double0 = 5.0E10;
      PlotRenderingInfo plotRenderingInfo0 = null;
      JFreeChart jFreeChart0 = new JFreeChart("Null 'range' argument.", xYPlot0);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      combinedDomainXYPlot0.setDomainAxisLocation(axisLocation0, false);
      Layer layer0 = Layer.FOREGROUND;
      Collection collection0 = combinedDomainXYPlot0.getDomainMarkers(1221, layer0);
      assertNull(collection0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot0.setDomainZeroBaselinePaint(dateAxis0.DEFAULT_TICK_MARK_PAINT);
      BufferedImage bufferedImage0 = new BufferedImage(500, 10, 10);
      bufferedImage0.createGraphics();
      MultiTextUI multiTextUI0 = new MultiTextUI();
      Locale locale0 = Locale.ITALIAN;
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      InternationalFormatter internationalFormatter0 = new InternationalFormatter(numberFormat0);
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField((JFormattedTextField.AbstractFormatter) internationalFormatter0);
      Position.Bias position_Bias0 = Position.Bias.Backward;
      // Undeclared exception!
      try { 
        multiTextUI0.modelToView((JTextComponent) jFormattedTextField0, 0, position_Bias0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

////  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation();
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0);
      double double0 = (-505.8);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(10, (-505.8), 1.0F, 0.0, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      xYBoxAnnotation0.setURL("");
      combinedDomainXYPlot0.removeAnnotation((XYAnnotation) xYBoxAnnotation0);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.removeDomainMarker((Marker) categoryMarker0, layer0);
      combinedDomainXYPlot0.setRangeCrosshairLockedOnData(false);
      JApplet jApplet0 = null;
      try {
        jApplet0 = new JApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      RectangleInsets rectangleInsets0 = categoryMarker0.getLabelOffset();
      combinedDomainXYPlot0.setAxisOffset(rectangleInsets0);
      Color color0 = (Color)AbstractRenderer.DEFAULT_PAINT;
      combinedDomainXYPlot0.setRangeMinorGridlinePaint(color0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 15, 10);
      CategoryAxis categoryAxis0 = new CategoryAxis("Third");
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.lookupSeriesPaint(27);
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingGanttCategoryDataset0, categoryAxis0, (ValueAxis) null, stackedBarRenderer0);
      Stroke stroke0 = categoryPlot0.getDomainGridlineStroke();
      combinedDomainXYPlot0.drawVerticalLine(graphics2D0, (Rectangle2D) null, 15, stroke0, color0);
      combinedDomainXYPlot0.getRangeZeroBaselinePaint();
      combinedDomainXYPlot0.setWeight(2344);
      assertEquals(2344, combinedDomainXYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      point2D_Double0.setLocation((double) 1.0F, (double) 10);
      combinedDomainXYPlot0.zoomDomainAxes(0.14, plotRenderingInfo0, (Point2D) point2D_Double0, true);
      int int0 = 181;
      combinedDomainXYPlot0.getRangeAxis(181);
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0, 0.05);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.addDomainMarker(200, (Marker) intervalMarker0, (Layer) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "zc3HnsCyU");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getPlotInfo();
      Point point0 = new Point();
      LogAxis logAxis0 = new LogAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      SynthToolBarUI synthToolBarUI0 = new SynthToolBarUI();
      synthToolBarUI0.getFloatingColor();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Color color0 = (Color)XYTextAnnotation.DEFAULT_PAINT;
      combinedDomainXYPlot0.setBackgroundPaint((Paint) null);
      combinedDomainXYPlot0.clearRangeMarkers((-2970));
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, (-2970), (-2970), 10, 10, (-138), 10, false, false, true, true, false, false);
      Rectangle rectangle0 = chartPanel0.getVisibleRect();
      combinedDomainXYPlot0.drawZeroDomainBaseline((Graphics2D) null, rectangle0);
      combinedDomainXYPlot0.getRangeCrosshairPaint();
      combinedDomainXYPlot0.canSelectByPoint();
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.setDomainGridlinesVisible(true);
      xYPlot0.getDomainAxis((-2472));
      xYPlot0.getDataRange((ValueAxis) null);
      JFreeChart jFreeChart0 = new JFreeChart("VerticalAlignment.CENTER", xYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(1263, 10, (-2454), chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -2454
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String string0 = "The index value (";
      LogAxis logAxis0 = new LogAxis("The index value (");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      int int0 = 0;
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = StandardXYToolTipGenerator.getTimeSeriesInstance();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Chronology.ofLocale(locale0);
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer(0, standardXYToolTipGenerator0, (XYURLGenerator) null);
      xYStepAreaRenderer0.setBaseLegendTextFont(logAxis0.DEFAULT_AXIS_LABEL_FONT);
      logAxis0.equals(xYStepAreaRenderer0);
      AxisLocation.getOpposite(axisLocation0);
      combinedDomainXYPlot0.setDomainAxisLocation(500, axisLocation0, false);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(layer0);
      combinedDomainXYPlot0.setQuadrantPaint(1, (Paint) null);
      float[] floatArray0 = new float[5];
      floatArray0[0] = 0.0F;
      floatArray0[1] = 177.385F;
      floatArray0[2] = (float) 1;
      floatArray0[3] = (float) 3;
      floatArray0[4] = 2.0F;
      Kernel kernel0 = new Kernel(0, 1, floatArray0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ConvolveOp convolveOp0 = new ConvolveOp(kernel0, (-102), renderingHints0);
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(1800, (-102), (byte[]) null, (byte[]) null, (byte[]) null, (byte[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("java.lang.Class");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setSeriesRenderingOrder((SeriesRenderingOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      Rotation rotation0 = Rotation.ANTICLOCKWISE;
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(true);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      XYPlot xYPlot0 = new XYPlot(timePeriodValuesCollection0, dateAxis0, dateAxis0, (XYItemRenderer) null);
      // Undeclared exception!
      try { 
        xYPlot0.setDomainAxis((-102), (ValueAxis) dateAxis0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE, 0.0F);
      HashMap<AttributedCharacterIterator.Attribute, String> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, String>();
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.READING;
      hashMap0.put(attributedCharacterIterator_Attribute0, "");
      double[][] doubleArray0 = new double[6][4];
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 0.0F;
      doubleArray1[1] = (double) 1.0F;
      doubleArray1[2] = (double) 1.0F;
      doubleArray1[3] = (double) 1.0F;
      doubleArray1[4] = (double) 10;
      doubleArray1[5] = (double) 0.0F;
      doubleArray1[6] = (double) 10;
      doubleArray1[7] = (-303.82219027152087);
      doubleArray1[8] = (double) 1.0F;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[5];
      doubleArray2[0] = (double) 1.0F;
      doubleArray2[1] = (-1214.0);
      doubleArray2[2] = (double) 1.0F;
      doubleArray2[3] = (double) 1.0F;
      doubleArray2[4] = (double) 0.0F;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[4];
      doubleArray3[0] = (double) 0.0F;
      doubleArray3[1] = (double) 10;
      doubleArray3[2] = (double) 10;
      doubleArray3[3] = (double) 10;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[8];
      doubleArray4[0] = (double) 0.0F;
      doubleArray4[1] = (double) 10;
      doubleArray4[2] = (-303.82219027152087);
      doubleArray4[3] = (double) 10;
      doubleArray4[4] = (-303.82219027152087);
      doubleArray4[5] = (-303.82219027152087);
      doubleArray4[6] = (double) 1.0F;
      doubleArray4[7] = (-7.0);
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[4];
      doubleArray5[0] = (double) 1.0F;
      doubleArray5[1] = (-303.82219027152087);
      doubleArray5[2] = (double) 1.0F;
      doubleArray5[3] = (double) 1.0F;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[3];
      doubleArray6[0] = (double) 1.0F;
      doubleArray6[1] = (double) 1.0F;
      doubleArray6[2] = (double) 10;
      doubleArray0[5] = doubleArray6;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 5.0E-6, 1.0, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Vector<StandardXYItemRenderer> vector0 = new Vector<StandardXYItemRenderer>();
      combinedDomainXYPlot0.drawDomainGridlines(graphics2D0, (Rectangle2D) null, vector0);
      Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashMap0);
      categoryMarker0.setLabelFont(font0);
      // Undeclared exception!
      try { 
        categoryMarker0.setLabelOffsetType((LengthAdjustmentType) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'adj' argument.
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      LegendItemCollection legendItemCollection0 = xYPlot0.getLegendItems();
      xYPlot0.setFixedLegendItems(legendItemCollection0);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      Stroke stroke0 = periodAxis0.getMinorTickMarkStroke();
      xYPlot0.setDomainZeroBaselineStroke(stroke0);
      xYPlot0.getDataset(65535);
      xYPlot0.getRangeZeroBaselineStroke();
      IntervalMarker intervalMarker0 = new IntervalMarker(65535, 0.0, periodAxis0.DEFAULT_TICK_MARK_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addDomainMarker(500, (Marker) intervalMarker0, layer0);
      ValueAxis valueAxis0 = xYPlot0.getDomainAxis();
      intervalMarker0.setLabelOffset(xYPlot0.DEFAULT_INSETS);
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.removeDomainMarker(500, (Marker) intervalMarker0, layer0, true);
      periodAxis0.hasListener(xYPlot0);
      xYPlot0.removeDomainMarker(1036, (Marker) intervalMarker0, layer0);
      intervalMarker0.setLabelPaint(periodAxis0.DEFAULT_TICK_MARK_PAINT);
      xYPlot0.setDomainCrosshairValue(0.05, true);
      xYPlot0.clearRangeMarkers(902);
      xYPlot0.setRangeZeroBaselineStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
      xYPlot0.removeDomainMarker(0, (Marker) intervalMarker0, layer0);
      xYPlot0.getRangeAxis(65535);
      xYPlot0.setDomainMinorGridlineStroke(stroke0);
      xYPlot0.setDomainAxis(1036, (ValueAxis) periodAxis0, true);
      xYPlot0.setRangeZeroBaselinePaint(valueAxis0.DEFAULT_AXIS_LINE_PAINT);
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      // Undeclared exception!
      try { 
        xYPlot0.setRenderer((-469), (XYItemRenderer) windItemRenderer0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(500, layer0);
      combinedDomainXYPlot0.clearRangeMarkers(500);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-1095), (Marker) categoryMarker0, layer1, true);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedDomainXYPlot0.addRangeMarker((Marker) categoryMarker0);
      JEditorPane jEditorPane0 = new JEditorPane();
      jEditorPane0.modelToView(0);
      combinedDomainXYPlot0.drawDomainMarkers((Graphics2D) null, (Rectangle2D) null, 4, layer1);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      
      combinedDomainXYPlot0.setRangeCrosshairLockedOnData(true);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      JFreeChart jFreeChart0 = new JFreeChart("K)(< yUEioG^~h8", combinedRangeXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedRangeXYPlot0.setRangeGridlinePaint(jFreeChart0.DEFAULT_BACKGROUND_PAINT);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(2355, (-1982), 1902.71842247, (double) 1.0F, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (2355) and height (-1982) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleInsets rectangleInsets0 = combinedDomainXYPlot0.getAxisOffset();
      assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(4.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(4.0, rectangleInsets0.getLeft(), 0.01);
      
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.event.MarkerChangeEvent", combinedDomainXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(85, 4625, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI.NodeDimensionsHandler basicTreeUI_NodeDimensionsHandler0 = metalTreeUI0.new NodeDimensionsHandler();
      basicTreeUI_NodeDimensionsHandler0.getNodeDimensions((Object) null, 15, 1945, false, (Rectangle) null);
      ArrayList<CyclicNumberAxis> arrayList0 = new ArrayList<CyclicNumberAxis>();
      combinedDomainXYPlot0.drawDomainTickBands(graphics2D0, (Rectangle2D) null, arrayList0);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      
      ValueMarker valueMarker0 = new ValueMarker(1468.546875);
      combinedDomainXYPlot0.removeRangeMarker(0, (Marker) valueMarker0, (Layer) null, true);
      combinedDomainXYPlot0.drawZeroRangeBaseline(graphics2D0, (Rectangle2D) null);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.drawBackground(graphics2D0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.Path2D$Float", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(0);
      XYPlot xYPlot0 = new XYPlot(timePeriodValuesCollection0, (ValueAxis) null, (ValueAxis) null, xYAreaRenderer0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getRangeAxisLocation();
      xYAreaRenderer0.clearSeriesPaints(false);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(4, 1.0F, 0.0, 0.0);
      ArrayList<NumberAxis> arrayList0 = new ArrayList<NumberAxis>();
      xYPlot0.setRangeMinorGridlineStroke(xYAreaRenderer0.DEFAULT_STROKE);
      xYPlot0.clearSelection();
      xYPlot0.setDomainCrosshairLockedOnData(true);
      xYPlot0.setRangeAxis(4, (ValueAxis) null, false);
      assertEquals(5, xYPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      LegendItemCollection legendItemCollection0 = xYPlot0.getLegendItems();
      xYPlot0.setFixedLegendItems(legendItemCollection0);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      Stroke stroke0 = periodAxis0.getMinorTickMarkStroke();
      periodAxis0.resizeRange2(1.0F, 1.0F);
      xYPlot0.setDomainZeroBaselineStroke(stroke0);
      xYPlot0.getDataset(65535);
      xYPlot0.getRangeZeroBaselineStroke();
      IntervalMarker intervalMarker0 = new IntervalMarker(65535, 0.0, periodAxis0.DEFAULT_TICK_MARK_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addDomainMarker(500, (Marker) intervalMarker0, layer0);
      ValueAxis valueAxis0 = xYPlot0.getDomainAxis();
      intervalMarker0.setLabelOffset(xYPlot0.DEFAULT_INSETS);
      xYPlot0.getFixedRangeAxisSpace();
      periodAxis0.hasListener(xYPlot0);
      xYPlot0.removeDomainMarker(1036, (Marker) intervalMarker0, layer0);
      intervalMarker0.setLabelPaint(periodAxis0.DEFAULT_TICK_MARK_PAINT);
      xYPlot0.setDomainCrosshairValue(0.05, true);
      xYPlot0.clearRangeMarkers(902);
      xYPlot0.setRangeZeroBaselineStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
      xYPlot0.removeDomainMarker(0, (Marker) intervalMarker0, layer0);
      xYPlot0.getRangeAxis(65535);
      xYPlot0.setDomainMinorGridlineStroke(stroke0);
      xYPlot0.setDomainAxis(1036, (ValueAxis) periodAxis0, true);
      xYPlot0.setRangeZeroBaselinePaint(valueAxis0.DEFAULT_AXIS_LINE_PAINT);
      // Undeclared exception!
      try { 
        xYPlot0.getQuadrantPaint(1036);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The index value (1036) should be in the range 0 to 3.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      LegendItemCollection legendItemCollection0 = xYPlot0.getLegendItems();
      xYPlot0.setFixedLegendItems(legendItemCollection0);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      Stroke stroke0 = periodAxis0.getMinorTickMarkStroke();
      xYPlot0.setDomainZeroBaselineStroke(stroke0);
      xYPlot0.getDataset(65535);
      xYPlot0.getRangeZeroBaselineStroke();
      IntervalMarker intervalMarker0 = new IntervalMarker(65535, 0.0, periodAxis0.DEFAULT_TICK_MARK_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addDomainMarker(500, (Marker) intervalMarker0, layer0);
      ValueAxis valueAxis0 = xYPlot0.getDomainAxis();
      intervalMarker0.setLabelOffset(xYPlot0.DEFAULT_INSETS);
      xYPlot0.getFixedRangeAxisSpace();
      periodAxis0.hasListener(xYPlot0);
      xYPlot0.removeDomainMarker(1036, (Marker) intervalMarker0, layer0);
      intervalMarker0.setLabelPaint(periodAxis0.DEFAULT_TICK_MARK_PAINT);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)109;
      byteArray0[3] = (byte) (-114);
      byteArray0[4] = (byte) (-12);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      xYPlot0.setDomainCrosshairValue(0.05, true);
      xYPlot0.clearRangeMarkers(902);
      xYPlot0.setRangeZeroBaselineStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
      xYPlot0.removeDomainMarker(0, (Marker) intervalMarker0, layer0);
      xYPlot0.getRangeAxis(65535);
      xYPlot0.setDomainMinorGridlineStroke(stroke0);
      xYPlot0.setDomainAxis(1036, (ValueAxis) periodAxis0, true);
      xYPlot0.setRangeZeroBaselinePaint(valueAxis0.DEFAULT_AXIS_LINE_PAINT);
      xYPlot0.setRangeMinorGridlinesVisible(false);
      assertEquals(1037, xYPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(500, layer0);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-1095), (Marker) categoryMarker0, layer1, true);
      combinedDomainXYPlot0.addRangeMarker((Marker) categoryMarker0);
      JEditorPane jEditorPane0 = new JEditorPane();
      jEditorPane0.modelToView(0);
      combinedDomainXYPlot0.drawDomainMarkers((Graphics2D) null, (Rectangle2D) null, 4, layer1);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.getMagicCaretPosition();
      combinedDomainXYPlot0.zoomDomainAxes(0.05, plotRenderingInfo0, (Point2D) null, false);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      combinedDomainXYPlot0.setOrientation(plotOrientation0);
      assertEquals(0.49875, numberAxis3D0.getLowerBound(), 0.01);
      assertFalse(numberAxis3D0.isAutoRange());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      combinedDomainXYPlot0.setDomainZeroBaselinePaint(dateAxis0.DEFAULT_TICK_MARK_PAINT);
      BufferedImage bufferedImage0 = new BufferedImage(500, 10, 10);
      bufferedImage0.createGraphics();
      MultiTextUI multiTextUI0 = new MultiTextUI();
      Locale locale0 = Locale.ITALIAN;
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      InternationalFormatter internationalFormatter0 = new InternationalFormatter(numberFormat0);
      internationalFormatter0.getAllowsInvalid();
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField((JFormattedTextField.AbstractFormatter) internationalFormatter0);
      Position.Bias position_Bias0 = Position.Bias.Backward;
      CombinedDomainXYPlot combinedDomainXYPlot1 = (CombinedDomainXYPlot)combinedDomainXYPlot0.clone();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedDomainXYPlot1, true);
      combinedDomainXYPlot0.rendererChanged(rendererChangeEvent0);
      assertEquals(1, combinedDomainXYPlot1.getDomainAxisCount());
      
      LinkedList<MatrixSeriesCollection> linkedList0 = new LinkedList<MatrixSeriesCollection>();
      combinedDomainXYPlot0.setRangeCrosshairValue(0.05, true);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      LegendItemCollection legendItemCollection0 = xYPlot0.getLegendItems();
      xYPlot0.setFixedLegendItems(legendItemCollection0);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      Stroke stroke0 = periodAxis0.getMinorTickMarkStroke();
      xYPlot0.setDomainZeroBaselineStroke(stroke0);
      xYPlot0.getDataset(65535);
      xYPlot0.getRangeZeroBaselineStroke();
      IntervalMarker intervalMarker0 = new IntervalMarker(65535, 0.0, periodAxis0.DEFAULT_TICK_MARK_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addDomainMarker(500, (Marker) intervalMarker0, layer0);
      ValueAxis valueAxis0 = xYPlot0.getDomainAxis();
      intervalMarker0.setLabelOffset(xYPlot0.DEFAULT_INSETS);
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.removeDomainMarker(500, (Marker) intervalMarker0, layer0, true);
      periodAxis0.hasListener(xYPlot0);
      xYPlot0.removeDomainMarker(1036, (Marker) intervalMarker0, layer0);
      xYPlot0.setDomainCrosshairValue(0.05, true);
      xYPlot0.clearRangeMarkers(902);
      xYPlot0.setRangeZeroBaselineStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(xYPlot0.DEFAULT_LEGEND_ITEM_BOX, (Stroke) null, xYPlot0.DEFAULT_OUTLINE_PAINT);
      xYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0);
      xYPlot0.removeDomainMarker(0, (Marker) intervalMarker0, layer0);
      xYPlot0.getRangeAxis(65535);
      xYPlot0.setDomainMinorGridlineStroke(stroke0);
      xYPlot0.setDomainAxis(1036, (ValueAxis) periodAxis0, true);
      xYPlot0.setRangeZeroBaselinePaint(valueAxis0.DEFAULT_AXIS_LINE_PAINT);
      xYPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      assertEquals(1, windItemRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      LegendItemCollection legendItemCollection0 = xYPlot0.getLegendItems();
      xYPlot0.setFixedLegendItems(legendItemCollection0);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      Stroke stroke0 = periodAxis0.getMinorTickMarkStroke();
      xYPlot0.setDomainZeroBaselineStroke(stroke0);
      xYPlot0.getDataset(65535);
      xYPlot0.getRangeZeroBaselineStroke();
      IntervalMarker intervalMarker0 = new IntervalMarker(65535, 0.0, periodAxis0.DEFAULT_TICK_MARK_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addDomainMarker(500, (Marker) intervalMarker0, layer0);
      ValueAxis valueAxis0 = xYPlot0.getDomainAxis();
      intervalMarker0.setLabelOffset(xYPlot0.DEFAULT_INSETS);
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.removeDomainMarker(500, (Marker) intervalMarker0, layer0, true);
      stroke0.createStrokedShape(xYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      periodAxis0.hasListener(xYPlot0);
      xYPlot0.removeDomainMarker(1036, (Marker) intervalMarker0, layer0);
      intervalMarker0.setLabelPaint(periodAxis0.DEFAULT_TICK_MARK_PAINT);
      xYPlot0.setDomainCrosshairValue(0.05, true);
      xYPlot0.clearRangeMarkers(902);
      xYPlot0.setRangeZeroBaselineStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
      xYPlot0.removeDomainMarker(0, (Marker) intervalMarker0, layer0);
      xYPlot0.getRangeAxis(65535);
      xYPlot0.setDomainMinorGridlineStroke(stroke0);
      xYPlot0.setDomainAxis(1036, (ValueAxis) periodAxis0, true);
      xYPlot0.setRangeZeroBaselinePaint(valueAxis0.DEFAULT_AXIS_LINE_PAINT);
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      xYPlot0.setDomainPannable(true);
      // Undeclared exception!
      try { 
        xYPlot0.setRenderer((-469), (XYItemRenderer) windItemRenderer0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      ValueAxis valueAxis0 = null;
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(0);
      XYPlot xYPlot0 = new XYPlot(timePeriodValuesCollection0, (ValueAxis) null, (ValueAxis) null, xYAreaRenderer0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      xYAreaRenderer0.clearSeriesPaints(true);
      Graphics2D graphics2D0 = null;
      double double0 = 0.0;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      SynthListUI synthListUI0 = new SynthListUI();
      Stack<SubCategoryAxis> stack0 = new Stack<SubCategoryAxis>();
      JList<SubCategoryAxis> jList0 = new JList<SubCategoryAxis>(stack0);
      // Undeclared exception!
      try { 
        synthListUI0.getCellBounds(jList0, 2, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.plaf.basic.BasicListUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      GeneralPath generalPath0 = new GeneralPath();
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      combinedRangeXYPlot0.drawQuadrants((Graphics2D) null, rectangle2D0);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.drawRangeMarkers((Graphics2D) null, rectangle2D0, 3567, layer0);
      int int0 = (-764);
      Color color0 = (Color)SpiderWebPlot.DEFAULT_LABEL_BACKGROUND_PAINT;
      CategoryMarker categoryMarker0 = null;
      try {
        categoryMarker0 = new CategoryMarker(10, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, color0, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, (-1280.463F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'alpha' value must be in the range 0.0f to 1.0f
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      LegendItemCollection legendItemCollection0 = xYPlot0.getLegendItems();
      xYPlot0.setFixedLegendItems(legendItemCollection0);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      Stroke stroke0 = periodAxis0.getMinorTickMarkStroke();
      xYPlot0.setDomainZeroBaselineStroke(stroke0);
      xYPlot0.getDataset(65535);
      xYPlot0.getRangeZeroBaselineStroke();
      IntervalMarker intervalMarker0 = new IntervalMarker(65535, 0.0, periodAxis0.DEFAULT_TICK_MARK_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addDomainMarker(500, (Marker) intervalMarker0, layer0);
      intervalMarker0.setLabelOffset(xYPlot0.DEFAULT_INSETS);
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.removeDomainMarker(500, (Marker) intervalMarker0, layer0, true);
      periodAxis0.hasListener(xYPlot0);
      xYPlot0.removeDomainMarker(1036, (Marker) intervalMarker0, layer0);
      intervalMarker0.setLabelPaint(periodAxis0.DEFAULT_TICK_MARK_PAINT);
      xYPlot0.setDomainCrosshairValue(0.05, true);
      xYPlot0.clearRangeMarkers(902);
      xYPlot0.setRangeZeroBaselineStroke(periodAxis0.DEFAULT_AXIS_LINE_STROKE);
      xYPlot0.clearRangeAxes();
      xYPlot0.removeDomainMarker(0, (Marker) intervalMarker0, layer0);
      xYPlot0.getRangeAxis(65535);
      xYPlot0.setDomainMinorGridlineStroke(stroke0);
      xYPlot0.setDomainAxis(1036, (ValueAxis) periodAxis0, true);
      xYPlot0.setRangeZeroBaselinePaint(periodAxis0.DEFAULT_AXIS_LINE_PAINT);
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      // Undeclared exception!
      try { 
        xYPlot0.setRenderer((-469), (XYItemRenderer) windItemRenderer0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis("TMqn&");
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer();
      XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, periodAxis0, periodAxis0, xYSplineRenderer0);
      xYPlot0.setRangePannable(true);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      combinedDomainXYPlot0.clearDomainMarkers((-2873));
      combinedDomainXYPlot0.getRendererCount();
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      DateAxis dateAxis0 = new DateAxis(stringArray0[6]);
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JFreeChart jFreeChart0 = new JFreeChart("7SgAYDY#~t[4(", dateAxis0.DEFAULT_TICK_LABEL_FONT, combinedDomainCategoryPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Point point0 = new Point(10, 4);
      Point point1 = new Point(point0);
      Point2D point2D0 = chartPanel0.translateScreenToJava2D(point1);
      combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point2D0);
      symbolAxis0.setPlot((Plot) null);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, symbolAxis0, dateAxis0, windItemRenderer0);
      xYPlot0.setQuadrantOrigin(point0);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.setDomainCrosshairVisible(true);
      xYPlot0.setFixedRangeAxisSpace((AxisSpace) null, true);
      assertTrue(xYPlot0.isDomainCrosshairVisible());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.getMagicCaretPosition();
      combinedDomainXYPlot0.zoomDomainAxes(Double.POSITIVE_INFINITY, plotRenderingInfo0, (Point2D) null);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeZeroBaselineVisible(false);
      assertFalse(combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(2154.1726F, 0.0F, renderingHints0);
      int int0 = 1476;
      jFreeChart0.createBufferedImage(1476, 10, 10, (ChartRenderingInfo) null);
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      combinedDomainXYPlot0.getRangeAxis(2493);
      IntervalMarker intervalMarker0 = new IntervalMarker(Double.NaN, 837.939, logAxis0.DEFAULT_TICK_MARK_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.addRangeMarker(0, (Marker) intervalMarker0, layer0, false);
      assertEquals(1, combinedDomainXYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      LegendItemCollection legendItemCollection0 = xYPlot0.getLegendItems();
      xYPlot0.setFixedLegendItems(legendItemCollection0);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      BasicStroke basicStroke0 = (BasicStroke)periodAxis0.getMinorTickMarkStroke();
      xYPlot0.setDomainZeroBaselineStroke(basicStroke0);
      xYPlot0.getDataset(65535);
      xYPlot0.getRangeZeroBaselineStroke();
      IntervalMarker intervalMarker0 = new IntervalMarker(65535, 0.0, periodAxis0.DEFAULT_TICK_MARK_PAINT);
      basicStroke0.getDashArray();
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addDomainMarker(500, (Marker) intervalMarker0, layer0);
      ValueAxis valueAxis0 = xYPlot0.getDomainAxis();
      intervalMarker0.setLabelOffset(xYPlot0.DEFAULT_INSETS);
      xYPlot0.getFixedRangeAxisSpace();
      periodAxis0.hasListener(xYPlot0);
      xYPlot0.removeDomainMarker(1036, (Marker) intervalMarker0, layer0);
      intervalMarker0.setLabelPaint(periodAxis0.DEFAULT_TICK_MARK_PAINT);
      xYPlot0.setDomainCrosshairValue(0.05, true);
      xYPlot0.clearRangeMarkers(902);
      xYPlot0.setRangeZeroBaselineStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
      xYPlot0.removeDomainMarker(0, (Marker) intervalMarker0, layer0);
      xYPlot0.getRangeAxis(65535);
      xYPlot0.setDomainMinorGridlineStroke(basicStroke0);
      xYPlot0.setDomainAxis(1036, (ValueAxis) periodAxis0, true);
      xYPlot0.setRangeZeroBaselinePaint(valueAxis0.DEFAULT_AXIS_LINE_PAINT);
      int int0 = xYPlot0.indexOf((XYDataset) null);
      assertEquals(1037, xYPlot0.getDomainAxisCount());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      String string0 = "Null 'origin' argument.";
      DateAxis dateAxis0 = new DateAxis("Null 'origin' argument.");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      TimeSeries timeSeries0 = new TimeSeries(false);
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
      combinedRangeXYPlot0.getRendererForDataset(timeSeriesCollection0);
      int int0 = (-1050);
      combinedRangeXYPlot0.clearDomainMarkers((-1050));
      combinedRangeXYPlot0.setRangeAxis((ValueAxis) dateAxis0);
      ConvolveOp convolveOp0 = new ConvolveOp((Kernel) null);
      AffineTransform affineTransform0 = AffineTransform.getScaleInstance(10.0, 2.0F);
      int int1 = 3250;
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, 3250);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: 3250
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      LegendItemCollection legendItemCollection0 = xYPlot0.getLegendItems();
      xYPlot0.setFixedLegendItems(legendItemCollection0);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      Stroke stroke0 = periodAxis0.getMinorTickMarkStroke();
      xYPlot0.setDomainZeroBaselineStroke(stroke0);
      xYPlot0.getDataset(65535);
      xYPlot0.getRangeZeroBaselineStroke();
      IntervalMarker intervalMarker0 = new IntervalMarker(65535, 0.0, periodAxis0.DEFAULT_TICK_MARK_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addDomainMarker(500, (Marker) intervalMarker0, layer0);
      ValueAxis valueAxis0 = xYPlot0.getDomainAxis();
      intervalMarker0.setLabelOffset(xYPlot0.DEFAULT_INSETS);
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.removeDomainMarker(500, (Marker) intervalMarker0, layer0, true);
      periodAxis0.hasListener(xYPlot0);
      xYPlot0.removeDomainMarker(1036, (Marker) intervalMarker0, layer0);
      xYPlot0.clearRangeMarkers(902);
      xYPlot0.setRangeZeroBaselineStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(xYPlot0.DEFAULT_LEGEND_ITEM_BOX, (Stroke) null, xYPlot0.DEFAULT_OUTLINE_PAINT);
      xYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0);
      xYPlot0.removeDomainMarker(0, (Marker) intervalMarker0, layer0);
      xYPlot0.getRangeAxis(65535);
      xYPlot0.setDomainMinorGridlineStroke(stroke0);
      xYPlot0.setDomainAxis(1036, (ValueAxis) periodAxis0, true);
      xYPlot0.setRangeZeroBaselinePaint(valueAxis0.DEFAULT_AXIS_LINE_PAINT);
      xYPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      xYPlot0.getLegendItems();
      assertEquals(1037, xYPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.getMagicCaretPosition();
      xYPlot0.zoomRangeAxes(1476.0, 1476.0, plotRenderingInfo0, (Point2D) null);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, xYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      SimpleTimeZone simpleTimeZone0 = (SimpleTimeZone)SegmentedTimeline.NO_DST_TIME_ZONE;
      dateAxis0.setTimeZone(simpleTimeZone0);
      Paint paint0 = combinedDomainXYPlot0.getDomainMinorGridlinePaint();
      combinedDomainXYPlot0.setDomainGridlinePaint(paint0);
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(dateAxis0.DEFAULT_TICK_LABEL_PAINT);
      combinedDomainXYPlot0.setRangeMinorGridlinesVisible(true);
      combinedDomainXYPlot0.clearRangeMarkers();
      double double0 = Double.NaN;
      JFreeChart jFreeChart0 = new JFreeChart("", dateAxis0.DEFAULT_TICK_LABEL_FONT, combinedDomainXYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, true, true, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      MouseEvent mouseEvent0 = null;
      try {
        mouseEvent0 = new MouseEvent(chartPanel0, 200, 0L, 4, 420, 0, 54, 10, 51, true, (-25));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid button value :-25
         //
         verifyException("java.awt.event.MouseEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[2];
      PeriodAxis periodAxis0 = new PeriodAxis("");
      valueAxisArray0[0] = (ValueAxis) periodAxis0;
      DateAxis dateAxis0 = new DateAxis();
      valueAxisArray0[1] = (ValueAxis) dateAxis0;
      combinedDomainXYPlot0.setDomainAxes(valueAxisArray0);
      assertEquals(2, combinedDomainXYPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XIntervalSeriesCollection xIntervalSeriesCollection0 = new XIntervalSeriesCollection();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      XYBarRenderer xYBarRenderer0 = new XYBarRenderer();
      XYPlot xYPlot0 = new XYPlot(xIntervalSeriesCollection0, valueAxis0, valueAxis0, xYBarRenderer0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 10);
      xYPlot0.equals(defaultValueDataset0);
      XIntervalSeries xIntervalSeries0 = new XIntervalSeries(0.0F, false, true);
      xIntervalSeriesCollection0.addSeries(xIntervalSeries0);
      xYPlot0.getRangeTickBandPaint();
      xYPlot0.setDomainZeroBaselineStroke(xYBarRenderer0.DEFAULT_OUTLINE_STROKE);
      xYPlot0.getDomainAxis(3);
      JFreeChart jFreeChart0 = new JFreeChart(thermometerPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 4);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      float[] floatArray0 = new float[7];
      floatArray0[0] = 1.0F;
      floatArray0[1] = (float) 3;
      floatArray0[2] = 1.0F;
      floatArray0[3] = 2.0F;
      floatArray0[4] = (float) 0;
      floatArray0[5] = (float) 2;
      floatArray0[6] = (float) 15;
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, (RenderingHints) null);
      Rectangle2D rectangle2D0 = rescaleOp0.getBounds2D(bufferedImage0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Rectangle rectangle0 = new Rectangle(2, 10);
      AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateAxisSpace(graphics2D0, rectangle0);
      AxisSpace axisSpace1 = xYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D0, axisSpace0);
      xYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D0, axisSpace1);
      assertEquals(30.0, axisSpace0.getLeft(), 0.01);
      assertSame(axisSpace0, axisSpace1);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Stroke stroke0 = null;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setRangeGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("ISk$inZc\"-(26I~_");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.getRangeZeroBaselinePaint();
      int int0 = 0;
      CategoryMarker categoryMarker0 = new CategoryMarker(2.0F, logAxis0.DEFAULT_AXIS_LABEL_PAINT, logAxis0.DEFAULT_TICK_MARK_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addDomainMarker(0, (Marker) categoryMarker0, layer0);
      combinedRangeXYPlot0.removeDomainMarker((Marker) categoryMarker0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setAxisOffset((RectangleInsets) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'offset' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers((-2922), layer0);
      combinedDomainXYPlot0.clearAnnotations();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getRangeAxisForDataset((-2922));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index -2922 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      DateAxis dateAxis0 = new DateAxis("");
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      JFreeChart jFreeChart0 = new JFreeChart("7SgAYDY#~t[4(", dateAxis0.DEFAULT_TICK_LABEL_FONT, combinedDomainCategoryPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Point point0 = new Point(10, 4);
      chartPanel0.isFocusable();
      Point point1 = new Point(point0);
      Point2D point2D0 = chartPanel0.translateScreenToJava2D(point1);
      point1.setLocation(point0);
      combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point2D0);
      symbolAxis0.setPlot((Plot) null);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, symbolAxis0, dateAxis0, windItemRenderer0);
      xYPlot0.isDomainCrosshairLockedOnData();
      // Undeclared exception!
      try { 
        xYPlot0.setQuadrantOrigin((Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'origin' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainMinorGridlinesVisible();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp((-6503.727F), 10, renderingHints0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(419, 1464);
      BufferedImage bufferedImage1 = rescaleOp0.filter(bufferedImage0, bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      Area area0 = new Area();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(1468.546875, (double) 1.0F, 1468.546875);
      Area area1 = area0.createTransformedArea(affineTransform0);
      Rectangle rectangle0 = area1.getBounds();
      Rectangle rectangle1 = new Rectangle(rectangle0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotOrientation plotOrientation0 = combinedRangeCategoryPlot0.getOrientation();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      combinedRangeXYPlot0.drawRangeCrosshair(graphics2D0, rectangle1, plotOrientation0, (-4055.0), numberAxis3D0, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE, numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT);
      categoryMarker0.setLabel("");
      combinedRangeXYPlot0.removeRangeMarker((Marker) categoryMarker0);
      combinedRangeXYPlot0.clone();
      BasicStroke basicStroke0 = null;
      try {
        basicStroke0 = new BasicStroke(0.0F, 0, 10, 1.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal line join value
         //
         verifyException("java.awt.BasicStroke", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      String string0 = "J:G-bQ";
      NumberAxis numberAxis0 = new NumberAxis("J:G-bQ");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.getRangeAxisForDataset(500);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index 500 out of bounds.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      LegendItemCollection legendItemCollection0 = xYPlot0.getLegendItems();
      xYPlot0.setFixedLegendItems(legendItemCollection0);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      Stroke stroke0 = periodAxis0.getMinorTickMarkStroke();
      xYPlot0.setDomainZeroBaselineStroke(stroke0);
      xYPlot0.getDataset(65535);
      xYPlot0.getRangeZeroBaselineStroke();
      IntervalMarker intervalMarker0 = new IntervalMarker(65535, 0.0, periodAxis0.DEFAULT_TICK_MARK_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addDomainMarker(500, (Marker) intervalMarker0, layer0);
      ValueAxis valueAxis0 = xYPlot0.getDomainAxis();
      intervalMarker0.setLabelOffset(xYPlot0.DEFAULT_INSETS);
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.removeDomainMarker(500, (Marker) intervalMarker0, layer0, true);
      periodAxis0.hasListener(xYPlot0);
      xYPlot0.removeDomainMarker(1036, (Marker) intervalMarker0, layer0);
      xYPlot0.setDomainCrosshairValue(0.05, true);
      xYPlot0.setRangeZeroBaselineStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(xYPlot0.DEFAULT_LEGEND_ITEM_BOX, (Stroke) null, xYPlot0.DEFAULT_OUTLINE_PAINT);
      xYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0);
      xYPlot0.removeDomainMarker(0, (Marker) intervalMarker0, layer0);
      xYPlot0.getRangeAxis(65535);
      xYPlot0.setDomainMinorGridlineStroke(stroke0);
      xYPlot0.setDomainAxis(1036, (ValueAxis) periodAxis0, true);
      xYPlot0.setRangeZeroBaselinePaint(valueAxis0.DEFAULT_AXIS_LINE_PAINT);
      xYPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      // Undeclared exception!
      try { 
        xYPlot0.calculateAxisSpace((Graphics2D) null, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.AxisSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("Null 'paint' argument.");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      LabelBlock labelBlock0 = new LabelBlock("Null 'paint' argument.", logAxis0.DEFAULT_AXIS_LABEL_FONT);
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(0.05, 1.0F, 10, 1.0, labelBlock0);
      xYDrawableAnnotation0.setToolTipText("Null 'paint' argument.");
      combinedRangeXYPlot0.addAnnotation((XYAnnotation) xYDrawableAnnotation0, false);
      combinedRangeXYPlot0.getRangeAxis(500);
      ValueAxis[] valueAxisArray0 = new ValueAxis[7];
      valueAxisArray0[0] = (ValueAxis) logAxis0;
      valueAxisArray0[1] = null;
      valueAxisArray0[2] = null;
      valueAxisArray0[3] = (ValueAxis) logAxis0;
      combinedRangeXYPlot0.setRangeCrosshairValue(1319.1789275);
      valueAxisArray0[4] = (ValueAxis) logAxis0;
      valueAxisArray0[5] = (ValueAxis) logAxis0;
      valueAxisArray0[6] = null;
      combinedRangeXYPlot0.setRangeAxes(valueAxisArray0);
      Graphics2D graphics2D0 = null;
      Line2D.Float line2D_Float0 = new Line2D.Float();
      line2D_Float0.getBounds2D();
      DebugGraphics debugGraphics0 = new DebugGraphics((Graphics) null);
      Area area0 = new Area();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(0.0, (double) 0.0F, 1.0);
      Area area1 = area0.createTransformedArea(affineTransform0);
      Rectangle rectangle0 = area1.getBounds();
      // Undeclared exception!
      try { 
        debugGraphics0.getClipBounds(rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(500, layer0);
      combinedDomainXYPlot0.clearRangeMarkers(500);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      combinedDomainXYPlot0.removeRangeMarker((-1095), (Marker) categoryMarker0, layer0, true);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedDomainXYPlot0.addRangeMarker((Marker) categoryMarker0);
      JEditorPane jEditorPane0 = new JEditorPane();
      jEditorPane0.modelToView(0);
      combinedDomainXYPlot0.drawDomainMarkers((Graphics2D) null, (Rectangle2D) null, 4, layer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      AffineTransform affineTransform0 = AffineTransform.getScaleInstance(908.349146, 200000.0);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double();
      Point2D point2D0 = arc2D_Double0.getStartPoint();
      Point2D point2D1 = affineTransform0.transform(point2D0, point2D0);
      combinedDomainXYPlot0.panDomainAxes((-1095), plotRenderingInfo0, point2D1);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(500, layer0);
      combinedDomainXYPlot0.clearRangeMarkers(500);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-1095), (Marker) categoryMarker0, layer1, true);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedDomainXYPlot0.addRangeMarker((Marker) categoryMarker0);
      JEditorPane jEditorPane0 = new JEditorPane();
      jEditorPane0.modelToView(0);
      combinedDomainXYPlot0.drawDomainMarkers((Graphics2D) null, (Rectangle2D) null, 4, layer1);
      combinedDomainXYPlot0.setRangeZeroBaselineStroke(numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      BasicStroke basicStroke0 = (BasicStroke)combinedDomainXYPlot0.getDomainZeroBaselineStroke();
      assertEquals(0, basicStroke0.getLineJoin());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("", 10, 3084.792555874297, 10);
      Stroke stroke0 = xYPointerAnnotation0.getOutlineStroke();
      combinedDomainXYPlot0.setDomainCrosshairStroke(stroke0);
      combinedDomainXYPlot0.setRangeGridlineStroke(stroke0);
      combinedDomainXYPlot0.clearRangeMarkers(53);
      combinedDomainXYPlot0.getRangeCrosshairValue();
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "F\"");
      LogAxis logAxis0 = new LogAxis("F\"");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.setDataset((XYDataset) null);
      float[] floatArray0 = new float[0];
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(500, 1094, floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data array too small (is 0 and should be 547000
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("E:2(?2KM%$tL_I", xYPlot0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "yz]A@gFM");
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 468, 1723, 78, 10, 3065, 15, false, false, true, false, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      chartPanel0.setDomainZoomable(false);
      plotRenderingInfo0.getPlotArea();
      plotRenderingInfo0.setDataArea((Rectangle2D) null);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(300, 1.0F, renderingHints0);
      ChartPanel chartPanel1 = new ChartPanel(jFreeChart0);
      Point point0 = new Point(3065, 811);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      RectangleInsets rectangleInsets0 = categoryAxis0.getLabelInsets();
      xYPlot0.setAxisOffset(rectangleInsets0);
      jFreeChart0.setNotify(false);
      plotRenderingInfo0.setDataArea((Rectangle2D) null);
      Point point1 = chartPanel1.getLocation(point0);
      Point2D point2D0 = rescaleOp0.getPoint2D(point1, point1);
      xYPlot0.zoomRangeAxes(225.0, plotRenderingInfo0, point2D0);
      xYPlot0.zoomRangeAxes((double) 200, plotRenderingInfo0, point2D0, false);
      assertTrue(xYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, xYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      DateAxis dateAxis0 = new DateAxis("");
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      JFreeChart jFreeChart0 = new JFreeChart("7SgAYDY#~t[4(", dateAxis0.DEFAULT_TICK_LABEL_FONT, combinedDomainCategoryPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Point point0 = new Point(10, 4);
      chartPanel0.isFocusable();
      Point point1 = new Point(point0);
      Point2D point2D0 = chartPanel0.translateScreenToJava2D(point1);
      point0.y = 10;
      combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point2D0);
      symbolAxis0.setPlot((Plot) null);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, symbolAxis0, dateAxis0, windItemRenderer0);
      xYPlot0.clone();
      // Undeclared exception!
      try { 
        xYPlot0.setQuadrantOrigin((Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'origin' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.isDomainMinorGridlinesVisible();
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedRangeXYPlot0.removeRangeMarker((Marker) categoryMarker0);
      CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot)combinedRangeXYPlot0.clone();
      float float0 = 0.0F;
      combinedRangeXYPlot1.panRangeAxes((-885.3774384035), (PlotRenderingInfo) null, (Point2D) null);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      JDBCXYDataset jDBCXYDataset0 = null;
      try {
        jDBCXYDataset0 = new JDBCXYDataset(connection0, "3X#W2m_^pW");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.jdbc.JDBCXYDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(valueAxis0);
      combinedDomainXYPlot0.setRangeAxis(6, valueAxis0);
      combinedDomainXYPlot0.getDomainCrosshairValue();
      FileSystemHandling.shouldAllThrowIOExceptions();
      combinedDomainXYPlot0.getDomainAxisIndex(valueAxis0);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(0.05);
      combinedDomainXYPlot0.setRenderer(2, (XYItemRenderer) xYBoxAndWhiskerRenderer0, true);
      Color color0 = new Color(10);
      combinedDomainXYPlot0.setDomainZeroBaselinePaint(color0);
      assertEquals(3, combinedDomainXYPlot0.getRendererCount());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      DateAxis dateAxis0 = new DateAxis("");
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      JFreeChart jFreeChart0 = new JFreeChart("7SgAYDY#~t[4(", dateAxis0.DEFAULT_TICK_LABEL_FONT, combinedDomainCategoryPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Point point0 = new Point(10, 4);
      chartPanel0.isFocusable();
      Point point1 = new Point(point0);
      Point2D point2D0 = chartPanel0.translateScreenToJava2D(point1);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      combinedRangeXYPlot0.setDomainCrosshairLockedOnData(false);
      combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point2D0);
      symbolAxis0.setPlot((Plot) null);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, symbolAxis0, dateAxis0, windItemRenderer0);
      // Undeclared exception!
      try { 
        xYPlot0.setQuadrantOrigin((Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'origin' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      Locale locale0 = Locale.UK;
      locale0.getUnicodeLocaleAttributes();
      timeZone0.getDisplayName(false, 0, locale0);
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(timeZone0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("hD");
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer();
      logarithmicAxis0.setAutoRangeNextLogFlag(true);
      Font font0 = SpiderWebPlot.DEFAULT_LABEL_FONT;
      font0.getFamily();
      logarithmicAxis0.setTickLabelFont(font0);
      XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, logarithmicAxis0, logarithmicAxis0, xYStepAreaRenderer0);
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator0 = new MultipleXYSeriesLabelGenerator();
      xYStepAreaRenderer0.setLegendItemToolTipGenerator(multipleXYSeriesLabelGenerator0);
      xYPlot0.isRangePannable();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      xYPlot0.handleClick(500, 2, plotRenderingInfo0);
      // Undeclared exception!
      try { 
        xYPlot0.setRangeAxis((-1088), (ValueAxis) logarithmicAxis0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

////  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getLegendItems();
      PeriodAxis periodAxis0 = new PeriodAxis("");
      Stroke stroke0 = periodAxis0.getMinorTickMarkStroke();
      xYPlot0.setDomainZeroBaselineStroke(stroke0);
      xYPlot0.getDataset(65535);
      xYPlot0.getRangeZeroBaselineStroke();
      IntervalMarker intervalMarker0 = new IntervalMarker(65535, 0.0, periodAxis0.DEFAULT_TICK_MARK_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addDomainMarker(500, (Marker) intervalMarker0, layer0);
      ValueAxis valueAxis0 = xYPlot0.getDomainAxis();
      xYPlot0.getFixedRangeAxisSpace();
      boolean boolean0 = xYPlot0.removeDomainMarker(500, (Marker) intervalMarker0, layer0, true);
      periodAxis0.hasListener(xYPlot0);
      xYPlot0.removeDomainMarker(1036, (Marker) intervalMarker0, layer0);
      xYPlot0.setDomainCrosshairValue(0.05, false);
      xYPlot0.clearRangeMarkers(902);
      xYPlot0.setRangeZeroBaselineStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(xYPlot0.DEFAULT_LEGEND_ITEM_BOX, (Stroke) null, xYPlot0.DEFAULT_OUTLINE_PAINT);
      xYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0);
      boolean boolean1 = xYPlot0.removeDomainMarker(0, (Marker) intervalMarker0, layer0);
      assertFalse(boolean1 == boolean0);
      
      xYPlot0.getRangeAxis(65535);
      xYPlot0.setDomainMinorGridlineStroke(stroke0);
      xYPlot0.setDomainAxis(1036, (ValueAxis) periodAxis0, true);
      xYPlot0.setRangeZeroBaselinePaint(valueAxis0.DEFAULT_AXIS_LINE_PAINT);
      xYPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      xYPlot0.drawZeroRangeBaseline((Graphics2D) null, (Rectangle2D) null);
      xYPlot0.clearDomainMarkers(17);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      xYPlot0.drawDomainCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 0.05, periodAxis0, periodAxis0.DEFAULT_TICK_MARK_STROKE, valueAxis0.DEFAULT_TICK_MARK_PAINT);
      assertTrue(xYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ZoneId zoneId0 = ZoneId.systemDefault();
      TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
      Locale locale0 = new Locale("~\"]`E", "Null 'marker' argument.", "");
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(timeZone0, locale0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2571.281233494), "");
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("DomainOrder.ASCENDING", mockSimpleDateFormat0, mockSimpleDateFormat0);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      candlestickRenderer0.getSeriesURLGenerator(500);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(500, standardXYToolTipGenerator0, (XYURLGenerator) null);
      XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, cyclicXYItemRenderer0);
      xYPlot0.setDataset(8, (XYDataset) timeTableXYDataset0);
      assertEquals(9, xYPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(0);
      XYPlot xYPlot0 = new XYPlot(timePeriodValuesCollection0, (ValueAxis) null, (ValueAxis) null, xYAreaRenderer0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getRangeAxisLocation();
      xYAreaRenderer0.clearSeriesPaints(false);
      xYPlot0.getRangeAxisEdge();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(4, 1.0F, 0.0, 0.0);
      ArrayList<NumberAxis> arrayList0 = new ArrayList<NumberAxis>();
      xYPlot0.setRangeMinorGridlineStroke(xYAreaRenderer0.DEFAULT_STROKE);
      xYPlot0.clearSelection();
      xYPlot0.setDomainCrosshairLockedOnData(true);
      xYPlot0.setRangeAxis(4, (ValueAxis) null, false);
      xYPlot0.clearDomainMarkers((-75));
      // Undeclared exception!
      try { 
        xYPlot0.drawHorizontalLine((Graphics2D) null, rectangle2D_Double0, 0.0, xYAreaRenderer0.DEFAULT_OUTLINE_STROKE, xYAreaRenderer0.DEFAULT_VALUE_LABEL_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(0);
      XYPlot xYPlot0 = new XYPlot(timePeriodValuesCollection0, (ValueAxis) null, (ValueAxis) null, xYAreaRenderer0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getRangeAxisLocation();
      xYAreaRenderer0.clearSeriesPaints(false);
      xYPlot0.getRangeAxisEdge();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(4, 1.0F, 0.0, 0.0);
      ArrayList<NumberAxis> arrayList0 = new ArrayList<NumberAxis>();
      xYPlot0.setRangeMinorGridlineStroke(xYAreaRenderer0.DEFAULT_STROKE);
      xYPlot0.clearSelection();
      xYPlot0.setDomainCrosshairLockedOnData(true);
      xYPlot0.setRangeAxis(4, (ValueAxis) null, false);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D rectangle2D0 = chartPanel0.scale(rectangle2D_Double0);
      rectangle2D_Double0.add(rectangle2D0);
      xYPlot0.clearDomainMarkers((-102));
      xYPlot0.drawDomainGridlines((Graphics2D) null, rectangle2D_Double0, arrayList0);
      assertEquals(5, xYPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^a{)1QY&i!Z+");
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(10, "P@");
      DateAxis dateAxis0 = new DateAxis("org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState", simpleTimeZone0);
      combinedDomainXYPlot0.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 6.0, dateAxis0, dateAxis0.DEFAULT_AXIS_LINE_STROKE, dateAxis0.DEFAULT_AXIS_LABEL_PAINT);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedDomainXYPlot0.setRangeCrosshairStroke(dateAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.setDomainCrosshairPaint(dateAxis0.DEFAULT_TICK_LABEL_PAINT);
      combinedDomainXYPlot0.setDomainCrosshairValue((double) 2.0F, false);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getRangeMarkers(500, layer0);
      combinedDomainXYPlot0.setRangeGridlinesVisible(true);
      assertEquals(2.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-138.24835182072215), 1476.0, "");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.setDomainMinorGridlinePaint(cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      combinedDomainXYPlot0.indexOf(jDBCXYDataset0);
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(500);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-848.3647197));
      TextAnchor textAnchor0 = TextAnchor.HALF_ASCENT_LEFT;
      intervalMarker0.setLabelTextAnchor(textAnchor0);
      intervalMarker0.setLabelTextAnchor(textAnchor0);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      combinedDomainXYPlot0.markerChanged(markerChangeEvent0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(1017, layer0);
      SystemColor systemColor0 = SystemColor.desktop;
      combinedDomainXYPlot0.setDomainGridlinePaint(systemColor0);
      combinedDomainXYPlot0.addDomainMarker(1, (Marker) intervalMarker0, layer0, false);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      chartRenderingInfo1.getRenderingSource();
      combinedDomainXYPlot0.select(2038.5708998214377, Double.NEGATIVE_INFINITY, (Rectangle2D) rectangle2D_Double0, (RenderingSource) null);
      assertEquals(1, combinedDomainXYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangeCrosshairVisible(true);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Stroke stroke0 = defaultPolarItemRenderer0.getItemOutlineStroke(10, 2962, false);
      combinedRangeXYPlot0.setDomainZeroBaselineStroke(stroke0);
      assertTrue(combinedRangeXYPlot0.isRangeCrosshairVisible());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3097.5081618636787);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      ValueMarker valueMarker0 = new ValueMarker((-1538.406840321171));
      valueMarker0.clone();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.addRangeMarker(500, (Marker) valueMarker0, layer0, true);
      combinedDomainXYPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getSeriesFillPaint(923);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeMinorGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.clearRangeAxes();
      String string0 = "uQr9tckVmfCp_~J<q";
      JFreeChart jFreeChart0 = new JFreeChart("uQr9tckVmfCp_~J<q", combinedRangeXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp((-5.0F), (-2.0F), renderingHints0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(10, 27, 27, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 27
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^a{)1QY&i!Z+");
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(10, "P@");
      DateAxis dateAxis0 = new DateAxis("org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState", simpleTimeZone0);
      combinedDomainXYPlot0.setBackgroundImageAlignment(2);
      combinedDomainXYPlot0.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 6.0, dateAxis0, dateAxis0.DEFAULT_AXIS_LINE_STROKE, dateAxis0.DEFAULT_AXIS_LABEL_PAINT);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedDomainXYPlot0.setRangeCrosshairStroke(dateAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainXYPlot0.setDomainCrosshairPaint(dateAxis0.DEFAULT_TICK_LABEL_PAINT);
      combinedDomainXYPlot0.setDomainCrosshairValue((double) 2.0F, false);
      DatasetRenderingOrder datasetRenderingOrder1 = combinedDomainXYPlot0.getDatasetRenderingOrder();
      combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder1);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeZeroBaselinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(0);
      XYPlot xYPlot0 = new XYPlot(timePeriodValuesCollection0, (ValueAxis) null, (ValueAxis) null, xYAreaRenderer0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getRangeAxisLocation();
      FileSystemHandling.shouldAllThrowIOExceptions();
      xYAreaRenderer0.clearSeriesPaints(false);
      xYPlot0.getRangeAxisEdge();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(4, 1.0F, 10, 0.0);
      ArrayList<NumberAxis> arrayList0 = new ArrayList<NumberAxis>();
      xYPlot0.setRangeMinorGridlineStroke(xYAreaRenderer0.DEFAULT_STROKE);
      xYPlot0.clearSelection();
      xYPlot0.setDomainCrosshairLockedOnData(true);
      xYPlot0.setRangeAxis(4, (ValueAxis) null, false);
      xYPlot0.clearDomainMarkers(0);
      xYPlot0.setDataset(4, (XYDataset) timePeriodValuesCollection0);
      xYPlot0.getPlotType();
      assertEquals(5, xYPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearRangeMarkers((-312));
      combinedDomainXYPlot0.setRangeZeroBaselineVisible(true);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      int int0 = 274;
      defaultPolarItemRenderer0.getSeriesStroke(274);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeCrosshairStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      SynthTreeUI synthTreeUI0 = new SynthTreeUI();
      BasicTreeUI.NodeDimensionsHandler basicTreeUI_NodeDimensionsHandler0 = synthTreeUI0.new NodeDimensionsHandler();
      XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      basicTreeUI_NodeDimensionsHandler0.getNodeDimensions(xYDotRenderer0, 10, 10, false, rectangle0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.drawQuadrants((Graphics2D) null, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.NumberAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(500, layer0);
      combinedDomainXYPlot0.clearRangeMarkers(500);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-1095), (Marker) categoryMarker0, layer1, true);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedDomainXYPlot0.addRangeMarker((Marker) categoryMarker0);
      JEditorPane jEditorPane0 = new JEditorPane();
      jEditorPane0.modelToView(0);
      combinedDomainXYPlot0.drawDomainMarkers((Graphics2D) null, (Rectangle2D) null, 4, layer1);
      combinedDomainXYPlot0.setRangeMinorGridlineStroke(numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(10);
      candlestickRenderer0.getSeriesStroke(0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeZeroBaselineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      String string0 = "";
      DateAxis dateAxis0 = new DateAxis("");
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point point0 = new Point(10, 4);
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.zoomDomainAxes((double) 10, (-1234.76), plotRenderingInfo0, (Point2D) null);
      short[][] shortArray0 = new short[0][4];
      ShortLookupTable shortLookupTable0 = null;
      try {
        shortLookupTable0 = new ShortLookupTable(4, shortArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of components must  be at least 1
         //
         verifyException("java.awt.image.LookupTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getLegendItems();
      PeriodAxis periodAxis0 = new PeriodAxis("");
      Stroke stroke0 = periodAxis0.getMinorTickMarkStroke();
      xYPlot0.getRangeZeroBaselineStroke();
      IntervalMarker intervalMarker0 = new IntervalMarker(65535, 0.0, periodAxis0.DEFAULT_TICK_MARK_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addDomainMarker(500, (Marker) intervalMarker0, layer0);
      ValueAxis valueAxis0 = xYPlot0.getDomainAxis();
      intervalMarker0.setLabelOffset(xYPlot0.DEFAULT_INSETS);
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.removeDomainMarker(500, (Marker) intervalMarker0, layer0, true);
      xYPlot0.removeDomainMarker(1036, (Marker) intervalMarker0, layer0);
      xYPlot0.setDomainCrosshairValue(0.05, false);
      xYPlot0.clearRangeMarkers(902);
      xYPlot0.setRangeZeroBaselineStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(xYPlot0.DEFAULT_LEGEND_ITEM_BOX, (Stroke) null, xYPlot0.DEFAULT_OUTLINE_PAINT);
      xYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0);
      xYPlot0.getRangeAxis(65535);
      xYPlot0.setDomainMinorGridlineStroke(stroke0);
      xYPlot0.setDomainAxis(1036, (ValueAxis) periodAxis0, true);
      xYPlot0.setRangeZeroBaselinePaint(valueAxis0.DEFAULT_AXIS_LINE_PAINT);
      xYPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      xYPlot0.drawZeroRangeBaseline((Graphics2D) null, (Rectangle2D) null);
      xYPlot0.getDataRange((ValueAxis) null);
      xYPlot0.removeDomainMarker(1424, (Marker) intervalMarker0, layer0, false);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      xYPlot0.setDataset(1036, (XYDataset) timePeriodValuesCollection0);
      assertEquals(1037, xYPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(timeZone0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("hD");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|j1E");
      XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer();
      logarithmicAxis0.setAutoRangeNextLogFlag(true);
      Font font0 = SpiderWebPlot.DEFAULT_LABEL_FONT;
      font0.getFamily();
      font0.getTransform();
      XYErrorRenderer xYErrorRenderer0 = new XYErrorRenderer();
      xYErrorRenderer0.setBaseLinesVisible(true);
      zoneOffset0.equals(xYErrorRenderer0);
      logarithmicAxis0.setTickLabelFont(font0);
      XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, logarithmicAxis0, logarithmicAxis0, xYStepAreaRenderer0);
      xYPlot0.setDataset(2, (XYDataset) timeTableXYDataset0);
      xYPlot0.isRangePannable();
      Vector<DefaultKeyedValueDataset> vector0 = new Vector<DefaultKeyedValueDataset>();
      ArrayList<DefaultKeyedValueDataset> arrayList0 = new ArrayList<DefaultKeyedValueDataset>(vector0);
      // Undeclared exception!
      try { 
        xYPlot0.mapDatasetToRangeAxes((-291), arrayList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'index' >= 0.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearDomainMarkers();
      double double0 = 1317.8403631716;
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      MultiListUI multiListUI0 = new MultiListUI();
      Stroke stroke0 = null;
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainZeroBaselineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      xYPlot0.getLegendItems();
      PeriodAxis periodAxis0 = new PeriodAxis("");
      Stroke stroke0 = periodAxis0.getMinorTickMarkStroke();
      xYPlot0.setDomainZeroBaselineStroke(stroke0);
      xYPlot0.getDataset(65535);
      xYPlot0.getRangeZeroBaselineStroke();
      IntervalMarker intervalMarker0 = new IntervalMarker(65535, 0.0, periodAxis0.DEFAULT_TICK_MARK_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      xYPlot0.addDomainMarker(500, (Marker) intervalMarker0, layer0);
      ValueAxis valueAxis0 = xYPlot0.getDomainAxis();
      intervalMarker0.setLabelOffset(xYPlot0.DEFAULT_INSETS);
      xYPlot0.getFixedRangeAxisSpace();
      xYPlot0.removeDomainMarker(500, (Marker) intervalMarker0, layer0, true);
      periodAxis0.hasListener(xYPlot0);
      xYPlot0.removeDomainMarker(500, (Marker) intervalMarker0, layer0);
      xYPlot0.setDomainCrosshairValue(0.05, false);
      xYPlot0.clearRangeMarkers(902);
      xYPlot0.setRangeZeroBaselineStroke(valueAxis0.DEFAULT_AXIS_LINE_STROKE);
      XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(xYPlot0.DEFAULT_LEGEND_ITEM_BOX, (Stroke) null, xYPlot0.DEFAULT_OUTLINE_PAINT);
      xYPlot0.addAnnotation((XYAnnotation) xYShapeAnnotation0);
      xYPlot0.removeDomainMarker(0, (Marker) intervalMarker0, layer0);
      xYPlot0.getRangeAxis(65535);
      xYPlot0.setDomainMinorGridlineStroke(stroke0);
      // Undeclared exception!
      xYPlot0.setDomainAxis(65535, (ValueAxis) periodAxis0, true);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 10);
      TextAnchor textAnchor0 = TextAnchor.HALF_ASCENT_LEFT;
      intervalMarker0.setLabelTextAnchor(textAnchor0);
      intervalMarker0.setLabelTextAnchor(textAnchor0);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      combinedDomainXYPlot0.markerChanged(markerChangeEvent0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(1017, layer0);
      SystemColor systemColor0 = SystemColor.desktop;
      combinedDomainXYPlot0.setDomainGridlinePaint(systemColor0);
      combinedDomainXYPlot0.addDomainMarker(1, (Marker) intervalMarker0, layer0, false);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      chartRenderingInfo1.getRenderingSource();
      combinedDomainXYPlot0.select(2038.5708998214377, Double.NEGATIVE_INFINITY, (Rectangle2D) rectangle2D_Double0, (RenderingSource) null);
      combinedDomainXYPlot0.clearDomainMarkers();
      assertEquals(1, combinedDomainXYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 10);
      TextAnchor textAnchor0 = TextAnchor.HALF_ASCENT_LEFT;
      intervalMarker0.setLabelTextAnchor(textAnchor0);
      intervalMarker0.setLabelTextAnchor(textAnchor0);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      combinedDomainXYPlot0.markerChanged(markerChangeEvent0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(1017, layer0);
      SystemColor systemColor0 = SystemColor.desktop;
      combinedDomainXYPlot0.addDomainMarker(1, (Marker) intervalMarker0, layer0, false);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      chartRenderingInfo1.getRenderingSource();
      combinedDomainXYPlot0.select(2038.5708998214377, Double.NEGATIVE_INFINITY, (Rectangle2D) rectangle2D_Double0, (RenderingSource) null);
      combinedDomainXYPlot0.setFixedDomainAxisSpace((AxisSpace) null, false);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      FileSystemHandling.shouldAllThrowIOExceptions();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      String string0 = "M1t4!3gQt:B$L";
      SeriesRenderingOrder seriesRenderingOrder0 = combinedRangeXYPlot0.getSeriesRenderingOrder();
      combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      JFreeChart jFreeChart0 = new JFreeChart("M1t4!3gQt:B$L", logAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeXYPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(4, 42);
      XYDataImageAnnotation xYDataImageAnnotation0 = new XYDataImageAnnotation(bufferedImage0, 4, 1.0E-8, (-5066.5553), (-5066.5553));
      combinedRangeXYPlot0.removeAnnotation((XYAnnotation) xYDataImageAnnotation0, false);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.getDomainMarkers(1393, layer0);
      System.setCurrentTimeMillis((-6857L));
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      combinedRangeXYPlot0.setDataset(42, (XYDataset) defaultWindDataset0);
      combinedRangeXYPlot0.getRangeAxisIndex(logAxis0);
      combinedRangeXYPlot0.setDomainMinorGridlinePaint(logAxis0.DEFAULT_AXIS_LINE_PAINT);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      BasicListUI basicListUI0 = new BasicListUI();
      YIntervalSeriesCollection[] yIntervalSeriesCollectionArray0 = new YIntervalSeriesCollection[0];
      JList<YIntervalSeriesCollection> jList0 = new JList<YIntervalSeriesCollection>(yIntervalSeriesCollectionArray0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "M1t4!3gQt:B$L";
      stringArray0[1] = "M1t4!3gQt:B$L";
      stringArray0[2] = "M1t4!3gQt:B$L";
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultIntervalCategoryDataset0, tableOrder0, 10);
      RingPlot ringPlot0 = new RingPlot(categoryToPieDataset0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, true, true, false);
      Rectangle rectangle0 = chartPanel0.getVisibleRect();
      Rectangle2D rectangle2D0 = ringPlot0.getArcBounds(rectangle0, rectangle0, 2018.545, 0, (-5066.5553));
      combinedRangeXYPlot0.drawHorizontalLine(graphics2D0, rectangle2D0, (-164.8661165), logAxis0.DEFAULT_AXIS_LINE_STROKE, logAxis0.DEFAULT_TICK_MARK_PAINT);
      // Undeclared exception!
      try { 
        basicListUI0.indexToLocation(jList0, 3793);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.plaf.basic.BasicListUI", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      XYPlot xYPlot0 = new XYPlot();
      combinedRangeXYPlot0.add(xYPlot0, 4);
      combinedRangeXYPlot0.setRangeAxis((ValueAxis) null);
      combinedRangeXYPlot0.getSeriesCount();
      xYPlot0.setDomainCrosshairStroke(combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      short[][] shortArray0 = new short[8][0];
      short[] shortArray1 = new short[4];
      short short0 = (short)1060;
      shortArray1[0] = (short)1060;
      shortArray1[1] = (short) (-2410);
      shortArray1[2] = (short)675;
      shortArray1[3] = (short)1036;
      shortArray0[0] = shortArray1;
      short[] shortArray2 = new short[1];
      shortArray2[0] = (short)1036;
      shortArray0[1] = shortArray2;
      short[] shortArray3 = new short[1];
      shortArray3[0] = (short)675;
      shortArray0[2] = shortArray3;
      short[] shortArray4 = new short[5];
      shortArray4[0] = (short)1060;
      shortArray4[1] = (short)1060;
      shortArray4[2] = (short)675;
      shortArray4[3] = (short)675;
      shortArray4[4] = (short)3;
      shortArray0[3] = shortArray4;
      short[] shortArray5 = new short[9];
      shortArray5[0] = (short)1060;
      shortArray5[1] = (short)675;
      shortArray5[2] = (short) (-2410);
      shortArray5[3] = (short) (-2410);
      shortArray5[4] = (short)1511;
      shortArray5[5] = (short)1060;
      shortArray5[6] = (short)1036;
      shortArray5[7] = (short) (-2410);
      shortArray5[8] = (short)3;
      shortArray0[4] = shortArray5;
      short[] shortArray6 = new short[5];
      shortArray6[0] = (short)1511;
      shortArray6[1] = (short)675;
      shortArray6[2] = (short)3;
      shortArray6[3] = (short)675;
      shortArray6[4] = (short)3;
      shortArray0[5] = shortArray6;
      short[] shortArray7 = new short[1];
      shortArray7[0] = (short)675;
      shortArray0[6] = shortArray7;
      short[] shortArray8 = new short[6];
      shortArray8[0] = (short)1036;
      shortArray8[1] = (short) (-2410);
      shortArray8[2] = (short)1060;
      shortArray8[3] = (short) (-2410);
      shortArray8[4] = (short)1859;
      shortArray8[5] = (short)675;
      shortArray0[7] = shortArray8;
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(1506, shortArray0);
      RenderingHints renderingHints0 = new RenderingHints((Map<RenderingHints.Key, ?>) null);
      LookupOp lookupOp0 = new LookupOp(shortLookupTable0, renderingHints0);
      // Undeclared exception!
      try { 
        lookupOp0.filter((BufferedImage) null, (BufferedImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.LookupOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("ISk$inZc\"-(26I~_");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.getRangeZeroBaselinePaint();
      CategoryMarker categoryMarker0 = new CategoryMarker(2.0F, logAxis0.DEFAULT_AXIS_LABEL_PAINT, logAxis0.DEFAULT_TICK_MARK_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addDomainMarker(500, (Marker) categoryMarker0, layer0);
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)standardXYItemRenderer0.lookupSeriesShape(343);
      logAxis0.setTickMarkOutsideLength(3);
      combinedRangeXYPlot0.setRenderer(10, (XYItemRenderer) standardXYItemRenderer0, false);
      categoryMarker0.setKey(true);
      combinedRangeXYPlot0.clearDomainMarkers();
      combinedRangeXYPlot0.clearDomainAxes();
      combinedRangeXYPlot0.drawRangeMarkers((Graphics2D) null, rectangle2D_Double0, 10, layer0);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(85, (-139), (-1758));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -1758
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(500, layer0);
      combinedDomainXYPlot0.clearRangeMarkers(500);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      categoryMarker0.setStroke(combinedDomainXYPlot0.DEFAULT_GRIDLINE_STROKE);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-1095), (Marker) categoryMarker0, layer1, true);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedDomainXYPlot0.addRangeMarker((Marker) categoryMarker0);
      JEditorPane jEditorPane0 = new JEditorPane();
      jEditorPane0.modelToView(0);
      combinedDomainXYPlot0.drawDomainMarkers((Graphics2D) null, (Rectangle2D) null, 4, layer1);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.removeAnnotation((XYAnnotation) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("AvY[wWr+Q");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      Plot.resolveDomainAxisLocation(axisLocation0, plotOrientation0);
      combinedDomainXYPlot0.setDomainCrosshairStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.mapDatasetToDomainAxes(1, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ValueMarker valueMarker0 = new ValueMarker(10);
      combinedRangeXYPlot0.mapDatasetToDomainAxis(1266, 1266);
      Layer layer0 = Layer.BACKGROUND;
      LegendTitle legendTitle0 = new LegendTitle(combinedRangeXYPlot0);
      RectangleInsets rectangleInsets0 = legendTitle0.getItemLabelPadding();
      valueMarker0.setLabelOffset(rectangleInsets0);
      combinedRangeXYPlot0.addRangeMarker(1266, (Marker) valueMarker0, layer0, false);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultBoxAndWhiskerCategoryDataset0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);
      spiderWebPlot0.getSeriesOutlineStroke();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Paint paint0 = null;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainCrosshairPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 10);
      TextAnchor textAnchor0 = TextAnchor.HALF_ASCENT_LEFT;
      intervalMarker0.setLabelTextAnchor(textAnchor0);
      intervalMarker0.setLabelTextAnchor(textAnchor0);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      combinedDomainXYPlot0.markerChanged(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getRangeMarkers(1017, layer0);
      SystemColor systemColor0 = SystemColor.desktop;
      Color.getColor("snlquyy/9M.", (Color) systemColor0);
      combinedDomainXYPlot0.setDomainGridlinePaint(systemColor0);
      combinedDomainXYPlot0.addDomainMarker(1, (Marker) intervalMarker0, layer0, false);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = xYItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      chartRenderingInfo1.getRenderingSource();
      combinedDomainXYPlot0.select(2038.5708998214377, Double.NEGATIVE_INFINITY, (Rectangle2D) rectangle2D_Double0, (RenderingSource) null);
      combinedDomainXYPlot0.drawAnnotations((Graphics2D) null, rectangle2D_Double0, plotRenderingInfo0);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(500, layer0);
      combinedDomainXYPlot0.clearRangeMarkers(500);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-1095), (Marker) categoryMarker0, layer1, true);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedDomainXYPlot0.addRangeMarker((Marker) categoryMarker0);
      JEditorPane jEditorPane0 = new JEditorPane();
      jEditorPane0.modelToView(0);
      combinedDomainXYPlot0.drawDomainMarkers((Graphics2D) null, (Rectangle2D) null, 4, layer1);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.removeRangeMarker((-1095), (Marker) null, layer1, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(500, layer0);
      combinedDomainXYPlot0.clearRangeMarkers(500);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-1095), (Marker) categoryMarker0, layer1, true);
      numberAxis3D0.setAxisLinePaint(combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedDomainXYPlot0.addRangeMarker((Marker) categoryMarker0);
      JEditorPane jEditorPane0 = new JEditorPane();
      jEditorPane0.modelToView(0);
      combinedDomainXYPlot0.drawDomainMarkers((Graphics2D) null, (Rectangle2D) null, 4, layer1);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedDomainXYPlot0.setOrientation(plotOrientation0);
      boolean boolean0 = combinedDomainXYPlot0.removeRangeMarker((-1095), (Marker) categoryMarker0, layer0, true);
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertFalse(boolean0);
      assertTrue(combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(500, layer0);
      combinedDomainXYPlot0.clearRangeMarkers(500);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      Layer layer1 = Layer.BACKGROUND;
      boolean boolean0 = combinedDomainXYPlot0.removeRangeMarker((-1095), (Marker) categoryMarker0, layer1, true);
      assertFalse(boolean0);
      
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedDomainXYPlot0.addRangeMarker((Marker) categoryMarker0);
      JEditorPane jEditorPane0 = new JEditorPane();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jEditorPane0.modelToView(0);
      combinedDomainXYPlot0.drawDomainMarkers((Graphics2D) null, (Rectangle2D) null, 4, layer1);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      combinedDomainXYPlot0.setOrientation(plotOrientation0);
      combinedDomainXYPlot0.clearRangeMarkers();
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertTrue(combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      String string0 = "?gY.!q\"";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?gY.!q\"");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-102);
      byteArray0[1] = (byte) (-18);
      byte byte0 = (byte)10;
      byteArray0[2] = (byte)10;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ValueMarker valueMarker0 = new ValueMarker(2147450874, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addDomainMarker(2147450874, (Marker) valueMarker0, layer0, false);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(10, 1.0F, 1.0F, 1.0F);
      combinedRangeXYPlot0.addAnnotation((XYAnnotation) xYBoxAnnotation0, false);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainCrosshairStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      RangeType rangeType0 = RangeType.NEGATIVE;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      float[] floatArray0 = new float[0];
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      double double0 = 1514.714657291;
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1514.714657291);
      candlestickRenderer0.getLegendTextPaint((-2145455804));
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setDomainZeroBaselinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(500, layer0);
      combinedDomainXYPlot0.clearRangeMarkers(500);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-1095), (Marker) categoryMarker0, layer1, true);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      combinedDomainXYPlot0.addRangeMarker((Marker) categoryMarker0);
      JEditorPane jEditorPane0 = new JEditorPane();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      combinedDomainXYPlot0.setOrientation(plotOrientation0);
      GeneralPath generalPath0 = new GeneralPath(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 0.0F, 0.0F, 10);
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, true);
      combinedDomainXYPlot0.select(generalPath0, (Rectangle2D) rectangle2D_Float0, (RenderingSource) chartPanel0);
      assertEquals(1, combinedDomainXYPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      DateAxis dateAxis0 = new DateAxis("");
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.getPlotInfo();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      windItemRenderer0.hasListener(fastScatterPlot0);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, symbolAxis0, dateAxis0, windItemRenderer0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.05, (-385.8623088), 392.01, 1476.0);
      Rectangle2D rectangle2D0 = xYPlot0.DEFAULT_INSETS.createInsetRectangle((Rectangle2D) rectangle2D_Double0, true, true);
      Rectangle2D rectangle2D1 = rectangle2D_Double0.createIntersection(rectangle2D0);
      Vector<LogAxis> vector0 = new Vector<LogAxis>();
      xYPlot0.drawRangeTickBands((Graphics2D) null, rectangle2D1, vector0);
      // Undeclared exception!
      try { 
        xYPlot0.setQuadrantOrigin((Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'origin' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.getRangeMarkers(500, layer0);
      combinedDomainXYPlot0.clearRangeMarkers(500);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainXYPlot0.removeRangeMarker((-1095), (Marker) categoryMarker0, layer1, true);
      numberAxis3D0.setAxisLinePaint(combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT);
      SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      JEditorPane jEditorPane0 = new JEditorPane();
      jEditorPane0.modelToView(0);
      combinedDomainXYPlot0.drawDomainMarkers((Graphics2D) null, (Rectangle2D) null, 4, layer1);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedDomainXYPlot0.setOrientation(plotOrientation0);
      combinedDomainXYPlot0.removeRangeMarker((-1095), (Marker) categoryMarker0, layer0, true);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.drawVerticalLine((Graphics2D) null, (Rectangle2D) null, 0.0F, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE, numberAxis3D0.DEFAULT_TICK_LABEL_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getOrientation();
      combinedDomainXYPlot0.setForegroundAlpha(0.0F);
      combinedDomainXYPlot0.clearSelection();
      combinedDomainXYPlot0.setRenderer(770, (XYItemRenderer) null, true);
      assertEquals(771, combinedDomainXYPlot0.getRendererCount());
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      xYPlot0.setOrientation(plotOrientation0);
      xYPlot0.getFixedDomainAxisSpace();
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      xYPlot0.setDomainGridlinePaint(color0);
      xYPlot0.setFixedRangeAxisSpace((AxisSpace) null, false);
      YIntervalSeriesCollection yIntervalSeriesCollection0 = new YIntervalSeriesCollection();
      xYPlot0.setDataset(3, (XYDataset) yIntervalSeriesCollection0);
      xYPlot0.setDomainGridlinePaint(color0);
      xYPlot0.clearRangeMarkers();
      int int0 = (-2123);
      float[] floatArray0 = new float[5];
      floatArray0[0] = 1.0F;
      floatArray0[1] = (float) 10;
      floatArray0[2] = (float) 10;
      floatArray0[3] = (float) (-2123);
      floatArray0[4] = 1.0F;
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(10, (-2123), floatArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainMinorGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedRangeXYPlot0.setRangePannable(false);
      combinedRangeXYPlot0.clearRangeMarkers();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 1.0F, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeXYPlot0.addDomainMarker((-850), (Marker) intervalMarker0, layer0, true);
      combinedRangeXYPlot0.getSeriesCount();
      RingPlot ringPlot0 = new RingPlot();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Paint paint0 = ringPlot0.lookupSectionPaint(10);
      combinedRangeXYPlot0.setDomainCrosshairPaint(paint0);
      byte[][] byteArray0 = new byte[1][7];
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(2380, byteArray0);
      JFreeChart jFreeChart0 = new JFreeChart("?", ringPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, renderingHints0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setOrientation((PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      StackedXYBarRenderer stackedXYBarRenderer0 = new StackedXYBarRenderer();
      XYPlot xYPlot0 = new XYPlot(vectorSeriesCollection0, valueAxis0, valueAxis0, stackedXYBarRenderer0);
      xYPlot0.getLegendItems();
      Layer layer0 = Layer.FOREGROUND;
      xYPlot0.getDomainMarkers(3, layer0);
      // Undeclared exception!
      try { 
        xYPlot0.removeAnnotation((XYAnnotation) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("ISk$inZc\"-(26I~_");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.getRangeZeroBaselinePaint();
      CategoryMarker categoryMarker0 = new CategoryMarker(2.0F, logAxis0.DEFAULT_AXIS_LABEL_PAINT, logAxis0.DEFAULT_TICK_MARK_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addDomainMarker(500, (Marker) categoryMarker0, layer0);
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      PeriodAxis periodAxis0 = new PeriodAxis("ISk$inZc\"-(26I~_");
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(1, (XYToolTipGenerator) null);
      XYPlot xYPlot0 = new XYPlot(defaultWindDataset0, logAxis0, periodAxis0, standardXYItemRenderer0);
      categoryMarker0.addChangeListener(xYPlot0);
      combinedRangeXYPlot0.removeDomainMarker((Marker) categoryMarker0);
      StandardXYItemRenderer standardXYItemRenderer1 = new StandardXYItemRenderer();
      ValueMarker valueMarker0 = new ValueMarker(424.084);
      valueMarker0.equals(combinedRangeXYPlot0);
      combinedRangeXYPlot0.addDomainMarker(832, (Marker) valueMarker0, layer0, false);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      logAxis0.setTickMarkOutsideLength(3);
      combinedRangeXYPlot0.setRenderer(10, (XYItemRenderer) standardXYItemRenderer1, false);
      categoryMarker0.setKey(true);
      combinedRangeXYPlot0.clearDomainMarkers();
      BufferedImage bufferedImage0 = new BufferedImage(832, 4, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      xYPlot0.drawQuadrants(graphics2D0, rectangle2D_Double0);
      ValueMarker valueMarker1 = null;
      try {
        valueMarker1 = new ValueMarker(500, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, standardXYItemRenderer1.DEFAULT_OUTLINE_PAINT, standardXYItemRenderer1.DEFAULT_STROKE, 343);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'alpha' value must be in the range 0.0f to 1.0f
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      DateAxis dateAxis0 = new DateAxis("");
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      fastScatterPlot0.getPlotType();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.05, (-385.8623088), 392.01, 1476.0);
      Vector<LogAxis> vector0 = new Vector<LogAxis>();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(symbolAxis0);
      combinedRangeXYPlot0.zoomRangeAxes(2.0, plotRenderingInfo0, (Point2D) null, false);
      assertEquals((-4.0), symbolAxis0.getLowerBound(), 0.01);
      assertEquals(10.0, symbolAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(65535, 2887);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JTextArea jTextArea0 = new JTextArea("");
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jTextArea0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getTextBounds(0, (-2110));
      xYPlot0.drawDomainMarkers(graphics2D0, (Rectangle2D) null, 59, (Layer) null);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 0, (-1744), 65535, (-1744), (-1), 65535, false, false, false, true, false, true, false);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      TimeZone timeZone0 = TimeZone.getDefault();
      DateAxis dateAxis0 = new DateAxis("ZOOM_IN_DOMAIN", timeZone0);
      // Undeclared exception!
      try { 
        xYPlot0.drawDomainCrosshair(graphics2D0, (Rectangle2D) null, plotOrientation0, 0, dateAxis0, dateAxis0.DEFAULT_AXIS_LINE_STROKE, dateAxis0.DEFAULT_AXIS_LABEL_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.DateAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("ISk$inZc\"-(26I~_");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      Paint paint0 = combinedRangeXYPlot0.getRangeZeroBaselinePaint();
      CategoryMarker categoryMarker0 = new CategoryMarker(2.0F, logAxis0.DEFAULT_AXIS_LABEL_PAINT, logAxis0.DEFAULT_TICK_MARK_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeXYPlot0.addDomainMarker(500, (Marker) categoryMarker0, layer0);
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      PeriodAxis periodAxis0 = new PeriodAxis("ISk$inZc\"-(26I~_");
      StandardXYItemRenderer standardXYItemRenderer0 = new StandardXYItemRenderer(1, (XYToolTipGenerator) null);
      XYPlot xYPlot0 = new XYPlot(defaultWindDataset0, logAxis0, periodAxis0, standardXYItemRenderer0);
      categoryMarker0.addChangeListener(xYPlot0);
      xYPlot0.isDomainZeroBaselineVisible();
      StandardXYItemRenderer standardXYItemRenderer1 = new StandardXYItemRenderer();
      ValueMarker valueMarker0 = new ValueMarker(424.084);
      combinedRangeXYPlot0.addDomainMarker(832, (Marker) valueMarker0, layer0, false);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      logAxis0.setTickMarkOutsideLength(3);
      combinedRangeXYPlot0.setRenderer(10, (XYItemRenderer) standardXYItemRenderer1, false);
      categoryMarker0.setKey(true);
      ValueMarker valueMarker1 = new ValueMarker(3, paint0, periodAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedRangeXYPlot0.getSeriesCount();
      valueMarker1.addChangeListener(combinedRangeXYPlot0);
      combinedRangeXYPlot0.addDomainMarker(500, (Marker) valueMarker1, layer0);
      combinedRangeXYPlot0.clearDomainAxes();
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(85, (-139), (-1758));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -1758
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }
}
