/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 12 23:51:07 GMT 2017
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.Stroke;
import java.awt.geom.Arc2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.text.ChoiceFormat;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Locale;
import javax.swing.JInternalFrame;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.Crosshair;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.ValueDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

public class AbstractCategoryItemRenderer_ESTest  {

  
//  @Test(timeout = 4000)
//   public void test000()  throws Throwable  {
//       BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.0, (-612.623153));
//       SimpleDateFormat simpleDateFormat0 = (SimpleDateFormat)MockDateFormat.getDateTimeInstance();
//       StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("", (DateFormat) simpleDateFormat0);
//       barRenderer3D0.setSeriesToolTipGenerator(10, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
//       assertFalse(barRenderer3D0.getAutoPopulateSeriesOutlinePaint());
//   }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      StandardEntityCollection standardEntityCollection0 = (StandardEntityCollection)categoryStepRenderer_State0.getEntityCollection();
      Number[][] numberArray0 = new Number[4][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset((CategoryDataset) defaultIntervalCategoryDataset0, 0, 0);
      stackedBarRenderer0.addEntity(standardEntityCollection0, categoryStepRenderer_State0.line, slidingCategoryDataset0, 0, 0, false, 3.141592653589793, 1941.2);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("");
      categoryStepRenderer0.setSeriesURLGenerator(53, (CategoryURLGenerator) standardCategoryURLGenerator0);
      StandardCategoryURLGenerator standardCategoryURLGenerator1 = (StandardCategoryURLGenerator)categoryStepRenderer0.getSeriesURLGenerator(53);
      assertSame(standardCategoryURLGenerator1, standardCategoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedBarRenderer3D0.getSeriesToolTipGenerator(1400);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueAxis valueAxis0 = levelRenderer0.getRangeAxis(categoryPlot0, (-1));
      assertNull(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      CategoryPlot categoryPlot0 = lineAndShapeRenderer0.getPlot();
      assertNull(categoryPlot0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = (StandardCategorySeriesLabelGenerator)stackedAreaRenderer0.getLegendItemLabelGenerator();
      assertNotNull(standardCategorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("'/%");
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      double double0 = levelRenderer0.getItemMiddle(0.0, 0.0, defaultKeyedValues2DDataset0, extendedCategoryAxis0, rectangle2D_Double0, rectangleEdge0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = statisticalBarRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("ZuFcv}Ov:");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      CategoryAxis3D categoryAxis3D1 = (CategoryAxis3D)boxAndWhiskerRenderer0.getDomainAxis(combinedDomainCategoryPlot0, (CategoryDataset) null);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 0.0);
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedBarRenderer3D0.getBaseToolTipGenerator();
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = intervalBarRenderer0.getBaseItemLabelGenerator();
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      double[][] doubleArray0 = new double[1][6];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = 0.2;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = groupedStackedBarRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(0.1, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("Va@", (Comparable) 0.0, (-4155.6437), 0.0);
      boolean boolean0 = scatterRenderer0.equals(categoryPointerAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryStepRenderer.State categoryStepRenderer_State0 = (CategoryStepRenderer.State)categoryStepRenderer0.createState((PlotRenderingInfo) null);
      assertEquals(0.0, categoryStepRenderer_State0.getBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot();
      JFreeChart jFreeChart0 = new JFreeChart((Plot) waferMapPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)chartPanel0.getScreenDataArea();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.createState(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = intervalBarRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Double0, (CategoryPlot) null, categoryAxis3D0, logAxis0, defaultCategoryDataset0, 10, 3698, false, categoryItemRendererState0, (Rectangle2D) null);
      assertNull(rectangle2D0);
  }

//   @Test(timeout = 4000)
//   public void test016()  throws Throwable  {
//       LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
//       // Undeclared exception!
//       try { 
//         lineRenderer3D0.setSeriesURLGenerator((-386), (CategoryURLGenerator) null, true);
//         fail("Expecting exception: IllegalArgumentException");
      
//       } catch(IllegalArgumentException e) {
//          //
//          // Requires index >= 0.
//          //
//          verifyException("org.jfree.chart.util.AbstractObjectList", e);
//       }
//   }

//   @Test(timeout = 4000)
//   public void test017()  throws Throwable  {
//       GanttRenderer ganttRenderer0 = new GanttRenderer();
//       // Undeclared exception!
//       try { 
//         ganttRenderer0.setSeriesURLGenerator((-1941), (CategoryURLGenerator) null);
//         fail("Expecting exception: IllegalArgumentException");
      
//       } catch(IllegalArgumentException e) {
//          //
//          // Requires index >= 0.
//          //
//          verifyException("org.jfree.chart.util.AbstractObjectList", e);
//       }
//   }

//   @Test(timeout = 4000)
//   public void test018()  throws Throwable  {
//       GanttRenderer ganttRenderer0 = new GanttRenderer();
//       Locale locale0 = new Locale("");
//       DecimalFormat decimalFormat0 = (DecimalFormat)NumberFormat.getCurrencyInstance(locale0);
//       StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("", (NumberFormat) decimalFormat0);
//       // Undeclared exception!
//       try { 
//         ganttRenderer0.setSeriesToolTipGenerator((-1102), (CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
//         fail("Expecting exception: IllegalArgumentException");
      
//       } catch(IllegalArgumentException e) {
//          //
//          // Requires index >= 0.
//          //
//          verifyException("org.jfree.chart.util.AbstractObjectList", e);
//       }
//   }

//   @Test(timeout = 4000)
//   public void test019()  throws Throwable  {
//       GanttRenderer ganttRenderer0 = new GanttRenderer();
//       // Undeclared exception!
//       try { 
//         ganttRenderer0.setSeriesItemLabelGenerator((-789), (CategoryItemLabelGenerator) null, false);
//         fail("Expecting exception: IllegalArgumentException");
      
//       } catch(IllegalArgumentException e) {
//          //
//          // Requires index >= 0.
//          //
//          verifyException("org.jfree.chart.util.AbstractObjectList", e);
//       }
//   }

//   @Test(timeout = 4000)
//   public void test020()  throws Throwable  {
//       CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
//       // Undeclared exception!
//       try { 
//         categoryStepRenderer0.setSeriesItemLabelGenerator((-551), (CategoryItemLabelGenerator) null);
//         fail("Expecting exception: IllegalArgumentException");
      
//       } catch(IllegalArgumentException e) {
//          //
//          // Requires index >= 0.
//          //
//          verifyException("org.jfree.chart.util.AbstractObjectList", e);
//       }
//   }

//   @Test(timeout = 4000)
//   public void test021()  throws Throwable  {
//       BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.0, (-612.623153));
//       // Undeclared exception!
//       try { 
//         barRenderer3D0.getRangeAxis((CategoryPlot) null, 273);
//         fail("Expecting exception: NullPointerException");
      
//       } catch(NullPointerException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//          verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//       }
//   }

//   @Test(timeout = 4000)
//   public void test022()  throws Throwable  {
//       StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
//       DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
//       CategoryAxis categoryAxis0 = new CategoryAxis();
//       JInternalFrame jInternalFrame0 = new JInternalFrame("");
//       Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
//       RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
//       // Undeclared exception!
//       try { 
//         statisticalLineAndShapeRenderer0.getItemMiddle("", ".c`&p", defaultStatisticalCategoryDataset0, categoryAxis0, rectangle0, rectangleEdge0);
//         fail("Expecting exception: IllegalArgumentException");
      
//       } catch(IllegalArgumentException e) {
//          //
//          // Invalid category index: -1
//          //
//          verifyException("org.jfree.chart.axis.CategoryAxis", e);
//       }
//   }

//   @Test(timeout = 4000)
//   public void test023()  throws Throwable  {
//       GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
//       // Undeclared exception!
//       try { 
//         groupedStackedBarRenderer0.getDomainAxis((CategoryPlot) null, (CategoryDataset) null);
//         fail("Expecting exception: NullPointerException");
      
//       } catch(NullPointerException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//          verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//       }
//   }

//   @Test(timeout = 4000)
//   public void test024()  throws Throwable  {
//       DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
//       CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
//       TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
//       // Undeclared exception!
//       try { 
//         defaultCategoryItemRenderer0.getDomainAxis(combinedRangeCategoryPlot0, taskSeriesCollection0);
//         fail("Expecting exception: IllegalArgumentException");
      
//       } catch(IllegalArgumentException e) {
//          //
//          // Negative 'index'.
//          //
//          verifyException("org.jfree.chart.plot.CategoryPlot", e);
//       }
//   }

//   @Test(timeout = 4000)
//   public void test025()  throws Throwable  {
//       StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
//       Number[][] numberArray0 = new Number[6][5];
//       Number[] numberArray1 = new Number[4];
//       numberArray0[2] = numberArray1;
//       DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
//       // Undeclared exception!
//       try { 
//         stackedAreaRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
//         fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//       } catch(ArrayIndexOutOfBoundsException e) {
//          //
//          // 4
//          //
//          verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//       }
//   }

//   @Test(timeout = 4000)
//   public void test026()  throws Throwable  {
//       CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
//       double[][] doubleArray0 = new double[3][0];
//       double[] doubleArray1 = new double[7];
//       doubleArray0[0] = doubleArray1;
//       DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
//       // Undeclared exception!
//       try { 
//         categoryStepRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
//         fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//       } catch(ArrayIndexOutOfBoundsException e) {
//          //
//          // 0
//          //
//          verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//       }
//   }

//   @Test(timeout = 4000)
//   public void test027()  throws Throwable  {
//       DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
//       LevelRenderer levelRenderer0 = new LevelRenderer();
//       ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("'/%");
//       Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
//       CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
//       JFreeChart jFreeChart0 = new JFreeChart("Not implemented.", (Plot) combinedDomainCategoryPlot0);
//       BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1296, 50, (ChartRenderingInfo) null);
//       BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
//       SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImageRenderingSource0.createGraphics2D();
//       // Undeclared exception!
//       try { 
//         defaultCategoryItemRenderer0.drawRangeLine(sunGraphics2D0, combinedDomainCategoryPlot0, (ValueAxis) null, rectangle2D_Double0, 15, levelRenderer0.DEFAULT_PAINT, levelRenderer0.DEFAULT_OUTLINE_STROKE);
//         fail("Expecting exception: NullPointerException");
      
//       } catch(NullPointerException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//          verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//       }
//   }

//   @Test(timeout = 4000)
//   public void test028()  throws Throwable  {
//       StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
//       MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
//       JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
//       ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, false, false, true);
//       ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
//       BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
//       SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
//       CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
//       ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("]{76Bq|y@;");
//       CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) true, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_STROKE);
//       // Undeclared exception!
//       try { 
//         statisticalLineAndShapeRenderer0.drawDomainMarker(sunGraphics2D0, combinedRangeCategoryPlot0, extendedCategoryAxis0, categoryMarker0, (Rectangle2D) null);
//         fail("Expecting exception: NullPointerException");
      
//       } catch(NullPointerException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//          verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//       }
//   }

//   @Test(timeout = 4000)
//   public void test029()  throws Throwable  {
//       GanttRenderer ganttRenderer0 = new GanttRenderer();
//       TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
//       CategoryAxis categoryAxis0 = new CategoryAxis("TextBlockAnchor.BOTTOM_RIGHT");
//       PeriodAxis periodAxis0 = new PeriodAxis("TextBlockAnchor.BOTTOM_RIGHT");
//       CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) taskSeriesCollection0, categoryAxis0, (ValueAxis) periodAxis0, (CategoryItemRenderer) ganttRenderer0);
//       BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
//       // Undeclared exception!
//       try { 
//         boxAndWhiskerRenderer0.drawBackground((Graphics2D) null, categoryPlot0, (Rectangle2D) null);
//         fail("Expecting exception: NullPointerException");
      
//       } catch(NullPointerException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//          verifyException("org.jfree.chart.plot.Plot", e);
//       }
//   }

//   @Test(timeout = 4000)
//   public void test030()  throws Throwable  {
//       BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
//       StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
//       GeneralPath generalPath0 = new GeneralPath(0, 0);
//       SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset((CategoryDataset) null, (-325), 0);
//       // Undeclared exception!
//       try { 
//         boxAndWhiskerRenderer0.addEntity(standardEntityCollection0, generalPath0, slidingCategoryDataset0, (-2), (-554), true, (-1079.186994), 0.0);
//         fail("Expecting exception: NullPointerException");
      
//       } catch(NullPointerException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//          verifyException("org.jfree.data.category.SlidingCategoryDataset", e);
//       }
//   }

//   @Test(timeout = 4000)
//   public void test031()  throws Throwable  {
//       StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
//       ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
//       PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
//       CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
//       StandardEntityCollection standardEntityCollection0 = (StandardEntityCollection)categoryStepRenderer_State0.getEntityCollection();
//       Number[][] numberArray0 = new Number[4][8];
//       DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
//       SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset((CategoryDataset) defaultIntervalCategoryDataset0, (-13), (-13));
//       // Undeclared exception!
//       try { 
//         stackedBarRenderer0.addEntity(standardEntityCollection0, categoryStepRenderer_State0.line, slidingCategoryDataset0, (-13), 0, false, 3.141592653589793, 1941.2);
//         fail("Expecting exception: IllegalArgumentException");
      
//       } catch(IllegalArgumentException e) {
//          //
//          // The 'row' argument is out of bounds.
//          //
//          verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//       }
//   }

//   @Test(timeout = 4000)
//   public void test032()  throws Throwable  {
//       StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
//       ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
//       PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
//       CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
//       StandardEntityCollection standardEntityCollection0 = (StandardEntityCollection)categoryStepRenderer_State0.getEntityCollection();
//       Number[][] numberArray0 = new Number[4][8];
//       Number[] numberArray1 = new Number[0];
//       numberArray0[0] = numberArray1;
//       DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
//       SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset((CategoryDataset) defaultIntervalCategoryDataset0, 0, 0);
//       // Undeclared exception!
//       try { 
//         stackedBarRenderer0.addEntity(standardEntityCollection0, categoryStepRenderer_State0.line, slidingCategoryDataset0, 0, 0, false, 3.141592653589793, 1941.2);
//         fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//       } catch(ArrayIndexOutOfBoundsException e) {
//          //
//          // 0
//          //
//          verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//       }
//   }

//   @Test(timeout = 4000)
//   public void test033()  throws Throwable  {
//       StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
//       Arc2D.Double arc2D_Double0 = new Arc2D.Double();
//       // Undeclared exception!
//       try { 
//         statisticalLineAndShapeRenderer0.addEntity((EntityCollection) null, arc2D_Double0, (CategoryDataset) null, 1199, 3, false);
//         fail("Expecting exception: NullPointerException");
      
//       } catch(NullPointerException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//          verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//       }
//   }

//   @Test(timeout = 4000)
//   public void test034()  throws Throwable  {
//       LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
//       StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
//       ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) standardEntityCollection0);
//       PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
//       CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
//       DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
//       SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset((CategoryDataset) defaultCategoryDataset0, 53, 53);
//       // Undeclared exception!
//       try { 
//         layeredBarRenderer0.addEntity(standardEntityCollection0, categoryStepRenderer_State0.line, slidingCategoryDataset0, 3, 7, true);
//         fail("Expecting exception: IndexOutOfBoundsException");
      
//       } catch(IndexOutOfBoundsException e) {
//          //
//          // Index: 3, Size: 0
//          //
//          verifyException("java.util.ArrayList", e);
//       }
//   }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DrawingSupplier drawingSupplier0 = levelRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Number[][] numberArray0 = new Number[6][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      Range range0 = stackedAreaRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DateAxis dateAxis0 = new DateAxis("T-l?BN");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) dateAxis0);
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1307, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImageRenderingSource0.createGraphics2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = statisticalLineAndShapeRenderer0.initialise(sunGraphics2D0, rectangle2D_Double0, combinedRangeCategoryPlot0, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("un3Bqu2Pg)t1W", (Comparable) 0.2, (-195.3));
      Layer layer0 = Layer.FOREGROUND;
      stackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      assertFalse(stackedBarRenderer0.getRenderAsPercentages());
  }

//   @Test(timeout = 4000)
//   public void test039()  throws Throwable  {
//       StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
//       Layer layer0 = Layer.BACKGROUND;
//       // Undeclared exception!
//       try { 
//         stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) null, layer0);
//         fail("Expecting exception: IllegalArgumentException");
      
//       } catch(IllegalArgumentException e) {
//          //
//          // Null 'annotation' argument.
//          //
//          verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//       }
//   }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      assertTrue(boxAndWhiskerRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setSeriesURLGenerator(658, (CategoryURLGenerator) null, true);
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryURLGenerator categoryURLGenerator0 = ganttRenderer0.getURLGenerator((-1982), 500, false);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      assertTrue(stackedAreaRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = lineAndShapeRenderer0.getToolTipGenerator((-165), 16, false);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 0.2);
      MeterPlot meterPlot0 = new MeterPlot((ValueDataset) defaultValueDataset0);
      DecimalFormat decimalFormat0 = (DecimalFormat)meterPlot0.getTickLabelFormat();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("5C+')_!' yYf:0X", (NumberFormat) decimalFormat0);
      categoryStepRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      assertFalse(categoryStepRenderer0.getBaseItemLabelsVisible());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setSeriesItemLabelGenerator(1196, (CategoryItemLabelGenerator) null, true);
      assertEquals(2.0, stackedAreaRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("VW!)sYpNR:Q5<%x");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultCategoryDataset0, categoryAxis0, (ValueAxis) null, (CategoryItemRenderer) stackedAreaRenderer0);
      stackedAreaRenderer0.setPlot(categoryPlot0);
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
  }

//   @Test(timeout = 4000)
//   public void test048()  throws Throwable  {
//       StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
//       PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
//       CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
//       DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
//       StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
//       stackedBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
//       // Undeclared exception!
//       try { 
//         stackedBarRenderer0.addEntity((EntityCollection) null, categoryStepRenderer_State0.line, defaultMultiValueCategoryDataset0, 1, 1, false, 1, 0.0);
//         fail("Expecting exception: IndexOutOfBoundsException");
      
//       } catch(IndexOutOfBoundsException e) {
//          //
//          // Index: 1, Size: 0
//          //
//          verifyException("java.util.ArrayList", e);
//       }
//   }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      LegendItemCollection legendItemCollection0 = areaRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = (NumberAxis)areaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      assertEquals(1.05, numberAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      BarRenderer3D barRenderer3D1 = (BarRenderer3D)barRenderer3D0.clone();
      assertTrue(barRenderer3D1.getShadowsVisible());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      String[] stringArray0 = new String[8];
      Number[][] numberArray0 = new Number[0][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot((CategoryDataset) defaultIntervalCategoryDataset0);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, (Plot) multiplePiePlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 977);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImageRenderingSource0.createGraphics2D();
      CategoryAxis categoryAxis0 = new CategoryAxis("8*p'LgZMToV");
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = (NumberAxis)thermometerPlot0.getRangeAxis();
      Layer layer0 = Layer.FOREGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      layeredBarRenderer0.drawAnnotations(sunGraphics2D0, (Rectangle2D) null, categoryAxis0, numberAxis0, layer0, plotRenderingInfo0);
      assertTrue(layeredBarRenderer0.getIncludeBaseInRange());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      String[] stringArray0 = new String[8];
      Number[][] numberArray0 = new Number[0][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot((CategoryDataset) defaultIntervalCategoryDataset0);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, (Plot) multiplePiePlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 977);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImageRenderingSource0.createGraphics2D();
      CategoryAxis categoryAxis0 = new CategoryAxis("8*p'LgZMToV");
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = (NumberAxis)thermometerPlot0.getRangeAxis();
      Layer layer0 = Layer.BACKGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      layeredBarRenderer0.drawAnnotations(sunGraphics2D0, (Rectangle2D) null, categoryAxis0, numberAxis0, layer0, plotRenderingInfo0);
      assertFalse(ValueAxis.DEFAULT_INVERTED);
  }

//   @Test(timeout = 4000)
//   public void test054()  throws Throwable  {
//       StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-350.71232), (-350.71232));
//       StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
//       CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
//       CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
//       JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedRangeCategoryPlot0);
//       ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
//       PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
//       // Undeclared exception!
//       try { 
//         stackedBarRenderer3D0.updateCrosshairValues(categoryCrosshairState0, stackedAreaRenderer0.ZERO, stackedAreaRenderer0.ZERO, (-1694.787), 2, (double) stackedAreaRenderer0.ZERO, 2, plotOrientation0);
//         fail("Expecting exception: NullPointerException");
      
//       } catch(NullPointerException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//          verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//       }
//   }

//   @Test(timeout = 4000)
//   public void test055()  throws Throwable  {
//       LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
//       CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("*P&kf0:G?/D_nG_C.", (Comparable) "*P&kf0:G?/D_nG_C.", (double) lineAndShapeRenderer0.ZERO, (-947.8081));
//       Comparable comparable0 = categoryPointerAnnotation0.getCategory();
//       // Undeclared exception!
//       try { 
//         lineAndShapeRenderer0.updateCrosshairValues((CategoryCrosshairState) null, comparable0, 5.0, 1192.0, 0, 0.0, 380.893230892798, (PlotOrientation) null);
//         fail("Expecting exception: IllegalArgumentException");
      
//       } catch(IllegalArgumentException e) {
//          //
//          // Null 'orientation' argument.
//          //
//          verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//       }
//   }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotOrientation plotOrientation0 = combinedRangeCategoryPlot0.getOrientation();
      lineRenderer3D0.updateCrosshairValues((CategoryCrosshairState) null, ganttRenderer0.ZERO, 3.0, 0.2, 16, 3.0, (double) ganttRenderer0.ZERO, plotOrientation0);
      assertTrue(ganttRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("=](L!=^3?>2-(eM>S}#");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      JInternalFrame jInternalFrame0 = new JInternalFrame("ZOOM_RESET_BOTH", true, false, false, false);
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      Point2D.Double point2D_Double0 = (Point2D.Double)groupedStackedBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Double0, rectangle0, extendedCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(0.0, point2D_Double0.y, 0.01);
  }

//   @Test(timeout = 4000)
//   public void test058()  throws Throwable  {
//       GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
//       BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
//       CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
//       DefaultCaret defaultCaret0 = new DefaultCaret();
//       RectangleInsets rectangleInsets0 = new RectangleInsets();
//       LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
//       Crosshair crosshair0 = new Crosshair((double) 1319.7244F, groupedStackedBarRenderer0.DEFAULT_OUTLINE_PAINT, categoryStepRenderer0.DEFAULT_STROKE);
//       RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
//       // Undeclared exception!
//       try { 
//         boxAndWhiskerRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, defaultCaret0, defaultCaret0, rectangleInsets0, lengthAdjustmentType0, rectangleAnchor0);
//         fail("Expecting exception: NullPointerException");
      
//       } catch(NullPointerException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//          verifyException("org.jfree.chart.util.RectangleAnchor", e);
//       }
//   }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Line2D.Float line2D_Float0 = new Line2D.Float((Point2D) point2D_Double0, (Point2D) point2D_Double0);
      Rectangle2D.Float rectangle2D_Float0 = (Rectangle2D.Float)line2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Point2D.Double point2D_Double1 = (Point2D.Double)ganttRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, rectangle2D_Float0, extendedCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, (RectangleAnchor) null);
      assertEquals(0.0, point2D_Double1.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Line2D.Float line2D_Float0 = new Line2D.Float((Point2D) point2D_Double0, (Point2D) point2D_Double0);
      Rectangle2D.Float rectangle2D_Float0 = (Rectangle2D.Float)line2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Point2D.Double point2D_Double1 = (Point2D.Double)ganttRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, rectangle2D_Float0, extendedCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, (RectangleAnchor) null);
      assertEquals(0.0, point2D_Double1.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(1.0, 6.0);
      DateAxis dateAxis0 = new DateAxis("T-l?BN");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) dateAxis0);
      JFreeChart jFreeChart0 = new JFreeChart((Plot) combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1307, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImageRenderingSource0.createGraphics2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) true);
      barRenderer3D0.drawRangeMarker(sunGraphics2D0, combinedRangeCategoryPlot0, dateAxis0, categoryMarker0, rectangle2D_Double0);
      assertNull(categoryMarker0.getLabel());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("6a>U");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) categoryAxis3D0);
      String[] stringArray0 = new String[8];
      SymbolAxis symbolAxis0 = new SymbolAxis(";' iMa!5E:C3", stringArray0);
      IntervalMarker intervalMarker0 = new IntervalMarker(406.48007, 0.0, minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_PAINT, stackedBarRenderer3D0.DEFAULT_OUTLINE_STROKE, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, symbolAxis0.DEFAULT_AXIS_LINE_STROKE, 1.0F);
      stackedBarRenderer3D0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, symbolAxis0, intervalMarker0, rectangle2D_Double0);
      assertFalse(stackedBarRenderer3D0.getAutoPopulateSeriesOutlineStroke());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis categoryAxis0 = new CategoryAxis("TextBlockAnchor.BOTTOM_RIGHT");
      PeriodAxis periodAxis0 = new PeriodAxis("TextBlockAnchor.BOTTOM_RIGHT");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) taskSeriesCollection0, categoryAxis0, (ValueAxis) periodAxis0, (CategoryItemRenderer) ganttRenderer0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) 10, extendedCategoryAxis0.DEFAULT_AXIS_LINE_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE);
      ganttRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, extendedCategoryAxis0, categoryMarker0, (Rectangle2D) null);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("=](L!=^3?>2-(eM>S}#");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      statisticalBarRenderer0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, numberAxis3D0, rectangle2D_Double0, 2.0, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, groupedStackedBarRenderer0.DEFAULT_STROKE);
      assertTrue(combinedDomainCategoryPlot0.canSelectByPoint());
  }

//   @Test(timeout = 4000)
//   public void test065()  throws Throwable  {
//       StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
//       Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((double) statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, (-1203.564));
//       Rectangle rectangle0 = rectangle2D_Double0.getBounds();
//       // Undeclared exception!
//       try { 
//         statisticalLineAndShapeRenderer0.drawDomainLine((Graphics2D) null, (CategoryPlot) null, rectangle0, 0.0, (Paint) null, (Stroke) null);
//         fail("Expecting exception: IllegalArgumentException");
      
//       } catch(IllegalArgumentException e) {
//          //
//          // Null 'paint' argument.
//          //
//          verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//       }
//   }

//   @Test(timeout = 4000)
//   public void test066()  throws Throwable  {
//       StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
//       CategoryAxis categoryAxis0 = new CategoryAxis("VW!)sYpNR:Q5<%x");
//       // Undeclared exception!
//       try { 
//         stackedAreaRenderer0.drawDomainLine((Graphics2D) null, (CategoryPlot) null, (Rectangle2D) null, 0.0, categoryAxis0.DEFAULT_AXIS_LINE_PAINT, categoryAxis0.DEFAULT_TICK_MARK_STROKE);
//         fail("Expecting exception: NullPointerException");
      
//       } catch(NullPointerException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//          verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//       }
//   }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Range range0 = minMaxCategoryRenderer0.findRangeBounds((CategoryDataset) null, false);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("VW!)sYpNR:Q5<%x");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) defaultCategoryDataset0, categoryAxis0, (ValueAxis) null, (CategoryItemRenderer) stackedAreaRenderer0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((float) 2989, (float) 2989, (float) 2989, (float) 2989);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 2989, 3018, 1499, 15, 1541, false, true, false, false, true, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = groupedStackedBarRenderer0.initialise(sunGraphics2D0, rectangle2D_Float0, categoryPlot0, defaultCategoryDataset0, plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("=](L!=^3?>2-(eM>S}#");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
      JInternalFrame jInternalFrame0 = new JInternalFrame("ZOOM_RESET_BOTH", true, false, false, false);
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.initialise((Graphics2D) null, rectangle0, combinedDomainCategoryPlot0, (CategoryDataset) null, (PlotRenderingInfo) null);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
  }

//   @Test(timeout = 4000)
//   public void test070()  throws Throwable  {
//       StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
//       // Undeclared exception!
//       try { 
//         stackedBarRenderer3D0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
//         fail("Expecting exception: IllegalArgumentException");
      
//       } catch(IllegalArgumentException e) {
//          //
//          // Null 'generator' argument.
//          //
//          verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//       }
//   }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = (StandardCategorySeriesLabelGenerator)statisticalBarRenderer0.getLegendItemLabelGenerator();
      categoryStepRenderer0.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
      assertEquals(3, categoryStepRenderer0.getDefaultEntityRadius());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("T-l?BN", (Comparable) 0.0, 1583.1950214790222, 4785.518612724972);
      Layer layer0 = Layer.BACKGROUND;
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      assertEquals(5.0, CategoryPointerAnnotation.DEFAULT_ARROW_LENGTH, 0.01);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("ZuFcv}Ov:", (Comparable) 8.0, 3.0);
      boxAndWhiskerRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      assertTrue(boxAndWhiskerRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      assertEquals(8.0, LineRenderer3D.DEFAULT_Y_OFFSET, 0.01);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("");
      stackedBarRenderer3D0.setSeriesURLGenerator(86, (CategoryURLGenerator) standardCategoryURLGenerator0, false);
      assertFalse(stackedBarRenderer3D0.getBaseItemLabelsVisible());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ChoiceFormat choiceFormat0 = new ChoiceFormat("c");
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("c", (NumberFormat) choiceFormat0);
      ganttRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, false);
      assertTrue(ganttRenderer0.getShadowsVisible());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setSeriesToolTipGenerator(5, (CategoryToolTipGenerator) null, true);
      assertFalse(statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      defaultCategoryItemRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      assertTrue(defaultCategoryItemRenderer0.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      assertFalse(lineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setSeriesItemLabelGenerator(1196, (CategoryItemLabelGenerator) null, false);
      assertEquals(2, stackedAreaRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = barRenderer3D0.getItemLabelGenerator(0, (-1828), true);
      assertNull(categoryItemLabelGenerator0);
  }

//   @Test(timeout = 4000)
//   public void test082()  throws Throwable  {
//       WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
//       // Undeclared exception!
//       try { 
//         waterfallBarRenderer0.setPlot((CategoryPlot) null);
//         fail("Expecting exception: IllegalArgumentException");
      
//       } catch(IllegalArgumentException e) {
//          //
//          // Null 'plot' argument.
//          //
//          verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//       }
//   }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("");
      categoryStepRenderer0.setSeriesURLGenerator(53, (CategoryURLGenerator) standardCategoryURLGenerator0);
      StandardCategoryURLGenerator standardCategoryURLGenerator1 = (StandardCategoryURLGenerator)categoryStepRenderer0.getURLGenerator(53, 1707, true);
      assertSame(standardCategoryURLGenerator1, standardCategoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = categoryStepRenderer0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryURLGenerator categoryURLGenerator0 = boxAndWhiskerRenderer0.getSeriesURLGenerator(0);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      assertTrue(minMaxCategoryRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = (StandardCategorySeriesLabelGenerator)statisticalBarRenderer0.getLegendItemLabelGenerator();
      lineRenderer3D0.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      assertTrue(lineRenderer3D0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      int int0 = statisticalBarRenderer0.getRowCount();
      assertEquals(0, int0);
  }

//   @Test(timeout = 4000)
//   public void test089()  throws Throwable  {
//       LevelRenderer levelRenderer0 = new LevelRenderer();
//       // Undeclared exception!
//       try { 
//         levelRenderer0.setSeriesToolTipGenerator((-1754), (CategoryToolTipGenerator) null);
//         fail("Expecting exception: IllegalArgumentException");
      
//       } catch(IllegalArgumentException e) {
//          //
//          // Requires index >= 0.
//          //
//          verifyException("org.jfree.chart.util.AbstractObjectList", e);
//       }
//   }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      DecimalFormat decimalFormat0 = (DecimalFormat)NumberFormat.getCurrencyInstance();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("", (NumberFormat) decimalFormat0);
      barRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      BarRenderer3D barRenderer3D1 = (BarRenderer3D)barRenderer3D0.clone();
      assertTrue(barRenderer3D1.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedAreaRenderer0.getSeriesItemLabelGenerator(1196);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedBarRenderer3D0.getLegendItemURLGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.removeAnnotations();
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesFillPaint());
  }

//   @Test(timeout = 4000)
//   public void test094()  throws Throwable  {
//       BarRenderer3D barRenderer3D0 = new BarRenderer3D();
//       StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
//       barRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
//       try { 
//         barRenderer3D0.clone();
//         fail("Expecting exception: CloneNotSupportedException");
      
//       } catch(CloneNotSupportedException e) {
//          //
//          // Base item URL generator not cloneable.
//          //
//          verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//       }
//   }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryURLGenerator categoryURLGenerator0 = barRenderer3D0.getBaseURLGenerator();
      assertNull(categoryURLGenerator0);
  }

//   @Test(timeout = 4000)
//   public void test096()  throws Throwable  {
//       AreaRenderer areaRenderer0 = new AreaRenderer();
//       String[] stringArray0 = new String[1];
//       Number[][] numberArray0 = new Number[0][0];
//       DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
//       // Undeclared exception!
//       try { 
//         areaRenderer0.addEntity((EntityCollection) null, areaRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 1392, 2, false);
//         fail("Expecting exception: IllegalArgumentException");
      
//       } catch(IllegalArgumentException e) {
//          //
//          // The 'row' argument is out of bounds.
//          //
//          verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//       }
//   }

//   @Test(timeout = 4000)
//   public void test097()  throws Throwable  {
//       GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
//       ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("=](L!=^3?>2-(eM>S}#");
//       CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) extendedCategoryAxis0);
//       Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
//       // Undeclared exception!
//       try { 
//         groupedStackedBarRenderer0.drawOutline((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D_Double0);
//         fail("Expecting exception: NullPointerException");
      
//       } catch(NullPointerException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//          verifyException("org.jfree.chart.plot.Plot", e);
//       }
//   }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LegendItem legendItem0 = levelRenderer0.getLegendItem(1296, (-511));
      assertNull(legendItem0);
  }

//   @Test(timeout = 4000)
//   public void test100()  throws Throwable  {
//       ScatterRenderer scatterRenderer0 = new ScatterRenderer();
//       CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
//       DefaultCaret defaultCaret0 = new DefaultCaret();
//       RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
//       // Undeclared exception!
//       try { 
//         scatterRenderer0.getItemMiddle(5, "X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ", (CategoryDataset) null, categoryAxis3D0, defaultCaret0, rectangleEdge0);
//         fail("Expecting exception: NullPointerException");
      
//       } catch(NullPointerException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//          verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//       }
//   }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      int int0 = waterfallBarRenderer0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      int int0 = stackedAreaRenderer0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      assertTrue(categoryStepRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("\"t@K?Yq(3L%/mww^R", (Comparable) "\"t@K?Yq(3L%/mww^R", (double) boxAndWhiskerRenderer0.ZERO, (double) boxAndWhiskerRenderer0.ZERO);
      boolean boolean0 = boxAndWhiskerRenderer0.removeAnnotation(categoryPointerAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      double[][] doubleArray0 = new double[3][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = categoryStepRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertNull(range0);
  }

//   @Test(timeout = 4000)
//   public void test106()  throws Throwable  {
//       BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
//       PiePlot3D piePlot3D0 = new PiePlot3D();
//       JFreeChart jFreeChart0 = new JFreeChart("lwz,kL/)&:", (Plot) piePlot3D0);
//       BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(93, 680, (ChartRenderingInfo) null);
//       SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
//       Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1.0F, 531.49805F, 0.5F, (float) 0);
//       CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
//       double[][] doubleArray0 = new double[9][8];
//       DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
//       PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
//       // Undeclared exception!
//       try { 
//         boxAndWhiskerRenderer0.initialise(sunGraphics2D0, rectangle2D_Float0, combinedDomainCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
//         fail("Expecting exception: IllegalArgumentException");
      
//       } catch(IllegalArgumentException e) {
//          //
//          // Negative 'index'.
//          //
//          verifyException("org.jfree.chart.plot.CategoryPlot", e);
//       }
//   }

//   @Test(timeout = 4000)
//   public void test107()  throws Throwable  {
//       GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
//       // Undeclared exception!
//       try { 
//         groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) null);
//         fail("Expecting exception: IllegalArgumentException");
      
//       } catch(IllegalArgumentException e) {
//          //
//          // Null 'annotation' argument.
//          //
//          verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//       }
//   }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) null);
      assertEquals(0, categoryStepRenderer0.getRowCount());
  }
}
