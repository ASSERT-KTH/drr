/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 22 13:56:41 GMT 2019
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.text.AttributedCharacterIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.junit.runner.RunWith;


public class ValueMarker_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(4L);
      valueMarker0.setValue(4L);
      assertEquals(4.0, valueMarker0.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(5.0E-6);
      double double0 = valueMarker0.getValue();
      assertEquals(5.0E-6, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SystemColor systemColor0 = SystemColor.infoText;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      JFreeChart jFreeChart0 = new JFreeChart(thermometerPlot0);
      Stroke stroke0 = jFreeChart0.getBorderStroke();
      ValueMarker valueMarker0 = new ValueMarker((-1402.4354174), systemColor0, stroke0);
      assertEquals((-1402.4354174), valueMarker0.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(4L);
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.LANGUAGE;
      boolean boolean0 = valueMarker0.equals(attributedCharacterIterator_Attribute0);
      assertEquals(4.0, valueMarker0.getValue(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(4L);
      ValueMarker valueMarker1 = (ValueMarker)valueMarker0.clone();
      boolean boolean0 = valueMarker0.equals(valueMarker1);
      assertTrue(boolean0);
      assertEquals(4.0, valueMarker1.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(4L);
      ValueMarker valueMarker1 = new ValueMarker((-50.118854039));
      boolean boolean0 = valueMarker0.equals(valueMarker1);
      assertEquals((-50.118854039), valueMarker1.getValue(), 0.01);
      assertFalse(valueMarker1.equals((Object)valueMarker0));
      assertFalse(boolean0);
  }
}
