/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 22 14:49:59 GMT 2019
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.text.AttributedCharacterIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.ValueMarker;
import org.junit.runner.RunWith;


public class ValueMarker_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(0.0);
      double double0 = valueMarker0.getValue();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(0.0);
      valueMarker0.setValue(486.0988);
      assertEquals(486.0988, valueMarker0.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SystemColor systemColor0 = SystemColor.menuText;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Stroke stroke0 = combinedDomainXYPlot0.getRangeCrosshairStroke();
      ValueMarker valueMarker0 = new ValueMarker((-260.6558047992767), systemColor0, stroke0);
      assertEquals((-260.6558047992767), valueMarker0.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(0.0);
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.READING;
      boolean boolean0 = valueMarker0.equals(attributedCharacterIterator_Attribute0);
      assertFalse(boolean0);
      assertEquals(0.0, valueMarker0.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(0.0);
      ValueMarker valueMarker1 = (ValueMarker)valueMarker0.clone();
      boolean boolean0 = valueMarker0.equals(valueMarker1);
      assertTrue(boolean0);
      assertEquals(0.0, valueMarker1.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker((-837.0));
      ValueMarker valueMarker1 = new ValueMarker(2.5E8);
      boolean boolean0 = valueMarker0.equals(valueMarker1);
      assertFalse(valueMarker1.equals((Object)valueMarker0));
      assertEquals(2.5E8, valueMarker1.getValue(), 0.01);
      assertFalse(boolean0);
  }
}
