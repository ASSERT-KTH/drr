/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 03 06:40:46 GMT 2019
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.ChoiceFormat;
import java.text.DecimalFormat;
import java.text.Format;
import java.text.MessageFormat;
import java.text.NumberFormat;
import java.time.format.DateTimeFormatter;
import java.time.format.FormatStyle;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.apache.commons.lang.text.ExtendedMessageFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

 
public class ExtendedMessageFormat_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = ",h{01 ,HK~&N,1'";
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ExtendedMessageFormat extendedMessageFormat0 = null;
      try {
        extendedMessageFormat0 = new ExtendedMessageFormat(",h{01 ,HK~&N,1'", hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unterminated format element at position 7
         //
         verifyException("org.apache.commons.lang.text.ExtendedMessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<ChoiceFormat, NumberFormat> hashMap0 = new HashMap<ChoiceFormat, NumberFormat>();
      ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("{3}''iaK%Tx@xhc", hashMap0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("'\"");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("org.apache.commons.lang.text.StrMatcher$TrimMatcher");
      extendedMessageFormat0.toPattern();
  }

////  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("org.apache.commons.lang.text.StrMatcher");
      Format[] formatArray0 = new Format[1];
      FormatStyle formatStyle0 = FormatStyle.FULL;
      DateTimeFormatter dateTimeFormatter0 = DateTimeFormatter.ofLocalizedDate(formatStyle0);
      Format format0 = dateTimeFormatter0.toFormat();
      formatArray0[0] = format0;
      extendedMessageFormat0.setFormats(formatArray0);
  }

////  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<Object, ChoiceFormat> hashMap0 = new HashMap<Object, ChoiceFormat>();
      ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("", hashMap0);
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      extendedMessageFormat0.setFormat(125, numberFormat0);
  }

////  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("Untermivated formatjelement atIposition ");
      Format[] formatArray0 = new Format[1];
      extendedMessageFormat0.setFormatsByArgumentIndex(formatArray0);
      long long0 = 1808L;
  }

////  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashMap<DecimalFormat, NumberFormat> hashMap0 = new HashMap<DecimalFormat, NumberFormat>();
      ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("vl2YpM|", hashMap0);
      extendedMessageFormat0.setFormatByArgumentIndex((-1883), (Format) null);
  }

////  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      locale0.clone();
      HashMap<Integer, DecimalFormat> hashMap0 = new HashMap<Integer, DecimalFormat>();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("19V'm'T5f", locale0, hashMap0);
      Format[] formatArray0 = null;
      extendedMessageFormat0.setFormatsByArgumentIndex((Format[]) null);
      // Undeclared exception!
      try { 
        extendedMessageFormat0.setFormatsByArgumentIndex(formatArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.ExtendedMessageFormat", e);
      }
  }

////  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      HashMap<Integer, MessageFormat> hashMap0 = new HashMap<Integer, MessageFormat>();
      ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("r,mF(b={bR+p3mJ$", locale0, hashMap0);
  }

////  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<ChoiceFormat, NumberFormat> hashMap0 = new HashMap<ChoiceFormat, NumberFormat>();
      ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("", hashMap0);
      extendedMessageFormat0.applyPattern("}Hm7_@ |/e;E~9+{2Z>");
  }

////  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<ChoiceFormat, NumberFormat> hashMap0 = new HashMap<ChoiceFormat, NumberFormat>();
      ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("", hashMap0);
      extendedMessageFormat0.applyPattern("{3}''jiaK%Tx@xhc");
      System.setCurrentTimeMillis((-1));
      Locale locale0 = Locale.GERMAN;
      ExtendedMessageFormat extendedMessageFormat1 = new ExtendedMessageFormat("{3}''jiaK%Tx@xhc", locale0, hashMap0);
      extendedMessageFormat0.setFormatByArgumentIndex((-1), extendedMessageFormat1);
      String string0 = "}Hm7_@ |/e;E~9+{2Z>";
      extendedMessageFormat0.applyPattern(string0);
  }

////  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<ChoiceFormat, NumberFormat> hashMap0 = new HashMap<ChoiceFormat, NumberFormat>();
      System.setCurrentTimeMillis((-1));
      Locale locale0 = Locale.GERMAN;
      locale0.getExtensionKeys();
      ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("{}'6jia%Tx@xhc", locale0, hashMap0);
  }

////  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      System.setCurrentTimeMillis((-663L));
      String string0 = "Xzh{ -U7^2&%SxOn9PA";
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      HashMap<MessageFormat, Object> hashMap0 = new HashMap<MessageFormat, Object>();
      ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("Xzh{ -U7^2&%SxOn9PA", locale0, hashMap0);
      // Undeclared exception!
      try { 
        extendedMessageFormat0.applyPattern(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid format argument index at position 4:  -
         //
         verifyException("org.apache.commons.lang.text.ExtendedMessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "Xzh{1 -U7^L&%vxOSbPA";
      Locale locale0 = new Locale("Xzh{1 -U7^L&%vxOSbPA");
      HashMap<MessageFormat, Object> hashMap0 = new HashMap<MessageFormat, Object>();
      ExtendedMessageFormat extendedMessageFormat0 = null;
      try {
        extendedMessageFormat0 = new ExtendedMessageFormat("Xzh{1 -U7^L&%vxOSbPA", locale0, hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid format argument index at position 4: 1 -
         //
         verifyException("org.apache.commons.lang.text.ExtendedMessageFormat", e);
      }
  }

////  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HashMap<ChoiceFormat, NumberFormat> hashMap0 = new HashMap<ChoiceFormat, NumberFormat>();
      Locale locale0 = Locale.CANADA;
      locale0.getDisplayLanguage();
      ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("{3}''jiaK%Tx@xhc", locale0, hashMap0);
      extendedMessageFormat0.applyPattern(",/=j,{7");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Locale locale0 = Locale.US;
      HashMap<MessageFormat, Object> hashMap0 = new HashMap<MessageFormat, Object>();
      ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("Xzh{1 }ULOSA", locale0, hashMap0);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-1864.5458038485);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-1.0);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = (-2136.6768013021174);
      doubleArray0[6] = 0.0;
      doubleArray0[7] = (-35.0318094482131);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Xzh{1 }ULOSA";
      stringArray0[1] = "Xzh{1 }ULOSA";
      stringArray0[2] = "Xzh{1 }ULOSA";
      stringArray0[3] = "Xzh{1 }ULOSA";
      stringArray0[4] = "Xzh{1 }ULOSA";
      stringArray0[5] = "Xzh{1 }ULOSA";
      stringArray0[6] = "Xzh{1 }ULOSA";
      stringArray0[7] = "Xzh{1 }ULOSA";
      ChoiceFormat choiceFormat0 = new ChoiceFormat(doubleArray0, stringArray0);
      hashMap0.put(extendedMessageFormat0, choiceFormat0);
      locale0.stripExtensions();
      extendedMessageFormat0.applyPattern("Xzh{1 }ULOSA");
  }

////  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMap<MessageFormat, Object> hashMap0 = new HashMap<MessageFormat, Object>();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      MessageFormat messageFormat0 = new MessageFormat("H^\"~:", locale0);
      hashMap0.put(messageFormat0, locale0);
      ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("S{,", hashMap0);
      String string0 = "-&{N\"R(l+P!";
      // Undeclared exception!
      try { 
        extendedMessageFormat0.applyPattern(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid format argument index at position 2: ,
         //
         verifyException("org.apache.commons.lang.text.ExtendedMessageFormat", e);
      }
  }

////  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Locale locale0 = Locale.UK;
      HashMap<Integer, DecimalFormat> hashMap0 = new HashMap<Integer, DecimalFormat>();
      ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("CAav!jN{ ", locale0, hashMap0);
      String string0 = "";
  }

////  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HashMap<MessageFormat, Object> hashMap0 = new HashMap<MessageFormat, Object>();
      ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("!vh{01 ,1`S", hashMap0);
      String string0 = "-&{N\"R(l+P!";
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = "!,h{01 ,HK1'S";
      HashMap<MessageFormat, Object> hashMap0 = new HashMap<MessageFormat, Object>();
      ExtendedMessageFormat extendedMessageFormat0 = null;
      try {
        extendedMessageFormat0 = new ExtendedMessageFormat("!,h{01 ,HK1'S", hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unterminated format element at position 8
         //
         verifyException("org.apache.commons.lang.text.ExtendedMessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = "!,h{01 ,HK1'-{ZS";
      HashMap<MessageFormat, Object> hashMap0 = new HashMap<MessageFormat, Object>();
      ExtendedMessageFormat extendedMessageFormat0 = null;
      try {
        extendedMessageFormat0 = new ExtendedMessageFormat("!,h{01 ,HK1'-{ZS", hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unterminated format element at position 8
         //
         verifyException("org.apache.commons.lang.text.ExtendedMessageFormat", e);
      }
  }
}
