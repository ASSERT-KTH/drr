/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 03 11:16:55 GMT 2019
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.lang.LocaleUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

 
public class LocaleUtils_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      LocaleUtils.localeLookupList((Locale) null, (Locale) null);
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      LocaleUtils localeUtils0 = new LocaleUtils();
      List list0 = LocaleUtils.languagesByCountry(".WP/ai u");
      Locale locale1 = Locale.FRANCE;
      LocaleUtils.localeLookupList(locale0, locale1);
      LocaleUtils.toLocale("it");
      List list1 = LocaleUtils.countriesByLanguage("it");
      assertFalse(list1.equals((Object)list0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale((String) null);
      assertNull(locale0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("gW[xG<B$sZ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: gW[xG<B$sZ
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("b~Q\"49Nw+#~4d!k");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: b~Q\"49Nw+#~4d!k
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale("sk_YW");
      assertEquals("YW", locale0.getCountry());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("qpk2szK#sJd<");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: qpk2szK#sJd<
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("sk_3nW!-J,>YE<^h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: sk_3nW!-J,>YE<^h
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("sk_`W!-J,>YE<^h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: sk_`W!-J,>YE<^h
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("sk_T<YW!-J,>YE><^h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: sk_T<YW!-J,>YE><^h
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("uj_Et6Xei");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: uj_Et6Xei
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = LocaleUtils.toLocale("sk_YW_Y");
      assertEquals("Y", locale0.getVariant());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("sk_YW!-J,>YE><^h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: sk_YW!-J,>YE><^h
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Locale locale0 = new Locale("T\"[8+", "", "TS'");
      List list0 = LocaleUtils.localeLookupList(locale0);
      assertEquals(2, list0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LocaleUtils.availableLocaleSet();
      Set set0 = LocaleUtils.availableLocaleSet();
      assertEquals(160, set0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      boolean boolean0 = LocaleUtils.isAvailableLocale((Locale) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      boolean boolean0 = LocaleUtils.isAvailableLocale(locale0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LocaleUtils.availableLocaleSet();
      Locale locale0 = new Locale("X4j");
      locale0.toLanguageTag();
      locale0.getDisplayName();
      LocaleUtils.localeLookupList(locale0);
      locale0.toLanguageTag();
      LocaleUtils.localeLookupList(locale0);
      LocaleUtils.localeLookupList(locale0);
      LocaleUtils localeUtils0 = new LocaleUtils();
      LocaleUtils.languagesByCountry("org.apache.commons.lang.LocaleUtils");
      LocaleUtils.localeLookupList(locale0, locale0);
      LocaleUtils.languagesByCountry("%97)");
      LocaleUtils.availableLocaleList();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      linkedList1.add(locale0);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      Locale.lookup(linkedList0, list0);
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("{.f;Xjt@s5z9gM!mWw9");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: {.f;Xjt@s5z9gM!mWw9
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      List list0 = LocaleUtils.languagesByCountry((String) null);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = "j(c}";
      LocaleUtils.languagesByCountry("j(c}");
      LocaleUtils.availableLocaleList();
      LocaleUtils.localeLookupList((Locale) null, (Locale) null);
      String string1 = "\\0uKj Y.Em+GhGp~?-";
      LocaleUtils.languagesByCountry("\u0000uKj Y.Em+GhGp~?-");
      String string2 = "F1b=E";
      LocaleUtils.countriesByLanguage("F1b=E");
      LocaleUtils localeUtils0 = new LocaleUtils();
      LocaleUtils.languagesByCountry("");
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("R#");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: R#
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LocaleUtils.countriesByLanguage("Invalid locale format: ");
      LocaleUtils.countriesByLanguage("Invalid locale format: ");
      LocaleUtils.languagesByCountry("Invalid locale format: ");
      LocaleUtils.languagesByCountry("TH");
      String string0 = "8h]F@<cc";
      LocaleUtils.countriesByLanguage("8h]F@<cc");
      LocaleUtils.countriesByLanguage("Invalid locale format: ");
      LocaleUtils.countriesByLanguage("");
      LocaleUtils.countriesByLanguage("YlsK{Zog");
      LocaleUtils.languagesByCountry("");
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: 
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LocaleUtils.countriesByLanguage((String) null);
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale("a@Ee");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: a@Ee
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LocaleUtils.countriesByLanguage("th");
      LocaleUtils.toLocale("mt");
      LocaleUtils.toLocale("mt");
      LocaleUtils.countriesByLanguage("mt");
      LocaleUtils.countriesByLanguage("mt");
      String string0 = ")DyH2 KZGQ#[8D,";
      // Undeclared exception!
      try { 
        LocaleUtils.toLocale(")DyH2 KZGQ#[8D,");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: )DyH2 KZGQ#[8D,
         //
         verifyException("org.apache.commons.lang.LocaleUtils", e);
      }
  }
}
