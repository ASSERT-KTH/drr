/*
 * This file was automatically generated by EvoSuite
 * Sun Jun 23 16:45:27 GMT 2019
 */

package org.apache.commons.math3.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.distribution.FDistribution;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;


public class FDistribution_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FDistribution fDistribution0 = new FDistribution(4.0, Double.POSITIVE_INFINITY, 4.0);
      // Undeclared exception!
      try { 
        fDistribution0.sample();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: Continued fraction diverged to NaN for value 0
         //
         verifyException("org.apache.commons.math3.util.ContinuedFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FDistribution fDistribution0 = new FDistribution(1016.0932445894, 0.3930181860923767);
      // Undeclared exception!
      fDistribution0.sample(5000);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FDistribution fDistribution0 = new FDistribution(3.8174968984748894E-54, 873.94278234);
      boolean boolean0 = fDistribution0.isSupportUpperBoundInclusive();
      assertEquals(3.8174968984748894E-54, fDistribution0.getNumeratorDegreesOfFreedom(), 0.01);
      assertFalse(boolean0);
      assertEquals(873.94278234, fDistribution0.getDenominatorDegreesOfFreedom(), 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FDistribution fDistribution0 = new FDistribution(3.8174968984748894E-54, 873.94278234);
      boolean boolean0 = fDistribution0.isSupportLowerBoundInclusive();
      assertEquals(3.8174968984748894E-54, fDistribution0.getNumeratorDegreesOfFreedom(), 0.01);
      assertFalse(boolean0);
      assertEquals(1.002293728488276, fDistribution0.getNumericalMean(), 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FDistribution fDistribution0 = new FDistribution(1606.128, 1606.128);
      fDistribution0.density((-695.716812398577));
      assertEquals(1.0012467832990883, fDistribution0.getNumericalMean(), 0.01);
      assertEquals(1606.128, fDistribution0.getNumeratorDegreesOfFreedom(), 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FDistribution fDistribution0 = null;
      try {
        fDistribution0 = new FDistribution(0.0, 0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // degrees of freedom (0)
         //
         verifyException("org.apache.commons.math3.distribution.FDistribution", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FDistribution fDistribution0 = null;
      try {
        fDistribution0 = new FDistribution(763.36484513, (-602.881));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // degrees of freedom (-602.881)
         //
         verifyException("org.apache.commons.math3.distribution.FDistribution", e);
      }
  }
}
