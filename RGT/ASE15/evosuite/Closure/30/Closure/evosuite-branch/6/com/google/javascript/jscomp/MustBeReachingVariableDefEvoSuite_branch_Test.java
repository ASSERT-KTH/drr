/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 22:56:33 GMT 2014
 */

package com.google.javascript.jscomp;

import static org.junit.Assert.*;
import org.junit.Test;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.ControlFlowGraph;
import com.google.javascript.jscomp.MustBeReachingVariableDef;
import com.google.javascript.jscomp.Scope;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
 import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;

 
public class MustBeReachingVariableDefEvoSuite_branch_Test   {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = new MustBeReachingVariableDef.MustDef();
      assertNotNull(mustBeReachingVariableDef_MustDef0);
      
      boolean boolean0 = mustBeReachingVariableDef_MustDef0.equals((Object) mustBeReachingVariableDef_MustDef0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = new MustBeReachingVariableDef.MustDef();
      assertNotNull(mustBeReachingVariableDef_MustDef0);
      
      ControlFlowGraph.Branch controlFlowGraph_Branch0 = ControlFlowGraph.Branch.SYN_BLOCK;
      assertEquals(ControlFlowGraph.Branch.SYN_BLOCK, controlFlowGraph_Branch0);
      assertEquals("SYN_BLOCK", controlFlowGraph_Branch0.name());
      assertEquals(4, controlFlowGraph_Branch0.ordinal());
      assertEquals("SYN_BLOCK", controlFlowGraph_Branch0.toString());
      
      boolean boolean0 = mustBeReachingVariableDef_MustDef0.equals((Object) controlFlowGraph_Branch0);
      assertFalse(boolean0);
      assertEquals("SYN_BLOCK", controlFlowGraph_Branch0.name());
      assertEquals(4, controlFlowGraph_Branch0.ordinal());
      assertEquals("SYN_BLOCK", controlFlowGraph_Branch0.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = new MustBeReachingVariableDef.MustDef();
      assertNotNull(mustBeReachingVariableDef_MustDef0);
      
      MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = new MustBeReachingVariableDef.MustDef(mustBeReachingVariableDef_MustDef0);
      assertNotSame(mustBeReachingVariableDef_MustDef0, mustBeReachingVariableDef_MustDef1);
      assertNotSame(mustBeReachingVariableDef_MustDef1, mustBeReachingVariableDef_MustDef0);
      assertTrue(mustBeReachingVariableDef_MustDef0.equals((Object)mustBeReachingVariableDef_MustDef1));
      assertTrue(mustBeReachingVariableDef_MustDef1.equals((Object)mustBeReachingVariableDef_MustDef0));
      assertNotNull(mustBeReachingVariableDef_MustDef1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Scope scope0 = null;
      ControlFlowGraph<Node> controlFlowGraph0 = null;
      AbstractCompiler abstractCompiler0 = null;
      MustBeReachingVariableDef mustBeReachingVariableDef0 = null;
      try {
        mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, abstractCompiler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
