/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 20:16:45 GMT 2014
 */

package com.google.javascript.jscomp;

import static org.junit.Assert.*;
import org.junit.Test;
import com.google.common.base.Predicate;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.ClosureCodingConvention;
import com.google.javascript.jscomp.CodingConvention;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.FunctionNames;
import com.google.javascript.jscomp.GoogleCodingConvention;
import com.google.javascript.jscomp.JqueryCodingConvention;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.NodeUtil;
import com.google.javascript.jscomp.Normalize;
import com.google.javascript.jscomp.RecordFunctionInformation;
import com.google.javascript.jscomp.ReorderConstantExpression;
import com.google.javascript.jscomp.SourceFile;
import com.google.javascript.jscomp.SyntheticAst;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TernaryValue;
import java.io.PrintStream;
import java.util.Collection;
import java.util.List;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
 import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.mock.java.lang.MockError;

import org.evosuite.runtime.mock.java.lang.MockIllegalStateException;
import org.junit.runner.RunWith;

 
public class NodeUtilEvoSuite_branch_Test   {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      double double0 = (-4379.56);
      Compiler compiler0 = new Compiler();
      assertNotNull(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      FunctionNames functionNames0 = new FunctionNames(compiler0);
      assertNotNull(functionNames0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      RecordFunctionInformation recordFunctionInformation0 = new RecordFunctionInformation(compiler0, functionNames0);
      assertNotNull(recordFunctionInformation0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) compiler0, (NodeTraversal.Callback) recordFunctionInformation0);
      assertNotNull(nodeTraversal0);
      assertEquals("", nodeTraversal0.getSourceName());
      assertEquals(0, nodeTraversal0.getLineNumber());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      Node node0 = nodeTraversal0.getCurrentNode();
      assertNull(node0);
      assertEquals("", nodeTraversal0.getSourceName());
      assertEquals(0, nodeTraversal0.getLineNumber());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      Node node1 = NodeUtil.numberNode(double0, node0);
      assertNotNull(node1);
      assertEquals(false, node1.isParamList());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isString());
      assertEquals(-1, node1.getLineno());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isReturn());
      assertEquals(true, node1.isNumber());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isCall());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isTry());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isSetterDef());
      assertEquals(39, node1.getType());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isArrayLit());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isCatch());
      assertEquals("", nodeTraversal0.getSourceName());
      assertEquals(0, nodeTraversal0.getLineNumber());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      int int0 = (-872);
      String string0 = "/:C/<.c";
      Node node0 = Node.newString(int0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNE());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isArrayLit());
      assertEquals(-872, node0.getType());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getChildCount());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDelProp());
      
      Node node1 = NodeUtil.numberNode(int0, node0);
      assertNotNull(node1);
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isWhile());
      assertEquals(39, node1.getType());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isBreak());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isSwitch());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isGetterDef());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isCatch());
      assertEquals(0, node1.getChildCount());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isQuotedString());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isInc());
      assertEquals(true, node1.isNumber());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isHook());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNE());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isArrayLit());
      assertEquals(-872, node0.getType());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getChildCount());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDelProp());
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      String string0 = "<<.";
      double double0 = 1.0;
      Node node0 = Node.newNumber(double0);
      assertNotNull(node0);
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isVarArgs());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.hasChildren());
      assertEquals(-1, node0.getCharno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isString());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isAssign());
      
      Node node1 = NodeUtil.newVarNode(string0, node0);
      assertNotNull(node1);
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isExprResult());
      assertEquals(true, node1.isVar());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isIn());
      assertEquals(true, node1.hasOneChild());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isHook());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isDec());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isObjectLit());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isCase());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isAssignAdd());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isVoid());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isCall());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isComma());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isVarArgs());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.hasChildren());
      assertEquals(-1, node0.getCharno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isString());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isAssign());
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      
      boolean boolean0 = NodeUtil.isExpressionResultUsed(node0);
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isVarArgs());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.hasChildren());
      assertEquals(-1, node0.getCharno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isString());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isAssign());
      assertFalse(node0.equals((Object)node1));
      assertNotSame(node0, node1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      String string0 = "<<.";
      double double0 = 275.46816437;
      Node node0 = Node.newNumber(double0);
      assertNotNull(node0);
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasChildren());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getSideEffectFlags());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isStringKey());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFromExterns());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCall());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDo());
      
      Node node1 = NodeUtil.newVarNode(string0, node0);
      assertNotNull(node1);
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasChildren());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getSideEffectFlags());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isStringKey());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFromExterns());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCall());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDo());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isGetElem());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isAdd());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isFor());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isThis());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isFromExterns());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isAssignAdd());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isBreak());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isObjectLit());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isRegExp());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isQuotedString());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isCall());
      assertEquals(true, node1.isVar());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isStringKey());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      
      String string1 = NodeUtil.getBestLValueName(node0);
      assertNull(string1);
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasChildren());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getSideEffectFlags());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isStringKey());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFromExterns());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCall());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDo());
      assertFalse(node0.equals((Object)node1));
      assertNotSame(node0, node1);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      double double0 = 275.46816437;
      Node node0 = Node.newNumber(double0);
      assertNotNull(node0);
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isEmpty());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetElem());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isString());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isComma());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isHook());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getSideEffectFlags());
      
      String string0 = NodeUtil.getBestLValueName(node0);
      assertNull(string0);
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isEmpty());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetElem());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isString());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isComma());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isHook());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getSideEffectFlags());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = null;
      String string0 = NodeUtil.getBestLValueName(node0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      String string0 = "<<.";
      double double0 = 275.46816437;
      Node node0 = Node.newNumber(double0);
      assertNotNull(node0);
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isAnd());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isContinue());
      assertEquals(-1, node0.getCharno());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCall());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isBlock());
      
      Node node1 = NodeUtil.newVarNode(string0, node0);
      assertNotNull(node1);
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(true, node1.isVar());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isWhile());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isLabel());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isNot());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isReturn());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isLabelName());
      assertEquals(-1, node1.getLineno());
      assertEquals(-1, node1.getCharno());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isSetterDef());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isNull());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isThrow());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isAnd());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isContinue());
      assertEquals(-1, node0.getCharno());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCall());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isBlock());
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      
      Node node2 = NodeUtil.getBestLValueOwner(node0);
      assertNull(node2);
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isAnd());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isContinue());
      assertEquals(-1, node0.getCharno());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCall());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isBlock());
      assertFalse(node0.equals((Object)node1));
      assertNotSame(node0, node1);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      String string0 = "=";
      int int0 = 0;
      Node node0 = Node.newString(int0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getType());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isAdd());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetProp());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFromExterns());
      assertEquals(-1, node0.getCharno());
      
      Node node1 = NodeUtil.getBestLValueOwner(node0);
      assertNull(node1);
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getType());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isAdd());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetProp());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFromExterns());
      assertEquals(-1, node0.getCharno());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String string0 = "<<.";
      double double0 = 275.46816437;
      Node node0 = Node.newNumber(double0);
      assertNotNull(node0);
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isWith());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isStringKey());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNull());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getChildCount());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIn());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTrue());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssign());
      
      Node node1 = NodeUtil.newVarNode(string0, node0);
      assertNotNull(node1);
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isWith());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isStringKey());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNull());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getChildCount());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIn());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTrue());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isSyntheticBlock());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isGetElem());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isSetterDef());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isCall());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isString());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isAdd());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isBlock());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isOr());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isDelProp());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isEmpty());
      assertEquals(true, node1.isVar());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isTrue());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isOptionalArg());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      
      JSDocInfo jSDocInfo0 = NodeUtil.getBestJSDocInfo(node0);
      assertNull(jSDocInfo0);
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isWith());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isStringKey());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNull());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getChildCount());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIn());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTrue());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssign());
      assertFalse(node0.equals((Object)node1));
      assertNotSame(node0, node1);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      String string0 = ":return";
      int int0 = (-1806);
      Node node0 = Node.newString(string0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isArrayLit());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDebugger());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isBreak());
      assertEquals(40, node0.getType());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFromExterns());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isHook());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isInc());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNew());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isScript());
      
      JSDocInfo jSDocInfo0 = NodeUtil.getBestJSDocInfo(node0);
      assertNull(jSDocInfo0);
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isArrayLit());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDebugger());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isBreak());
      assertEquals(40, node0.getType());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFromExterns());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isHook());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isInc());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNew());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isScript());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      int int0 = 97;
      NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(int0);
      assertNotNull(nodeUtil_MatchNodeType0);
      
      Node node0 = new Node(int0);
      assertNotNull(node0);
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNumber());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isGetElem());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDebugger());
      assertEquals(0, node0.getLength());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isContinue());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(97, node0.getType());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAdd());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInc());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isEmpty());
      
      boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNumber());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isGetElem());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDebugger());
      assertEquals(0, node0.getLength());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isContinue());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(97, node0.getType());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAdd());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInc());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isEmpty());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      double double0 = (-1568.589);
      int int0 = (-2572);
      Node node0 = Node.newNumber(double0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isBreak());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCatch());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isStringKey());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDelProp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isThrow());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isVarArgs());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNot());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isObjectLit());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDefaultCase());
      
      boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isBreak());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCatch());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isStringKey());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDelProp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isThrow());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isVarArgs());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNot());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isObjectLit());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDefaultCase());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      assertNotNull(jqueryCodingConvention0);
      assertEquals("window", jqueryCodingConvention0.getGlobalObject());
      
      String string0 = "veK";
      Node node0 = NodeUtil.newQualifiedNameNode((CodingConvention) jqueryCodingConvention0, string0);
      assertNotNull(node0);
      assertEquals("window", jqueryCodingConvention0.getGlobalObject());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isScript());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(38, node0.getType());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isString());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isContinue());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isSyntheticBlock());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(true, node0.isName());
      assertEquals(false, node0.isDelProp());
      
      InputId inputId0 = NodeUtil.getInputId(node0);
      assertNull(inputId0);
      assertEquals("window", jqueryCodingConvention0.getGlobalObject());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isScript());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(38, node0.getType());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isString());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isContinue());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isSyntheticBlock());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(true, node0.isName());
      assertEquals(false, node0.isDelProp());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      int int0 = 0;
      Node node0 = new Node(int0);
      assertNotNull(node0);
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBlock());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCase());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getType());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isInc());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isHook());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNoSideEffectsCall());
      
      StaticSourceFile staticSourceFile0 = NodeUtil.getSourceFile(node0);
      assertNull(staticSourceFile0);
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBlock());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCase());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getType());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isInc());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isHook());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNoSideEffectsCall());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      String string0 = "JSC_INVALID_GETELEM_INDEX_ERROR";
      SyntheticAst syntheticAst0 = new SyntheticAst(string0);
      assertNotNull(syntheticAst0);
      
      AbstractCompiler abstractCompiler0 = null;
      Node node0 = syntheticAst0.getAstRoot(abstractCompiler0);
      assertNotNull(node0);
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isParamList());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getLength());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isIn());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFor());
      assertEquals("JSC_INVALID_GETELEM_INDEX_ERROR", node0.getSourceFileName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNull());
      
      SourceFile sourceFile0 = (SourceFile)NodeUtil.getSourceFile(node0);
      assertNotNull(sourceFile0);
      assertEquals(false, sourceFile0.isExtern());
      assertEquals("JSC_INVALID_GETELEM_INDEX_ERROR", sourceFile0.toString());
      assertEquals("JSC_INVALID_GETELEM_INDEX_ERROR", sourceFile0.getOriginalPath());
      assertEquals("JSC_INVALID_GETELEM_INDEX_ERROR", sourceFile0.getName());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isParamList());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getLength());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isIn());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFor());
      assertEquals("JSC_INVALID_GETELEM_INDEX_ERROR", node0.getSourceFileName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNull());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = null;
      String string0 = NodeUtil.getSourceName(node0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      int int0 = 127;
      int int1 = NodeUtil.getInverseOperator(int0);
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
      assertEquals((-1), int1);
      
      String string0 = "";
      Node node0 = Node.newString(int0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isOr());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.hasOneChild());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTrue());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFor());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAdd());
      assertEquals(127, node0.getType());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNot());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNull());
      assertFalse(int0 == int1);
      
      Node node1 = new Node(int0, node0, int1, int1);
      assertNotNull(node1);
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isContinue());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isString());
      assertEquals(127, node1.getType());
      assertEquals(false, node1.isHook());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isGetElem());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isNot());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isLabelName());
      assertEquals(-1, node1.getCharno());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isComma());
      assertEquals(true, node1.hasOneChild());
      assertNull(node1.getSourceFileName());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isWith());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isOr());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.hasOneChild());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTrue());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFor());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAdd());
      assertEquals(127, node0.getType());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNot());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNull());
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      
      int int2 = NodeUtil.getNameReferenceCount(node1, string0);
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isContinue());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isString());
      assertEquals(127, node1.getType());
      assertEquals(false, node1.isHook());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isGetElem());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isNot());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isLabelName());
      assertEquals(-1, node1.getCharno());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isComma());
      assertEquals(true, node1.hasOneChild());
      assertNull(node1.getSourceFileName());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isWith());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isOr());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.hasOneChild());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTrue());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFor());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAdd());
      assertEquals(127, node0.getType());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNot());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNull());
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertEquals(0, int2);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String string0 = "<<.";
      double double0 = 275.46816437;
      Node node0 = Node.newNumber(double0);
      assertNotNull(node0);
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isGetElem());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isScript());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVar());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isExprResult());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNull());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFor());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNot());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBlock());
      
      Node node1 = NodeUtil.newVarNode(string0, node0);
      assertNotNull(node1);
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isSwitch());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isArrayLit());
      assertEquals(true, node1.isVar());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isScript());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isFor());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isVoid());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isAdd());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isFunction());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isGetElem());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isObjectLit());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isNew());
      assertNull(node1.getSourceFileName());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isAnd());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isGetElem());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isScript());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVar());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isExprResult());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNull());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFor());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNot());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBlock());
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      
      boolean boolean0 = NodeUtil.containsFunction(node1);
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isSwitch());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isArrayLit());
      assertEquals(true, node1.isVar());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isScript());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isFor());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isVoid());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isAdd());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isFunction());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isGetElem());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isObjectLit());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isNew());
      assertNull(node1.getSourceFileName());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isAnd());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isGetElem());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isScript());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVar());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isExprResult());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNull());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFor());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNot());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBlock());
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      int int0 = 116;
      Node node0 = new Node(int0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isRegExp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssign());
      assertEquals(116, node0.getCharno());
      assertEquals(false, node0.isFunction());
      assertEquals(true, node0.isBreak());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCase());
      assertEquals(116, node0.getType());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isIf());
      assertEquals(116, node0.getLineno());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSetterDef());
      assertEquals(475252, node0.getSourcePosition());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isObjectLit());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      
      boolean boolean0 = NodeUtil.containsType(node0, int0);
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isRegExp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssign());
      assertEquals(116, node0.getCharno());
      assertEquals(false, node0.isFunction());
      assertEquals(true, node0.isBreak());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCase());
      assertEquals(116, node0.getType());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isIf());
      assertEquals(116, node0.getLineno());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSetterDef());
      assertEquals(475252, node0.getSourcePosition());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isObjectLit());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      double double0 = (-1568.589);
      int int0 = (-2572);
      Node node0 = Node.newNumber(double0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isBreak());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isContinue());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isWith());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDebugger());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSwitch());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.wasEmptyNode());
      
      NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
      assertNotNull(nodeUtil_MatchDeclaration0);
      
      boolean boolean0 = nodeUtil_MatchDeclaration0.apply(node0);
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isBreak());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isContinue());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isWith());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDebugger());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSwitch());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.wasEmptyNode());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      assertNotNull(nodeUtil_NumbericResultPredicate0);
      
      String string0 = "E(b5z:\\^t?";
      int int0 = 8;
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isObjectLit());
      assertEquals(8, node0.getCharno());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFunction());
      assertEquals(8, node0.getLineno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCase());
      assertEquals(8, node0.getType());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isStringKey());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(32776, node0.getSourcePosition());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabel());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetterDef());
      
      int int1 = NodeUtil.getNodeTypeReferenceCount(node0, int0, nodeUtil_NumbericResultPredicate0);
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isObjectLit());
      assertEquals(8, node0.getCharno());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFunction());
      assertEquals(8, node0.getLineno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCase());
      assertEquals(8, node0.getType());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isStringKey());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(32776, node0.getSourcePosition());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabel());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDec());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetterDef());
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = null;
      Node node1 = NodeUtil.newUndefinedNode(node0);
      assertNotNull(node1);
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isTypeOf());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertNull(node1.getSourceFileName());
      assertEquals(122, node1.getType());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isCase());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isGetElem());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isExprResult());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isDo());
      assertEquals(true, node1.isVoid());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isDebugger());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isNoSideEffectsCall());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      boolean boolean0 = true;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertNotNull(node0);
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLabel());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isWith());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isScript());
      assertEquals(44, node0.getType());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFromExterns());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAssign());
      assertEquals(0, node0.getSideEffectFlags());
      
      Node node1 = NodeUtil.getPrototypeClassName(node0);
      assertNull(node1);
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNumber());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLabel());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isWith());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isScript());
      assertEquals(44, node0.getType());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFromExterns());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAssign());
      assertEquals(0, node0.getSideEffectFlags());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      int int0 = 116;
      Node node0 = new Node(int0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFalse());
      assertEquals(116, node0.getCharno());
      assertEquals(116, node0.getType());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isStringKey());
      assertEquals(true, node0.isBreak());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isContinue());
      assertEquals(475252, node0.getSourcePosition());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFromExterns());
      assertEquals(116, node0.getLineno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isEmpty());
      
      boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFalse());
      assertEquals(116, node0.getCharno());
      assertEquals(116, node0.getType());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isStringKey());
      assertEquals(true, node0.isBreak());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isContinue());
      assertEquals(475252, node0.getSourcePosition());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFromExterns());
      assertEquals(116, node0.getLineno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isEmpty());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      int int0 = (-658);
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      assertNotNull(closureCodingConvention0);
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      
      String string0 = "yE!BM6NHFbyA";
      Node node0 = Node.newString(string0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNumber());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(0, node0.getChildCount());
      assertEquals(-1, node0.getLineno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isHook());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isInc());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isComma());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFor());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.hasChildren());
      
      Node node1 = NodeUtil.newName(closureCodingConvention0, string0, node0, string0);
      assertNotNull(node1);
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNumber());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(0, node0.getChildCount());
      assertEquals(-1, node0.getLineno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isHook());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isInc());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isComma());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFor());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isCatch());
      assertEquals(38, node1.getType());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.hasChildren());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isNot());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isThrow());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isFalse());
      assertEquals(true, node1.isName());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isInc());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      
      boolean boolean0 = NodeUtil.isPrototypeProperty(node1);
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNumber());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(0, node0.getChildCount());
      assertEquals(-1, node0.getLineno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isHook());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isInc());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isComma());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFor());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isCatch());
      assertEquals(38, node1.getType());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.hasChildren());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isNot());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isThrow());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isFalse());
      assertEquals(true, node1.isName());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isInc());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      boolean boolean0 = false;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertNotNull(node0);
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNull());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isHook());
      assertEquals(0, node0.getLength());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isName());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getCharno());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isEmpty());
      
      boolean boolean1 = NodeUtil.isPrototypePropertyDeclaration(node0);
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNull());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isHook());
      assertEquals(0, node0.getLength());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isName());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getCharno());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isEmpty());
      assertTrue(boolean0 == boolean1);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      String string0 = "FieldCleaupPassFactory";
      boolean boolean0 = NodeUtil.isValidQualifiedName(string0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      String string0 = ".As";
      boolean boolean0 = NodeUtil.isValidQualifiedName(string0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String string0 = "";
      boolean boolean0 = NodeUtil.isValidQualifiedName(string0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      String string0 = "";
      Node node0 = null;
      Node node1 = NodeUtil.newVarNode(string0, node0);
      assertNotNull(node1);
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(true, node1.isVar());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isNot());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isString());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isDebugger());
      assertEquals(-1, node1.getLineno());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isTrue());
      assertEquals(118, node1.getType());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isAssign());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isFunction());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isCatch());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isOr());
      
      Node node2 = node1.removeChildren();
      assertNotNull(node2);
      assertEquals(false, node2.isBlock());
      assertEquals(false, node2.hasMoreThanOneChild());
      assertEquals(false, node2.isObjectLit());
      assertEquals(false, node2.isStringKey());
      assertEquals(false, node2.isDelProp());
      assertEquals(false, node2.isDo());
      assertEquals(0, node2.getChildCount());
      assertEquals(false, node2.isNull());
      assertEquals(true, node2.isName());
      assertEquals(false, node2.isVarArgs());
      assertEquals(false, node2.isWhile());
      assertEquals(false, node2.hasOneChild());
      assertEquals(false, node2.isCase());
      assertEquals(false, node2.isFor());
      assertEquals(38, node2.getType());
      assertEquals(false, node2.isThrow());
      assertEquals(false, node2.isExprResult());
      assertEquals(false, node2.isComma());
      assertEquals(false, node2.isSwitch());
      assertEquals(false, node2.isQuotedString());
      assertEquals(false, node2.isParamList());
      assertEquals(false, node2.isFunction());
      assertEquals(false, node2.isFromExterns());
      assertEquals(false, node2.isThis());
      assertEquals(-1, node2.getCharno());
      assertEquals(false, node2.isSetterDef());
      assertEquals(false, node2.isWith());
      assertEquals(false, node2.hasChildren());
      assertEquals(false, node2.wasEmptyNode());
      assertEquals(false, node2.isArrayLit());
      assertEquals(false, node2.isInstanceOf());
      assertEquals(false, node2.isOr());
      assertEquals(false, node2.isRegExp());
      assertEquals(false, node2.isVoid());
      assertEquals(false, node2.isTry());
      assertEquals(false, node2.isDec());
      assertEquals(false, node2.isTypeOf());
      assertNull(node2.getSourceFileName());
      assertEquals(false, node2.isString());
      assertEquals(false, node2.isIf());
      assertEquals(false, node2.isInc());
      assertEquals(false, node2.isTrue());
      assertEquals(false, node2.isGetterDef());
      assertEquals(false, node2.isReturn());
      assertEquals(false, node2.isScript());
      assertEquals(false, node2.isNew());
      assertEquals(false, node2.isAssign());
      assertEquals(false, node2.isOptionalArg());
      assertEquals(-1, node2.getSourcePosition());
      assertEquals(false, node2.isGetElem());
      assertEquals(false, node2.isContinue());
      assertEquals(false, node2.isDebugger());
      assertEquals(false, node2.isGetProp());
      assertEquals(false, node2.isAnd());
      assertEquals(false, node2.isDefaultCase());
      assertEquals(false, node2.isNumber());
      assertEquals(false, node2.isAssignAdd());
      assertEquals(false, node2.isLabel());
      assertEquals(-1, node2.getLineno());
      assertEquals(false, node2.isSyntheticBlock());
      assertEquals(false, node2.isHook());
      assertEquals(false, node2.isLabelName());
      assertEquals(false, node2.isCatch());
      assertEquals(false, node2.isNE());
      assertEquals(false, node2.isCall());
      assertEquals(0, node2.getLength());
      assertEquals(0, node2.getSideEffectFlags());
      assertEquals(false, node2.isOnlyModifiesThisCall());
      assertEquals(false, node2.isLocalResultCall());
      assertEquals(false, node2.isIn());
      assertEquals(false, node2.isAdd());
      assertEquals(false, node2.isVar());
      assertEquals(false, node2.isFalse());
      assertEquals(false, node2.isNot());
      assertEquals(false, node2.isEmpty());
      assertEquals(false, node2.isBreak());
      assertEquals(false, node2.isNoSideEffectsCall());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(true, node1.isVar());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isLabel());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isDebugger());
      assertEquals(-1, node1.getLineno());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isTrue());
      assertEquals(118, node1.getType());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.hasChildren());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isCatch());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isOr());
      assertFalse(node2.equals((Object)node1));
      assertFalse(node1.equals((Object)node2));
      assertNotSame(node2, node1);
      assertNotSame(node1, node2);
      
      Node node3 = NodeUtil.getRootOfQualifiedName(node2);
      assertNotNull(node3);
      assertEquals(false, node2.isBlock());
      assertEquals(false, node2.hasMoreThanOneChild());
      assertEquals(false, node2.isObjectLit());
      assertEquals(false, node2.isStringKey());
      assertEquals(false, node2.isDelProp());
      assertEquals(false, node2.isDo());
      assertEquals(0, node2.getChildCount());
      assertEquals(false, node2.isNull());
      assertEquals(true, node2.isName());
      assertEquals(false, node2.isVarArgs());
      assertEquals(false, node2.isWhile());
      assertEquals(false, node2.hasOneChild());
      assertEquals(false, node2.isCase());
      assertEquals(false, node2.isFor());
      assertEquals(38, node2.getType());
      assertEquals(false, node2.isThrow());
      assertEquals(false, node2.isExprResult());
      assertEquals(false, node2.isComma());
      assertEquals(false, node2.isSwitch());
      assertEquals(false, node2.isQuotedString());
      assertEquals(false, node2.isParamList());
      assertEquals(false, node2.isFunction());
      assertEquals(false, node2.isFromExterns());
      assertEquals(false, node2.isThis());
      assertEquals(-1, node2.getCharno());
      assertEquals(false, node2.isSetterDef());
      assertEquals(false, node2.isWith());
      assertEquals(false, node2.hasChildren());
      assertEquals(false, node2.wasEmptyNode());
      assertEquals(false, node2.isArrayLit());
      assertEquals(false, node2.isInstanceOf());
      assertEquals(false, node2.isOr());
      assertEquals(false, node2.isRegExp());
      assertEquals(false, node2.isVoid());
      assertEquals(false, node2.isTry());
      assertEquals(false, node2.isDec());
      assertEquals(false, node2.isTypeOf());
      assertNull(node2.getSourceFileName());
      assertEquals(false, node2.isString());
      assertEquals(false, node2.isIf());
      assertEquals(false, node2.isInc());
      assertEquals(false, node2.isTrue());
      assertEquals(false, node2.isGetterDef());
      assertEquals(false, node2.isReturn());
      assertEquals(false, node2.isScript());
      assertEquals(false, node2.isNew());
      assertEquals(false, node2.isAssign());
      assertEquals(false, node2.isOptionalArg());
      assertEquals(-1, node2.getSourcePosition());
      assertEquals(false, node2.isGetElem());
      assertEquals(false, node2.isContinue());
      assertEquals(false, node2.isDebugger());
      assertEquals(false, node2.isGetProp());
      assertEquals(false, node2.isAnd());
      assertEquals(false, node2.isDefaultCase());
      assertEquals(false, node2.isNumber());
      assertEquals(false, node2.isAssignAdd());
      assertEquals(false, node2.isLabel());
      assertEquals(-1, node2.getLineno());
      assertEquals(false, node2.isSyntheticBlock());
      assertEquals(false, node2.isHook());
      assertEquals(false, node2.isLabelName());
      assertEquals(false, node2.isCatch());
      assertEquals(false, node2.isNE());
      assertEquals(false, node2.isCall());
      assertEquals(0, node2.getLength());
      assertEquals(0, node2.getSideEffectFlags());
      assertEquals(false, node2.isOnlyModifiesThisCall());
      assertEquals(false, node2.isLocalResultCall());
      assertEquals(false, node2.isIn());
      assertEquals(false, node2.isAdd());
      assertEquals(false, node2.isVar());
      assertEquals(false, node2.isFalse());
      assertEquals(false, node2.isNot());
      assertEquals(false, node2.isEmpty());
      assertEquals(false, node2.isBreak());
      assertEquals(false, node2.isNoSideEffectsCall());
      assertEquals(false, node3.wasEmptyNode());
      assertEquals(false, node3.isDefaultCase());
      assertEquals(false, node3.isCatch());
      assertEquals(false, node3.isFor());
      assertEquals(false, node3.isEmpty());
      assertEquals(false, node3.isHook());
      assertEquals(false, node3.isCase());
      assertEquals(false, node3.isContinue());
      assertEquals(0, node3.getSideEffectFlags());
      assertEquals(false, node3.isInstanceOf());
      assertEquals(false, node3.isAdd());
      assertEquals(false, node3.isBreak());
      assertEquals(false, node3.isScript());
      assertEquals(false, node3.isDec());
      assertEquals(false, node3.isGetterDef());
      assertEquals(false, node3.isString());
      assertEquals(false, node3.isVoid());
      assertEquals(0, node3.getChildCount());
      assertEquals(false, node3.isAssignAdd());
      assertEquals(false, node3.isVarArgs());
      assertEquals(false, node3.isObjectLit());
      assertEquals(0, node3.getLength());
      assertEquals(false, node3.isFunction());
      assertEquals(false, node3.isVar());
      assertEquals(false, node3.isNE());
      assertEquals(false, node3.isGetProp());
      assertEquals(false, node3.isComma());
      assertEquals(false, node3.isNoSideEffectsCall());
      assertEquals(-1, node3.getLineno());
      assertEquals(false, node3.isIn());
      assertEquals(false, node3.isRegExp());
      assertEquals(false, node3.isNew());
      assertEquals(false, node3.isWith());
      assertEquals(false, node3.isGetElem());
      assertEquals(false, node3.isReturn());
      assertEquals(false, node3.isNull());
      assertEquals(false, node3.isAssign());
      assertEquals(false, node3.isThrow());
      assertEquals(-1, node3.getSourcePosition());
      assertEquals(false, node3.isTry());
      assertEquals(false, node3.isCall());
      assertEquals(false, node3.isSwitch());
      assertEquals(38, node3.getType());
      assertEquals(false, node3.isNumber());
      assertEquals(false, node3.isInc());
      assertNull(node3.getSourceFileName());
      assertEquals(false, node3.isStringKey());
      assertEquals(false, node3.isDelProp());
      assertEquals(false, node3.isTrue());
      assertEquals(true, node3.isName());
      assertEquals(false, node3.isSyntheticBlock());
      assertEquals(false, node3.isNot());
      assertEquals(false, node3.isFromExterns());
      assertEquals(false, node3.isSetterDef());
      assertEquals(false, node3.isAnd());
      assertEquals(false, node3.isBlock());
      assertEquals(false, node3.isIf());
      assertEquals(-1, node3.getCharno());
      assertEquals(false, node3.isTypeOf());
      assertEquals(false, node3.hasOneChild());
      assertEquals(false, node3.isFalse());
      assertEquals(false, node3.isWhile());
      assertEquals(false, node3.isArrayLit());
      assertEquals(false, node3.isOnlyModifiesThisCall());
      assertEquals(false, node3.isOr());
      assertEquals(false, node3.isThis());
      assertEquals(false, node3.isExprResult());
      assertEquals(false, node3.isOptionalArg());
      assertEquals(false, node3.isLabel());
      assertEquals(false, node3.isLocalResultCall());
      assertEquals(false, node3.isDebugger());
      assertEquals(false, node3.isQuotedString());
      assertEquals(false, node3.isLabelName());
      assertEquals(false, node3.hasMoreThanOneChild());
      assertEquals(false, node3.isDo());
      assertEquals(false, node3.isParamList());
      assertEquals(false, node3.hasChildren());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(true, node1.isVar());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isLabel());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isDebugger());
      assertEquals(-1, node1.getLineno());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isTrue());
      assertEquals(118, node1.getType());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.hasChildren());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isCatch());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isOr());
      assertFalse(node2.equals((Object)node1));
      assertFalse(node3.equals((Object)node1));
      assertFalse(node1.equals((Object)node2));
      assertFalse(node1.equals((Object)node3));
      assertSame(node2, node3);
      assertNotSame(node2, node1);
      assertNotSame(node3, node1);
      assertSame(node3, node2);
      assertNotSame(node1, node2);
      assertNotSame(node1, node3);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      int int0 = 65490;
      String string0 = "<";
      Node node0 = Node.newString(int0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isObjectLit());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFalse());
      assertEquals(65490, node0.getType());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isScript());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTypeOf());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isSetterDef());
      
      NodeUtil.copyNameAnnotations(node0, node0);
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isObjectLit());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFalse());
      assertEquals(65490, node0.getType());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isScript());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTypeOf());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isSetterDef());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      int int0 = 28;
      Node node0 = new Node(int0);
      assertNotNull(node0);
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isParamList());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCatch());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSetterDef());
      assertEquals(28, node0.getType());
      assertEquals(false, node0.isAnd());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isThis());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isGetterDef());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNoSideEffectsCall());
      
      NodeUtil.redeclareVarsInsideBranch(node0);
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isParamList());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCatch());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSetterDef());
      assertEquals(28, node0.getType());
      assertEquals(false, node0.isAnd());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isThis());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isGetterDef());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNoSideEffectsCall());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String string0 = "<<\\.";
      double double0 = 275.46816437;
      Node node0 = Node.newNumber(double0);
      assertNotNull(node0);
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAnd());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isCase());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFunction());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDec());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(39, node0.getType());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isComma());
      
      Node node1 = NodeUtil.newVarNode(string0, node0);
      assertNotNull(node1);
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAnd());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isCase());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFunction());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDec());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(39, node0.getType());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isComma());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isScript());
      assertEquals(true, node1.hasOneChild());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isWith());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isFromExterns());
      assertEquals(-1, node1.getLineno());
      assertEquals(-1, node1.getCharno());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isIf());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isComma());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isDec());
      assertEquals(true, node1.isVar());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isContinue());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      
      // Undeclared exception!
      try {
        NodeUtil.redeclareVarsInsideBranch(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      int int0 = (-3368);
      // Undeclared exception!
      try {
        String string0 = NodeUtil.opToStrNoFail(int0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -3368
         //
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      int int0 = 113;
      String string0 = NodeUtil.opToStr(int0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      int int0 = 108;
      String string0 = NodeUtil.opToStr(int0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      int int0 = 99;
      String string0 = NodeUtil.opToStr(int0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      int int0 = 92;
      String string0 = NodeUtil.opToStrNoFail(int0);
      assertNotNull(string0);
      assertEquals(">>>=", string0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      int int0 = 82;
      // Undeclared exception!
      try {
        String string0 = NodeUtil.opToStrNoFail(int0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 82
         //
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      int int0 = 79;
      String string0 = NodeUtil.opToStr(int0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      int int0 = 77;
      String string0 = NodeUtil.opToStr(int0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      int int0 = 65;
      String string0 = NodeUtil.opToStr(int0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      int int0 = 52;
      String string0 = NodeUtil.opToStrNoFail(int0);
      assertNotNull(string0);
      assertEquals("instanceof", string0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      int int0 = 38;
      // Undeclared exception!
      try {
        String string0 = NodeUtil.opToStrNoFail(int0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown op 38: NAME
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int int0 = 37;
      String string0 = NodeUtil.opToStr(int0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      int int0 = 21;
      String string0 = NodeUtil.opToStrNoFail(int0);
      assertNotNull(string0);
      assertEquals("+", string0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String string0 = "";
      Node node0 = null;
      Node node1 = NodeUtil.newVarNode(string0, node0);
      assertNotNull(node1);
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isScript());
      assertEquals(-1, node1.getCharno());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isCatch());
      assertEquals(true, node1.isVar());
      assertEquals(false, node1.isWhile());
      assertEquals(true, node1.hasChildren());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isGetProp());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isBreak());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isParamList());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isIf());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isObjectLit());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isInc());
      
      boolean boolean0 = NodeUtil.isGetOrSetKey(node1);
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isScript());
      assertEquals(-1, node1.getCharno());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isCatch());
      assertEquals(true, node1.isVar());
      assertEquals(false, node1.isWhile());
      assertEquals(true, node1.hasChildren());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isGetProp());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isBreak());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isParamList());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isIf());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isObjectLit());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isInc());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int int0 = 65500;
      String string0 = "<";
      Node node0 = Node.newString(int0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssign());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDebugger());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(65500, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOr());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFromExterns());
      
      JSType jSType0 = null;
      JSType jSType1 = NodeUtil.getObjectLitKeyTypeFromValueType(node0, jSType0);
      assertNull(jSType1);
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssign());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDebugger());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(65500, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOr());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFromExterns());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      String string0 = "JSC_INVALID_GETELEM_INDEX_ERROR";
      SyntheticAst syntheticAst0 = new SyntheticAst(string0);
      assertNotNull(syntheticAst0);
      
      AbstractCompiler abstractCompiler0 = null;
      Node node0 = syntheticAst0.getAstRoot(abstractCompiler0);
      assertNotNull(node0);
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isInc());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isFunction());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isIn());
      assertEquals(0, node0.getChildCount());
      assertEquals(true, node0.isScript());
      assertEquals(0, node0.getLength());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isWith());
      assertEquals("JSC_INVALID_GETELEM_INDEX_ERROR", node0.getSourceFileName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAssign());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isTry());
      
      // Undeclared exception!
      try {
        String string1 = NodeUtil.getObjectLitKeyName(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unexpected node type: SCRIPT [source_file: JSC_INVALID_GETELEM_INDEX_ERROR] [input_id: InputId: JSC_INVALID_GETELEM_INDEX_ERROR]
         //
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      int int0 = (-872);
      String string0 = "/:C/<.c";
      Node node0 = Node.newString(int0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isAssign());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getChildCount());
      assertEquals(-1, node0.getCharno());
      assertNull(node0.getSourceFileName());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isObjectLit());
      assertEquals(-872, node0.getType());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLabelName());
      
      // Undeclared exception!
      try {
        boolean boolean0 = NodeUtil.isLValue(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      int int0 = (-872);
      String string0 = "/:C/<.c";
      Node node0 = Node.newString(int0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSwitch());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getSideEffectFlags());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(-872, node0.getType());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNew());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isFromExterns());
      
      boolean boolean0 = NodeUtil.isVarOrSimpleAssignLhs(node0, node0);
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSwitch());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getSideEffectFlags());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(-872, node0.getType());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNew());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isFromExterns());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String string0 = "E(b5z:\\^t?";
      int int0 = 8;
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isContinue());
      assertEquals(8, node0.getType());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(32776, node0.getSourcePosition());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNew());
      assertEquals(8, node0.getCharno());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isThrow());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAdd());
      assertEquals(8, node0.getLineno());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isThis());
      
      boolean boolean0 = NodeUtil.isBleedingFunctionName(node0);
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isContinue());
      assertEquals(8, node0.getType());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(32776, node0.getSourcePosition());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNew());
      assertEquals(8, node0.getCharno());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isThrow());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAdd());
      assertEquals(8, node0.getLineno());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isThis());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      int int0 = (-872);
      String string0 = "/:C/<.c";
      Node node0 = Node.newString(int0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.hasOneChild());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isExprResult());
      assertEquals(-872, node0.getType());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCall());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTrue());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isWhile());
      
      boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node0);
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.hasOneChild());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isExprResult());
      assertEquals(-872, node0.getType());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCall());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTrue());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isWhile());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      boolean boolean0 = true;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertNotNull(node0);
      assertEquals(false, node0.hasMoreThanOneChild());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDelProp());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVar());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCall());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isBreak());
      assertEquals(44, node0.getType());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isEmpty());
      
      boolean boolean1 = NodeUtil.isReferenceName(node0);
      assertEquals(false, node0.hasMoreThanOneChild());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDelProp());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVar());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCall());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isBreak());
      assertEquals(44, node0.getType());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isEmpty());
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      assertNotNull(jqueryCodingConvention0);
      assertEquals("window", jqueryCodingConvention0.getGlobalObject());
      
      String string0 = "IYwvXzTw8.LUPh_";
      Node node0 = NodeUtil.newQualifiedNameNode((CodingConvention) jqueryCodingConvention0, string0);
      assertNotNull(node0);
      assertEquals("window", jqueryCodingConvention0.getGlobalObject());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAnd());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNew());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isCall());
      assertEquals(2, node0.getChildCount());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFromExterns());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isStringKey());
      assertEquals(33, node0.getType());
      assertEquals(false, node0.hasOneChild());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isThrow());
      assertEquals(true, node0.hasMoreThanOneChild());
      assertEquals(true, node0.isGetProp());
      
      Node node1 = NodeUtil.newVarNode(string0, node0);
      assertNotNull(node1);
      assertEquals("window", jqueryCodingConvention0.getGlobalObject());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isObjectLit());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isReturn());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isArrayLit());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isThrow());
      assertEquals(-1, node1.getLineno());
      assertEquals(true, node1.isVar());
      assertEquals(false, node1.isAdd());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isQuotedString());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(1, node1.getChildCount());
      assertEquals(true, node1.hasOneChild());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAnd());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNew());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isCall());
      assertEquals(2, node0.getChildCount());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFromExterns());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isStringKey());
      assertEquals(33, node0.getType());
      assertEquals(false, node0.hasOneChild());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isThrow());
      assertEquals(true, node0.hasMoreThanOneChild());
      assertEquals(true, node0.isGetProp());
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      
      // Undeclared exception!
      try {
        NodeUtil.removeChild(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Invalid attempt to remove node: GETPROP of GETPROP
         //
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      double double0 = 275.46816437;
      Node node0 = Node.newNumber(double0);
      assertNotNull(node0);
      assertEquals(false, node0.isDebugger());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasOneChild());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isParamList());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCatch());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isExprResult());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFromExterns());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDo());
      
      boolean boolean0 = NodeUtil.isStatementParent(node0);
      assertEquals(false, node0.isDebugger());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasOneChild());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isParamList());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCatch());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isExprResult());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFromExterns());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDo());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      String string0 = "<=";
      int int0 = (-22);
      Node node0 = Node.newString(string0, int0, int0);
      assertNotNull(node0);
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isName());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFalse());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getChildCount());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(40, node0.getType());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCatch());
      
      // Undeclared exception!
      try {
        Node node1 = NodeUtil.getConditionExpression(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // STRING <= does not have a condition.
         //
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      String string0 = "";
      Node node0 = null;
      Node node1 = NodeUtil.newVarNode(string0, node0);
      assertNotNull(node1);
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isSwitch());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isFalse());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isReturn());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isNot());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isAdd());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isRegExp());
      assertEquals(true, node1.isVar());
      assertEquals(0, node1.getLength());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isScript());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isDec());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isCatch());
      
      // Undeclared exception!
      try {
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
      assertNotNull(nodeUtil_MatchShallowStatement0);
      
      boolean boolean0 = false;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertNotNull(node0);
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSetterDef());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isExprResult());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isBlock());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isString());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFunction());
      assertNull(node0.getSourceFileName());
      
      String string0 = null;
      node0.addChildrenToFront(node0);
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSetterDef());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isExprResult());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isBlock());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isOr());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isString());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isScript());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFunction());
      assertNull(node0.getSourceFileName());
      
      boolean boolean1 = NodeUtil.isNameReferenced(node0, string0, nodeUtil_MatchShallowStatement0);
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSetterDef());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isExprResult());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isBlock());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isOr());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isString());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isScript());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFunction());
      assertNull(node0.getSourceFileName());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean0 == boolean1);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      double double0 = (-1568.589);
      int int0 = (-2572);
      Node node0 = Node.newNumber(double0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isString());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isComma());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAssign());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isExprResult());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isIf());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(-1, node0.getLineno());
      
      boolean boolean0 = NodeUtil.isWithinLoop(node0);
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isString());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isComma());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAssign());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isExprResult());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isIf());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(-1, node0.getLineno());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      String string0 = "";
      Node node0 = null;
      Node node1 = NodeUtil.newVarNode(string0, node0);
      assertNotNull(node1);
      assertEquals(true, node1.isVar());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isAssign());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isNot());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isFromExterns());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isTry());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isName());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isLabelName());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isSwitch());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isDebugger());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isReturn());
      
      Node node2 = NodeUtil.getLoopCodeBlock(node1);
      assertNull(node2);
      assertEquals(true, node1.isVar());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isAssign());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isNot());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isFromExterns());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isTry());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isName());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isLabelName());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isSwitch());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isDebugger());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isReturn());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      assertNotNull(simpleErrorReporter0);
      
      boolean boolean0 = true;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) simpleErrorReporter0, boolean0);
      assertNotNull(jSTypeRegistry0);
      assertEquals(true, jSTypeRegistry0.shouldTolerateUndefinedValues());
      
      Stack<JSType> stack0 = new Stack<JSType>();
      assertNotNull(stack0);
      assertEquals(0, stack0.size());
      assertEquals(10, stack0.capacity());
      assertEquals(true, stack0.isEmpty());
      assertEquals("[]", stack0.toString());
      assertEquals(true, stack0.empty());
      
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      assertNotNull(node0);
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isWith());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNew());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isRegExp());
      assertNull(node0.getSourceFileName());
      assertEquals(83, node0.getType());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAnd());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isArrayLit());
      assertEquals(true, node0.isParamList());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDo());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDelProp());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNull());
      assertEquals(true, jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, stack0.size());
      assertEquals(10, stack0.capacity());
      assertEquals(true, stack0.isEmpty());
      assertEquals("[]", stack0.toString());
      assertEquals(true, stack0.empty());
      
      boolean boolean1 = NodeUtil.isLoopStructure(node0);
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isWith());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNew());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isRegExp());
      assertNull(node0.getSourceFileName());
      assertEquals(83, node0.getType());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAnd());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isArrayLit());
      assertEquals(true, node0.isParamList());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDo());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDelProp());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNull());
      assertEquals(true, jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals(0, stack0.size());
      assertEquals(10, stack0.capacity());
      assertEquals(true, stack0.isEmpty());
      assertEquals("[]", stack0.toString());
      assertEquals(true, stack0.empty());
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String string0 = ":return";
      int int0 = (-1806);
      Node node0 = Node.newString(string0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isScript());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isTrue());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isGetProp());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLength());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isCall());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isBlock());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getChildCount());
      
      boolean boolean0 = NodeUtil.isForIn(node0);
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isScript());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isTrue());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isGetProp());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLength());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isCall());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isBlock());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getChildCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      double double0 = Double.NaN;
      int int0 = (-56);
      Node node0 = Node.newNumber(double0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOr());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLabel());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isString());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDec());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isScript());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isReturn());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isAssignAdd());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isWith());
      
      boolean boolean0 = NodeUtil.isExprCall(node0);
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isOr());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLabel());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isString());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDec());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isScript());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isReturn());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isAssignAdd());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isWith());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertNotNull(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      String string0 = "ra:z%yLYD";
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, string0, string0);
      assertNotNull(node0);
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTrue());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isSwitch());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCall());
      assertEquals(true, node0.hasOneChild());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isIn());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNull());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVar());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFalse());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isInc());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNew());
      assertEquals(1, node0.getLineno());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isContinue());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      boolean boolean0 = true;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertNotNull(node0);
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isString());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isWith());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDec());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isScript());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDelProp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(0, node0.getLength());
      assertEquals(44, node0.getType());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNumber());
      
      Node[] nodeArray0 = new Node[2];
      // Undeclared exception!
      try {
        Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int int0 = 305;
      Node node0 = new Node(int0);
      assertNotNull(node0);
      assertEquals(false, node0.isFromExterns());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFor());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isBreak());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isWhile());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isInc());
      assertEquals(305, node0.getType());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThrow());
      
      boolean boolean0 = NodeUtil.referencesThis(node0);
      assertEquals(false, node0.isFromExterns());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFor());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isBreak());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isWhile());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isInc());
      assertEquals(305, node0.getType());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThrow());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String string0 = "Expected at most 1 'default' in switch but was ";
      boolean boolean0 = NodeUtil.isLatin(string0);
      assertTrue(boolean0);
      
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertNotNull(node0);
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNumber());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFalse());
      assertEquals(-1, node0.getCharno());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isInc());
      assertEquals(44, node0.getType());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIn());
      
      // Undeclared exception!
      try {
        int int0 = NodeUtil.getOpFromAssignmentOp(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Not an assignment op:TRUE
         //
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte byte0 = (byte)87;
      String string0 = "";
      Node node0 = Node.newString((int) byte0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isVar());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isQuotedString());
      assertEquals(87, node0.getType());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isName());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isParamList());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isOptionalArg());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isBlock());
      
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
      assertNotNull(nodeUtil_MayBeStringResultPredicate0);
      
      boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isVar());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isQuotedString());
      assertEquals(87, node0.getType());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isName());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isParamList());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isOptionalArg());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isBlock());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      int int0 = 11;
      boolean boolean0 = NodeUtil.isCommutative(int0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      int int0 = 97;
      int int1 = NodeUtil.precedence(int0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(1, int1);
      
      boolean boolean0 = NodeUtil.isCommutative(int1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      int int0 = 0;
      boolean boolean0 = NodeUtil.isAssociative(int0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      int int0 = 65500;
      String string0 = "<";
      Node node0 = Node.newString(int0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isGetProp());
      assertEquals(65500, node0.getType());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCatch());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(-1, node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isThis());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isString());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNE());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isObjectLit());
      
      boolean boolean0 = NodeUtil.isHoistedFunctionDeclaration(node0);
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isGetProp());
      assertEquals(65500, node0.getType());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCatch());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(-1, node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isThis());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isString());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNE());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isObjectLit());
      assertFalse(boolean0);
      
      boolean boolean1 = NodeUtil.mayBeString(node0, boolean0);
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isGetProp());
      assertEquals(65500, node0.getType());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCatch());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(-1, node0.getLineno());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isThis());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isString());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNE());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isObjectLit());
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean0 == boolean1);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      boolean boolean0 = false;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertNotNull(node0);
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isTypeOf());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVar());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isIf());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isReturn());
      assertEquals(43, node0.getType());
      assertEquals(-1, node0.getLineno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDebugger());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isNoSideEffectsCall());
      
      NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
      assertNotNull(nodeUtil_BooleanResultPredicate0);
      
      boolean boolean1 = nodeUtil_BooleanResultPredicate0.apply(node0);
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isTypeOf());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isVar());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isIf());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isReturn());
      assertEquals(43, node0.getType());
      assertEquals(-1, node0.getLineno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDebugger());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean0 == boolean1);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
      assertNotNull(nodeUtil_BooleanResultPredicate0);
      
      String string0 = "test";
      int int0 = 37;
      Node node0 = Node.newString(string0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isRegExp());
      assertEquals(37, node0.getLineno());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isObjectLit());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isBreak());
      assertEquals(151589, node0.getSourcePosition());
      assertEquals(false, node0.isAssign());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isTrue());
      assertEquals(37, node0.getCharno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCall());
      
      boolean boolean0 = nodeUtil_BooleanResultPredicate0.apply(node0);
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isRegExp());
      assertEquals(37, node0.getLineno());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isObjectLit());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isBreak());
      assertEquals(151589, node0.getSourcePosition());
      assertEquals(false, node0.isAssign());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isTrue());
      assertEquals(37, node0.getCharno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCall());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
      assertNotNull(nodeUtil_BooleanResultPredicate0);
      
      double double0 = 0.0;
      int int0 = 103;
      Node node0 = Node.newNumber(double0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isHook());
      assertEquals(103, node0.getLineno());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isContinue());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFromExterns());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(421991, node0.getSourcePosition());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLabel());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCase());
      assertEquals(103, node0.getCharno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isParamList());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTrue());
      
      boolean boolean0 = nodeUtil_BooleanResultPredicate0.apply(node0);
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isHook());
      assertEquals(103, node0.getLineno());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isContinue());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFromExterns());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(421991, node0.getSourcePosition());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLabel());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCase());
      assertEquals(103, node0.getCharno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isParamList());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTrue());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      int int0 = 28;
      Node node0 = new Node(int0);
      assertNotNull(node0);
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.hasOneChild());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLabel());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFromExterns());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isCase());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isHook());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTrue());
      assertEquals(28, node0.getType());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAdd());
      assertNull(node0.getSourceFileName());
      
      NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
      assertNotNull(nodeUtil_BooleanResultPredicate0);
      
      boolean boolean0 = nodeUtil_BooleanResultPredicate0.apply(node0);
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.hasOneChild());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLabel());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFromExterns());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isCase());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isHook());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTrue());
      assertEquals(28, node0.getType());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAdd());
      assertNull(node0.getSourceFileName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      int int0 = 28;
      Node node0 = new Node(int0);
      assertNotNull(node0);
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAssign());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isArrayLit());
      assertEquals(28, node0.getType());
      assertEquals(false, node0.isEmpty());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isComma());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isBreak());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isIf());
      
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
      assertNotNull(nodeUtil_NumbericResultPredicate0);
      
      boolean boolean0 = nodeUtil_NumbericResultPredicate0.apply(node0);
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAssign());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isArrayLit());
      assertEquals(28, node0.getType());
      assertEquals(false, node0.isEmpty());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isComma());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isBreak());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isIf());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      int int0 = (-878);
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      assertNotNull(nodeUtil_MayBeStringResultPredicate0);
      
      int int1 = 86;
      Node node0 = Node.newNumber((double) int0);
      assertNotNull(node0);
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getLineno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isThis());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOr());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isIn());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isString());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFor());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isComma());
      assertFalse(int0 == int1);
      
      Node node1 = new Node(int1, node0, node0, node0, node0, int0, int0);
      assertNotNull(node1);
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isFalse());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isBlock());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(86, node1.getType());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isIf());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isNot());
      assertEquals(0, node1.getLength());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isTrue());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(true, node1.isAssign());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getLineno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isThis());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOr());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isIn());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isString());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFor());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isComma());
      assertFalse(node1.equals((Object)node0));
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
      assertFalse(node0.equals((Object)node1));
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      
      boolean boolean0 = nodeUtil_MayBeStringResultPredicate0.apply(node1);
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isFalse());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isBlock());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(86, node1.getType());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isIf());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isNot());
      assertEquals(0, node1.getLength());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isTrue());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(true, node1.isAssign());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getLineno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isThis());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOr());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isIn());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isString());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFor());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isComma());
      assertFalse(node1.equals((Object)node0));
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
      assertFalse(node0.equals((Object)node1));
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      int int0 = 138;
      // Undeclared exception!
      try {
        int int1 = NodeUtil.precedence(int0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 138
         //
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      int int0 = 92;
      int int1 = NodeUtil.precedence(int0);
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = 71;
      // Undeclared exception!
      try {
        int int1 = NodeUtil.precedence(int0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 71
         //
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      int int0 = 50;
      // Undeclared exception!
      try {
        int int1 = NodeUtil.precedence(int0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 50
         //
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = 28;
      int int1 = NodeUtil.precedence(int0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(13, int1);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      int int0 = 17;
      int int1 = NodeUtil.precedence(int0);
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
      assertEquals(9, int1);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try {
        int int0 = NodeUtil.precedence(byteArray0[1]);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String string0 = "";
      Node node0 = null;
      Node node1 = NodeUtil.newVarNode(string0, node0);
      assertNotNull(node1);
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isStringKey());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isDebugger());
      assertEquals(true, node1.hasChildren());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isObjectLit());
      assertEquals(118, node1.getType());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isRegExp());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(true, node1.isVar());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isFor());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isThrow());
      assertEquals(1, node1.getChildCount());
      
      AbstractCompiler abstractCompiler0 = null;
      boolean boolean0 = NodeUtil.mayEffectMutableState(node1, abstractCompiler0);
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isStringKey());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isDebugger());
      assertEquals(true, node1.hasChildren());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isObjectLit());
      assertEquals(118, node1.getType());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isRegExp());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(true, node1.isVar());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isFor());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isThrow());
      assertEquals(1, node1.getChildCount());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      boolean boolean0 = false;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertNotNull(node0);
      assertEquals(false, node0.isAssign());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDelProp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isInc());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isThis());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isReturn());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCase());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isQuotedString());
      
      boolean boolean1 = NodeUtil.mayHaveSideEffects(node0);
      assertEquals(false, node0.isAssign());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDelProp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isInc());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isThis());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isReturn());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isCase());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isQuotedString());
      assertTrue(boolean0 == boolean1);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      String string0 = "";
      Node node0 = null;
      Node node1 = NodeUtil.newVarNode(string0, node0);
      assertNotNull(node1);
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isLabelName());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isDo());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isTrue());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isNot());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isEmpty());
      assertEquals(true, node1.isVar());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isCatch());
      assertEquals(1, node1.getChildCount());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isGetProp());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isScript());
      
      Node node2 = node1.removeChildren();
      assertNotNull(node2);
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isLabelName());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isDo());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isNot());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isEmpty());
      assertEquals(true, node1.isVar());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isCatch());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isScript());
      assertEquals(0, node2.getLength());
      assertEquals(false, node2.isVar());
      assertEquals(false, node2.isComma());
      assertEquals(true, node2.isName());
      assertEquals(false, node2.isIf());
      assertEquals(0, node2.getChildCount());
      assertEquals(false, node2.isDebugger());
      assertEquals(false, node2.isBlock());
      assertEquals(false, node2.isWith());
      assertEquals(false, node2.isFor());
      assertEquals(false, node2.isInc());
      assertEquals(false, node2.isCall());
      assertEquals(false, node2.hasOneChild());
      assertEquals(false, node2.isNew());
      assertEquals(false, node2.isTypeOf());
      assertEquals(false, node2.isQuotedString());
      assertEquals(false, node2.isReturn());
      assertEquals(false, node2.isHook());
      assertEquals(false, node2.isOptionalArg());
      assertEquals(false, node2.isIn());
      assertEquals(false, node2.isObjectLit());
      assertEquals(false, node2.isAnd());
      assertEquals(false, node2.isOr());
      assertEquals(false, node2.isArrayLit());
      assertEquals(false, node2.isSyntheticBlock());
      assertNull(node2.getSourceFileName());
      assertEquals(false, node2.isRegExp());
      assertEquals(38, node2.getType());
      assertEquals(false, node2.isLabelName());
      assertEquals(false, node2.isNoSideEffectsCall());
      assertEquals(false, node2.isAssignAdd());
      assertEquals(false, node2.isLocalResultCall());
      assertEquals(false, node2.isAdd());
      assertEquals(false, node2.isExprResult());
      assertEquals(false, node2.isInstanceOf());
      assertEquals(false, node2.isGetElem());
      assertEquals(false, node2.hasChildren());
      assertEquals(0, node2.getSideEffectFlags());
      assertEquals(false, node2.isGetterDef());
      assertEquals(false, node2.isFromExterns());
      assertEquals(false, node2.isSetterDef());
      assertEquals(false, node2.isCase());
      assertEquals(false, node2.isSwitch());
      assertEquals(false, node2.isGetProp());
      assertEquals(false, node2.hasMoreThanOneChild());
      assertEquals(false, node2.isLabel());
      assertEquals(false, node2.isDo());
      assertEquals(-1, node2.getSourcePosition());
      assertEquals(false, node2.isBreak());
      assertEquals(false, node2.isVoid());
      assertEquals(false, node2.isNumber());
      assertEquals(false, node2.isString());
      assertEquals(false, node2.isDec());
      assertEquals(false, node2.isFunction());
      assertEquals(false, node2.isParamList());
      assertEquals(false, node2.isTrue());
      assertEquals(false, node2.isStringKey());
      assertEquals(false, node2.isCatch());
      assertEquals(false, node2.isFalse());
      assertEquals(false, node2.isWhile());
      assertEquals(false, node2.isTry());
      assertEquals(false, node2.isNot());
      assertEquals(false, node2.isThis());
      assertEquals(false, node2.isThrow());
      assertEquals(false, node2.isEmpty());
      assertEquals(false, node2.isOnlyModifiesThisCall());
      assertEquals(false, node2.wasEmptyNode());
      assertEquals(false, node2.isNull());
      assertEquals(false, node2.isVarArgs());
      assertEquals(-1, node2.getLineno());
      assertEquals(false, node2.isNE());
      assertEquals(false, node2.isDelProp());
      assertEquals(false, node2.isAssign());
      assertEquals(false, node2.isDefaultCase());
      assertEquals(false, node2.isScript());
      assertEquals(-1, node2.getCharno());
      assertEquals(false, node2.isContinue());
      assertFalse(node1.equals((Object)node2));
      assertFalse(node2.equals((Object)node1));
      assertNotSame(node1, node2);
      assertNotSame(node2, node1);
      
      boolean boolean0 = NodeUtil.mayEffectMutableState(node2);
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isLabelName());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isDo());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isNot());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isEmpty());
      assertEquals(true, node1.isVar());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isCatch());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isScript());
      assertEquals(0, node2.getLength());
      assertEquals(false, node2.isVar());
      assertEquals(false, node2.isComma());
      assertEquals(true, node2.isName());
      assertEquals(false, node2.isIf());
      assertEquals(0, node2.getChildCount());
      assertEquals(false, node2.isDebugger());
      assertEquals(false, node2.isBlock());
      assertEquals(false, node2.isWith());
      assertEquals(false, node2.isFor());
      assertEquals(false, node2.isInc());
      assertEquals(false, node2.isCall());
      assertEquals(false, node2.hasOneChild());
      assertEquals(false, node2.isNew());
      assertEquals(false, node2.isTypeOf());
      assertEquals(false, node2.isQuotedString());
      assertEquals(false, node2.isReturn());
      assertEquals(false, node2.isHook());
      assertEquals(false, node2.isOptionalArg());
      assertEquals(false, node2.isIn());
      assertEquals(false, node2.isObjectLit());
      assertEquals(false, node2.isAnd());
      assertEquals(false, node2.isOr());
      assertEquals(false, node2.isArrayLit());
      assertEquals(false, node2.isSyntheticBlock());
      assertNull(node2.getSourceFileName());
      assertEquals(false, node2.isRegExp());
      assertEquals(38, node2.getType());
      assertEquals(false, node2.isLabelName());
      assertEquals(false, node2.isNoSideEffectsCall());
      assertEquals(false, node2.isAssignAdd());
      assertEquals(false, node2.isLocalResultCall());
      assertEquals(false, node2.isAdd());
      assertEquals(false, node2.isExprResult());
      assertEquals(false, node2.isInstanceOf());
      assertEquals(false, node2.isGetElem());
      assertEquals(false, node2.hasChildren());
      assertEquals(0, node2.getSideEffectFlags());
      assertEquals(false, node2.isGetterDef());
      assertEquals(false, node2.isFromExterns());
      assertEquals(false, node2.isSetterDef());
      assertEquals(false, node2.isCase());
      assertEquals(false, node2.isSwitch());
      assertEquals(false, node2.isGetProp());
      assertEquals(false, node2.hasMoreThanOneChild());
      assertEquals(false, node2.isLabel());
      assertEquals(false, node2.isDo());
      assertEquals(-1, node2.getSourcePosition());
      assertEquals(false, node2.isBreak());
      assertEquals(false, node2.isVoid());
      assertEquals(false, node2.isNumber());
      assertEquals(false, node2.isString());
      assertEquals(false, node2.isDec());
      assertEquals(false, node2.isFunction());
      assertEquals(false, node2.isParamList());
      assertEquals(false, node2.isTrue());
      assertEquals(false, node2.isStringKey());
      assertEquals(false, node2.isCatch());
      assertEquals(false, node2.isFalse());
      assertEquals(false, node2.isWhile());
      assertEquals(false, node2.isTry());
      assertEquals(false, node2.isNot());
      assertEquals(false, node2.isThis());
      assertEquals(false, node2.isThrow());
      assertEquals(false, node2.isEmpty());
      assertEquals(false, node2.isOnlyModifiesThisCall());
      assertEquals(false, node2.wasEmptyNode());
      assertEquals(false, node2.isNull());
      assertEquals(false, node2.isVarArgs());
      assertEquals(-1, node2.getLineno());
      assertEquals(false, node2.isNE());
      assertEquals(false, node2.isDelProp());
      assertEquals(false, node2.isAssign());
      assertEquals(false, node2.isDefaultCase());
      assertEquals(false, node2.isScript());
      assertEquals(-1, node2.getCharno());
      assertEquals(false, node2.isContinue());
      assertFalse(node1.equals((Object)node2));
      assertFalse(node2.equals((Object)node1));
      assertNotSame(node1, node2);
      assertNotSame(node2, node1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      double double0 = 275.46816437;
      Node node0 = Node.newNumber(double0);
      assertNotNull(node0);
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isStringKey());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isIf());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isThrow());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.hasChildren());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isGetProp());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isParamList());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVarArgs());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isQuotedString());
      
      Node node1 = NodeUtil.newUndefinedNode(node0);
      assertNotNull(node1);
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isStringKey());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isIf());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isThrow());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.hasChildren());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isGetProp());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isParamList());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVarArgs());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isAssign());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isCall());
      assertEquals(122, node1.getType());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isHook());
      assertEquals(true, node1.hasChildren());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isWith());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isGetProp());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isRegExp());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isSetterDef());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(true, node1.isVoid());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isObjectLit());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isDec());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      
      boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isStringKey());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isIf());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isThrow());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.hasChildren());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isGetProp());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isParamList());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVarArgs());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isAssign());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isCall());
      assertEquals(122, node1.getType());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isHook());
      assertEquals(true, node1.hasChildren());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isWith());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isGetProp());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isRegExp());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isSetterDef());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(true, node1.isVoid());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isObjectLit());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isDec());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      int int0 = 97;
      Node node0 = new Node(int0);
      assertNotNull(node0);
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isBreak());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(97, node0.getType());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isWhile());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isWith());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isVar());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      
      // Undeclared exception!
      try {
        boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      int int0 = 91;
      boolean boolean0 = NodeUtil.isSimpleOperatorType(int0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      String string0 = "ys";
      int int0 = 88;
      Node node0 = Node.newString(int0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isExprResult());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(-1, node0.getSourcePosition());
      assertNull(node0.getSourceFileName());
      assertEquals(88, node0.getType());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDebugger());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFor());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.wasEmptyNode());
      
      // Undeclared exception!
      try {
        boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte byte0 = (byte)67;
      String string0 = "";
      Node node0 = Node.newString((int) byte0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNull());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isComma());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNew());
      assertEquals(67, node0.getType());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetElem());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isThis());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isObjectLit());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCall());
      
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
      assertNotNull(nodeUtil_MayBeStringResultPredicate0);
      
      // Undeclared exception!
      try {
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 67
         //
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      int int0 = 62;
      boolean boolean0 = NodeUtil.isSimpleOperatorType(int0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      int int0 = 20;
      boolean boolean0 = NodeUtil.isSimpleOperatorType(int0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      int int0 = 116;
      Node node0 = new Node(int0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getChildCount());
      assertEquals(116, node0.getType());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCase());
      assertEquals(116, node0.getCharno());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isThis());
      assertEquals(116, node0.getLineno());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isEmpty());
      assertEquals(475252, node0.getSourcePosition());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isName());
      assertEquals(true, node0.isBreak());
      assertEquals(false, node0.isStringKey());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInc());
      
      boolean boolean0 = NodeUtil.isEmptyBlock(node0);
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getChildCount());
      assertEquals(116, node0.getType());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCase());
      assertEquals(116, node0.getCharno());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isThis());
      assertEquals(116, node0.getLineno());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isEmpty());
      assertEquals(475252, node0.getSourcePosition());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isName());
      assertEquals(true, node0.isBreak());
      assertEquals(false, node0.isStringKey());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInc());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      int int0 = (-872);
      Node node0 = Node.newNumber((double) int0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFunction());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOr());
      assertEquals(-1, node0.getCharno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isWith());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetElem());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLabelName());
      
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.labelRenaming);
      assertNotNull(compilerOptions0);
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      
      boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.aliasableStrings);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.labelRenaming);
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFunction());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOr());
      assertEquals(-1, node0.getCharno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isWith());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetElem());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isVoid());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLabelName());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      int int0 = (-872);
      String string0 = "/:C/<.c";
      Node node0 = Node.newString(int0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isWhile());
      assertEquals(-1, node0.getLineno());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(-872, node0.getType());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAssignAdd());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isTypeOf());
      
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertNotNull(compilerOptions0);
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInferTypes());
      
      boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripTypes);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isWhile());
      assertEquals(-1, node0.getLineno());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(-872, node0.getType());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAssignAdd());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertEquals(false, compilerOptions0.getInferTypes());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      int int0 = 14;
      int int1 = NodeUtil.getInverseOperator(int0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(16, int1);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String string0 = "com.google.javascript.jscomp.JSModuleGraph$ModuleDependenceException";
      PrintStream printStream0 = null;
      Compiler compiler0 = new Compiler(printStream0);
      assertNotNull(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      Node node0 = compiler0.parseTestCode(string0);
      assertNotNull(node0);
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTrue());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isName());
      assertEquals(1, node0.getLineno());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNew());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isIn());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isHook());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isFromExterns());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isBlock());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThis());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isReturn());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(0, compiler0.getErrorCount());
      
      ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
      assertNotNull(reorderConstantExpression0);
      
      Node node1 = reorderConstantExpression0.optimizeSubtree(node0);
      assertNotNull(node1);
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTrue());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isName());
      assertEquals(1, node0.getLineno());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNew());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isIn());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isHook());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isFromExterns());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isBlock());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThis());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isReturn());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isDec());
      assertEquals(0, node1.getCharno());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(true, node1.isScript());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isInc());
      assertEquals(true, node1.hasChildren());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isCall());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isDebugger());
      assertEquals(132, node1.getType());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isCase());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isTypeOf());
      assertEquals(4096, node1.getSourcePosition());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isAdd());
      assertEquals("[testcode]", node1.getSourceFileName());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isRegExp());
      assertEquals(1, node1.getLineno());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(true, node1.isSyntheticBlock());
      assertEquals(false, node1.isGetProp());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isContinue());
      assertSame(node0, node1);
      assertSame(node1, node0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      int int0 = 54;
      Node node0 = new Node(int0);
      assertNotNull(node0);
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNot());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isGetProp());
      assertEquals(54, node0.getType());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDebugger());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isEmpty());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isIn());
      assertEquals(0, node0.getSideEffectFlags());
      
      Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
      assertNotNull(predicate0);
      
      // Undeclared exception!
      try {
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, predicate0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 54
         //
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      String string0 = ":return";
      int int0 = (-1806);
      Node node0 = Node.newString(string0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFalse());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNew());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isIn());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isScript());
      assertNull(node0.getSourceFileName());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isReturn());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getLength());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNot());
      
      NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
      assertNotNull(nodeUtil_BooleanResultPredicate0);
      
      boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFalse());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNew());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isIn());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isScript());
      assertNull(node0.getSourceFileName());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isReturn());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getLength());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNot());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      double double0 = (-1568.589);
      int int0 = (-2572);
      Node node0 = Node.newNumber(double0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isOr());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isWhile());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFalse());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isDec());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetterDef());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      
      boolean boolean0 = false;
      boolean boolean1 = NodeUtil.isLiteralValue(node0, boolean0);
      assertEquals(false, node0.isOr());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isWhile());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFalse());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isDec());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetterDef());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNE());
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean0 == boolean1);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
      assertNotNull(googleCodingConvention0);
      
      String string0 = "*=";
      Node node0 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, string0);
      assertNotNull(node0);
      assertEquals(-1, node0.getLineno());
      assertEquals(38, node0.getType());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetterDef());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDebugger());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTypeOf());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabel());
      assertEquals(true, node0.isName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDelProp());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isSwitch());
      
      boolean boolean0 = NodeUtil.isImmutableValue(node0);
      assertEquals(-1, node0.getLineno());
      assertEquals(38, node0.getType());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetterDef());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDebugger());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTypeOf());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabel());
      assertEquals(true, node0.isName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDelProp());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isSwitch());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String string0 = ":return";
      int int0 = (-1806);
      Node node0 = Node.newString(string0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAssign());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isIn());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFromExterns());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNot());
      assertEquals(true, node0.isString());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWith());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isSyntheticBlock());
      
      String string1 = NodeUtil.getNearestFunctionName(node0);
      assertNull(string1);
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAssign());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isIn());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFromExterns());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNot());
      assertEquals(true, node0.isString());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWith());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isSyntheticBlock());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      int int0 = 11;
      TernaryValue ternaryValue0 = NodeUtil.isStrWhiteSpaceChar(int0);
      assertEquals(2, ternaryValue0.ordinal());
      assertEquals("UNKNOWN", ternaryValue0.name());
      assertEquals("unknown", ternaryValue0.toString());
      assertEquals(TernaryValue.UNKNOWN, ternaryValue0.not());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String string0 = "\t\no\f\r \u0085\u1680\u2028\u2029\u205F\u3000";
      Double double0 = NodeUtil.getStringNumberValue(string0);
      assertEquals(Double.NaN, (double)double0, 0.01D);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String string0 = "";
      Double double0 = NodeUtil.getStringNumberValue(string0);
      assertEquals(Double.NaN, (double)double0, 0.01D);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      String string0 = "";
      Double double0 = NodeUtil.getStringNumberValue(string0);
      assertEquals(0.0, (double)double0, 0.01D);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      int int0 = (-872);
      Node node0 = Node.newNumber((double) int0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDelProp());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetterDef());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isFunction());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isGetProp());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isScript());
      assertEquals(-1, node0.getCharno());
      
      Double double0 = NodeUtil.getNumberValue(node0);
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDelProp());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetterDef());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isFunction());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isGetProp());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isScript());
      assertEquals(-1, node0.getCharno());
      assertEquals((-872.0), (double)double0, 0.01D);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String string0 = "";
      Node node0 = null;
      Node node1 = NodeUtil.newVarNode(string0, node0);
      assertNotNull(node1);
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isTry());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isGetProp());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isString());
      assertEquals(true, node1.isVar());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isWith());
      assertEquals(true, node1.hasChildren());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isVarArgs());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isEmpty());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isIf());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isIn());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isWhile());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isGetElem());
      
      Node node2 = node1.removeChildren();
      assertNotNull(node2);
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isGetProp());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isString());
      assertEquals(true, node1.isVar());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isWith());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isEmpty());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isIf());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isIn());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isWhile());
      assertEquals(0, node1.getChildCount());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node2.isQuotedString());
      assertEquals(false, node2.isInc());
      assertEquals(false, node2.isFor());
      assertEquals(false, node2.isFalse());
      assertEquals(false, node2.isAdd());
      assertEquals(false, node2.isNot());
      assertEquals(true, node2.isName());
      assertEquals(false, node2.isSyntheticBlock());
      assertEquals(false, node2.isArrayLit());
      assertEquals(0, node2.getLength());
      assertEquals(false, node2.wasEmptyNode());
      assertEquals(false, node2.isDefaultCase());
      assertEquals(false, node2.isContinue());
      assertEquals(false, node2.isStringKey());
      assertEquals(false, node2.isAnd());
      assertEquals(false, node2.isHook());
      assertEquals(false, node2.isGetProp());
      assertNull(node2.getSourceFileName());
      assertEquals(false, node2.isTrue());
      assertEquals(false, node2.isBlock());
      assertEquals(false, node2.isFunction());
      assertEquals(false, node2.isAssign());
      assertEquals(false, node2.isSwitch());
      assertEquals(false, node2.isDo());
      assertEquals(-1, node2.getCharno());
      assertEquals(false, node2.isGetElem());
      assertEquals(false, node2.isSetterDef());
      assertEquals(false, node2.isReturn());
      assertEquals(-1, node2.getSourcePosition());
      assertEquals(0, node2.getSideEffectFlags());
      assertEquals(38, node2.getType());
      assertEquals(false, node2.isDebugger());
      assertEquals(false, node2.isLocalResultCall());
      assertEquals(false, node2.isNumber());
      assertEquals(false, node2.isWith());
      assertEquals(false, node2.isVoid());
      assertEquals(false, node2.isBreak());
      assertEquals(false, node2.isNoSideEffectsCall());
      assertEquals(false, node2.isAssignAdd());
      assertEquals(false, node2.isNull());
      assertEquals(false, node2.hasMoreThanOneChild());
      assertEquals(false, node2.isEmpty());
      assertEquals(false, node2.isParamList());
      assertEquals(false, node2.isNew());
      assertEquals(false, node2.isOr());
      assertEquals(false, node2.isCase());
      assertEquals(false, node2.isString());
      assertEquals(false, node2.isLabelName());
      assertEquals(false, node2.isScript());
      assertEquals(false, node2.isRegExp());
      assertEquals(false, node2.isDelProp());
      assertEquals(false, node2.isComma());
      assertEquals(false, node2.isTypeOf());
      assertEquals(false, node2.hasOneChild());
      assertEquals(false, node2.isInstanceOf());
      assertEquals(0, node2.getChildCount());
      assertEquals(false, node2.isObjectLit());
      assertEquals(false, node2.isVarArgs());
      assertEquals(false, node2.isWhile());
      assertEquals(false, node2.isCatch());
      assertEquals(false, node2.isThis());
      assertEquals(false, node2.isVar());
      assertEquals(false, node2.isNE());
      assertEquals(false, node2.isDec());
      assertEquals(false, node2.isTry());
      assertEquals(false, node2.isCall());
      assertEquals(false, node2.hasChildren());
      assertEquals(false, node2.isFromExterns());
      assertEquals(false, node2.isIn());
      assertEquals(false, node2.isExprResult());
      assertEquals(false, node2.isOnlyModifiesThisCall());
      assertEquals(false, node2.isThrow());
      assertEquals(false, node2.isLabel());
      assertEquals(-1, node2.getLineno());
      assertEquals(false, node2.isIf());
      assertEquals(false, node2.isGetterDef());
      assertEquals(false, node2.isOptionalArg());
      assertFalse(node1.equals((Object)node2));
      assertFalse(node2.equals((Object)node1));
      assertNotSame(node1, node2);
      assertNotSame(node2, node1);
      
      Double double0 = NodeUtil.getNumberValue(node2);
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isGetProp());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isString());
      assertEquals(true, node1.isVar());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isWith());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isEmpty());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isIf());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isIn());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isWhile());
      assertEquals(0, node1.getChildCount());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node2.isQuotedString());
      assertEquals(false, node2.isInc());
      assertEquals(false, node2.isFor());
      assertEquals(false, node2.isFalse());
      assertEquals(false, node2.isAdd());
      assertEquals(false, node2.isNot());
      assertEquals(true, node2.isName());
      assertEquals(false, node2.isSyntheticBlock());
      assertEquals(false, node2.isArrayLit());
      assertEquals(0, node2.getLength());
      assertEquals(false, node2.wasEmptyNode());
      assertEquals(false, node2.isDefaultCase());
      assertEquals(false, node2.isContinue());
      assertEquals(false, node2.isStringKey());
      assertEquals(false, node2.isAnd());
      assertEquals(false, node2.isHook());
      assertEquals(false, node2.isGetProp());
      assertNull(node2.getSourceFileName());
      assertEquals(false, node2.isTrue());
      assertEquals(false, node2.isBlock());
      assertEquals(false, node2.isFunction());
      assertEquals(false, node2.isAssign());
      assertEquals(false, node2.isSwitch());
      assertEquals(false, node2.isDo());
      assertEquals(-1, node2.getCharno());
      assertEquals(false, node2.isGetElem());
      assertEquals(false, node2.isSetterDef());
      assertEquals(false, node2.isReturn());
      assertEquals(-1, node2.getSourcePosition());
      assertEquals(0, node2.getSideEffectFlags());
      assertEquals(38, node2.getType());
      assertEquals(false, node2.isDebugger());
      assertEquals(false, node2.isLocalResultCall());
      assertEquals(false, node2.isNumber());
      assertEquals(false, node2.isWith());
      assertEquals(false, node2.isVoid());
      assertEquals(false, node2.isBreak());
      assertEquals(false, node2.isNoSideEffectsCall());
      assertEquals(false, node2.isAssignAdd());
      assertEquals(false, node2.isNull());
      assertEquals(false, node2.hasMoreThanOneChild());
      assertEquals(false, node2.isEmpty());
      assertEquals(false, node2.isParamList());
      assertEquals(false, node2.isNew());
      assertEquals(false, node2.isOr());
      assertEquals(false, node2.isCase());
      assertEquals(false, node2.isString());
      assertEquals(false, node2.isLabelName());
      assertEquals(false, node2.isScript());
      assertEquals(false, node2.isRegExp());
      assertEquals(false, node2.isDelProp());
      assertEquals(false, node2.isComma());
      assertEquals(false, node2.isTypeOf());
      assertEquals(false, node2.hasOneChild());
      assertEquals(false, node2.isInstanceOf());
      assertEquals(0, node2.getChildCount());
      assertEquals(false, node2.isObjectLit());
      assertEquals(false, node2.isVarArgs());
      assertEquals(false, node2.isWhile());
      assertEquals(false, node2.isCatch());
      assertEquals(false, node2.isThis());
      assertEquals(false, node2.isVar());
      assertEquals(false, node2.isNE());
      assertEquals(false, node2.isDec());
      assertEquals(false, node2.isTry());
      assertEquals(false, node2.isCall());
      assertEquals(false, node2.hasChildren());
      assertEquals(false, node2.isFromExterns());
      assertEquals(false, node2.isIn());
      assertEquals(false, node2.isExprResult());
      assertEquals(false, node2.isOnlyModifiesThisCall());
      assertEquals(false, node2.isThrow());
      assertEquals(false, node2.isLabel());
      assertEquals(-1, node2.getLineno());
      assertEquals(false, node2.isIf());
      assertEquals(false, node2.isGetterDef());
      assertEquals(false, node2.isOptionalArg());
      assertFalse(node1.equals((Object)node2));
      assertFalse(node2.equals((Object)node1));
      assertNotSame(node1, node2);
      assertNotSame(node2, node1);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      int int0 = (-872);
      String string0 = "/:C/<.c";
      Node node0 = Node.newString(int0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isContinue());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isFunction());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(-872, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isString());
      assertEquals(-1, node0.getCharno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVarArgs());
      
      Double double0 = NodeUtil.getNumberValue(node0);
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isContinue());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isFunction());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(-872, node0.getType());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isString());
      assertEquals(-1, node0.getCharno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isVarArgs());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      double double0 = (-1568.589);
      int int0 = (-2572);
      Node node0 = Node.newNumber(double0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isEmpty());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isThis());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isTrue());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isWhile());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAssign());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCatch());
      
      String string0 = NodeUtil.getStringValue(node0);
      assertNotNull(string0);
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isEmpty());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isThis());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isTrue());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isWhile());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAssign());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCatch());
      assertEquals("-1568.589", string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      int int0 = 28;
      Node node0 = new Node(int0);
      assertNotNull(node0);
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isName());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetProp());
      assertNull(node0.getSourceFileName());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSwitch());
      assertEquals(28, node0.getType());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDo());
      
      String string0 = NodeUtil.getArrayElementStringValue(node0);
      assertNull(string0);
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isName());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetProp());
      assertNull(node0.getSourceFileName());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSwitch());
      assertEquals(28, node0.getType());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDo());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      double double0 = 282.6364336818813;
      Node node0 = Node.newNumber(double0);
      assertNotNull(node0);
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isParamList());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isReturn());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isRegExp());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isIf());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetterDef());
      
      Node node1 = NodeUtil.newUndefinedNode(node0);
      assertNotNull(node1);
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isThrow());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isOptionalArg());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isWith());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isVarArgs());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isObjectLit());
      assertEquals(122, node1.getType());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isRegExp());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isFalse());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isThis());
      assertEquals(true, node1.isVoid());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isLabel());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isParamList());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isReturn());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isRegExp());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isIf());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetterDef());
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      
      String string0 = NodeUtil.arrayToString(node1);
      assertNotNull(string0);
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isThrow());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isOptionalArg());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isWith());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isVarArgs());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isObjectLit());
      assertEquals(122, node1.getType());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isRegExp());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isFalse());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isThis());
      assertEquals(true, node1.isVoid());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isLabel());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isParamList());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isReturn());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isRegExp());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isIf());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isGetterDef());
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      String string0 = "<<.";
      double double0 = 275.46816437;
      Node node0 = Node.newNumber(double0);
      assertNotNull(node0);
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDebugger());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isWith());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSetterDef());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isInc());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAssign());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetElem());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNE());
      
      Node node1 = NodeUtil.newVarNode(string0, node0);
      assertNotNull(node1);
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isIf());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isCall());
      assertEquals(-1, node1.getLineno());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isDo());
      assertEquals(true, node1.isVar());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isNot());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isGetterDef());
      assertEquals(118, node1.getType());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isReturn());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDebugger());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isWith());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSetterDef());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isInc());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAssign());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetElem());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNE());
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      
      String string1 = NodeUtil.arrayToString(node1);
      assertNull(string1);
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isIf());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isCall());
      assertEquals(-1, node1.getLineno());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isDo());
      assertEquals(true, node1.isVar());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isNot());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isGetterDef());
      assertEquals(118, node1.getType());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isReturn());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDebugger());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isWith());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSetterDef());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isInc());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAssign());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetElem());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNE());
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      long long0 = 0L;
      Node node0 = Node.newNumber((double) long0);
      assertNotNull(node0);
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDebugger());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isTypeOf());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAdd());
      assertEquals(true, node0.isNumber());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNew());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isBlock());
      
      TernaryValue ternaryValue0 = NodeUtil.getImpureBooleanValue(node0);
      assertEquals(TernaryValue.TRUE, ternaryValue0.not());
      assertEquals(0, ternaryValue0.ordinal());
      assertEquals("FALSE", ternaryValue0.name());
      assertEquals("false", ternaryValue0.toString());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDebugger());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isTypeOf());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAdd());
      assertEquals(true, node0.isNumber());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNew());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isBlock());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String string0 = "";
      Node node0 = null;
      Node node1 = NodeUtil.newVarNode(string0, node0);
      assertNotNull(node1);
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isBlock());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isVarArgs());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isNew());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isCall());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isThis());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isArrayLit());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isNE());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isExprResult());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isAnd());
      assertEquals(-1, node1.getLineno());
      assertEquals(true, node1.isVar());
      
      TernaryValue ternaryValue0 = NodeUtil.getPureBooleanValue(node1);
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isBlock());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isVarArgs());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isNew());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isCall());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isThis());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isArrayLit());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isNE());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isExprResult());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isAnd());
      assertEquals(-1, node1.getLineno());
      assertEquals(true, node1.isVar());
      assertEquals(TernaryValue.UNKNOWN, ternaryValue0.not());
      assertEquals("unknown", ternaryValue0.toString());
      assertEquals(2, ternaryValue0.ordinal());
      assertEquals("UNKNOWN", ternaryValue0.name());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String string0 = ":return";
      int int0 = (-1806);
      Node node0 = Node.newString(string0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(40, node0.getType());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCall());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNumber());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNull());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getSideEffectFlags());
      
      TernaryValue ternaryValue0 = NodeUtil.getPureBooleanValue(node0);
      assertEquals(TernaryValue.FALSE, ternaryValue0.not());
      assertEquals("TRUE", ternaryValue0.name());
      assertEquals("true", ternaryValue0.toString());
      assertEquals(1, ternaryValue0.ordinal());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(40, node0.getType());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCall());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNumber());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNull());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getSideEffectFlags());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      int int0 = 8234;
      Node node0 = Node.newNumber((double) int0);
      assertNotNull(node0);
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCall());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInc());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFromExterns());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVar());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isParamList());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isVarArgs());
      
      TernaryValue ternaryValue0 = NodeUtil.getImpureBooleanValue(node0);
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCall());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInc());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFromExterns());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVar());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isParamList());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isVarArgs());
      assertEquals(1, ternaryValue0.ordinal());
      assertEquals("true", ternaryValue0.toString());
      assertEquals("TRUE", ternaryValue0.name());
      assertEquals(TernaryValue.FALSE, ternaryValue0.not());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      boolean boolean0 = false;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertNotNull(node0);
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFunction());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNull());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFromExterns());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDec());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isSetterDef());
      assertEquals(-1, node0.getCharno());
      
      TernaryValue ternaryValue0 = NodeUtil.getImpureBooleanValue(node0);
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFunction());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNull());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFromExterns());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDec());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isSetterDef());
      assertEquals(-1, node0.getCharno());
      assertEquals("FALSE", ternaryValue0.name());
      assertEquals(TernaryValue.TRUE, ternaryValue0.not());
      assertEquals(0, ternaryValue0.ordinal());
      assertEquals("false", ternaryValue0.toString());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      int int0 = (-872);
      String string0 = "/:C/<.c";
      Node node0 = Node.newString(int0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(-872, node0.getType());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVarArgs());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDelProp());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isExprResult());
      
      boolean boolean0 = NodeUtil.isFunctionObjectApply(node0);
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isSwitch());
      assertEquals(-872, node0.getType());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVarArgs());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDelProp());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isExprResult());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      assertNotNull(jqueryCodingConvention0);
      assertEquals("window", jqueryCodingConvention0.getGlobalObject());
      
      String string0 = ".FieldCleaupPassFactory";
      Node node0 = NodeUtil.newQualifiedNameNode((CodingConvention) jqueryCodingConvention0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isEmpty());
      assertEquals(true, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isContinue());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFalse());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFor());
      assertEquals(33, node0.getType());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isWith());
      assertEquals(2, node0.getChildCount());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isTrue());
      assertEquals(true, node0.isGetProp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isArrayLit());
      assertEquals(0, node0.getLength());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFromExterns());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isBreak());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetElem());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isDec());
      assertEquals("window", jqueryCodingConvention0.getGlobalObject());
      
      // Undeclared exception!
      try {
        Node node1 = NodeUtil.getFunctionBody(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      int int0 = 305;
      Node node0 = new Node(int0);
      assertNotNull(node0);
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isReturn());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isVoid());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(305, node0.getType());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWith());
      assertEquals(0, node0.getSideEffectFlags());
      
      // Undeclared exception!
      try {
        Node node1 = NodeUtil.newExpr(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      int int0 = 100;
      String string0 = NodeUtil.opToStrNoFail(int0);
      assertNotNull(string0);
      assertEquals("||", string0);
      
      GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
      assertNotNull(googleCodingConvention0);
      
      Node node0 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(38, node0.getType());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDelProp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isWith());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isCase());
      assertEquals(true, node0.isName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isVarArgs());
      
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
      assertNotNull(nodeUtil_MayBeStringResultPredicate0);
      
      int int1 = NodeUtil.getNodeTypeReferenceCount(node0, int0, nodeUtil_MayBeStringResultPredicate0);
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(38, node0.getType());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDelProp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isWith());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isCase());
      assertEquals(true, node0.isName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isVarArgs());
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      String string0 = "com.google.javascript.jscomp.JSModuleGraph$ModuleDependenceException";
      PrintStream printStream0 = null;
      Compiler compiler0 = new Compiler(printStream0);
      assertNotNull(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      Node node0 = compiler0.parseTestCode(string0);
      assertNotNull(node0);
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTrue());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNull());
      assertEquals(1, node0.getLineno());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isVar());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(true, node0.hasChildren());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFalse());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCall());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isComma());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isRegExp());
      
      Collection<Node> collection0 = NodeUtil.getVarsDeclaredInBranch(node0);
      assertNotNull(collection0);
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTrue());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNull());
      assertEquals(1, node0.getLineno());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isVar());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(true, node0.hasChildren());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFalse());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCall());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isComma());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isRegExp());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String string0 = "mismatch of the {0} property type and the type of the property it overrides from superclass {1}\noriginal: {2}\noverride: {3}";
      Compiler compiler0 = new Compiler();
      assertNotNull(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, string0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOr());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNew());
      assertEquals(true, node0.isScript());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNumber());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSetterDef());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isIf());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(true, compiler0.hasErrors());
      assertEquals(3, compiler0.getErrorCount());
      
      boolean boolean0 = NodeUtil.isFunctionObjectCall(node0);
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOr());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNew());
      assertEquals(true, node0.isScript());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasOneChild());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNumber());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSetterDef());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isIf());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(true, compiler0.hasErrors());
      assertEquals(3, compiler0.getErrorCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      String string0 = "9T{QUzkl'c";
      SyntheticAst syntheticAst0 = new SyntheticAst(string0);
      assertNotNull(syntheticAst0);
      
      AbstractCompiler abstractCompiler0 = null;
      Node node0 = syntheticAst0.getAstRoot(abstractCompiler0);
      assertNotNull(node0);
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.hasChildren());
      assertEquals(true, node0.isScript());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDelProp());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDebugger());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isTypeOf());
      assertEquals("9T{QUzkl'c", node0.getSourceFileName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isHook());
      assertEquals(132, node0.getType());
      
      // Undeclared exception!
      try {
        boolean boolean0 = NodeUtil.isVarArgsFunction(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String string0 = "<=";
      int int0 = 0;
      Node node0 = Node.newString(string0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isStringKey());
      assertEquals(0, node0.getSourcePosition());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isInc());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isHook());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isTypeOf());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getChildCount());
      assertEquals(0, node0.getLineno());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isGetProp());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isContinue());
      
      // Undeclared exception!
      try {
        boolean boolean0 = NodeUtil.functionCallHasSideEffects(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected CALL node, got STRING
         //
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      double double0 = 0.0;
      int int0 = 256;
      Node node0 = Node.newNumber(double0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isFromExterns());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(1048832, node0.getSourcePosition());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFalse());
      assertEquals(256, node0.getLineno());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isContinue());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCatch());
      assertNull(node0.getSourceFileName());
      assertEquals(256, node0.getCharno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIn());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isNE());
      
      boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
      assertEquals(false, node0.isFromExterns());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(1048832, node0.getSourcePosition());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFalse());
      assertEquals(256, node0.getLineno());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isContinue());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCatch());
      assertNull(node0.getSourceFileName());
      assertEquals(256, node0.getCharno());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIn());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isNE());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      int int0 = (-878);
      Node node0 = Node.newNumber((double) int0);
      assertNotNull(node0);
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isGetProp());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabel());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isWith());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetElem());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBreak());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOr());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isInc());
      
      // Undeclared exception!
      try {
        Node node1 = NodeUtil.getArgumentForCallOrNew(node0, int0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      String string0 = ":return";
      int int0 = (-1806);
      Node node0 = Node.newString(string0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isIn());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isTry());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLabel());
      assertEquals(true, node0.isString());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isReturn());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isArrayLit());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isComma());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(40, node0.getType());
      assertEquals(false, node0.isDebugger());
      
      // Undeclared exception!
      try {
        Node node1 = NodeUtil.getFunctionParameters(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      int int0 = 65490;
      String string0 = "<";
      Node node0 = Node.newString(int0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isArrayLit());
      assertEquals(65490, node0.getType());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAssign());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDebugger());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isQuotedString());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCall());
      assertEquals(-1, node0.getCharno());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDelProp());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isOptionalArg());
      
      // Undeclared exception!
      try {
        Node node1 = NodeUtil.getCatchBlock(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      boolean boolean0 = false;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertNotNull(node0);
      assertEquals(false, node0.isTypeOf());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isStringKey());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isInc());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isContinue());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFromExterns());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isGetterDef());
      
      int int0 = 8234;
      // Undeclared exception!
      try {
        Node node1 = NodeUtil.getArgumentForFunction(node0, int0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
      assertNotNull(googleCodingConvention0);
      
      String string0 = "msg.jsdoc.missing.rp";
      Node node0 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isExprResult());
      assertEquals(2, node0.getChildCount());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isString());
      assertEquals(0, node0.getSideEffectFlags());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNumber());
      assertEquals(true, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isComma());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isIn());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(true, node0.isGetProp());
      assertEquals(false, node0.isLabelName());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isCall());
      assertEquals(33, node0.getType());
      assertEquals(false, node0.isGetElem());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThis());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDec());
      
      // Undeclared exception!
      try {
        boolean boolean0 = NodeUtil.constructorCallHasSideEffects(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected NEW node, got GETPROP
         //
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      boolean boolean0 = false;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertNotNull(node0);
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isLabel());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isComma());
      assertEquals(-1, node0.getCharno());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isVar());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isOr());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFor());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTypeOf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAdd());
      
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      assertNotNull(closureCodingConvention0);
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      
      String string0 = "tk@Z";
      Node node1 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, string0, node0, string0);
      assertNotNull(node1);
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isLabel());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isComma());
      assertEquals(-1, node0.getCharno());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isVar());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isOr());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFor());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isTypeOf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAdd());
      assertEquals("goog.abstractMethod", closureCodingConvention0.getAbstractMethodName());
      assertEquals("goog.global", closureCodingConvention0.getGlobalObject());
      assertEquals("goog.exportProperty", closureCodingConvention0.getExportPropertyFunction());
      assertEquals("goog.exportSymbol", closureCodingConvention0.getExportSymbolFunction());
      assertEquals(false, node1.isExprResult());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(false, node1.isGetterDef());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isContinue());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isParamList());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(38, node1.getType());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isNumber());
      assertEquals(true, node1.isName());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isScript());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isNull());
      assertFalse(node0.equals((Object)node1));
      assertFalse(node1.equals((Object)node0));
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      int int0 = (-878);
      Node node0 = Node.newNumber((double) int0);
      assertNotNull(node0);
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isName());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isWith());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFor());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isScript());
      assertEquals(-1, node0.getCharno());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isIn());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isHook());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isCall());
      
      boolean boolean0 = NodeUtil.isConstantName(node0);
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isName());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isWith());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isFor());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isScript());
      assertEquals(-1, node0.getCharno());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isIn());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isHook());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isCall());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      int int0 = 305;
      Node node0 = new Node(int0);
      assertNotNull(node0);
      assertEquals(-1, node0.getLineno());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isThis());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOr());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isWhile());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(305, node0.getType());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLabel());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isObjectLit());
      
      boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
      assertEquals(-1, node0.getLineno());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isThis());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOr());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isWhile());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(305, node0.getType());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLabel());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isObjectLit());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      int int0 = 1896;
      Node node0 = new Node(int0);
      assertNotNull(node0);
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSwitch());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isName());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isSetterDef());
      assertEquals(-1, node0.getLineno());
      assertEquals(1896, node0.getType());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVar());
      
      boolean boolean0 = NodeUtil.canBeSideEffected(node0);
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSwitch());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isName());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLabelName());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isSetterDef());
      assertEquals(-1, node0.getLineno());
      assertEquals(1896, node0.getType());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVar());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      String string0 = "<<.";
      boolean boolean0 = NodeUtil.isValidPropertyName(string0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      int int0 = 127;
      String string0 = "";
      Node node0 = Node.newString(int0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDelProp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isContinue());
      assertEquals(127, node0.getType());
      assertEquals(false, node0.isBreak());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isIn());
      assertEquals(0, node0.getLength());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOr());
      
      boolean boolean0 = NodeUtil.isNameReferenced(node0, string0);
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDelProp());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isContinue());
      assertEquals(127, node0.getType());
      assertEquals(false, node0.isBreak());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isIn());
      assertEquals(0, node0.getLength());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isCall());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOr());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      boolean boolean0 = false;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertNotNull(node0);
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isGetElem());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isEmpty());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNew());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getCharno());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFor());
      
      boolean boolean1 = NodeUtil.evaluatesToLocalValue(node0);
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isGetElem());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isEmpty());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNew());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getCharno());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isThrow());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFor());
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
      assertNotNull(nodeUtil_MatchShallowStatement0);
      
      boolean boolean0 = false;
      Node node0 = NodeUtil.booleanNode(boolean0);
      assertNotNull(node0);
      assertEquals(false, node0.isAdd());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isString());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSwitch());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isIn());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNew());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(-1, node0.getCharno());
      
      String string0 = null;
      boolean boolean1 = NodeUtil.isNameReferenced(node0, string0, nodeUtil_MatchShallowStatement0);
      assertEquals(false, node0.isAdd());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isString());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSwitch());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(true, node0.isFalse());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isIn());
      assertEquals(43, node0.getType());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNew());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(-1, node0.getCharno());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean0 == boolean1);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      String string0 = "com.google.javascript.jscomp.JSModuleGraph$ModuleDependenceException";
      PrintStream printStream0 = null;
      Compiler compiler0 = new Compiler(printStream0);
      assertNotNull(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      Node node0 = compiler0.parseTestCode(string0);
      assertNotNull(node0);
      assertEquals(false, node0.isIf());
      assertEquals(1, node0.getLineno());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isString());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNull());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isBlock());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isWith());
      assertEquals(true, node0.isScript());
      assertEquals(0, node0.getCharno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCase());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isThis());
      assertEquals(132, node0.getType());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isComma());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.hasErrors());
      
      boolean boolean0 = NodeUtil.mayBeString(node0);
      assertEquals(false, node0.isIf());
      assertEquals(1, node0.getLineno());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isString());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isNull());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isBlock());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isWith());
      assertEquals(true, node0.isScript());
      assertEquals(0, node0.getCharno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isCase());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isThis());
      assertEquals(132, node0.getType());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isComma());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.hasErrors());
      assertTrue(boolean0);
  }
}
