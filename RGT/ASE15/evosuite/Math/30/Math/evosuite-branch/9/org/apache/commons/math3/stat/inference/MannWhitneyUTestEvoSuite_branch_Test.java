/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 19:01:00 GMT 2014
 */

package org.apache.commons.math3.stat.inference;

import static org.junit.Assert.*;
import org.junit.Test;
import org.apache.commons.math3.exception.NullArgumentException;
import org.apache.commons.math3.stat.inference.MannWhitneyUTest;
import org.apache.commons.math3.stat.ranking.NaNStrategy;
import org.apache.commons.math3.stat.ranking.TiesStrategy;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
 import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;

 
public class MannWhitneyUTestEvoSuite_branch_Test   {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MannWhitneyUTest mannWhitneyUTest0 = new MannWhitneyUTest();
      assertNotNull(mannWhitneyUTest0);
      
      double[] doubleArray0 = new double[3];
      double[] doubleArray1 = null;
      try {
        double double0 = mannWhitneyUTest0.mannWhitneyUTest(doubleArray0, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NaNStrategy naNStrategy0 = NaNStrategy.REMOVED;
      TiesStrategy tiesStrategy0 = TiesStrategy.MINIMUM;
      MannWhitneyUTest mannWhitneyUTest0 = new MannWhitneyUTest(naNStrategy0, tiesStrategy0);
      assertNotNull(mannWhitneyUTest0);
      
      double[] doubleArray0 = new double[1];
      double[] doubleArray1 = null;
      try {
        double double0 = mannWhitneyUTest0.mannWhitneyUTest(doubleArray1, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NaNStrategy naNStrategy0 = NaNStrategy.REMOVED;
      TiesStrategy tiesStrategy0 = TiesStrategy.MINIMUM;
      MannWhitneyUTest mannWhitneyUTest0 = new MannWhitneyUTest(naNStrategy0, tiesStrategy0);
      assertNotNull(mannWhitneyUTest0);
      
      double[] doubleArray0 = new double[1];
      double double0 = mannWhitneyUTest0.mannWhitneyUTest(doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {0.0}, doubleArray0, 0.01);
      assertEquals(0.31731050786291404, double0, 0.01D);
  }
}
