/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 16:34:33 GMT 2014
 */

package org.jfree.chart.plot;

import static org.junit.Assert.*;
import org.junit.Test;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Paint;
import java.awt.Stroke;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
 import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.renderer.AbstractRenderer;
import org.junit.runner.RunWith;

 
public class ValueMarkerEvoSuite_branch_Test   {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double double0 = (-2570.5);
      ValueMarker valueMarker0 = new ValueMarker(double0);
      assertEquals(0.8F, valueMarker0.getAlpha(), 0.01F);
      assertNull(valueMarker0.getLabel());
      assertEquals((-2570.5), valueMarker0.getValue(), 0.01D);
      assertNotNull(valueMarker0);
      
      double double1 = 15.2006803273224;
      ValueMarker valueMarker1 = new ValueMarker(double1);
      assertFalse(valueMarker1.equals((Object)valueMarker0));
      assertFalse(double1 == double0);
      assertEquals(0.8F, valueMarker1.getAlpha(), 0.01F);
      assertEquals(15.2006803273224, valueMarker1.getValue(), 0.01D);
      assertNull(valueMarker1.getLabel());
      assertNotNull(valueMarker1);
      assertNotSame(valueMarker1, valueMarker0);
      
      boolean boolean0 = valueMarker0.equals((Object) valueMarker1);
      assertFalse(valueMarker1.equals((Object)valueMarker0));
      assertFalse(double0 == double1);
      assertFalse(double1 == double0);
      assertFalse(valueMarker0.equals((Object)valueMarker1));
      assertEquals(0.8F, valueMarker1.getAlpha(), 0.01F);
      assertEquals(15.2006803273224, valueMarker1.getValue(), 0.01D);
      assertNull(valueMarker1.getLabel());
      assertEquals(0.8F, valueMarker0.getAlpha(), 0.01F);
      assertNull(valueMarker0.getLabel());
      assertEquals((-2570.5), valueMarker0.getValue(), 0.01D);
      assertFalse(boolean0);
      assertNotSame(valueMarker1, valueMarker0);
      assertNotSame(valueMarker0, valueMarker1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      double double0 = (-2570.5);
      ValueMarker valueMarker0 = new ValueMarker(double0);
      assertEquals((-2570.5), valueMarker0.getValue(), 0.01D);
      assertEquals(0.8F, valueMarker0.getAlpha(), 0.01F);
      assertNull(valueMarker0.getLabel());
      assertNotNull(valueMarker0);
      
      ValueMarker valueMarker1 = new ValueMarker(double0);
      assertTrue(valueMarker1.equals((Object)valueMarker0));
      assertNull(valueMarker1.getLabel());
      assertEquals(0.8F, valueMarker1.getAlpha(), 0.01F);
      assertEquals((-2570.5), valueMarker1.getValue(), 0.01D);
      assertNotNull(valueMarker1);
      assertNotSame(valueMarker1, valueMarker0);
      
      boolean boolean0 = valueMarker0.equals((Object) valueMarker1);
      assertTrue(valueMarker1.equals((Object)valueMarker0));
      assertTrue(valueMarker0.equals((Object)valueMarker1));
      assertNull(valueMarker1.getLabel());
      assertEquals(0.8F, valueMarker1.getAlpha(), 0.01F);
      assertEquals((-2570.5), valueMarker1.getValue(), 0.01D);
      assertEquals((-2570.5), valueMarker0.getValue(), 0.01D);
      assertEquals(0.8F, valueMarker0.getAlpha(), 0.01F);
      assertNull(valueMarker0.getLabel());
      assertTrue(boolean0);
      assertNotSame(valueMarker1, valueMarker0);
      assertNotSame(valueMarker0, valueMarker1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      double double0 = 12.024385488708871;
      Color color0 = Color.lightGray;
      assertEquals(192, color0.getRed());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals("java.awt.Color[r=192,g=192,b=192]", color0.toString());
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getGreen());
      assertEquals(-4144960, color0.getRGB());
      assertNotNull(color0);
      
      BasicStroke basicStroke0 = (BasicStroke)AbstractRenderer.DEFAULT_OUTLINE_STROKE;
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertNotNull(basicStroke0);
      
      ValueMarker valueMarker0 = new ValueMarker(double0, (Paint) color0, (Stroke) basicStroke0);
      assertEquals(192, color0.getRed());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals("java.awt.Color[r=192,g=192,b=192]", color0.toString());
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getGreen());
      assertEquals(-4144960, color0.getRGB());
      assertEquals(12.024385488708871, valueMarker0.getValue(), 0.01D);
      assertEquals(1.0F, valueMarker0.getAlpha(), 0.01F);
      assertNull(valueMarker0.getLabel());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertNotNull(valueMarker0);
      
      double double1 = valueMarker0.getValue();
      assertTrue(double1 == double0);
      assertTrue(double0 == double1);
      assertEquals(192, color0.getRed());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals("java.awt.Color[r=192,g=192,b=192]", color0.toString());
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getGreen());
      assertEquals(-4144960, color0.getRGB());
      assertEquals(12.024385488708871, valueMarker0.getValue(), 0.01D);
      assertEquals(1.0F, valueMarker0.getAlpha(), 0.01F);
      assertNull(valueMarker0.getLabel());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(12.024385488708871, double1, 0.01D);
      
      boolean boolean0 = valueMarker0.equals((Object) double1);
      assertTrue(double1 == double0);
      assertTrue(double0 == double1);
      assertEquals(192, color0.getRed());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals("java.awt.Color[r=192,g=192,b=192]", color0.toString());
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getGreen());
      assertEquals(-4144960, color0.getRGB());
      assertEquals(12.024385488708871, valueMarker0.getValue(), 0.01D);
      assertEquals(1.0F, valueMarker0.getAlpha(), 0.01F);
      assertNull(valueMarker0.getLabel());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      double double0 = 0.0;
      IntervalMarker intervalMarker0 = new IntervalMarker(double0, double0);
      assertEquals(0.0, intervalMarker0.getStartValue(), 0.01D);
      assertEquals(0.0, intervalMarker0.getEndValue(), 0.01D);
      assertNull(intervalMarker0.getLabel());
      assertEquals(0.8F, intervalMarker0.getAlpha(), 0.01F);
      assertNotNull(intervalMarker0);
      
      ValueMarker valueMarker0 = new ValueMarker(double0);
      assertNull(valueMarker0.getLabel());
      assertEquals(0.8F, valueMarker0.getAlpha(), 0.01F);
      assertEquals(0.0, valueMarker0.getValue(), 0.01D);
      assertNotNull(valueMarker0);
      
      boolean boolean0 = valueMarker0.equals((Object) intervalMarker0);
      assertNull(valueMarker0.getLabel());
      assertEquals(0.8F, valueMarker0.getAlpha(), 0.01F);
      assertEquals(0.0, valueMarker0.getValue(), 0.01D);
      assertEquals(0.0, intervalMarker0.getStartValue(), 0.01D);
      assertEquals(0.0, intervalMarker0.getEndValue(), 0.01D);
      assertNull(intervalMarker0.getLabel());
      assertEquals(0.8F, intervalMarker0.getAlpha(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      double double0 = (-25.588206058232693);
      ValueMarker valueMarker0 = new ValueMarker(double0);
      assertEquals((-25.588206058232693), valueMarker0.getValue(), 0.01D);
      assertNull(valueMarker0.getLabel());
      assertEquals(0.8F, valueMarker0.getAlpha(), 0.01F);
      assertNotNull(valueMarker0);
      
      valueMarker0.setValue(double0);
      assertEquals((-25.588206058232693), valueMarker0.getValue(), 0.01D);
      assertNull(valueMarker0.getLabel());
      assertEquals(0.8F, valueMarker0.getAlpha(), 0.01F);
  }
}
