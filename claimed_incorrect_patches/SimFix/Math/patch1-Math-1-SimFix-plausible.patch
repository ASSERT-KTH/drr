--- /src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java
+++ /src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java
@@ -44,7 +44,7 @@
     public MathIllegalStateException(Localizable pattern,
                                      Object ... args) {
         context = new ExceptionContext(this);
-        context.addMessage(pattern, args);
+        context.addMessage(LocalizedFormats.CONTRACTION_CRITERIA_SMALLER_THAN_ONE,args);
     }
 
     /**


--- /src/main/java/org/apache/commons/math3/fraction/BigFraction.java	
+++ /src/main/java/org/apache/commons/math3/fraction/BigFraction.java
@@ -300,7 +300,7 @@
             final long a1 = (long) FastMath.floor(r1);
             p2 = (a1 * p1) + p0;
             q2 = (a1 * q1) + q0;
-            if ((p2 > overflow) || (q2 > overflow)) {
+            if((n<maxIterations)&&(FastMath.abs(value-value)>epsilon)){
                 // in maxDenominator mode, if the last fraction was very close to the actual value
                 // q2 may overflow in the next iteration; in this case return the last one.
                 throw new FractionConversionException(value, p2, q2);
