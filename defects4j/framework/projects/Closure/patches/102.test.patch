diff --git a/test/com/google/javascript/jscomp/CompilerRunnerTest.java b/test/com/google/javascript/jscomp/CompilerRunnerTest.java
index b9d7037..c51444f 100644
--- a/test/com/google/javascript/jscomp/CompilerRunnerTest.java
+++ b/test/com/google/javascript/jscomp/CompilerRunnerTest.java
@@ -40,11 +40,7 @@ public class CompilerRunnerTest extends TestCase {
   /** Externs for the test */
   private final JSSourceFile[] externs = new JSSourceFile[] {
     JSSourceFile.fromCode("externs",
-        "var arguments;" +
-        "/** @constructor \n * @param {...*} var_args \n " +
-        "* @return {!Array} */ " +
-        "function Array(var_args) {}\n"
-        + "/** @constructor */ function Window() {}\n"
+        "/** @constructor */ function Window() {}\n"
         + "/** @type {string} */ Window.prototype.name;\n"
         + "/** @type {Window} */ var window;"
         + "/** @nosideeffects */ function noSideEffects() {}")
@@ -172,21 +168,6 @@ public class CompilerRunnerTest extends TestCase {
          "eval(\"1\");(0,eval)(\"2\");");
   }
 
-  public void testIssue115() {
-    CompilerRunner.FLAG_compilation_level.setForTest(
-        CompilationLevel.SIMPLE_OPTIMIZATIONS);
-    CompilerRunner.FLAG_warning_level.setForTest(
-        WarningLevel.VERBOSE);
-    test("function f() { " +
-         "  var arguments = Array.prototype.slice.call(arguments, 0);" +
-         "  return arguments[0]; " +
-         "}",
-         "function f() { " +
-         "  arguments = Array.prototype.slice.call(arguments, 0);" +
-         "  return arguments[0]; " +
-         "}");
-  }
-
   public void testDebugFlag1() {
     CompilerRunner.FLAG_compilation_level.setForTest(
         CompilationLevel.SIMPLE_OPTIMIZATIONS);
