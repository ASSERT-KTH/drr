diff --git a/test/com/google/javascript/jscomp/InlineFunctionsTest.java b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
index 2811bc0..d9a413f 100644
--- a/test/com/google/javascript/jscomp/InlineFunctionsTest.java
+++ b/test/com/google/javascript/jscomp/InlineFunctionsTest.java
@@ -383,13 +383,6 @@ public class InlineFunctionsTest extends CompilerTestCase {
         "foo();");
   }
 
-  public void testInlineFunctions31() {
-    // Don't introduce a duplicate label in the same scope
-    test("function foo(){ lab:{4;} }" +
-        "lab:{foo();}",
-        "lab:{{JSCompiler_inline_label_0:{4}}}");
-  }
-
   public void testMixedModeInlining1() {
     // Base line tests, direct inlining
     test("function foo(){return 1}" +
diff --git a/test/com/google/javascript/jscomp/RenameLabelsTest.java b/test/com/google/javascript/jscomp/RenameLabelsTest.java
index 5528113..ccfa8e2 100644
--- a/test/com/google/javascript/jscomp/RenameLabelsTest.java
+++ b/test/com/google/javascript/jscomp/RenameLabelsTest.java
@@ -85,8 +85,4 @@ public class RenameLabelsTest extends CompilerTestCase {
          "a(); while (1) break;");
   }
 
-  public void testRenameReused() {
-    test("foo:{break foo}; foo:{break foo}", "a:{break a};a:{break a}");
-  }
-
 }
