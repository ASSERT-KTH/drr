diff --git a/test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java b/test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java
index d6785b0..4493c8d 100644
--- a/test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java
+++ b/test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java
@@ -285,7 +285,7 @@ public class UnreachableCodeEliminationTest extends CompilerTestCase {
   }
 
   public void testIssue4177428a() {
-    testSame(
+    test(
         "f = function() {\n" +
         "  var action;\n" +
         "  a: {\n" +
@@ -294,15 +294,28 @@ public class UnreachableCodeEliminationTest extends CompilerTestCase {
         "      proto = new Proto\n" +
         "    } finally {\n" +
         "      action = proto;\n" +
-        "      break a\n" +  // Keep this...
+        "      break a\n" +  // Remove this...
         "    }\n" +
         "  }\n" +
-        "  alert(action)\n" + // and this.
-        "};");
+        "  alert(action)\n" + // but not this.
+        "};",
+        "f = function() {\n" +
+        "  var action;\n" +
+        "  a: {\n" +
+        "    var proto = null;\n" +
+        "    try {\n" +
+        "      proto = new Proto\n" +
+        "    } finally {\n" +
+        "      action = proto;\n" +
+        "    }\n" +
+        "  }\n" +
+        "  alert(action)\n" +  // but not this.
+        "};"
+        );
   }
 
   public void testIssue4177428b() {
-    testSame(
+    test(
         "f = function() {\n" +
         "  var action;\n" +
         "  a: {\n" +
@@ -312,17 +325,34 @@ public class UnreachableCodeEliminationTest extends CompilerTestCase {
         "      proto = new Proto\n" +
         "    } finally {\n" +
         "      action = proto;\n" +
-        "      break a\n" +  // Keep this...
+        "      break a\n" +  // Remove this...
         "    }\n" +
         "    } finally {\n" +
         "    }\n" +
         "  }\n" +
-        "  alert(action)\n" + // and this.
-        "};");
+        "  alert(action)\n" + // but not this.
+        "};",
+        "f = function() {\n" +
+        "  var action;\n" +
+        "  a: {\n" +
+        "    var proto = null;\n" +
+        "    try {\n" +
+        "    try {\n" +
+        "      proto = new Proto\n" +
+        "    } finally {\n" +
+        "      action = proto;\n" +
+        "      break a\n" +  // Remove this...
+        "    }\n" +
+        "    } finally {\n" +
+        "    }\n" +
+        "  }\n" +
+        "  alert(action)\n" +  // but not this.
+        "};"
+        );
   }
 
   public void testIssue4177428c() {
-    testSame(
+    test(
         "f = function() {\n" +
         "  var action;\n" +
         "  a: {\n" +
@@ -333,16 +363,32 @@ public class UnreachableCodeEliminationTest extends CompilerTestCase {
         "      proto = new Proto\n" +
         "    } finally {\n" +
         "      action = proto;\n" +
-        "      break a\n" +  // Keep this...
+        "      break a\n" +  // Remove this...
         "    }\n" +
         "    }\n" +
         "  }\n" +
-        "  alert(action)\n" + // and this.
-        "};");
+        "  alert(action)\n" + // but not this.
+        "};",
+        "f = function() {\n" +
+        "  var action;\n" +
+        "  a: {\n" +
+        "    var proto = null;\n" +
+        "    try {\n" +
+        "    } finally {\n" +
+        "    try {\n" +
+        "      proto = new Proto\n" +
+        "    } finally {\n" +
+        "      action = proto;\n" +
+        "    }\n" +
+        "    }\n" +
+        "  }\n" +
+        "  alert(action)\n" +  // but not this.
+        "};"
+        );
   }
 
   public void testIssue4177428_continue() {
-    testSame(
+    test(
         "f = function() {\n" +
         "  var action;\n" +
         "  a: do {\n" +
@@ -351,11 +397,24 @@ public class UnreachableCodeEliminationTest extends CompilerTestCase {
         "      proto = new Proto\n" +
         "    } finally {\n" +
         "      action = proto;\n" +
-        "      continue a\n" +  // Keep this...
+        "      continue a\n" +  // Remove this...
         "    }\n" +
         "  } while(false)\n" +
-        "  alert(action)\n" + // and this.
-        "};");
+        "  alert(action)\n" + // but not this.
+        "};",
+        "f = function() {\n" +
+        "  var action;\n" +
+        "  a: do {\n" +
+        "    var proto = null;\n" +
+        "    try {\n" +
+        "      proto = new Proto\n" +
+        "    } finally {\n" +
+        "      action = proto;\n" +
+        "    }\n" +
+        "  } while (false)\n" +
+        "  alert(action)\n" +
+        "};"
+        );
   }
 
   public void testIssue4177428_return() {
@@ -368,10 +427,10 @@ public class UnreachableCodeEliminationTest extends CompilerTestCase {
         "      proto = new Proto\n" +
         "    } finally {\n" +
         "      action = proto;\n" +
-        "      return\n" +  // Keep this...
+        "      return\n" +  // Remove this...
         "    }\n" +
         "  }\n" +
-        "  alert(action)\n" + // and remove this.
+        "  alert(action)\n" + // and this.
         "};",
         "f = function() {\n" +
         "  var action;\n" +
@@ -381,7 +440,6 @@ public class UnreachableCodeEliminationTest extends CompilerTestCase {
         "      proto = new Proto\n" +
         "    } finally {\n" +
         "      action = proto;\n" +
-        "      return\n" +
         "    }\n" +
         "  }\n" +
         "};"
@@ -412,12 +470,4 @@ public class UnreachableCodeEliminationTest extends CompilerTestCase {
   public void testForInLoop() {
     testSame("for(var x in y) {}");
   }
-
-  public void testDontRemoveBreakInTryFinally() throws Exception {
-    testSame("function f() {b:try{throw 9} finally {break b} return 1;}");
-  }
-
-  public void testDontRemoveBreakInTryFinallySwitch() throws Exception {
-    testSame("function f() {b:try{throw 9} finally {switch(x) {case 1: break b} } return 1;}");
-  }
 }
