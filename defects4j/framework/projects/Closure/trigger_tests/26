--- com.google.javascript.jscomp.CommandLineRunnerTest::testTransformAMDAndProcessCJS
junit.framework.AssertionFailedError: 
Expected: var module$foo$bar={},module$foo$bar={foo:1}
Result: var module$foo$bar={},module$foo$bar={foo:1};module$foo$bar.module$exports&&(module$foo$bar=module$foo$bar.module$exports)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: foo/bar.js] [input_id: InputId: foo/bar.js]
        VAR 1 [source_file: foo/bar.js]
            NAME module$foo$bar 1 [source_file: foo/bar.js]
                OBJECTLIT 1 [source_file: foo/bar.js]
            NAME module$foo$bar 1 [source_file: foo/bar.js]
                OBJECTLIT 1 [source_file: foo/bar.js]
                    STRING_KEY foo 1 [source_file: foo/bar.js]
                        NUMBER 1.0 1 [source_file: foo/bar.js]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: foo/bar.js] [input_id: InputId: foo/bar.js]
        VAR 1 [jsdoc_info: JSDocInfo] [source_file: foo/bar.js]
            NAME module$foo$bar 1 [source_file: foo/bar.js]
                OBJECTLIT 1 [source_file: foo/bar.js]
            NAME module$foo$bar 1 [originalname: exports] [source_file: foo/bar.js]
                OBJECTLIT 1 [source_file: foo/bar.js]
                    STRING_KEY foo 1 [source_file: foo/bar.js]
                        NUMBER 1.0 1 [source_file: foo/bar.js]
        EXPR_RESULT 1 [source_file: foo/bar.js]
            AND 1 [source_file: foo/bar.js]
                GETPROP 1 [source_file: foo/bar.js]
                    NAME module$foo$bar 1 [source_file: foo/bar.js]
                    STRING module$exports 1 [source_file: foo/bar.js]
                ASSIGN 1 [source_file: foo/bar.js]
                    NAME module$foo$bar 1 [source_file: foo/bar.js]
                    GETPROP 1 [source_file: foo/bar.js]
                        NAME module$foo$bar 1 [source_file: foo/bar.js]
                        STRING module$exports 1 [source_file: foo/bar.js]


Subtree1: SCRIPT 1 [synthetic: 1] [source_file: foo/bar.js] [input_id: InputId: foo/bar.js]
    VAR 1 [source_file: foo/bar.js]
        NAME module$foo$bar 1 [source_file: foo/bar.js]
            OBJECTLIT 1 [source_file: foo/bar.js]
        NAME module$foo$bar 1 [source_file: foo/bar.js]
            OBJECTLIT 1 [source_file: foo/bar.js]
                STRING_KEY foo 1 [source_file: foo/bar.js]
                    NUMBER 1.0 1 [source_file: foo/bar.js]


Subtree2: SCRIPT 1 [synthetic: 1] [source_file: foo/bar.js] [input_id: InputId: foo/bar.js]
    VAR 1 [jsdoc_info: JSDocInfo] [source_file: foo/bar.js]
        NAME module$foo$bar 1 [source_file: foo/bar.js]
            OBJECTLIT 1 [source_file: foo/bar.js]
        NAME module$foo$bar 1 [originalname: exports] [source_file: foo/bar.js]
            OBJECTLIT 1 [source_file: foo/bar.js]
                STRING_KEY foo 1 [source_file: foo/bar.js]
                    NUMBER 1.0 1 [source_file: foo/bar.js]
    EXPR_RESULT 1 [source_file: foo/bar.js]
        AND 1 [source_file: foo/bar.js]
            GETPROP 1 [source_file: foo/bar.js]
                NAME module$foo$bar 1 [source_file: foo/bar.js]
                STRING module$exports 1 [source_file: foo/bar.js]
            ASSIGN 1 [source_file: foo/bar.js]
                NAME module$foo$bar 1 [source_file: foo/bar.js]
                GETPROP 1 [source_file: foo/bar.js]
                    NAME module$foo$bar 1 [source_file: foo/bar.js]
                    STRING module$exports 1 [source_file: foo/bar.js]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1109)
	at com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1080)
	at com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1072)
	at com.google.javascript.jscomp.CommandLineRunnerTest.testTransformAMDAndProcessCJS(CommandLineRunnerTest.java:1057)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.CommandLineRunnerTest::testProcessCJS
junit.framework.AssertionFailedError: 
Expected: var module$foo$bar={test:1}
Result: var module$foo$bar={test:1};module$foo$bar.module$exports&&(module$foo$bar=module$foo$bar.module$exports)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: foo/bar.js] [input_id: InputId: foo/bar.js]
        VAR 1 [source_file: foo/bar.js]
            NAME module$foo$bar 1 [source_file: foo/bar.js]
                OBJECTLIT 1 [source_file: foo/bar.js]
                    STRING_KEY test 1 [source_file: foo/bar.js]
                        NUMBER 1.0 1 [source_file: foo/bar.js]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: foo/bar.js] [input_id: InputId: foo/bar.js]
        VAR 1 [source_file: foo/bar.js]
            NAME module$foo$bar 1 [source_file: foo/bar.js]
                OBJECTLIT 1 [source_file: foo/bar.js]
                    STRING_KEY test 1 [source_file: foo/bar.js]
                        NUMBER 1.0 1 [source_file: foo/bar.js]
        EXPR_RESULT 1 [source_file: foo/bar.js]
            AND 1 [source_file: foo/bar.js]
                GETPROP 1 [source_file: foo/bar.js]
                    NAME module$foo$bar 1 [source_file: foo/bar.js]
                    STRING module$exports 1 [source_file: foo/bar.js]
                ASSIGN 1 [source_file: foo/bar.js]
                    NAME module$foo$bar 1 [source_file: foo/bar.js]
                    GETPROP 1 [source_file: foo/bar.js]
                        NAME module$foo$bar 1 [source_file: foo/bar.js]
                        STRING module$exports 1 [source_file: foo/bar.js]


Subtree1: SCRIPT 1 [synthetic: 1] [source_file: foo/bar.js] [input_id: InputId: foo/bar.js]
    VAR 1 [source_file: foo/bar.js]
        NAME module$foo$bar 1 [source_file: foo/bar.js]
            OBJECTLIT 1 [source_file: foo/bar.js]
                STRING_KEY test 1 [source_file: foo/bar.js]
                    NUMBER 1.0 1 [source_file: foo/bar.js]


Subtree2: SCRIPT 1 [synthetic: 1] [source_file: foo/bar.js] [input_id: InputId: foo/bar.js]
    VAR 1 [source_file: foo/bar.js]
        NAME module$foo$bar 1 [source_file: foo/bar.js]
            OBJECTLIT 1 [source_file: foo/bar.js]
                STRING_KEY test 1 [source_file: foo/bar.js]
                    NUMBER 1.0 1 [source_file: foo/bar.js]
    EXPR_RESULT 1 [source_file: foo/bar.js]
        AND 1 [source_file: foo/bar.js]
            GETPROP 1 [source_file: foo/bar.js]
                NAME module$foo$bar 1 [source_file: foo/bar.js]
                STRING module$exports 1 [source_file: foo/bar.js]
            ASSIGN 1 [source_file: foo/bar.js]
                NAME module$foo$bar 1 [source_file: foo/bar.js]
                GETPROP 1 [source_file: foo/bar.js]
                    NAME module$foo$bar 1 [source_file: foo/bar.js]
                    STRING module$exports 1 [source_file: foo/bar.js]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1109)
	at com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1080)
	at com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1072)
	at com.google.javascript.jscomp.CommandLineRunnerTest.testProcessCJS(CommandLineRunnerTest.java:1048)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.ProcessCommonJSModulesTest::testExports
junit.framework.AssertionFailedError: 
Expected: goog.provide("module$test");var module$test={};goog.require("module$name");var name$$module$test=module$name;module$test.foo=1
Result: goog.provide("module$test");var module$test={};goog.require("module$name");var name$$module$test=module$name;module$test.foo=1;if(module$test.module$exports)module$test=module$test.module$exports
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME goog 1 [source_file: expected0]
                    STRING provide 1 [source_file: expected0]
                STRING module$test 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME module$test 1 [source_file: expected0]
                OBJECTLIT 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME goog 1 [source_file: expected0]
                    STRING require 1 [source_file: expected0]
                STRING module$name 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME name$$module$test 1 [source_file: expected0]
                NAME module$name 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME module$test 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: test] [input_id: InputId: test]
        EXPR_RESULT 1 [source_file: test]
            CALL 1 [source_file: test]
                GETPROP 1 [source_file: test]
                    NAME goog 1 [source_file: test]
                    STRING provide 1 [source_file: test]
                STRING module$test 1 [source_file: test]
        VAR 1 [source_file: test]
            NAME module$test 1 [source_file: test]
                OBJECTLIT 1 [source_file: test]
        EXPR_RESULT 1 [source_file: test]
            CALL 1 [source_file: test]
                GETPROP 1 [source_file: test]
                    NAME goog 1 [source_file: test]
                    STRING require 1 [source_file: test]
                STRING module$name 1 [source_file: test]
        VAR 1 [source_file: test]
            NAME name$$module$test 1 [originalname: name] [source_file: test]
                NAME module$name 1 [source_file: test]
        EXPR_RESULT 1 [source_file: test]
            ASSIGN 1 [source_file: test]
                GETPROP 1 [source_file: test]
                    NAME module$test 1 [originalname: exports] [source_file: test]
                    STRING foo 1 [source_file: test]
                NUMBER 1.0 1 [source_file: test]
        IF 1 [source_file: test]
            GETPROP 1 [source_file: test]
                NAME module$test 1 [source_file: test]
                STRING module$exports 1 [source_file: test]
            BLOCK 1 [source_file: test]
                EXPR_RESULT 1 [source_file: test]
                    ASSIGN 1 [source_file: test]
                        NAME module$test 1 [source_file: test]
                        GETPROP 1 [source_file: test]
                            NAME module$test 1 [source_file: test]
                            STRING module$exports 1 [source_file: test]


Subtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                NAME goog 1 [source_file: expected0]
                STRING provide 1 [source_file: expected0]
            STRING module$test 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME module$test 1 [source_file: expected0]
            OBJECTLIT 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                NAME goog 1 [source_file: expected0]
                STRING require 1 [source_file: expected0]
            STRING module$name 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME name$$module$test 1 [source_file: expected0]
            NAME module$name 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                NAME module$test 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            NUMBER 1.0 1 [source_file: expected0]


Subtree2: SCRIPT 1 [synthetic: 1] [source_file: test] [input_id: InputId: test]
    EXPR_RESULT 1 [source_file: test]
        CALL 1 [source_file: test]
            GETPROP 1 [source_file: test]
                NAME goog 1 [source_file: test]
                STRING provide 1 [source_file: test]
            STRING module$test 1 [source_file: test]
    VAR 1 [source_file: test]
        NAME module$test 1 [source_file: test]
            OBJECTLIT 1 [source_file: test]
    EXPR_RESULT 1 [source_file: test]
        CALL 1 [source_file: test]
            GETPROP 1 [source_file: test]
                NAME goog 1 [source_file: test]
                STRING require 1 [source_file: test]
            STRING module$name 1 [source_file: test]
    VAR 1 [source_file: test]
        NAME name$$module$test 1 [originalname: name] [source_file: test]
            NAME module$name 1 [source_file: test]
    EXPR_RESULT 1 [source_file: test]
        ASSIGN 1 [source_file: test]
            GETPROP 1 [source_file: test]
                NAME module$test 1 [originalname: exports] [source_file: test]
                STRING foo 1 [source_file: test]
            NUMBER 1.0 1 [source_file: test]
    IF 1 [source_file: test]
        GETPROP 1 [source_file: test]
            NAME module$test 1 [source_file: test]
            STRING module$exports 1 [source_file: test]
        BLOCK 1 [source_file: test]
            EXPR_RESULT 1 [source_file: test]
                ASSIGN 1 [source_file: test]
                    NAME module$test 1 [source_file: test]
                    GETPROP 1 [source_file: test]
                        NAME module$test 1 [source_file: test]
                        STRING module$exports 1 [source_file: test]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)
	at com.google.javascript.jscomp.ProcessCommonJSModulesTest.testExports(ProcessCommonJSModulesTest.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.ProcessCommonJSModulesTest::testModuleName
junit.framework.AssertionFailedError: 
Expected: goog.provide("module$foo$bar");var module$foo$bar={};goog.require("module$name");var name$$module$foo$bar=module$name
Result: goog.provide("module$foo$bar");var module$foo$bar={};goog.require("module$name");var name$$module$foo$bar=module$name;if(module$foo$bar.module$exports)module$foo$bar=module$foo$bar.module$exports
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME goog 1 [source_file: expected0]
                    STRING provide 1 [source_file: expected0]
                STRING module$foo$bar 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME module$foo$bar 1 [source_file: expected0]
                OBJECTLIT 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME goog 1 [source_file: expected0]
                    STRING require 1 [source_file: expected0]
                STRING module$name 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME name$$module$foo$bar 1 [source_file: expected0]
                NAME module$name 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: foo/bar] [input_id: InputId: foo/bar]
        EXPR_RESULT 1 [source_file: foo/bar]
            CALL 1 [source_file: foo/bar]
                GETPROP 1 [source_file: foo/bar]
                    NAME goog 1 [source_file: foo/bar]
                    STRING provide 1 [source_file: foo/bar]
                STRING module$foo$bar 1 [source_file: foo/bar]
        VAR 1 [source_file: foo/bar]
            NAME module$foo$bar 1 [source_file: foo/bar]
                OBJECTLIT 1 [source_file: foo/bar]
        EXPR_RESULT 1 [source_file: foo/bar]
            CALL 1 [source_file: foo/bar]
                GETPROP 1 [source_file: foo/bar]
                    NAME goog 1 [source_file: foo/bar]
                    STRING require 1 [source_file: foo/bar]
                STRING module$name 1 [source_file: foo/bar]
        VAR 1 [source_file: foo/bar]
            NAME name$$module$foo$bar 1 [originalname: name] [source_file: foo/bar]
                NAME module$name 1 [source_file: foo/bar]
        IF 1 [source_file: foo/bar]
            GETPROP 1 [source_file: foo/bar]
                NAME module$foo$bar 1 [source_file: foo/bar]
                STRING module$exports 1 [source_file: foo/bar]
            BLOCK 1 [source_file: foo/bar]
                EXPR_RESULT 1 [source_file: foo/bar]
                    ASSIGN 1 [source_file: foo/bar]
                        NAME module$foo$bar 1 [source_file: foo/bar]
                        GETPROP 1 [source_file: foo/bar]
                            NAME module$foo$bar 1 [source_file: foo/bar]
                            STRING module$exports 1 [source_file: foo/bar]


Subtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                NAME goog 1 [source_file: expected0]
                STRING provide 1 [source_file: expected0]
            STRING module$foo$bar 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME module$foo$bar 1 [source_file: expected0]
            OBJECTLIT 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                NAME goog 1 [source_file: expected0]
                STRING require 1 [source_file: expected0]
            STRING module$name 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME name$$module$foo$bar 1 [source_file: expected0]
            NAME module$name 1 [source_file: expected0]


Subtree2: SCRIPT 1 [synthetic: 1] [source_file: foo/bar] [input_id: InputId: foo/bar]
    EXPR_RESULT 1 [source_file: foo/bar]
        CALL 1 [source_file: foo/bar]
            GETPROP 1 [source_file: foo/bar]
                NAME goog 1 [source_file: foo/bar]
                STRING provide 1 [source_file: foo/bar]
            STRING module$foo$bar 1 [source_file: foo/bar]
    VAR 1 [source_file: foo/bar]
        NAME module$foo$bar 1 [source_file: foo/bar]
            OBJECTLIT 1 [source_file: foo/bar]
    EXPR_RESULT 1 [source_file: foo/bar]
        CALL 1 [source_file: foo/bar]
            GETPROP 1 [source_file: foo/bar]
                NAME goog 1 [source_file: foo/bar]
                STRING require 1 [source_file: foo/bar]
            STRING module$name 1 [source_file: foo/bar]
    VAR 1 [source_file: foo/bar]
        NAME name$$module$foo$bar 1 [originalname: name] [source_file: foo/bar]
            NAME module$name 1 [source_file: foo/bar]
    IF 1 [source_file: foo/bar]
        GETPROP 1 [source_file: foo/bar]
            NAME module$foo$bar 1 [source_file: foo/bar]
            STRING module$exports 1 [source_file: foo/bar]
        BLOCK 1 [source_file: foo/bar]
            EXPR_RESULT 1 [source_file: foo/bar]
                ASSIGN 1 [source_file: foo/bar]
                    NAME module$foo$bar 1 [source_file: foo/bar]
                    GETPROP 1 [source_file: foo/bar]
                        NAME module$foo$bar 1 [source_file: foo/bar]
                        STRING module$exports 1 [source_file: foo/bar]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)
	at com.google.javascript.jscomp.ProcessCommonJSModulesTest.testModuleName(ProcessCommonJSModulesTest.java:114)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.ProcessCommonJSModulesTest::testDash
junit.framework.AssertionFailedError: 
Expected: goog.provide("module$test_test");var module$test_test={};goog.require("module$name");var name$$module$test_test=module$name;module$test_test.foo=1
Result: goog.provide("module$test_test");var module$test_test={};goog.require("module$name");var name$$module$test_test=module$name;module$test_test.foo=1;if(module$test_test.module$exports)module$test_test=module$test_test.module$exports
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME goog 1 [source_file: expected0]
                    STRING provide 1 [source_file: expected0]
                STRING module$test_test 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME module$test_test 1 [source_file: expected0]
                OBJECTLIT 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME goog 1 [source_file: expected0]
                    STRING require 1 [source_file: expected0]
                STRING module$name 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME name$$module$test_test 1 [source_file: expected0]
                NAME module$name 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME module$test_test 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                NUMBER 1.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: test-test] [input_id: InputId: test-test]
        EXPR_RESULT 1 [source_file: test-test]
            CALL 1 [source_file: test-test]
                GETPROP 1 [source_file: test-test]
                    NAME goog 1 [source_file: test-test]
                    STRING provide 1 [source_file: test-test]
                STRING module$test_test 1 [source_file: test-test]
        VAR 1 [source_file: test-test]
            NAME module$test_test 1 [source_file: test-test]
                OBJECTLIT 1 [source_file: test-test]
        EXPR_RESULT 1 [source_file: test-test]
            CALL 1 [source_file: test-test]
                GETPROP 1 [source_file: test-test]
                    NAME goog 1 [source_file: test-test]
                    STRING require 1 [source_file: test-test]
                STRING module$name 1 [source_file: test-test]
        VAR 1 [source_file: test-test]
            NAME name$$module$test_test 1 [originalname: name] [source_file: test-test]
                NAME module$name 1 [source_file: test-test]
        EXPR_RESULT 1 [source_file: test-test]
            ASSIGN 1 [source_file: test-test]
                GETPROP 1 [source_file: test-test]
                    NAME module$test_test 1 [originalname: exports] [source_file: test-test]
                    STRING foo 1 [source_file: test-test]
                NUMBER 1.0 1 [source_file: test-test]
        IF 1 [source_file: test-test]
            GETPROP 1 [source_file: test-test]
                NAME module$test_test 1 [source_file: test-test]
                STRING module$exports 1 [source_file: test-test]
            BLOCK 1 [source_file: test-test]
                EXPR_RESULT 1 [source_file: test-test]
                    ASSIGN 1 [source_file: test-test]
                        NAME module$test_test 1 [source_file: test-test]
                        GETPROP 1 [source_file: test-test]
                            NAME module$test_test 1 [source_file: test-test]
                            STRING module$exports 1 [source_file: test-test]


Subtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                NAME goog 1 [source_file: expected0]
                STRING provide 1 [source_file: expected0]
            STRING module$test_test 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME module$test_test 1 [source_file: expected0]
            OBJECTLIT 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                NAME goog 1 [source_file: expected0]
                STRING require 1 [source_file: expected0]
            STRING module$name 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME name$$module$test_test 1 [source_file: expected0]
            NAME module$name 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                NAME module$test_test 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            NUMBER 1.0 1 [source_file: expected0]


Subtree2: SCRIPT 1 [synthetic: 1] [source_file: test-test] [input_id: InputId: test-test]
    EXPR_RESULT 1 [source_file: test-test]
        CALL 1 [source_file: test-test]
            GETPROP 1 [source_file: test-test]
                NAME goog 1 [source_file: test-test]
                STRING provide 1 [source_file: test-test]
            STRING module$test_test 1 [source_file: test-test]
    VAR 1 [source_file: test-test]
        NAME module$test_test 1 [source_file: test-test]
            OBJECTLIT 1 [source_file: test-test]
    EXPR_RESULT 1 [source_file: test-test]
        CALL 1 [source_file: test-test]
            GETPROP 1 [source_file: test-test]
                NAME goog 1 [source_file: test-test]
                STRING require 1 [source_file: test-test]
            STRING module$name 1 [source_file: test-test]
    VAR 1 [source_file: test-test]
        NAME name$$module$test_test 1 [originalname: name] [source_file: test-test]
            NAME module$name 1 [source_file: test-test]
    EXPR_RESULT 1 [source_file: test-test]
        ASSIGN 1 [source_file: test-test]
            GETPROP 1 [source_file: test-test]
                NAME module$test_test 1 [originalname: exports] [source_file: test-test]
                STRING foo 1 [source_file: test-test]
            NUMBER 1.0 1 [source_file: test-test]
    IF 1 [source_file: test-test]
        GETPROP 1 [source_file: test-test]
            NAME module$test_test 1 [source_file: test-test]
            STRING module$exports 1 [source_file: test-test]
        BLOCK 1 [source_file: test-test]
            EXPR_RESULT 1 [source_file: test-test]
                ASSIGN 1 [source_file: test-test]
                    NAME module$test_test 1 [source_file: test-test]
                    GETPROP 1 [source_file: test-test]
                        NAME module$test_test 1 [source_file: test-test]
                        STRING module$exports 1 [source_file: test-test]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)
	at com.google.javascript.jscomp.ProcessCommonJSModulesTest.testDash(ProcessCommonJSModulesTest.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.ProcessCommonJSModulesTest::testVarRenaming
junit.framework.AssertionFailedError: 
Expected: goog.provide("module$test");var module$test={};var a$$module$test=1,b$$module$test=2;(function(){var a;b$$module$test=4})()
Result: goog.provide("module$test");var module$test={};var a$$module$test=1,b$$module$test=2;(function(){var a;b$$module$test=4})();if(module$test.module$exports)module$test=module$test.module$exports
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME goog 1 [source_file: expected0]
                    STRING provide 1 [source_file: expected0]
                STRING module$test 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME module$test 1 [source_file: expected0]
                OBJECTLIT 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME a$$module$test 1 [source_file: expected0]
                NUMBER 1.0 1 [source_file: expected0]
            NAME b$$module$test 1 [source_file: expected0]
                NUMBER 2.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                FUNCTION  1 [parenthesized: true] [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        VAR 1 [source_file: expected0]
                            NAME a 1 [source_file: expected0]
                        EXPR_RESULT 1 [source_file: expected0]
                            ASSIGN 1 [source_file: expected0]
                                NAME b$$module$test 1 [source_file: expected0]
                                NUMBER 4.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: test] [input_id: InputId: test]
        EXPR_RESULT 1 [source_file: test]
            CALL 1 [source_file: test]
                GETPROP 1 [source_file: test]
                    NAME goog 1 [source_file: test]
                    STRING provide 1 [source_file: test]
                STRING module$test 1 [source_file: test]
        VAR 1 [source_file: test]
            NAME module$test 1 [source_file: test]
                OBJECTLIT 1 [source_file: test]
        VAR 1 [source_file: test]
            NAME a$$module$test 1 [originalname: a] [source_file: test]
                NUMBER 1.0 1 [source_file: test]
            NAME b$$module$test 1 [originalname: b] [source_file: test]
                NUMBER 2.0 1 [source_file: test]
        EXPR_RESULT 1 [source_file: test]
            CALL 1 [free_call: 1] [source_file: test]
                FUNCTION  1 [parenthesized: true] [source_file: test]
                    NAME  1 [source_file: test]
                    PARAM_LIST 1 [source_file: test]
                    BLOCK 1 [source_file: test]
                        VAR 1 [source_file: test]
                            NAME a 1 [source_file: test]
                        EXPR_RESULT 1 [source_file: test]
                            ASSIGN 1 [source_file: test]
                                NAME b$$module$test 1 [originalname: b] [source_file: test]
                                NUMBER 4.0 1 [source_file: test]
        IF 1 [source_file: test]
            GETPROP 1 [source_file: test]
                NAME module$test 1 [source_file: test]
                STRING module$exports 1 [source_file: test]
            BLOCK 1 [source_file: test]
                EXPR_RESULT 1 [source_file: test]
                    ASSIGN 1 [source_file: test]
                        NAME module$test 1 [source_file: test]
                        GETPROP 1 [source_file: test]
                            NAME module$test 1 [source_file: test]
                            STRING module$exports 1 [source_file: test]


Subtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                NAME goog 1 [source_file: expected0]
                STRING provide 1 [source_file: expected0]
            STRING module$test 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME module$test 1 [source_file: expected0]
            OBJECTLIT 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME a$$module$test 1 [source_file: expected0]
            NUMBER 1.0 1 [source_file: expected0]
        NAME b$$module$test 1 [source_file: expected0]
            NUMBER 2.0 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [free_call: 1] [source_file: expected0]
            FUNCTION  1 [parenthesized: true] [source_file: expected0]
                NAME  1 [source_file: expected0]
                PARAM_LIST 1 [source_file: expected0]
                BLOCK 1 [source_file: expected0]
                    VAR 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]
                    EXPR_RESULT 1 [source_file: expected0]
                        ASSIGN 1 [source_file: expected0]
                            NAME b$$module$test 1 [source_file: expected0]
                            NUMBER 4.0 1 [source_file: expected0]


Subtree2: SCRIPT 1 [synthetic: 1] [source_file: test] [input_id: InputId: test]
    EXPR_RESULT 1 [source_file: test]
        CALL 1 [source_file: test]
            GETPROP 1 [source_file: test]
                NAME goog 1 [source_file: test]
                STRING provide 1 [source_file: test]
            STRING module$test 1 [source_file: test]
    VAR 1 [source_file: test]
        NAME module$test 1 [source_file: test]
            OBJECTLIT 1 [source_file: test]
    VAR 1 [source_file: test]
        NAME a$$module$test 1 [originalname: a] [source_file: test]
            NUMBER 1.0 1 [source_file: test]
        NAME b$$module$test 1 [originalname: b] [source_file: test]
            NUMBER 2.0 1 [source_file: test]
    EXPR_RESULT 1 [source_file: test]
        CALL 1 [free_call: 1] [source_file: test]
            FUNCTION  1 [parenthesized: true] [source_file: test]
                NAME  1 [source_file: test]
                PARAM_LIST 1 [source_file: test]
                BLOCK 1 [source_file: test]
                    VAR 1 [source_file: test]
                        NAME a 1 [source_file: test]
                    EXPR_RESULT 1 [source_file: test]
                        ASSIGN 1 [source_file: test]
                            NAME b$$module$test 1 [originalname: b] [source_file: test]
                            NUMBER 4.0 1 [source_file: test]
    IF 1 [source_file: test]
        GETPROP 1 [source_file: test]
            NAME module$test 1 [source_file: test]
            STRING module$exports 1 [source_file: test]
        BLOCK 1 [source_file: test]
            EXPR_RESULT 1 [source_file: test]
                ASSIGN 1 [source_file: test]
                    NAME module$test 1 [source_file: test]
                    GETPROP 1 [source_file: test]
                        NAME module$test 1 [source_file: test]
                        STRING module$exports 1 [source_file: test]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)
	at com.google.javascript.jscomp.ProcessCommonJSModulesTest.testVarRenaming(ProcessCommonJSModulesTest.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
--- com.google.javascript.jscomp.ProcessCommonJSModulesTest::testWithoutExports
junit.framework.AssertionFailedError: 
Expected: goog.provide("module$test");var module$test={};goog.require("module$name");var name$$module$test=module$name;name$$module$test()
Result: goog.provide("module$test");var module$test={};goog.require("module$name");var name$$module$test=module$name;name$$module$test();if(module$test.module$exports)module$test=module$test.module$exports
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME goog 1 [source_file: expected0]
                    STRING provide 1 [source_file: expected0]
                STRING module$test 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME module$test 1 [source_file: expected0]
                OBJECTLIT 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME goog 1 [source_file: expected0]
                    STRING require 1 [source_file: expected0]
                STRING module$name 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME name$$module$test 1 [source_file: expected0]
                NAME module$name 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME name$$module$test 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: test] [input_id: InputId: test]
        EXPR_RESULT 1 [source_file: test]
            CALL 1 [source_file: test]
                GETPROP 1 [source_file: test]
                    NAME goog 1 [source_file: test]
                    STRING provide 1 [source_file: test]
                STRING module$test 1 [source_file: test]
        VAR 1 [source_file: test]
            NAME module$test 1 [source_file: test]
                OBJECTLIT 1 [source_file: test]
        EXPR_RESULT 1 [source_file: test]
            CALL 1 [source_file: test]
                GETPROP 1 [source_file: test]
                    NAME goog 1 [source_file: test]
                    STRING require 1 [source_file: test]
                STRING module$name 1 [source_file: test]
        VAR 1 [source_file: test]
            NAME name$$module$test 1 [originalname: name] [source_file: test]
                NAME module$name 1 [source_file: test]
        EXPR_RESULT 1 [source_file: test]
            CALL 1 [free_call: 1] [source_file: test]
                NAME name$$module$test 1 [originalname: name] [source_file: test]
        IF 1 [source_file: test]
            GETPROP 1 [source_file: test]
                NAME module$test 1 [source_file: test]
                STRING module$exports 1 [source_file: test]
            BLOCK 1 [source_file: test]
                EXPR_RESULT 1 [source_file: test]
                    ASSIGN 1 [source_file: test]
                        NAME module$test 1 [source_file: test]
                        GETPROP 1 [source_file: test]
                            NAME module$test 1 [source_file: test]
                            STRING module$exports 1 [source_file: test]


Subtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                NAME goog 1 [source_file: expected0]
                STRING provide 1 [source_file: expected0]
            STRING module$test 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME module$test 1 [source_file: expected0]
            OBJECTLIT 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                NAME goog 1 [source_file: expected0]
                STRING require 1 [source_file: expected0]
            STRING module$name 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME name$$module$test 1 [source_file: expected0]
            NAME module$name 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [free_call: 1] [source_file: expected0]
            NAME name$$module$test 1 [source_file: expected0]


Subtree2: SCRIPT 1 [synthetic: 1] [source_file: test] [input_id: InputId: test]
    EXPR_RESULT 1 [source_file: test]
        CALL 1 [source_file: test]
            GETPROP 1 [source_file: test]
                NAME goog 1 [source_file: test]
                STRING provide 1 [source_file: test]
            STRING module$test 1 [source_file: test]
    VAR 1 [source_file: test]
        NAME module$test 1 [source_file: test]
            OBJECTLIT 1 [source_file: test]
    EXPR_RESULT 1 [source_file: test]
        CALL 1 [source_file: test]
            GETPROP 1 [source_file: test]
                NAME goog 1 [source_file: test]
                STRING require 1 [source_file: test]
            STRING module$name 1 [source_file: test]
    VAR 1 [source_file: test]
        NAME name$$module$test 1 [originalname: name] [source_file: test]
            NAME module$name 1 [source_file: test]
    EXPR_RESULT 1 [source_file: test]
        CALL 1 [free_call: 1] [source_file: test]
            NAME name$$module$test 1 [originalname: name] [source_file: test]
    IF 1 [source_file: test]
        GETPROP 1 [source_file: test]
            NAME module$test 1 [source_file: test]
            STRING module$exports 1 [source_file: test]
        BLOCK 1 [source_file: test]
            EXPR_RESULT 1 [source_file: test]
                ASSIGN 1 [source_file: test]
                    NAME module$test 1 [source_file: test]
                    GETPROP 1 [source_file: test]
                        NAME module$test 1 [source_file: test]
                        STRING module$exports 1 [source_file: test]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)
	at com.google.javascript.jscomp.ProcessCommonJSModulesTest.testWithoutExports(ProcessCommonJSModulesTest.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1478)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:860)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1967)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:812)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2270)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
