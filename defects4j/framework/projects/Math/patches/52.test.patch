diff --git a/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java b/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java
index fe125ce..b8c11c3 100644
--- a/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java
+++ b/src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java
@@ -17,6 +17,11 @@
 
 package org.apache.commons.math.geometry.euclidean.threed;
 
+import org.apache.commons.math.geometry.euclidean.threed.CardanEulerSingularityException;
+import org.apache.commons.math.geometry.euclidean.threed.NotARotationMatrixException;
+import org.apache.commons.math.geometry.euclidean.threed.Rotation;
+import org.apache.commons.math.geometry.euclidean.threed.RotationOrder;
+import org.apache.commons.math.geometry.euclidean.threed.Vector3D;
 import org.apache.commons.math.util.FastMath;
 import org.apache.commons.math.util.MathUtils;
 import org.junit.Assert;
@@ -476,21 +481,6 @@ public class RotationTest {
 
   }
 
-  @Test
-  public void testIssue639(){
-      Vector3D u1 = new Vector3D(-1321008684645961.0 /  268435456.0,
-                                 -5774608829631843.0 /  268435456.0,
-                                 -3822921525525679.0 / 4294967296.0);
-      Vector3D u2 =new Vector3D( -5712344449280879.0 /    2097152.0,
-                                 -2275058564560979.0 /    1048576.0,
-                                  4423475992255071.0 /      65536.0);
-      Rotation rot = new Rotation(u1, u2, Vector3D.PLUS_I,Vector3D.PLUS_K);
-      Assert.assertEquals( 0.6228370359608200639829222, rot.getQ0(), 1.0e-15);
-      Assert.assertEquals( 0.0257707621456498790029987, rot.getQ1(), 1.0e-15);
-      Assert.assertEquals(-0.0000000002503012255839931, rot.getQ2(), 1.0e-15);
-      Assert.assertEquals(-0.7819270390861109450724902, rot.getQ3(), 1.0e-15);
-  }
-
   private void checkVector(Vector3D v1, Vector3D v2) {
     Assert.assertTrue(v1.subtract(v2).getNorm() < 1.0e-10);
   }
