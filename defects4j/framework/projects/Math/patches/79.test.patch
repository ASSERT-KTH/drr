diff --git a/src/test/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClustererTest.java b/src/test/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClustererTest.java
index dfe89ad..da1d8a9 100644
--- a/src/test/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClustererTest.java
+++ b/src/test/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClustererTest.java
@@ -93,27 +93,5 @@ public class KMeansPlusPlusClustererTest {
         assertTrue(cluster3Found);
 
     }
-    
-    /**
-     * JIRA: MATH-305
-     * 
-     * Two points, one cluster, one iteration
-     */
-    @Test
-    public void testPerformClusterAnalysisDegenerate() {
-        KMeansPlusPlusClusterer<EuclideanIntegerPoint> transformer = new KMeansPlusPlusClusterer<EuclideanIntegerPoint>(
-                new Random(1746432956321l));
-        EuclideanIntegerPoint[] points = new EuclideanIntegerPoint[] {
-                new EuclideanIntegerPoint(new int[] { 1959, 325100 }),
-                new EuclideanIntegerPoint(new int[] { 1960, 373200 }), };
-        List<Cluster<EuclideanIntegerPoint>> clusters = transformer.cluster(Arrays.asList(points), 1, 1);
-        assertEquals(1, clusters.size());
-        assertEquals(2, (clusters.get(0).getPoints().size()));
-        EuclideanIntegerPoint pt1 = new EuclideanIntegerPoint(new int[] { 1959, 325100 });
-        EuclideanIntegerPoint pt2 = new EuclideanIntegerPoint(new int[] { 1960, 373200 });
-        assertTrue(clusters.get(0).getPoints().contains(pt1));
-        assertTrue(clusters.get(0).getPoints().contains(pt2));
-
-    } 
 
 }
