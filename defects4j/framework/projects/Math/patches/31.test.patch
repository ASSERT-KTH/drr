diff --git a/src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java b/src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java
index 0844d60..188efd1 100644
--- a/src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java
+++ b/src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java
@@ -129,17 +129,4 @@ public class BinomialDistributionTest extends IntegerDistributionAbstractTest {
         Assert.assertEquals(dist.getNumericalVariance(), 30d * 0.3d * (1d - 0.3d), tol);
     }
 
-    @Test
-    public void testMath718() {
-        // for large trials the evaluation of ContinuedFraction was inaccurate
-        // do a sweep over several large trials to test if the current implementation is
-        // numerically stable.
-
-        for (int trials = 500000; trials < 20000000; trials += 100000) {
-            BinomialDistribution dist = new BinomialDistribution(trials, 0.5);
-            int p = dist.inverseCumulativeProbability(0.5);
-            Assert.assertEquals(trials / 2, p);
-        }
-
-    }
 }
diff --git a/src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java b/src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java
index 82b345c..ce73502 100644
--- a/src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java
+++ b/src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java
@@ -142,18 +142,4 @@ public class FDistributionTest extends RealDistributionAbstractTest {
         Assert.assertEquals(dist.getNumericalMean(), 5d / (5d - 2d), tol);
         Assert.assertEquals(dist.getNumericalVariance(), (2d * 5d * 5d * 4d) / 9d, tol);
     }
-
-    @Test
-    public void testMath785() {
-        // this test was failing due to inaccurate results from ContinuedFraction.
-
-        try {
-            double prob = 0.01;
-            FDistribution f = new FDistribution(200000, 200000);
-            double result = f.inverseCumulativeProbability(prob);
-            Assert.assertTrue(result < 1.0);
-        } catch (Exception e) {
-            Assert.fail("Failing to calculate inverse cumulative probability");
-        }
-    }
 }
