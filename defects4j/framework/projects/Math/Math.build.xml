<!--
Copyright (c) 2014-2017 RenÃ© Just, Darioush Jalali, and Defects4J contributors.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

################################################################################
               This is the project-specific build file for Math.

It defines project-specific properties and targets, and imports the build file
of the checked-out project version.
#############################################################################-->
<project name="D4J-Math">
    <!-- Include existing project build file -->
    <import file="${d4j.workdir}/build.xml"/>

    <!-- build.home is not set in old repository layout -->
    <property name="build.home" value="${classesdir}/.." />
    <property name="classes.dir" value="${build.home}/classes" />

    <!-- Directory of the test sources, the default is the directory of the
         existing tests -->
    <property name="d4j.test.dir" value="${test.home}"/>

    <!-- Fixing ant script in case compile-tests is defined instead of compile.tests -->
    <scriptdef name="hastarget" language="javascript">
         <attribute name="targetname" />
     <attribute name="newtargetname" />
     <attribute name="setproperty" />
         <![CDATA[
           var targetname = attributes.get("targetname");
       var newtargetname = attributes.get("newtargetname");
       var setproperty = attributes.get("setproperty");
       if(project.getTargets().containsKey(targetname)) {
        var newTarget = new org.apache.tools.ant.Target();
        newTarget.addDependency(targetname);
        newTarget.setName(newtargetname);
            project.addTarget(newtargetname, newTarget);
        project.setProperty(setproperty, "yes");
        }
         ]]>
    </scriptdef>

    <hastarget targetname="compile-tests" newtargetname="compile.tests" setproperty="oldLayout" />
    <path id="build.classpath">
    <pathelement location="${d4j.home}/framework/projects/Math/lib/commons-discovery-0.5.jar" />
    </path>
    <if> <isset property="oldLayout" /> <then>
        <property name ="test.home" value="${d4j.workdir}/src/test" />
        <property name ="build.home" value="${defaulttargetdir}" />
        <property name="noget" value="true" />
        <path id="test.classpath">
            <pathelement path="${testclassesdir}" />
                <pathelement path="${classesdir}" />
                <pathelement path="${junit.jar}" />
        </path>
        <path id="compile.classpath">
            <pathelement path="${classesdir}" />
        </path>

    </then> </if>
    <!-- end of fixing ant script -->

    <!-- List of all developer-written tests that reliably pass on the fixed version -->
    <fileset id="all.manual.tests" dir="${test.home}" excludes="${d4j.tests.exclude}">
        <include name="**/*Test.java"/>
        <include name="**/*TestBinary.java"/>
        <include name="**/*TestPermutations.java"/>
        <exclude name="**/random/*.java"/>
        <exclude name="**/*Abstract*Test.java"/>
    </fileset>

    <!-- Classpath to run developer-written tests -->
    <path id="d4j.test.classpath">
        <path refid="test.classpath"/>
        <pathelement path="${junit.jar}" />
    </path>
</project>
