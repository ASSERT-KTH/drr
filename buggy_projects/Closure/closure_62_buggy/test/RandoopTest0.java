
import junit.framework.*;

public class RandoopTest0 extends TestCase {

  public static boolean debug = false;

  public void test1() {}
//   public void test1() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test1"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     java.lang.String[] var4 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var5 = com.google.javascript.jscomp.JSError.make("hi!", var1, var2, var4);
// 
//   }

  public void test2() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test2"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test3() {}
//   public void test3() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test3"); }
// 
// 
//     com.google.javascript.jscomp.SourceExcerptProvider var0 = null;
//     com.google.javascript.jscomp.SourceExcerptProvider.SourceExcerpt var1 = null;
//     com.google.javascript.jscomp.LightweightMessageFormatter var2 = new com.google.javascript.jscomp.LightweightMessageFormatter(var0, var1);
// 
//   }

  public void test4() {}
//   public void test4() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test4"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "");
// 
//   }

  public void test5() {}
//   public void test5() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test5"); }
// 
// 
//     com.google.javascript.jscomp.SourceExcerptProvider var0 = null;
//     com.google.javascript.jscomp.LightweightMessageFormatter var1 = new com.google.javascript.jscomp.LightweightMessageFormatter(var0);
// 
//   }

  public void test6() {}
//   public void test6() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test6"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var4, "hi!");
//     java.lang.String var7 = var6.toString();
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     int var12 = var6.compareTo(var11);
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var18, "hi!");
//     java.lang.String var21 = var20.toString();
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("", var23, "hi!");
//     int var26 = var20.compareTo(var25);
//     com.google.javascript.rhino.Node var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var33 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", var28, var31, var33);
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var16, var20, var33);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("", var1, var2, var11, var33);
// 
//   }

  public void test7() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test7"); }


    com.google.javascript.jscomp.CheckLevel[] var0 = com.google.javascript.jscomp.CheckLevel.values();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var0);

  }

  public void test8() {}
//   public void test8() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test8"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
// 
//   }

  public void test9() {}
//   public void test9() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test9"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var0 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var6, "hi!");
//     java.lang.String var9 = var8.toString();
//     com.google.javascript.jscomp.CheckLevel var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.make("", var11, "hi!");
//     int var14 = var8.compareTo(var13);
//     com.google.javascript.rhino.Node var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var21 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", var16, var19, var21);
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var4, var8, var21);
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make(var0, var21);
// 
//   }

  public void test10() {}
//   public void test10() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test10"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!");
// 
//   }

  public void test11() {}
//   public void test11() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test11"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var12 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var13 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var7, var10, var12);
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("", var1, var2, var3, var12);
// 
//   }

  public void test12() {}
//   public void test12() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test12"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var19 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var14, var17, var19);
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 100, var10, var19);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("", (-64), 1, var3, var4, var19);
// 
//   }

  public void test13() {}
//   public void test13() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test13"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var3, var12, var20);
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.MessageFormatter var24 = null;
//     java.lang.String var25 = var22.format(var23, var24);
// 
//   }

  public void test14() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test14"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test15() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test15"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test16() {}
//   public void test16() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test16"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!");
// 
//   }

  public void test17() {}
//   public void test17() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test17"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!");
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var15 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var16 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var15);
//     boolean var18 = var13.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var27 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var22, var25, var27);
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var8, var13, var27);
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("", var1, var2, var6, var27);
// 
//   }

  public void test18() {}
//   public void test18() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test18"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var4, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var12, "hi!");
//     java.lang.String var15 = var14.toString();
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
//     int var20 = var14.compareTo(var19);
//     com.google.javascript.rhino.Node var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var27 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var22, var25, var27);
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var10, var14, var27);
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", var1, var2, var6, var27);
// 
//   }

  public void test19() {}
//   public void test19() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test19"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var6 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var7 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var6);
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.MessageFormatter var9 = null;
//     java.lang.String var10 = var7.format(var8, var9);
// 
//   }

  public void test20() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test20"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test21() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test21"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!. hi! at hi!: hi! line 0 : 3");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test22() {}
//   public void test22() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test22"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var4, "hi!");
//     java.lang.String var7 = var6.toString();
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     int var12 = var6.compareTo(var11);
//     java.lang.String[] var13 = null;
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make(var6, var13);
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var18 = var6.compareTo(var17);
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var33 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var28, var31, var33);
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 100, var24, var33);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var1, var2, var6, var33);
// 
//   }

  public void test23() {}
//   public void test23() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test23"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var1, "hi!");
//     java.lang.String var4 = var3.toString();
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.make("", var6, "hi!");
//     int var9 = var3.compareTo(var8);
//     java.lang.String[] var10 = null;
//     com.google.javascript.jscomp.JSError var11 = com.google.javascript.jscomp.JSError.make(var3, var10);
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.MessageFormatter var13 = null;
//     java.lang.String var14 = var11.format(var12, var13);
// 
//   }

  public void test24() {}
//   public void test24() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test24"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     java.lang.String[] var3 = null;
//     com.google.javascript.jscomp.JSError var4 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, var2, var3);
// 
//   }

  public void test25() {}
//   public void test25() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test25"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var14 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var9, var12, var14);
//     com.google.javascript.jscomp.JSError var16 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 100, var5, var14);
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.MessageFormatter var18 = null;
//     java.lang.String var19 = var16.format(var17, var18);
// 
//   }

  public void test26() {}
//   public void test26() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test26"); }
// 
// 
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var11 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var12 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var11);
//     boolean var14 = var9.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var18, var21, var23);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var4, var9, var23);
//     com.google.javascript.rhino.Node var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var37 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var37);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var27, var30, var37);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var9, var37);
//     com.google.javascript.rhino.Node var45 = null;
//     com.google.javascript.rhino.Node var47 = null;
//     com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var52 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", var47, var50, var52);
//     boolean var55 = var50.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var59 = null;
//     com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var64 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var59, var62, var64);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!", var45, var50, var64);
//     com.google.javascript.rhino.Node var68 = null;
//     com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var73 = null;
//     com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var78 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!", var73, var76, var78);
//     com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var68, var71, var78);
//     com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var50, var78);
//     com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make(var9, var78);
//     com.google.javascript.jscomp.CheckLevel var83 = null;
//     com.google.javascript.jscomp.MessageFormatter var84 = null;
//     java.lang.String var85 = var82.format(var83, var84);
// 
//   }

  public void test27() {}
//   public void test27() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test27"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!: hi!");
// 
//   }

  public void test28() {}
//   public void test28() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test28"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var17 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var12, var15, var17);
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 100, var8, var17);
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var21, "hi!");
//     java.lang.String var24 = var23.toString();
//     com.google.javascript.jscomp.CheckLevel var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.make("", var26, "hi!");
//     int var29 = var23.compareTo(var28);
//     int var30 = var8.compareTo(var28);
//     com.google.javascript.rhino.Node var35 = null;
//     com.google.javascript.rhino.Node var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var42 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", var37, var40, var42);
//     boolean var45 = var40.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var49 = null;
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var54 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var49, var52, var54);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", var35, var40, var54);
//     com.google.javascript.rhino.Node var58 = null;
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var63 = null;
//     com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var68 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!", var63, var66, var68);
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var58, var61, var68);
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var40, var68);
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100", var1, var2, var28, var68);
// 
//   }

  public void test29() {}
//   public void test29() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test29"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var8, "hi!");
//     java.lang.String var11 = var10.toString();
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var17, "hi!");
//     java.lang.String var20 = var19.toString();
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("", var22, "hi!");
//     int var25 = var19.compareTo(var24);
//     java.lang.String[] var26 = null;
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make(var19, var26);
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var31 = var19.compareTo(var30);
//     com.google.javascript.rhino.Node var33 = null;
//     com.google.javascript.rhino.Node var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var40 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", var35, var38, var40);
//     boolean var43 = var38.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var47 = null;
//     com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var52 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var47, var50, var52);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", var33, var38, var52);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var15, var30, var52);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 8, var6, var10, var52);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", var1, var2, var52);
// 
//   }

  public void test30() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test30"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("", "");
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
    com.google.javascript.jscomp.CheckLevel var12 = null;
    com.google.javascript.jscomp.CheckLevel var14 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var14, "hi!");
    java.lang.String var17 = var16.toString();
    com.google.javascript.jscomp.CheckLevel var19 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
    int var22 = var16.compareTo(var21);
    java.lang.String[] var23 = null;
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make(var16, var23);
    com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var28 = var16.compareTo(var27);
    com.google.javascript.rhino.Node var30 = null;
    com.google.javascript.jscomp.CheckLevel var34 = null;
    com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var39 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var34, var37, var39);
    com.google.javascript.jscomp.CheckLevel var44 = null;
    com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var49 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var44, var47, var49);
    com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var30, var37, var49);
    com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("", 0, 1, var12, var27, var49);
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make(var8, var49);
    com.google.javascript.jscomp.CheckLevel var57 = null;
    com.google.javascript.jscomp.CheckLevel var59 = null;
    com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var59, "hi!");
    java.lang.String var62 = var61.toString();
    com.google.javascript.jscomp.CheckLevel var64 = null;
    com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.make("", var64, "hi!");
    int var67 = var61.compareTo(var66);
    java.lang.String[] var68 = null;
    com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make(var61, var68);
    com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var73 = var61.compareTo(var72);
    com.google.javascript.rhino.Node var75 = null;
    com.google.javascript.rhino.Node var77 = null;
    com.google.javascript.jscomp.DiagnosticType var80 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var82 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!", var77, var80, var82);
    boolean var85 = var80.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var89 = null;
    com.google.javascript.jscomp.DiagnosticType var92 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var94 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var89, var92, var94);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("hi!", var75, var80, var94);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var57, var72, var94);
    com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make("hi!", 5, 5, var8, var94);
    com.google.javascript.jscomp.JSError var99 = com.google.javascript.jscomp.JSError.make(var2, var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "hi!: hi!"+ "'", var17.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "hi!: hi!"+ "'", var62.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var99);

  }

  public void test31() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test31"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var15, "hi!");
    java.lang.String var18 = var17.toString();
    com.google.javascript.jscomp.CheckLevel var20 = null;
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("", var20, "hi!");
    int var23 = var17.compareTo(var22);
    java.lang.String[] var24 = null;
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make(var17, var24);
    com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var29 = var17.compareTo(var28);
    com.google.javascript.rhino.Node var31 = null;
    com.google.javascript.jscomp.CheckLevel var35 = null;
    com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var40 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var35, var38, var40);
    com.google.javascript.jscomp.CheckLevel var45 = null;
    com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var50 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var45, var48, var50);
    com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var31, var38, var50);
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("", 0, 1, var13, var28, var50);
    com.google.javascript.jscomp.CheckLevel var57 = null;
    com.google.javascript.jscomp.CheckLevel var59 = null;
    com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var59, "hi!");
    java.lang.String var62 = var61.toString();
    com.google.javascript.jscomp.CheckLevel var64 = null;
    com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.make("", var64, "hi!");
    int var67 = var61.compareTo(var66);
    java.lang.String[] var68 = null;
    com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make(var61, var68);
    com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var73 = var61.compareTo(var72);
    com.google.javascript.rhino.Node var75 = null;
    com.google.javascript.rhino.Node var77 = null;
    com.google.javascript.jscomp.DiagnosticType var80 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var82 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!", var77, var80, var82);
    boolean var85 = var80.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var89 = null;
    com.google.javascript.jscomp.DiagnosticType var92 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var94 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var89, var92, var94);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("hi!", var75, var80, var94);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var57, var72, var94);
    com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make("hi!", 10, 10, var28, var94);
    com.google.javascript.jscomp.JSError var99 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", (-8), 5, var3, var6, var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "hi!: hi!"+ "'", var18.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "hi!: hi!"+ "'", var62.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var99);

  }

  public void test32() {}
//   public void test32() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test32"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100");
// 
//   }

  public void test33() {}
//   public void test33() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test33"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var4, "hi!");
//     java.lang.String var7 = var6.toString();
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     int var12 = var6.compareTo(var11);
//     java.lang.String[] var13 = null;
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make(var6, var13);
//     java.lang.String[] var15 = null;
//     com.google.javascript.jscomp.JSError var16 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", var1, var2, var6, var15);
// 
//   }

  public void test34() {}
//   public void test34() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test34"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at hi!: hi! line 0 : 3");
// 
//   }

  public void test35() {}
//   public void test35() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test35"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.rhino.Node var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var17 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!", var12, var15, var17);
//     boolean var20 = var15.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var29 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var24, var27, var29);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", var10, var15, var29);
//     com.google.javascript.rhino.Node var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var43 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", var38, var41, var43);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var33, var36, var43);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var15, var43);
//     com.google.javascript.rhino.Node var51 = null;
//     com.google.javascript.rhino.Node var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var58 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", var53, var56, var58);
//     boolean var61 = var56.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var65 = null;
//     com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var70 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var65, var68, var70);
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!", var51, var56, var70);
//     com.google.javascript.rhino.Node var74 = null;
//     com.google.javascript.jscomp.DiagnosticType var77 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var79 = null;
//     com.google.javascript.jscomp.DiagnosticType var82 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var84 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!", var79, var82, var84);
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var74, var77, var84);
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var56, var84);
//     com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make(var15, var84);
//     com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", var1, var2, var5, var84);
// 
//   }

  public void test36() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test36"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test37() {}
//   public void test37() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test37"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     java.lang.String[] var3 = null;
//     com.google.javascript.jscomp.JSError var4 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, var2, var3);
// 
//   }

  public void test38() {}
//   public void test38() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test38"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.rhino.Node var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var8 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", var3, var6, var8);
//     boolean var11 = var6.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", var1, var6, var20);
//     com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
//     int var24 = var22.getCharno();
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.MessageFormatter var26 = null;
//     java.lang.String var27 = var22.format(var25, var26);
// 
//   }

  public void test39() {}
//   public void test39() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test39"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var3, var7, var20);
//     com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var29, "hi!");
//     java.lang.String var32 = var31.toString();
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     int var37 = var31.compareTo(var36);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var27, var31, var44);
//     com.google.javascript.jscomp.DiagnosticType var47 = var46.getType();
//     boolean var48 = var22.equals((java.lang.Object)var46);
//     com.google.javascript.jscomp.CheckLevel var49 = null;
//     com.google.javascript.jscomp.MessageFormatter var50 = null;
//     java.lang.String var51 = var46.format(var49, var50);
// 
//   }

  public void test40() {}
//   public void test40() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test40"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var9, "hi!");
//     java.lang.String var12 = var11.toString();
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
//     int var17 = var11.compareTo(var16);
//     com.google.javascript.rhino.Node var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var24 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var19, var22, var24);
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var7, var11, var24);
//     java.lang.String[] var27 = null;
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 10, var3, var11, var27);
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.MessageFormatter var30 = null;
//     java.lang.String var31 = var28.format(var29, var30);
// 
//   }

  public void test41() {}
//   public void test41() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test41"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.rhino.Node var5 = null;
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var14 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var14);
//     boolean var17 = var12.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var26 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var21, var24, var26);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var7, var12, var26);
//     com.google.javascript.jscomp.DiagnosticType var29 = var28.getType();
//     com.google.javascript.jscomp.CheckLevel var33 = null;
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var35, "hi!");
//     java.lang.String var38 = var37.toString();
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("", var40, "hi!");
//     int var43 = var37.compareTo(var42);
//     com.google.javascript.rhino.Node var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var50 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", var45, var48, var50);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var33, var42, var50);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make(": ", var5, var29, var50);
//     com.google.javascript.jscomp.CheckLevel var57 = null;
//     com.google.javascript.jscomp.CheckLevel var59 = null;
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var59, "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var65 = var61.compareTo(var64);
//     com.google.javascript.rhino.Node var67 = null;
//     com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var72 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", var67, var70, var72);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var57, var61, var72);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", (-1), (-8), var3, var29, var72);
//     com.google.javascript.jscomp.CheckLevel var76 = null;
//     com.google.javascript.jscomp.MessageFormatter var77 = null;
//     java.lang.String var78 = var75.format(var76, var77);
// 
//   }

  public void test42() {}
//   public void test42() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test42"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var1, "hi!");
//     java.lang.String var4 = var3.toString();
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.make("", var6, "hi!");
//     int var9 = var3.compareTo(var8);
//     java.lang.String[] var10 = null;
//     com.google.javascript.jscomp.JSError var11 = com.google.javascript.jscomp.JSError.make(var3, var10);
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var15 = var3.compareTo(var14);
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var17, "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var23 = var19.compareTo(var22);
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var29, "hi!");
//     java.lang.String var32 = var31.toString();
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     int var37 = var31.compareTo(var36);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var27, var31, var44);
//     com.google.javascript.jscomp.DiagnosticType var47 = var46.getType();
//     java.lang.String var48 = var46.toString();
//     com.google.javascript.rhino.Node var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var55 = null;
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var60 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!", var55, var58, var60);
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var50, var53, var60);
//     boolean var63 = var46.equals((java.lang.Object)"hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     java.lang.String var64 = var46.toString();
//     boolean var65 = var22.equals((java.lang.Object)var46);
//     boolean var66 = var3.equals((java.lang.Object)var46);
//     com.google.javascript.jscomp.CheckLevel var67 = null;
//     com.google.javascript.jscomp.MessageFormatter var68 = null;
//     java.lang.String var69 = var46.format(var67, var68);
// 
//   }

  public void test43() {}
//   public void test43() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test43"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var3, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var12 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var13 = com.google.javascript.jscomp.JSError.make("hi!", var7, var10, var12);
//     int var14 = var5.compareTo(var10);
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var20, "hi!");
//     java.lang.String var23 = var22.toString();
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
//     int var28 = var22.compareTo(var27);
//     java.lang.String[] var29 = null;
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make(var22, var29);
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var34 = var22.compareTo(var33);
//     com.google.javascript.rhino.Node var36 = null;
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var45 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var40, var43, var45);
//     com.google.javascript.jscomp.CheckLevel var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var55 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var50, var53, var55);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var36, var43, var55);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("", 0, 1, var18, var33, var55);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var1, var5, var55);
//     java.lang.String[] var60 = null;
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make(var5, var60);
//     com.google.javascript.jscomp.DiagnosticType var62 = null;
//     int var63 = var5.compareTo(var62);
// 
//   }

  public void test44() {}
//   public void test44() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test44"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled(": ", "hi!: hi!: hi!: hi!");
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.jscomp.CheckLevel var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var16 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var11, var14, var16);
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var26 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var21, var24, var26);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var7, var14, var26);
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!: hi!", var1, var2, var5, var26);
// 
//   }

  public void test45() {}
//   public void test45() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test45"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
// 
//   }

  public void test46() {}
//   public void test46() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test46"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.rhino.Node var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var18 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", var13, var16, var18);
//     boolean var21 = var16.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var30 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var25, var28, var30);
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", var11, var16, var30);
//     com.google.javascript.rhino.Node var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var34, var37, var44);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var16, var44);
//     com.google.javascript.rhino.Node var52 = null;
//     com.google.javascript.rhino.Node var54 = null;
//     com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var59 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", var54, var57, var59);
//     boolean var62 = var57.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var66 = null;
//     com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var71 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var66, var69, var71);
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", var52, var57, var71);
//     com.google.javascript.rhino.Node var75 = null;
//     com.google.javascript.jscomp.DiagnosticType var78 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var80 = null;
//     com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var85 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!", var80, var83, var85);
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var75, var78, var85);
//     com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var57, var85);
//     com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make(var16, var85);
//     com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!: hi!", var1, var2, var6, var85);
// 
//   }

  public void test47() {}
//   public void test47() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test47"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ": hi!. hi! at hi!: hi! line 0 : 3");
// 
//   }

  public void test48() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test48"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "hi!: hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test49() {}
//   public void test49() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test49"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!: hi!: hi!");
// 
//   }

  public void test50() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test50"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(": hi!. hi! at hi!: hi! line 0 : 3");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test51() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test51"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.CheckLevel var11 = null;
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var11, "hi!");
    java.lang.String var14 = var13.toString();
    com.google.javascript.jscomp.CheckLevel var16 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.make("", var16, "hi!");
    int var19 = var13.compareTo(var18);
    java.lang.String[] var20 = null;
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make(var13, var20);
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var25 = var13.compareTo(var24);
    com.google.javascript.rhino.Node var27 = null;
    com.google.javascript.jscomp.CheckLevel var31 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var36 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var31, var34, var36);
    com.google.javascript.jscomp.CheckLevel var41 = null;
    com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var46 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var41, var44, var46);
    com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var27, var34, var46);
    com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("", 0, 1, var9, var24, var46);
    com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make(var5, var46);
    com.google.javascript.jscomp.CheckLevel var54 = null;
    com.google.javascript.jscomp.CheckLevel var56 = null;
    com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var56, "hi!");
    java.lang.String var59 = var58.toString();
    com.google.javascript.jscomp.CheckLevel var61 = null;
    com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.make("", var61, "hi!");
    int var64 = var58.compareTo(var63);
    java.lang.String[] var65 = null;
    com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make(var58, var65);
    com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var70 = var58.compareTo(var69);
    com.google.javascript.rhino.Node var72 = null;
    com.google.javascript.rhino.Node var74 = null;
    com.google.javascript.jscomp.DiagnosticType var77 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var79 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("hi!", var74, var77, var79);
    boolean var82 = var77.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var86 = null;
    com.google.javascript.jscomp.DiagnosticType var89 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var91 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var86, var89, var91);
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!", var72, var77, var91);
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var54, var69, var91);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!", 5, 5, var5, var91);
    com.google.javascript.jscomp.DiagnosticType var96 = var95.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "hi!: hi!"+ "'", var14.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "hi!: hi!"+ "'", var59.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);

  }

  public void test52() {}
//   public void test52() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test52"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var8, "hi!");
//     java.lang.String var11 = var10.toString();
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("", var13, "hi!");
//     int var16 = var10.compareTo(var15);
//     java.lang.String[] var17 = null;
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make(var10, var17);
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var22 = var10.compareTo(var21);
//     com.google.javascript.rhino.Node var24 = null;
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var31 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var31);
//     boolean var34 = var29.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var43 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var38, var41, var43);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var24, var29, var43);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var6, var21, var43);
//     com.google.javascript.jscomp.CheckLevel var48 = null;
//     com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var48, "hi!");
//     java.lang.String var51 = var50.toString();
//     com.google.javascript.jscomp.CheckLevel var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.make("", var53, "hi!");
//     int var56 = var50.compareTo(var55);
//     int var57 = var21.compareTo(var50);
//     com.google.javascript.rhino.Node var59 = null;
//     com.google.javascript.rhino.Node var61 = null;
//     com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var66 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!", var61, var64, var66);
//     boolean var69 = var64.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var73 = null;
//     com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var78 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var73, var76, var78);
//     com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("hi!", var59, var64, var78);
//     com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("", var1, var2, var21, var78);
// 
//   }

  public void test53() {}
//   public void test53() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test53"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var19, "hi!");
//     java.lang.String var22 = var21.toString();
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
//     int var27 = var21.compareTo(var26);
//     com.google.javascript.rhino.Node var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var34);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var17, var21, var34);
//     java.lang.String[] var37 = null;
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 10, var13, var21, var37);
//     int var39 = var9.compareTo(var21);
//     java.lang.String var40 = var9.toString();
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.CheckLevel var46 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var46, "hi!");
//     java.lang.String var49 = var48.toString();
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
//     int var54 = var48.compareTo(var53);
//     java.lang.String[] var55 = null;
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make(var48, var55);
//     com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var60 = var48.compareTo(var59);
//     com.google.javascript.rhino.Node var62 = null;
//     com.google.javascript.jscomp.CheckLevel var66 = null;
//     com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var71 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var66, var69, var71);
//     com.google.javascript.jscomp.CheckLevel var76 = null;
//     com.google.javascript.jscomp.DiagnosticType var79 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var81 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var76, var79, var81);
//     com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var62, var69, var81);
//     com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("", 0, 1, var44, var59, var81);
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", 0, 100, var6, var9, var81);
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100", var1, var2, var81);
// 
//   }

  public void test54() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test54"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var14 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var9, var12, var14);
    com.google.javascript.jscomp.JSError var16 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 100, var5, var14);
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var18, "hi!");
    java.lang.String var21 = var20.toString();
    com.google.javascript.jscomp.CheckLevel var23 = null;
    com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("", var23, "hi!");
    int var26 = var20.compareTo(var25);
    int var27 = var5.compareTo(var25);
    com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var37 = null;
    com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var42 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var37, var40, var42);
    com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 100, var33, var42);
    com.google.javascript.jscomp.CheckLevel var46 = null;
    com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var46, "hi!");
    java.lang.String var49 = var48.toString();
    com.google.javascript.jscomp.CheckLevel var51 = null;
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
    int var54 = var48.compareTo(var53);
    int var55 = var33.compareTo(var53);
    int var56 = var25.compareTo(var33);
    com.google.javascript.rhino.Node var58 = null;
    com.google.javascript.jscomp.CheckLevel var62 = null;
    com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var67 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var62, var65, var67);
    com.google.javascript.jscomp.CheckLevel var72 = null;
    com.google.javascript.jscomp.DiagnosticType var75 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var77 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var72, var75, var77);
    com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var58, var65, var77);
    int var80 = var33.compareTo(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "hi!: hi!"+ "'", var21.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "hi!: hi!"+ "'", var49.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == (-8));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 0);

  }

  public void test55() {}
//   public void test55() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test55"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var9, "hi!");
//     java.lang.String var12 = var11.toString();
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
//     int var17 = var11.compareTo(var16);
//     java.lang.String[] var18 = null;
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make(var11, var18);
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var23 = var11.compareTo(var22);
//     com.google.javascript.rhino.Node var25 = null;
//     com.google.javascript.rhino.Node var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var32 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", var27, var30, var32);
//     boolean var35 = var30.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var39, var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", var25, var30, var44);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var7, var22, var44);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 8, (-12), var3, var44);
// 
//   }

  public void test56() {}
//   public void test56() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test56"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var8, "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var14 = var10.compareTo(var13);
//     com.google.javascript.rhino.Node var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var21 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", var16, var19, var21);
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var6, var10, var21);
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", var1, var2, var21);
// 
//   }

  public void test57() {}
//   public void test57() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test57"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var4, ": ");
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.warning("", ": ");
//     int var10 = var6.compareTo(var9);
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var12, "hi!");
//     java.lang.String var15 = var14.toString();
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
//     int var20 = var14.compareTo(var19);
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.CheckLevel var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var26, "hi!");
//     java.lang.String var29 = var28.toString();
//     com.google.javascript.jscomp.CheckLevel var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.make("", var31, "hi!");
//     int var34 = var28.compareTo(var33);
//     com.google.javascript.rhino.Node var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var41 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", var36, var39, var41);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var24, var33, var41);
//     int var44 = var14.compareTo(var33);
//     com.google.javascript.rhino.Node var46 = null;
//     com.google.javascript.rhino.Node var48 = null;
//     com.google.javascript.rhino.Node var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var55 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", var50, var53, var55);
//     boolean var58 = var53.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var62 = null;
//     com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var67 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var62, var65, var67);
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!", var48, var53, var67);
//     com.google.javascript.jscomp.DiagnosticType var70 = var69.getType();
//     com.google.javascript.jscomp.CheckLevel var74 = null;
//     com.google.javascript.jscomp.CheckLevel var76 = null;
//     com.google.javascript.jscomp.DiagnosticType var78 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var76, "hi!");
//     java.lang.String var79 = var78.toString();
//     com.google.javascript.jscomp.CheckLevel var81 = null;
//     com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.make("", var81, "hi!");
//     int var84 = var78.compareTo(var83);
//     com.google.javascript.rhino.Node var86 = null;
//     com.google.javascript.jscomp.DiagnosticType var89 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var91 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!", var86, var89, var91);
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var74, var83, var91);
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make(": ", var46, var70, var91);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make(var33, var91);
//     com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", (-12), 12, var6, var91);
//     com.google.javascript.jscomp.CheckLevel var97 = null;
//     com.google.javascript.jscomp.MessageFormatter var98 = null;
//     java.lang.String var99 = var96.format(var97, var98);
// 
//   }

  public void test58() {}
//   public void test58() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test58"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.rhino.Node var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var8 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", var3, var6, var8);
//     boolean var11 = var6.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.CheckLevel var26 = null;
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var28, "hi!");
//     java.lang.String var31 = var30.toString();
//     com.google.javascript.jscomp.CheckLevel var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
//     int var36 = var30.compareTo(var35);
//     com.google.javascript.rhino.Node var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var43 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", var38, var41, var43);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var26, var30, var43);
//     java.lang.String[] var46 = null;
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 10, var22, var30, var46);
//     int var48 = var18.compareTo(var30);
//     java.lang.String var49 = var18.toString();
//     com.google.javascript.jscomp.CheckLevel var53 = null;
//     com.google.javascript.jscomp.CheckLevel var55 = null;
//     com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var55, "hi!");
//     java.lang.String var58 = var57.toString();
//     com.google.javascript.jscomp.CheckLevel var60 = null;
//     com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.make("", var60, "hi!");
//     int var63 = var57.compareTo(var62);
//     java.lang.String[] var64 = null;
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make(var57, var64);
//     com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var69 = var57.compareTo(var68);
//     com.google.javascript.rhino.Node var71 = null;
//     com.google.javascript.jscomp.CheckLevel var75 = null;
//     com.google.javascript.jscomp.DiagnosticType var78 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var80 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var75, var78, var80);
//     com.google.javascript.jscomp.CheckLevel var85 = null;
//     com.google.javascript.jscomp.DiagnosticType var88 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var90 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var85, var88, var90);
//     com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var71, var78, var90);
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("", 0, 1, var53, var68, var90);
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", 0, 100, var15, var18, var90);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("", var1, var6, var90);
//     com.google.javascript.jscomp.CheckLevel var96 = null;
//     com.google.javascript.jscomp.MessageFormatter var97 = null;
//     java.lang.String var98 = var95.format(var96, var97);
// 
//   }

  public void test59() {}
//   public void test59() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test59"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var8, "hi!");
//     java.lang.String var11 = var10.toString();
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("", var13, "hi!");
//     int var16 = var10.compareTo(var15);
//     java.lang.String[] var17 = null;
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make(var10, var17);
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var22 = var10.compareTo(var21);
//     com.google.javascript.rhino.Node var24 = null;
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var33 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var28, var31, var33);
//     com.google.javascript.jscomp.CheckLevel var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var43 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var38, var41, var43);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var24, var31, var43);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("", 0, 1, var6, var21, var43);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make(var2, var43);
//     com.google.javascript.jscomp.CheckLevel var48 = null;
//     com.google.javascript.jscomp.MessageFormatter var49 = null;
//     java.lang.String var50 = var47.format(var48, var49);
// 
//   }

  public void test60() {}
//   public void test60() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test60"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var8, "hi!");
//     java.lang.String var11 = var10.toString();
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("", var13, "hi!");
//     int var16 = var10.compareTo(var15);
//     java.lang.String[] var17 = null;
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make(var10, var17);
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var22 = var10.compareTo(var21);
//     com.google.javascript.rhino.Node var24 = null;
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var33 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var28, var31, var33);
//     com.google.javascript.jscomp.CheckLevel var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var43 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var38, var41, var43);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var24, var31, var43);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("", 0, 1, var6, var21, var43);
//     java.lang.String[] var47 = null;
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", var1, var2, var21, var47);
// 
//   }

  public void test61() {}
//   public void test61() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test61"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.rhino.Node var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var8 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", var3, var6, var8);
//     boolean var11 = var6.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", var1, var6, var20);
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var24, "hi!: hi!");
//     boolean var27 = var22.equals((java.lang.Object)var26);
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.MessageFormatter var29 = null;
//     java.lang.String var30 = var22.format(var28, var29);
// 
//   }

  public void test62() {}
//   public void test62() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test62"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var4, "hi!");
//     java.lang.String[] var7 = null;
//     com.google.javascript.jscomp.JSError var8 = com.google.javascript.jscomp.JSError.make(var6, var7);
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var15 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var16 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var15);
//     com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!: hi!", var1, var2, var6, var15);
// 
//   }

  public void test63() {}
//   public void test63() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test63"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var14 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var14);
//     boolean var17 = var12.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var26 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var21, var24, var26);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var7, var12, var26);
//     com.google.javascript.rhino.Node var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var40 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", var35, var38, var40);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var30, var33, var40);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var12, var40);
//     com.google.javascript.jscomp.DiagnosticType var44 = var43.getType();
//     com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.jscomp.CheckLevel var54 = null;
//     com.google.javascript.jscomp.CheckLevel var56 = null;
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var56, "hi!");
//     java.lang.String var59 = var58.toString();
//     com.google.javascript.jscomp.CheckLevel var61 = null;
//     com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.make("", var61, "hi!");
//     int var64 = var58.compareTo(var63);
//     com.google.javascript.rhino.Node var66 = null;
//     com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var71 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!", var66, var69, var71);
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var54, var58, var71);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("", (-64), 0, var50, var71);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make(": ", var1, var2, var44, var71);
// 
//   }

  public void test64() {}
//   public void test64() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test64"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     java.lang.String[] var14 = null;
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make(var7, var14);
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var19 = var7.compareTo(var18);
//     com.google.javascript.rhino.Node var24 = null;
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var31 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var31);
//     boolean var34 = var29.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var43 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var38, var41, var43);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var24, var29, var43);
//     com.google.javascript.rhino.Node var47 = null;
//     com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var52 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var57 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!", var52, var55, var57);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var47, var50, var57);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var29, var57);
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make(": ", (-46), 0, var3, var18, var57);
//     com.google.javascript.jscomp.CheckLevel var62 = null;
//     com.google.javascript.jscomp.MessageFormatter var63 = null;
//     java.lang.String var64 = var61.format(var62, var63);
// 
//   }

  public void test65() {}
//   public void test65() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test65"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var3, var7, var20);
//     com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var29, "hi!");
//     java.lang.String var32 = var31.toString();
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     int var37 = var31.compareTo(var36);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var27, var31, var44);
//     com.google.javascript.jscomp.DiagnosticType var47 = var46.getType();
//     boolean var48 = var22.equals((java.lang.Object)var46);
//     int var49 = var46.getCharno();
//     com.google.javascript.jscomp.DiagnosticType var50 = var46.getType();
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.MessageFormatter var52 = null;
//     java.lang.String var53 = var46.format(var51, var52);
// 
//   }

  public void test66() {}
//   public void test66() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test66"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var21, "hi!");
//     java.lang.String var24 = var23.toString();
//     com.google.javascript.jscomp.CheckLevel var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.make("", var26, "hi!");
//     int var29 = var23.compareTo(var28);
//     com.google.javascript.rhino.Node var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var36 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", var31, var34, var36);
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var19, var23, var36);
//     java.lang.String[] var39 = null;
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 10, var15, var23, var39);
//     int var41 = var11.compareTo(var23);
//     java.lang.String var42 = var11.toString();
//     com.google.javascript.jscomp.CheckLevel var46 = null;
//     com.google.javascript.jscomp.CheckLevel var48 = null;
//     com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var48, "hi!");
//     java.lang.String var51 = var50.toString();
//     com.google.javascript.jscomp.CheckLevel var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.make("", var53, "hi!");
//     int var56 = var50.compareTo(var55);
//     java.lang.String[] var57 = null;
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make(var50, var57);
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var62 = var50.compareTo(var61);
//     com.google.javascript.rhino.Node var64 = null;
//     com.google.javascript.jscomp.CheckLevel var68 = null;
//     com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var73 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var68, var71, var73);
//     com.google.javascript.jscomp.CheckLevel var78 = null;
//     com.google.javascript.jscomp.DiagnosticType var81 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var83 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var78, var81, var83);
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var64, var71, var83);
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("", 0, 1, var46, var61, var83);
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", 0, 100, var8, var11, var83);
//     com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 67, 12, var3, var4, var83);
// 
//   }

  public void test67() {}
//   public void test67() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test67"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.rhino.Node var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var8 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", var3, var6, var8);
//     boolean var11 = var6.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", var1, var6, var20);
//     com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.MessageFormatter var25 = null;
//     java.lang.String var26 = var22.format(var24, var25);
// 
//   }

  public void test68() {}
//   public void test68() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test68"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var3, var7, var20);
//     com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
//     java.lang.String var24 = var22.toString();
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var36 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", var31, var34, var36);
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var26, var29, var36);
//     boolean var39 = var22.equals((java.lang.Object)"hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     boolean var41 = var22.equals((java.lang.Object)10.0d);
//     com.google.javascript.jscomp.CheckLevel var42 = null;
//     com.google.javascript.jscomp.MessageFormatter var43 = null;
//     java.lang.String var44 = var22.format(var42, var43);
// 
//   }

  public void test69() {}
//   public void test69() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test69"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var3, var7, var20);
//     com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var29, "hi!");
//     java.lang.String var32 = var31.toString();
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     int var37 = var31.compareTo(var36);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var27, var31, var44);
//     com.google.javascript.jscomp.DiagnosticType var47 = var46.getType();
//     boolean var48 = var22.equals((java.lang.Object)var46);
//     int var49 = var46.getCharno();
//     com.google.javascript.jscomp.CheckLevel var50 = null;
//     com.google.javascript.jscomp.MessageFormatter var51 = null;
//     java.lang.String var52 = var46.format(var50, var51);
// 
//   }

  public void test70() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test70"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test71() {}
//   public void test71() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test71"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var12 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var13 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var7, var10, var12);
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make(": : ", 8, (-1), var3, var12);
// 
//   }

  public void test72() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test72"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.rhino.Node var6 = null;
    com.google.javascript.rhino.Node var8 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var13 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", var8, var11, var13);
    boolean var16 = var11.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var20 = null;
    com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var25 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var20, var23, var25);
    com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", var6, var11, var25);
    com.google.javascript.rhino.Node var29 = null;
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var34 = null;
    com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var39 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var34, var37, var39);
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var29, var32, var39);
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var11, var39);
    com.google.javascript.jscomp.DiagnosticType var43 = var42.getType();
    com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var53 = null;
    com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var58 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var53, var56, var58);
    com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 100, var49, var58);
    com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", var1, var43, var58);
    java.lang.String var62 = var43.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "hi!: hi!: hi!"+ "'", var62.equals("hi!: hi!: hi!"));

  }

  public void test73() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test73"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(": ");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test74() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test74"); }


    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var12 = null;
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var17 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var12, var15, var17);
    com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 100, var8, var17);
    com.google.javascript.jscomp.CheckLevel var21 = null;
    com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var21, "hi!");
    java.lang.String var24 = var23.toString();
    com.google.javascript.jscomp.CheckLevel var26 = null;
    com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.make("", var26, "hi!");
    int var29 = var23.compareTo(var28);
    int var30 = var8.compareTo(var28);
    com.google.javascript.rhino.Node var32 = null;
    com.google.javascript.jscomp.CheckLevel var34 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var34, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var38 = null;
    com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var43 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", var38, var41, var43);
    int var45 = var36.compareTo(var41);
    com.google.javascript.jscomp.CheckLevel var49 = null;
    com.google.javascript.jscomp.CheckLevel var51 = null;
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var51, "hi!");
    java.lang.String var54 = var53.toString();
    com.google.javascript.jscomp.CheckLevel var56 = null;
    com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.make("", var56, "hi!");
    int var59 = var53.compareTo(var58);
    java.lang.String[] var60 = null;
    com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make(var53, var60);
    com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var65 = var53.compareTo(var64);
    com.google.javascript.rhino.Node var67 = null;
    com.google.javascript.jscomp.CheckLevel var71 = null;
    com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var76 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var71, var74, var76);
    com.google.javascript.jscomp.CheckLevel var81 = null;
    com.google.javascript.jscomp.DiagnosticType var84 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var86 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var81, var84, var86);
    com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var67, var74, var86);
    com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make("", 0, 1, var49, var64, var86);
    com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var32, var36, var86);
    com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("", (-8), 100, var28, var86);
    java.lang.String var92 = var28.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "hi!: hi!"+ "'", var24.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "hi!: hi!"+ "'", var54.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + ": hi!"+ "'", var92.equals(": hi!"));

  }

  public void test75() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test75"); }


    com.google.javascript.jscomp.CheckLevel var4 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var4, "hi!");
    java.lang.String var7 = var6.toString();
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
    int var12 = var6.compareTo(var11);
    java.lang.String[] var13 = null;
    com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make(var6, var13);
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var18 = var6.compareTo(var17);
    com.google.javascript.rhino.Node var20 = null;
    com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var25 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", var20, var23, var25);
    com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", 3, (-8), var6, var25);
    java.lang.String var28 = var27.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!: hi!"+ "'", var7.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "hi!. hi! at hi!: hi!: hi! line 3 : -8"+ "'", var28.equals("hi!. hi! at hi!: hi!: hi! line 3 : -8"));

  }

  public void test76() {}
//   public void test76() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test76"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!", ": ");
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var24, "hi!");
//     java.lang.String var27 = var26.toString();
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("", var29, "hi!");
//     int var32 = var26.compareTo(var31);
//     com.google.javascript.rhino.Node var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var39 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var34, var37, var39);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var22, var26, var39);
//     java.lang.String[] var42 = null;
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 10, var18, var26, var42);
//     com.google.javascript.rhino.Node var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var50 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", var45, var48, var50);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("", (-1), 10, var14, var26, var50);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", var7, var10, var50);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", var1, var2, var5, var50);
// 
//   }

  public void test77() {}
//   public void test77() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test77"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("", var5, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var11 = null;
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var13, "hi!");
//     java.lang.String var16 = var15.toString();
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
//     int var21 = var15.compareTo(var20);
//     com.google.javascript.rhino.Node var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var28 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var23, var26, var28);
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var11, var15, var28);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", 10, 64, var3, var7, var28);
//     com.google.javascript.jscomp.CheckLevel var32 = null;
//     com.google.javascript.jscomp.MessageFormatter var33 = null;
//     java.lang.String var34 = var31.format(var32, var33);
// 
//   }

  public void test78() {}
//   public void test78() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test78"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     int var4 = var2.compareTo(var3);
// 
//   }

  public void test79() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test79"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error(": : ", "hi!: hi!: hi!: hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test80() {}
//   public void test80() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test80"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi! at (unknown source) line -64 : 100");
// 
//   }

  public void test81() {}
//   public void test81() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test81"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ": hi!");
// 
//   }

  public void test82() {}
//   public void test82() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test82"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
// 
//   }

  public void test83() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test83"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.CheckLevel var11 = null;
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var11, "hi!");
    java.lang.String var14 = var13.toString();
    com.google.javascript.jscomp.CheckLevel var16 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.make("", var16, "hi!");
    int var19 = var13.compareTo(var18);
    java.lang.String[] var20 = null;
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make(var13, var20);
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var25 = var13.compareTo(var24);
    com.google.javascript.rhino.Node var27 = null;
    com.google.javascript.jscomp.CheckLevel var31 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var36 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var31, var34, var36);
    com.google.javascript.jscomp.CheckLevel var41 = null;
    com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var46 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var41, var44, var46);
    com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var27, var34, var46);
    com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("", 0, 1, var9, var24, var46);
    com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make(var5, var46);
    com.google.javascript.jscomp.CheckLevel var54 = null;
    com.google.javascript.jscomp.CheckLevel var56 = null;
    com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var56, "hi!");
    java.lang.String var59 = var58.toString();
    com.google.javascript.jscomp.CheckLevel var61 = null;
    com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.make("", var61, "hi!");
    int var64 = var58.compareTo(var63);
    java.lang.String[] var65 = null;
    com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make(var58, var65);
    com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var70 = var58.compareTo(var69);
    com.google.javascript.rhino.Node var72 = null;
    com.google.javascript.rhino.Node var74 = null;
    com.google.javascript.jscomp.DiagnosticType var77 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var79 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("hi!", var74, var77, var79);
    boolean var82 = var77.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var86 = null;
    com.google.javascript.jscomp.DiagnosticType var89 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var91 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var86, var89, var91);
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!", var72, var77, var91);
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var54, var69, var91);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!", 5, 5, var5, var91);
    boolean var97 = var5.equals((java.lang.Object)"hi!: hi!. hi! at hi!: hi! line (unknown line) : 10");
    java.lang.String var98 = var5.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "hi!: hi!"+ "'", var14.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "hi!: hi!"+ "'", var59.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var98 + "' != '" + "hi!. hi! at hi!: hi! line 0 : 3: "+ "'", var98.equals("hi!. hi! at hi!: hi! line 0 : 3: "));

  }

  public void test84() {}
//   public void test84() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test84"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", ": ");
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var17 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!", var12, var15, var17);
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var7, var10, var17);
//     com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make(": hi!", var1, var2, var5, var17);
// 
//   }

  public void test85() {}
//   public void test85() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test85"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     java.lang.String[] var14 = null;
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make(var7, var14);
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var19 = var7.compareTo(var18);
//     com.google.javascript.rhino.Node var21 = null;
//     com.google.javascript.rhino.Node var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var28 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var23, var26, var28);
//     boolean var31 = var26.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var40 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var35, var38, var40);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", var21, var26, var40);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var3, var18, var40);
//     java.lang.String var44 = var43.toString();
//     com.google.javascript.jscomp.CheckLevel var45 = null;
//     com.google.javascript.jscomp.MessageFormatter var46 = null;
//     java.lang.String var47 = var43.format(var45, var46);
// 
//   }

  public void test86() {}
//   public void test86() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test86"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var4, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var13 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", var8, var11, var13);
//     int var15 = var6.compareTo(var11);
//     java.lang.String[] var16 = null;
//     com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("", var1, var2, var11, var16);
// 
//   }

  public void test87() {}
//   public void test87() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test87"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var10, "hi!");
//     java.lang.String var13 = var12.toString();
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var19, "hi!");
//     java.lang.String var22 = var21.toString();
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
//     int var27 = var21.compareTo(var26);
//     java.lang.String[] var28 = null;
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make(var21, var28);
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var33 = var21.compareTo(var32);
//     com.google.javascript.rhino.Node var35 = null;
//     com.google.javascript.rhino.Node var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var42 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", var37, var40, var42);
//     boolean var45 = var40.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var49 = null;
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var54 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var49, var52, var54);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", var35, var40, var54);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var17, var32, var54);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 8, var8, var12, var54);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", (-1), 12, var3, var4, var54);
// 
//   }

  public void test88() {}
//   public void test88() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test88"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.rhino.Node var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var8 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", var3, var6, var8);
//     boolean var11 = var6.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", var1, var6, var20);
//     com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!. hi! at hi!: hi! line 0 : 3");
//     int var27 = var23.compareTo(var26);
//     com.google.javascript.jscomp.DiagnosticType var28 = null;
//     int var29 = var23.compareTo(var28);
// 
//   }

  public void test89() {}
//   public void test89() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test89"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var11 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var12 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var6, var9, var11);
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "");
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.rhino.Node var28 = null;
//     com.google.javascript.rhino.Node var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var35 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var30, var33, var35);
//     boolean var38 = var33.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var42 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var47 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var42, var45, var47);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", var28, var33, var47);
//     com.google.javascript.jscomp.DiagnosticType var50 = var49.getType();
//     com.google.javascript.jscomp.CheckLevel var54 = null;
//     com.google.javascript.jscomp.CheckLevel var56 = null;
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var56, "hi!");
//     java.lang.String var59 = var58.toString();
//     com.google.javascript.jscomp.CheckLevel var61 = null;
//     com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.make("", var61, "hi!");
//     int var64 = var58.compareTo(var63);
//     com.google.javascript.rhino.Node var66 = null;
//     com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var71 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!", var66, var69, var71);
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var54, var63, var71);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make(": ", var26, var50, var71);
//     com.google.javascript.jscomp.CheckLevel var78 = null;
//     com.google.javascript.jscomp.CheckLevel var80 = null;
//     com.google.javascript.jscomp.DiagnosticType var82 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var80, "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var85 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var86 = var82.compareTo(var85);
//     com.google.javascript.rhino.Node var88 = null;
//     com.google.javascript.jscomp.DiagnosticType var91 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var93 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!", var88, var91, var93);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var78, var82, var93);
//     com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", (-1), (-8), var24, var50, var93);
//     com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", (-46), 1, var16, var20, var93);
//     com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi! line -8 : 10", var1, var2, var9, var93);
// 
//   }

  public void test90() {}
//   public void test90() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test90"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var16 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!", var11, var14, var16);
//     boolean var19 = var14.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var28 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var23, var26, var28);
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", var9, var14, var28);
//     com.google.javascript.rhino.Node var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var42 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", var37, var40, var42);
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var32, var35, var42);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var14, var42);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, var4, var42);
//     com.google.javascript.jscomp.CheckLevel var47 = null;
//     com.google.javascript.jscomp.MessageFormatter var48 = null;
//     java.lang.String var49 = var46.format(var47, var48);
// 
//   }

  public void test91() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test91"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(": hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test92() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test92"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!: hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test93() {}
//   public void test93() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test93"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var3, var7, var20);
//     com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var29, "hi!");
//     java.lang.String var32 = var31.toString();
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     int var37 = var31.compareTo(var36);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var27, var31, var44);
//     com.google.javascript.jscomp.DiagnosticType var47 = var46.getType();
//     boolean var48 = var22.equals((java.lang.Object)var46);
//     boolean var50 = var46.equals((java.lang.Object)0L);
//     int var51 = var46.getCharno();
//     com.google.javascript.jscomp.CheckLevel var52 = null;
//     com.google.javascript.jscomp.MessageFormatter var53 = null;
//     java.lang.String var54 = var46.format(var52, var53);
// 
//   }

  public void test94() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test94"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var1, "hi!");
    java.lang.String var4 = var3.toString();
    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.make("", var6, "hi!");
    int var9 = var3.compareTo(var8);
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var15, "hi!");
    java.lang.String var18 = var17.toString();
    com.google.javascript.jscomp.CheckLevel var20 = null;
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("", var20, "hi!");
    int var23 = var17.compareTo(var22);
    com.google.javascript.rhino.Node var25 = null;
    com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var30 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", var25, var28, var30);
    com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var13, var22, var30);
    int var33 = var3.compareTo(var22);
    boolean var35 = var22.equals((java.lang.Object)0L);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!: hi!"+ "'", var4.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "hi!: hi!"+ "'", var18.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);

  }

  public void test95() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test95"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", "hi!: hi!. hi! at hi!: hi! line -8 : 10");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test96() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test96"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var1, "hi!");
    java.lang.String var4 = var3.toString();
    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.make("", var6, "hi!");
    int var9 = var3.compareTo(var8);
    java.lang.String[] var10 = null;
    com.google.javascript.jscomp.JSError var11 = com.google.javascript.jscomp.JSError.make(var3, var10);
    com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var15 = var3.compareTo(var14);
    com.google.javascript.jscomp.CheckLevel var17 = null;
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var17, "hi!: hi!");
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var23 = var19.compareTo(var22);
    com.google.javascript.jscomp.CheckLevel var27 = null;
    com.google.javascript.jscomp.CheckLevel var29 = null;
    com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var29, "hi!");
    java.lang.String var32 = var31.toString();
    com.google.javascript.jscomp.CheckLevel var34 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
    int var37 = var31.compareTo(var36);
    com.google.javascript.rhino.Node var39 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var44 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var44);
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var27, var31, var44);
    com.google.javascript.jscomp.DiagnosticType var47 = var46.getType();
    java.lang.String var48 = var46.toString();
    com.google.javascript.rhino.Node var50 = null;
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var55 = null;
    com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var60 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!", var55, var58, var60);
    com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var50, var53, var60);
    boolean var63 = var46.equals((java.lang.Object)"hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    java.lang.String var64 = var46.toString();
    boolean var65 = var22.equals((java.lang.Object)var46);
    boolean var66 = var3.equals((java.lang.Object)var46);
    com.google.javascript.jscomp.DiagnosticType var67 = var46.getType();
    java.lang.String var68 = var67.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!: hi!"+ "'", var4.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!: hi!"+ "'", var32.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "hi!. hi! at hi!: hi! line 0 : 3"+ "'", var48.equals("hi!. hi! at hi!: hi! line 0 : 3"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "hi!. hi! at hi!: hi! line 0 : 3"+ "'", var64.equals("hi!. hi! at hi!: hi! line 0 : 3"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "hi!: hi!"+ "'", var68.equals("hi!: hi!"));

  }

  public void test97() {}
//   public void test97() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test97"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!: hi!");
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var19 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var14, var17, var19);
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var29 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var24, var27, var29);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var10, var17, var29);
//     com.google.javascript.rhino.Node var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var38 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", var33, var36, var38);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", 8, 100, var17, var38);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("", (-64), (-64), var5, var38);
//     com.google.javascript.jscomp.DiagnosticType var42 = var41.getType();
//     com.google.javascript.jscomp.CheckLevel var43 = null;
//     com.google.javascript.jscomp.MessageFormatter var44 = null;
//     java.lang.String var45 = var41.format(var43, var44);
// 
//   }

  public void test98() {}
//   public void test98() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test98"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var1, "hi!");
//     java.lang.String var4 = var3.toString();
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.make("", var6, "hi!");
//     int var9 = var3.compareTo(var8);
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "hi!: hi!. hi! at hi!: hi! line (unknown line) : 10");
//     int var13 = var3.compareTo(var12);
//     com.google.javascript.jscomp.DiagnosticType var14 = null;
//     int var15 = var12.compareTo(var14);
// 
//   }

  public void test99() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test99"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.rhino.Node var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var8 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", var3, var6, var8);
    boolean var11 = var6.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var20 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var15, var18, var20);
    com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", var1, var6, var20);
    com.google.javascript.jscomp.CheckLevel var26 = null;
    com.google.javascript.jscomp.CheckLevel var28 = null;
    com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var28, "hi!");
    java.lang.String var31 = var30.toString();
    com.google.javascript.jscomp.CheckLevel var33 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
    int var36 = var30.compareTo(var35);
    java.lang.String[] var37 = null;
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make(var30, var37);
    com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var42 = var30.compareTo(var41);
    com.google.javascript.rhino.Node var44 = null;
    com.google.javascript.jscomp.CheckLevel var48 = null;
    com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var53 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var48, var51, var53);
    com.google.javascript.jscomp.CheckLevel var58 = null;
    com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var63 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var58, var61, var63);
    com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var44, var51, var63);
    com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("", 0, 1, var26, var41, var63);
    com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make(var6, var63);
    com.google.javascript.jscomp.DiagnosticType var68 = var67.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "hi!: hi!"+ "'", var31.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);

  }

  public void test100() {}
//   public void test100() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test100"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("", var5, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var11 = null;
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var13, "hi!");
//     java.lang.String var16 = var15.toString();
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
//     int var21 = var15.compareTo(var20);
//     com.google.javascript.rhino.Node var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var28 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var23, var26, var28);
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var11, var15, var28);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", 10, 64, var3, var7, var28);
//     com.google.javascript.jscomp.DiagnosticType var32 = var31.getType();
//     com.google.javascript.jscomp.CheckLevel var33 = null;
//     com.google.javascript.jscomp.MessageFormatter var34 = null;
//     java.lang.String var35 = var31.format(var33, var34);
// 
//   }

  public void test101() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test101"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test102() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test102"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!: hi!: hi!", ": : ");
    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.CheckLevel var8 = null;
    com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var8, "hi!");
    java.lang.String var11 = var10.toString();
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("", var13, "hi!");
    int var16 = var10.compareTo(var15);
    com.google.javascript.rhino.Node var18 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var23 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", var18, var21, var23);
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var6, var10, var23);
    com.google.javascript.jscomp.DiagnosticType var26 = var25.getType();
    com.google.javascript.jscomp.CheckLevel var30 = null;
    com.google.javascript.jscomp.CheckLevel var32 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var32, "hi!");
    java.lang.String var35 = var34.toString();
    com.google.javascript.jscomp.CheckLevel var37 = null;
    com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.make("", var37, "hi!");
    int var40 = var34.compareTo(var39);
    com.google.javascript.rhino.Node var42 = null;
    com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var47 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", var42, var45, var47);
    com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var30, var34, var47);
    com.google.javascript.jscomp.DiagnosticType var50 = var49.getType();
    boolean var51 = var25.equals((java.lang.Object)var49);
    int var52 = var49.getCharno();
    com.google.javascript.jscomp.DiagnosticType var53 = var49.getType();
    com.google.javascript.jscomp.DiagnosticType var54 = var49.getType();
    boolean var55 = var2.equals((java.lang.Object)var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!: hi!"+ "'", var11.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "hi!: hi!"+ "'", var35.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);

  }

  public void test103() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test103"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: ");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test104() {}
//   public void test104() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test104"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     java.lang.String[] var14 = null;
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make(var7, var14);
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var19 = var7.compareTo(var18);
//     com.google.javascript.rhino.Node var21 = null;
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var30 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var25, var28, var30);
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var40 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var35, var38, var40);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var21, var28, var40);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("", 0, 1, var3, var18, var40);
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.MessageFormatter var45 = null;
//     java.lang.String var46 = var43.format(var44, var45);
// 
//   }

  public void test105() {}
//   public void test105() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test105"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     java.lang.String[] var14 = null;
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make(var7, var14);
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     boolean var19 = var7.equals((java.lang.Object)var18);
//     com.google.javascript.rhino.Node var21 = null;
//     com.google.javascript.rhino.Node var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var28 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var23, var26, var28);
//     boolean var31 = var26.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var40 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var35, var38, var40);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", var21, var26, var40);
//     com.google.javascript.jscomp.CheckLevel var46 = null;
//     com.google.javascript.jscomp.CheckLevel var48 = null;
//     com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var48, "hi!");
//     java.lang.String var51 = var50.toString();
//     com.google.javascript.jscomp.CheckLevel var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.make("", var53, "hi!");
//     int var56 = var50.compareTo(var55);
//     java.lang.String[] var57 = null;
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make(var50, var57);
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var62 = var50.compareTo(var61);
//     com.google.javascript.rhino.Node var64 = null;
//     com.google.javascript.jscomp.CheckLevel var68 = null;
//     com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var73 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var68, var71, var73);
//     com.google.javascript.jscomp.CheckLevel var78 = null;
//     com.google.javascript.jscomp.DiagnosticType var81 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var83 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var78, var81, var83);
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var64, var71, var83);
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("", 0, 1, var46, var61, var83);
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make(var26, var83);
//     com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!: hi!", (-1), 0, var3, var7, var83);
//     int var89 = var88.getCharno();
//     int var90 = var88.getCharno();
//     com.google.javascript.jscomp.CheckLevel var91 = null;
//     com.google.javascript.jscomp.MessageFormatter var92 = null;
//     java.lang.String var93 = var88.format(var91, var92);
// 
//   }

  public void test106() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test106"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make(": ", var1, "hi!. hi! at hi!: hi!: hi! line 3 : -8");
    com.google.javascript.jscomp.CheckLevel var5 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
    java.lang.String var8 = var7.toString();
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
    int var13 = var7.compareTo(var12);
    java.lang.String[] var14 = null;
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make(var7, var14);
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    boolean var19 = var7.equals((java.lang.Object)"hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var23 = null;
    com.google.javascript.rhino.Node var25 = null;
    com.google.javascript.rhino.Node var27 = null;
    com.google.javascript.rhino.Node var29 = null;
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var34 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var34);
    boolean var37 = var32.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var41 = null;
    com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var46 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var41, var44, var46);
    com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", var27, var32, var46);
    com.google.javascript.jscomp.DiagnosticType var49 = var48.getType();
    com.google.javascript.jscomp.CheckLevel var53 = null;
    com.google.javascript.jscomp.CheckLevel var55 = null;
    com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var55, "hi!");
    java.lang.String var58 = var57.toString();
    com.google.javascript.jscomp.CheckLevel var60 = null;
    com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.make("", var60, "hi!");
    int var63 = var57.compareTo(var62);
    com.google.javascript.rhino.Node var65 = null;
    com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var70 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", var65, var68, var70);
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var53, var62, var70);
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make(": ", var25, var49, var70);
    com.google.javascript.jscomp.CheckLevel var77 = null;
    com.google.javascript.jscomp.CheckLevel var79 = null;
    com.google.javascript.jscomp.DiagnosticType var81 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var79, "hi!: hi!");
    com.google.javascript.jscomp.DiagnosticType var84 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var85 = var81.compareTo(var84);
    com.google.javascript.rhino.Node var87 = null;
    com.google.javascript.jscomp.DiagnosticType var90 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var92 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!", var87, var90, var92);
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var77, var81, var92);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", (-1), (-8), var23, var49, var92);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make(var7, var92);
    boolean var97 = var3.equals((java.lang.Object)var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!: hi!"+ "'", var8.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "hi!: hi!"+ "'", var58.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == false);

  }

  public void test107() {}
//   public void test107() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test107"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi! at hi!: hi!. hi! at hi!: hi! line (unknown line) : 10 line (unknown line) : (unknown column)");
// 
//   }

  public void test108() {}
//   public void test108() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test108"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var4, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var13 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", var8, var11, var13);
//     int var15 = var6.compareTo(var11);
//     com.google.javascript.rhino.Node var20 = null;
//     com.google.javascript.rhino.Node var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var27 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var22, var25, var27);
//     boolean var30 = var25.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var39 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var34, var37, var39);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", var20, var25, var39);
//     com.google.javascript.rhino.Node var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var48 = null;
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var53 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", var48, var51, var53);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var43, var46, var53);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var25, var53);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var1, var2, var6, var53);
// 
//   }

  public void test109() {}
//   public void test109() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test109"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!: hi!", "");
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var19, "hi!");
//     java.lang.String var22 = var21.toString();
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
//     int var27 = var21.compareTo(var26);
//     java.lang.String[] var28 = null;
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make(var21, var28);
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var33 = var21.compareTo(var32);
//     com.google.javascript.rhino.Node var35 = null;
//     com.google.javascript.jscomp.CheckLevel var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var39, var42, var44);
//     com.google.javascript.jscomp.CheckLevel var49 = null;
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var54 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var49, var52, var54);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var35, var42, var54);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("", 0, 1, var17, var32, var54);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make(var13, var54);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", 10, 8, var7, var10, var54);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at (unknown source) line 0 : 1", 8, 5, var3, var54);
// 
//   }

  public void test110() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test110"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test111() {}
//   public void test111() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test111"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var4, "hi!");
//     java.lang.String var7 = var6.toString();
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     int var12 = var6.compareTo(var11);
//     java.lang.String[] var13 = null;
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make(var6, var13);
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var18 = var6.compareTo(var17);
//     com.google.javascript.rhino.Node var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var25 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", var20, var23, var25);
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", 3, (-8), var6, var25);
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.MessageFormatter var29 = null;
//     java.lang.String var30 = var27.format(var28, var29);
// 
//   }

  public void test112() {}
//   public void test112() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test112"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.CheckLevel var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var11, "hi!");
//     java.lang.String var14 = var13.toString();
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.make("", var16, "hi!");
//     int var19 = var13.compareTo(var18);
//     java.lang.String[] var20 = null;
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make(var13, var20);
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var25 = var13.compareTo(var24);
//     com.google.javascript.rhino.Node var27 = null;
//     com.google.javascript.jscomp.CheckLevel var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var36 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var31, var34, var36);
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var46 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var41, var44, var46);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var27, var34, var46);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("", 0, 1, var9, var24, var46);
//     com.google.javascript.jscomp.CheckLevel var53 = null;
//     com.google.javascript.jscomp.CheckLevel var55 = null;
//     com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var55, "hi!");
//     java.lang.String var58 = var57.toString();
//     com.google.javascript.jscomp.CheckLevel var60 = null;
//     com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.make("", var60, "hi!");
//     int var63 = var57.compareTo(var62);
//     java.lang.String[] var64 = null;
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make(var57, var64);
//     com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var69 = var57.compareTo(var68);
//     com.google.javascript.rhino.Node var71 = null;
//     com.google.javascript.rhino.Node var73 = null;
//     com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var78 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!", var73, var76, var78);
//     boolean var81 = var76.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var85 = null;
//     com.google.javascript.jscomp.DiagnosticType var88 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var90 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var85, var88, var90);
//     com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!", var71, var76, var90);
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var53, var68, var90);
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!", 10, 10, var24, var90);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!", var1, var2, var90);
// 
//   }

  public void test113() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test113"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at (unknown source) line (unknown line) : (unknown column)");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test114() {}
//   public void test114() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test114"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var12 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var13 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var7, var10, var12);
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!: hi!", "");
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var29, "hi!");
//     java.lang.String var32 = var31.toString();
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     int var37 = var31.compareTo(var36);
//     java.lang.String[] var38 = null;
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make(var31, var38);
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var43 = var31.compareTo(var42);
//     com.google.javascript.rhino.Node var45 = null;
//     com.google.javascript.jscomp.CheckLevel var49 = null;
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var54 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var49, var52, var54);
//     com.google.javascript.jscomp.CheckLevel var59 = null;
//     com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var64 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var59, var62, var64);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var45, var52, var64);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("", 0, 1, var27, var42, var64);
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make(var23, var64);
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", 10, 8, var17, var20, var64);
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", (-64), 0, var3, var10, var64);
//     com.google.javascript.jscomp.CheckLevel var71 = null;
//     com.google.javascript.jscomp.MessageFormatter var72 = null;
//     java.lang.String var73 = var70.format(var71, var72);
// 
//   }

  public void test115() {}
//   public void test115() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test115"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.rhino.Node var5 = null;
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var12 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var13 = com.google.javascript.jscomp.JSError.make("hi!", var7, var10, var12);
//     boolean var15 = var10.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var24 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var19, var22, var24);
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", var5, var10, var24);
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var28, "hi!: hi!");
//     boolean var31 = var26.equals((java.lang.Object)var30);
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
//     com.google.javascript.jscomp.CheckLevel var38 = null;
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var40, "hi!");
//     java.lang.String var43 = var42.toString();
//     com.google.javascript.jscomp.CheckLevel var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.make("", var45, "hi!");
//     int var48 = var42.compareTo(var47);
//     java.lang.String[] var49 = null;
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make(var42, var49);
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var54 = var42.compareTo(var53);
//     com.google.javascript.rhino.Node var56 = null;
//     com.google.javascript.jscomp.CheckLevel var60 = null;
//     com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var65 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var60, var63, var65);
//     com.google.javascript.jscomp.CheckLevel var70 = null;
//     com.google.javascript.jscomp.DiagnosticType var73 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var75 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var70, var73, var75);
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var56, var63, var75);
//     com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("", 0, 1, var38, var53, var75);
//     com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make(var34, var75);
//     com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100", (-46), (-1), var3, var30, var75);
//     com.google.javascript.jscomp.DiagnosticType var81 = null;
//     int var82 = var30.compareTo(var81);
// 
//   }

  public void test116() {}
//   public void test116() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test116"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!: hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     java.lang.String[] var6 = null;
//     com.google.javascript.jscomp.JSError var7 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", var1, var2, var5, var6);
// 
//   }

  public void test117() {}
//   public void test117() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test117"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!", ": ");
//     java.lang.String[] var6 = null;
//     com.google.javascript.jscomp.JSError var7 = com.google.javascript.jscomp.JSError.make("", var1, var2, var5, var6);
// 
//   }

  public void test118() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test118"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at (unknown source) line 0 : 1");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test119() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test119"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.rhino.Node var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.CheckLevel var12 = null;
    com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var12, "hi!");
    java.lang.String var15 = var14.toString();
    com.google.javascript.jscomp.CheckLevel var17 = null;
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
    int var20 = var14.compareTo(var19);
    com.google.javascript.rhino.Node var22 = null;
    com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var27 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var22, var25, var27);
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var10, var14, var27);
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", var3, var6, var27);
    com.google.javascript.rhino.Node var32 = null;
    com.google.javascript.rhino.Node var37 = null;
    com.google.javascript.rhino.Node var39 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var44 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var44);
    boolean var47 = var42.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var51 = null;
    com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var56 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var51, var54, var56);
    com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!", var37, var42, var56);
    com.google.javascript.rhino.Node var60 = null;
    com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var65 = null;
    com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var70 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", var65, var68, var70);
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var60, var63, var70);
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var42, var70);
    com.google.javascript.jscomp.DiagnosticType var74 = var73.getType();
    com.google.javascript.jscomp.DiagnosticType var80 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var84 = null;
    com.google.javascript.jscomp.DiagnosticType var87 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var89 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var84, var87, var89);
    com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 100, var80, var89);
    com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", var32, var74, var89);
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make(": hi!. hi! at hi!: hi! line 0 : 3", var1, var6, var89);
    com.google.javascript.jscomp.DiagnosticType var94 = var93.getType();
    java.lang.String var95 = var93.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi!: hi!"+ "'", var15.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + "hi!: hi!. hi! at : hi!. hi! at hi!: hi! line 0 : 3 line (unknown line) : (unknown column)"+ "'", var95.equals("hi!: hi!. hi! at : hi!. hi! at hi!: hi! line 0 : 3 line (unknown line) : (unknown column)"));

  }

  public void test120() {}
//   public void test120() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test120"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var3, var7, var20);
//     com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
//     int var24 = var22.getCharno();
//     com.google.javascript.jscomp.DiagnosticType var25 = var22.getType();
//     java.lang.String var26 = var22.toString();
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.MessageFormatter var28 = null;
//     java.lang.String var29 = var22.format(var27, var28);
// 
//   }

  public void test121() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test121"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!. hi! at hi!: hi!: hi! line 3 : -8");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test122() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test122"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test123() {}
//   public void test123() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test123"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     java.lang.String[] var4 = null;
//     com.google.javascript.jscomp.JSError var5 = com.google.javascript.jscomp.JSError.make(": hi!: hi!", (-58), (-28), var3, var4);
// 
//   }

  public void test124() {}
//   public void test124() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test124"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var14 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var14);
//     boolean var17 = var12.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var26 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var21, var24, var26);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var7, var12, var26);
//     com.google.javascript.rhino.Node var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var40 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", var35, var38, var40);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var30, var33, var40);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var12, var40);
//     com.google.javascript.jscomp.DiagnosticType var44 = var43.getType();
//     com.google.javascript.jscomp.CheckLevel var48 = null;
//     com.google.javascript.jscomp.CheckLevel var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var50, "hi!");
//     java.lang.String var53 = var52.toString();
//     com.google.javascript.jscomp.CheckLevel var57 = null;
//     com.google.javascript.jscomp.CheckLevel var59 = null;
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var59, "hi!");
//     java.lang.String var62 = var61.toString();
//     com.google.javascript.jscomp.CheckLevel var64 = null;
//     com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.make("", var64, "hi!");
//     int var67 = var61.compareTo(var66);
//     java.lang.String[] var68 = null;
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make(var61, var68);
//     com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var73 = var61.compareTo(var72);
//     com.google.javascript.rhino.Node var75 = null;
//     com.google.javascript.rhino.Node var77 = null;
//     com.google.javascript.jscomp.DiagnosticType var80 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var82 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!", var77, var80, var82);
//     boolean var85 = var80.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var89 = null;
//     com.google.javascript.jscomp.DiagnosticType var92 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var94 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var89, var92, var94);
//     com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("hi!", var75, var80, var94);
//     com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var57, var72, var94);
//     com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 8, var48, var52, var94);
//     com.google.javascript.jscomp.JSError var99 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", var1, var2, var44, var94);
// 
//   }

  public void test125() {}
//   public void test125() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test125"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at (unknown source) line 0 : 1");
// 
//   }

  public void test126() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test126"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: : ");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test127() {}
//   public void test127() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test127"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!");
// 
//   }

  public void test128() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test128"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.rhino.Node var7 = null;
    com.google.javascript.rhino.Node var9 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var14 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var14);
    boolean var17 = var12.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var21 = null;
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var26 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var21, var24, var26);
    com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var7, var12, var26);
    com.google.javascript.rhino.Node var30 = null;
    com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var35 = null;
    com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var40 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", var35, var38, var40);
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var30, var33, var40);
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var12, var40);
    com.google.javascript.jscomp.DiagnosticType var44 = var43.getType();
    com.google.javascript.jscomp.CheckLevel var46 = null;
    com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var46, "");
    boolean var49 = var43.equals((java.lang.Object)"hi!");
    java.lang.String var50 = var43.toString();
    boolean var51 = var2.equals((java.lang.Object)var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "hi!: hi!. hi! at (unknown source) line -64 : 100"+ "'", var50.equals("hi!: hi!. hi! at (unknown source) line -64 : 100"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);

  }

  public void test129() {}
//   public void test129() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test129"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0");
// 
//   }

  public void test130() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test130"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100");
    com.google.javascript.rhino.Node var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var11 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var12 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var11);
    com.google.javascript.jscomp.JSError var13 = com.google.javascript.jscomp.JSError.make("", var1, var4, var11);
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var15, ": ");
    com.google.javascript.rhino.Node var19 = null;
    com.google.javascript.jscomp.CheckLevel var23 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var28 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var23, var26, var28);
    com.google.javascript.jscomp.CheckLevel var33 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var38 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var33, var36, var38);
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var19, var26, var38);
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make(var17, var38);
    boolean var42 = var13.equals((java.lang.Object)var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);

  }

  public void test131() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test131"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!: ", var1, "");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test132() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test132"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var11 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var12 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var11);
    com.google.javascript.jscomp.JSError var13 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, var4, var11);
    java.lang.String var14 = var4.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var14.equals("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)"));

  }

  public void test133() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test133"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: ", ": hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test134() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test134"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at hi!: hi! line 0 : 3", var1, ". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test135() {}
//   public void test135() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test135"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", var1, "hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!");
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     int var5 = var3.compareTo(var4);
// 
//   }

  public void test136() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test136"); }


    com.google.javascript.jscomp.CheckLevel var4 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var4, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var8 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var13 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", var8, var11, var13);
    int var15 = var6.compareTo(var11);
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    int var19 = var6.compareTo(var18);
    com.google.javascript.jscomp.CheckLevel var23 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!: hi!", "");
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
    com.google.javascript.jscomp.CheckLevel var33 = null;
    com.google.javascript.jscomp.CheckLevel var35 = null;
    com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var35, "hi!");
    java.lang.String var38 = var37.toString();
    com.google.javascript.jscomp.CheckLevel var40 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("", var40, "hi!");
    int var43 = var37.compareTo(var42);
    java.lang.String[] var44 = null;
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make(var37, var44);
    com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var49 = var37.compareTo(var48);
    com.google.javascript.rhino.Node var51 = null;
    com.google.javascript.jscomp.CheckLevel var55 = null;
    com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var60 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var55, var58, var60);
    com.google.javascript.jscomp.CheckLevel var65 = null;
    com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var70 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var65, var68, var70);
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var51, var58, var70);
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("", 0, 1, var33, var48, var70);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make(var29, var70);
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", 10, 8, var23, var26, var70);
    boolean var76 = var18.equals((java.lang.Object)var26);
    java.lang.String var77 = var18.toString();
    com.google.javascript.jscomp.CheckLevel var81 = null;
    com.google.javascript.jscomp.CheckLevel var83 = null;
    com.google.javascript.jscomp.DiagnosticType var85 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var83, "hi!: hi!");
    com.google.javascript.jscomp.DiagnosticType var88 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var89 = var85.compareTo(var88);
    com.google.javascript.rhino.Node var91 = null;
    com.google.javascript.jscomp.DiagnosticType var94 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var96 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!", var91, var94, var96);
    com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var81, var85, var96);
    com.google.javascript.jscomp.JSError var99 = com.google.javascript.jscomp.JSError.make(": hi!", 8, 5, var18, var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "hi!: hi!"+ "'", var38.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var77.equals("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == 12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var99);

  }

  public void test137() {}
//   public void test137() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test137"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var8, "hi!");
//     java.lang.String var11 = var10.toString();
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("", var13, "hi!");
//     int var16 = var10.compareTo(var15);
//     com.google.javascript.rhino.Node var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", var18, var21, var23);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var6, var10, var23);
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi!: hi! line 3 : -8", var1, var2, var23);
// 
//   }

  public void test138() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test138"); }


    com.google.javascript.rhino.Node var7 = null;
    com.google.javascript.rhino.Node var9 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var14 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var14);
    boolean var17 = var12.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var21 = null;
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var26 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var21, var24, var26);
    com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var7, var12, var26);
    com.google.javascript.rhino.Node var30 = null;
    com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var35 = null;
    com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var40 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", var35, var38, var40);
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var30, var33, var40);
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var12, var40);
    com.google.javascript.rhino.Node var45 = null;
    com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var50 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", var45, var48, var50);
    com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-8), 10, var12, var50);
    com.google.javascript.jscomp.CheckLevel var54 = null;
    com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var54, "hi!");
    java.lang.String var57 = var56.toString();
    com.google.javascript.jscomp.CheckLevel var59 = null;
    com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.make("", var59, "hi!");
    int var62 = var56.compareTo(var61);
    java.lang.String[] var63 = null;
    com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make(var56, var63);
    com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    boolean var68 = var56.equals((java.lang.Object)var67);
    int var69 = var12.compareTo(var67);
    com.google.javascript.jscomp.CheckLevel var71 = null;
    com.google.javascript.jscomp.DiagnosticType var73 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var71, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var75 = null;
    com.google.javascript.jscomp.DiagnosticType var78 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var80 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("hi!", var75, var78, var80);
    int var82 = var73.compareTo(var78);
    int var83 = var12.compareTo(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "hi!: hi!"+ "'", var57.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 0);

  }

  public void test139() {}
//   public void test139() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test139"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.rhino.Node var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var8 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", var3, var6, var8);
//     boolean var11 = var6.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", var1, var6, var20);
//     com.google.javascript.jscomp.CheckLevel var26 = null;
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var28, "hi!");
//     java.lang.String var31 = var30.toString();
//     com.google.javascript.jscomp.CheckLevel var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
//     int var36 = var30.compareTo(var35);
//     java.lang.String[] var37 = null;
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make(var30, var37);
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var42 = var30.compareTo(var41);
//     com.google.javascript.rhino.Node var44 = null;
//     com.google.javascript.jscomp.CheckLevel var48 = null;
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var53 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var48, var51, var53);
//     com.google.javascript.jscomp.CheckLevel var58 = null;
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var63 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var58, var61, var63);
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var44, var51, var63);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("", 0, 1, var26, var41, var63);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make(var6, var63);
//     com.google.javascript.jscomp.CheckLevel var68 = null;
//     com.google.javascript.jscomp.MessageFormatter var69 = null;
//     java.lang.String var70 = var67.format(var68, var69);
// 
//   }

  public void test140() {}
//   public void test140() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test140"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var1, "hi!");
//     java.lang.String var4 = var3.toString();
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.make("", var6, "hi!");
//     int var9 = var3.compareTo(var8);
//     java.lang.String[] var10 = null;
//     com.google.javascript.jscomp.JSError var11 = com.google.javascript.jscomp.JSError.make(var3, var10);
//     int var12 = var11.getCharno();
//     java.lang.String var13 = var11.toString();
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var19, "hi!");
//     java.lang.String var22 = var21.toString();
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
//     int var27 = var21.compareTo(var26);
//     com.google.javascript.rhino.Node var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var34);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var17, var21, var34);
//     com.google.javascript.jscomp.DiagnosticType var37 = var36.getType();
//     boolean var38 = var11.equals((java.lang.Object)var37);
//     java.lang.String var39 = var11.toString();
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.MessageFormatter var41 = null;
//     java.lang.String var42 = var11.format(var40, var41);
// 
//   }

  public void test141() {}
//   public void test141() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test141"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at hi!: hi! line 0 : 3: ");
// 
//   }

  public void test142() {}
//   public void test142() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test142"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.rhino.Node var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var15 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var16 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var15);
//     com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var5, var8, var15);
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100", 67, 3, var3, var15);
// 
//   }

  public void test143() {}
//   public void test143() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test143"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi! at : hi!. hi! at hi!: hi! line 0 : 3 line (unknown line) : (unknown column)");
// 
//   }

  public void test144() {}
//   public void test144() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test144"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: : ");
// 
//   }

  public void test145() {}
//   public void test145() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test145"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var8, "hi!");
//     java.lang.String var11 = var10.toString();
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("", var13, "hi!");
//     int var16 = var10.compareTo(var15);
//     java.lang.String[] var17 = null;
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make(var10, var17);
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var22 = var10.compareTo(var21);
//     com.google.javascript.rhino.Node var24 = null;
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var31 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var31);
//     boolean var34 = var29.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var43 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var38, var41, var43);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var24, var29, var43);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var6, var21, var43);
//     com.google.javascript.jscomp.CheckLevel var48 = null;
//     com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var48, "hi!");
//     java.lang.String var51 = var50.toString();
//     com.google.javascript.jscomp.CheckLevel var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.make("", var53, "hi!");
//     int var56 = var50.compareTo(var55);
//     int var57 = var21.compareTo(var50);
//     com.google.javascript.jscomp.CheckLevel var61 = null;
//     com.google.javascript.jscomp.CheckLevel var63 = null;
//     com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.make("", var63, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var69 = null;
//     com.google.javascript.jscomp.CheckLevel var71 = null;
//     com.google.javascript.jscomp.DiagnosticType var73 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var71, "hi!");
//     java.lang.String var74 = var73.toString();
//     com.google.javascript.jscomp.CheckLevel var76 = null;
//     com.google.javascript.jscomp.DiagnosticType var78 = com.google.javascript.jscomp.DiagnosticType.make("", var76, "hi!");
//     int var79 = var73.compareTo(var78);
//     com.google.javascript.rhino.Node var81 = null;
//     com.google.javascript.jscomp.DiagnosticType var84 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var86 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!", var81, var84, var86);
//     com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var69, var73, var86);
//     com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", 10, 64, var61, var65, var86);
//     com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("", var1, var2, var50, var86);
// 
//   }

  public void test146() {}
//   public void test146() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test146"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     java.lang.String[] var5 = null;
//     com.google.javascript.jscomp.JSError var6 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", 58, 3, var3, var4, var5);
// 
//   }

  public void test147() {}
//   public void test147() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test147"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var15, "hi!");
//     java.lang.String var18 = var17.toString();
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("", var20, "hi!");
//     int var23 = var17.compareTo(var22);
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var29, "hi!");
//     java.lang.String var32 = var31.toString();
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     int var37 = var31.compareTo(var36);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var27, var31, var44);
//     com.google.javascript.jscomp.DiagnosticType var47 = var46.getType();
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.CheckLevel var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var53, "hi!");
//     java.lang.String var56 = var55.toString();
//     com.google.javascript.jscomp.CheckLevel var58 = null;
//     com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.make("", var58, "hi!");
//     int var61 = var55.compareTo(var60);
//     com.google.javascript.rhino.Node var63 = null;
//     com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var68 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!", var63, var66, var68);
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var51, var55, var68);
//     com.google.javascript.jscomp.DiagnosticType var71 = var70.getType();
//     boolean var72 = var46.equals((java.lang.Object)var70);
//     boolean var73 = var22.equals((java.lang.Object)var46);
//     com.google.javascript.jscomp.CheckLevel var77 = null;
//     com.google.javascript.jscomp.CheckLevel var79 = null;
//     com.google.javascript.jscomp.DiagnosticType var81 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var79, "hi!");
//     java.lang.String var82 = var81.toString();
//     com.google.javascript.jscomp.CheckLevel var84 = null;
//     com.google.javascript.jscomp.DiagnosticType var86 = com.google.javascript.jscomp.DiagnosticType.make("", var84, "hi!");
//     int var87 = var81.compareTo(var86);
//     com.google.javascript.rhino.Node var89 = null;
//     com.google.javascript.jscomp.DiagnosticType var92 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var94 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!", var89, var92, var94);
//     com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var77, var81, var94);
//     com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", 3, (-46), var13, var22, var94);
//     com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100", (-12), 10, var9, var94);
//     com.google.javascript.jscomp.JSError var99 = com.google.javascript.jscomp.JSError.make("", 0, (-1), var3, var94);
// 
//   }

  public void test148() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test148"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled(": : ", "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.CheckLevel var17 = null;
    com.google.javascript.jscomp.CheckLevel var19 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var19, "hi!");
    java.lang.String var22 = var21.toString();
    com.google.javascript.jscomp.CheckLevel var24 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
    int var27 = var21.compareTo(var26);
    com.google.javascript.rhino.Node var29 = null;
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var34 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var34);
    com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var17, var21, var34);
    java.lang.String[] var37 = null;
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 10, var13, var21, var37);
    int var39 = var9.compareTo(var21);
    java.lang.String var40 = var9.toString();
    com.google.javascript.jscomp.CheckLevel var44 = null;
    com.google.javascript.jscomp.CheckLevel var46 = null;
    com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var46, "hi!");
    java.lang.String var49 = var48.toString();
    com.google.javascript.jscomp.CheckLevel var51 = null;
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
    int var54 = var48.compareTo(var53);
    java.lang.String[] var55 = null;
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make(var48, var55);
    com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var60 = var48.compareTo(var59);
    com.google.javascript.rhino.Node var62 = null;
    com.google.javascript.jscomp.CheckLevel var66 = null;
    com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var71 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var66, var69, var71);
    com.google.javascript.jscomp.CheckLevel var76 = null;
    com.google.javascript.jscomp.DiagnosticType var79 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var81 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var76, var79, var81);
    com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var62, var69, var81);
    com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("", 0, 1, var44, var59, var81);
    com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", 0, 100, var6, var9, var81);
    int var86 = var2.compareTo(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "hi!: hi!"+ "'", var22.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "hi!: hi!: hi!"+ "'", var40.equals("hi!: hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "hi!: hi!"+ "'", var49.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == (-46));

  }

  public void test149() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test149"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var5 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
    java.lang.String var8 = var7.toString();
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
    int var13 = var7.compareTo(var12);
    java.lang.String[] var14 = null;
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make(var7, var14);
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var19 = var7.compareTo(var18);
    com.google.javascript.rhino.Node var21 = null;
    com.google.javascript.rhino.Node var23 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var28 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var23, var26, var28);
    boolean var31 = var26.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var35 = null;
    com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var40 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var35, var38, var40);
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", var21, var26, var40);
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var3, var18, var40);
    com.google.javascript.jscomp.CheckLevel var45 = null;
    com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var45, "hi!");
    java.lang.String var48 = var47.toString();
    com.google.javascript.jscomp.CheckLevel var50 = null;
    com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.make("", var50, "hi!");
    int var53 = var47.compareTo(var52);
    int var54 = var18.compareTo(var47);
    java.lang.String var55 = var47.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!: hi!"+ "'", var8.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "hi!: hi!"+ "'", var48.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!: hi!"+ "'", var55.equals("hi!: hi!"));

  }

  public void test150() {}
//   public void test150() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test150"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.rhino.Node var13 = null;
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
//     boolean var23 = var18.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var32 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var27, var30, var32);
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", var13, var18, var32);
//     com.google.javascript.rhino.Node var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var46 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!", var41, var44, var46);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var36, var39, var46);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var18, var46);
//     com.google.javascript.rhino.Node var51 = null;
//     com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var56 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", var51, var54, var56);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-8), 10, var18, var56);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi! line -8 : 10", var1, var2, var5, var56);
// 
//   }

  public void test151() {}
//   public void test151() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test151"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var0 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var5, ": ");
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.warning("", ": ");
//     int var11 = var7.compareTo(var10);
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var13, "hi!");
//     java.lang.String var16 = var15.toString();
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
//     int var21 = var15.compareTo(var20);
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var27, "hi!");
//     java.lang.String var30 = var29.toString();
//     com.google.javascript.jscomp.CheckLevel var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.make("", var32, "hi!");
//     int var35 = var29.compareTo(var34);
//     com.google.javascript.rhino.Node var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var42 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", var37, var40, var42);
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var25, var34, var42);
//     int var45 = var15.compareTo(var34);
//     com.google.javascript.rhino.Node var47 = null;
//     com.google.javascript.rhino.Node var49 = null;
//     com.google.javascript.rhino.Node var51 = null;
//     com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var56 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", var51, var54, var56);
//     boolean var59 = var54.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var63 = null;
//     com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var68 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var63, var66, var68);
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!", var49, var54, var68);
//     com.google.javascript.jscomp.DiagnosticType var71 = var70.getType();
//     com.google.javascript.jscomp.CheckLevel var75 = null;
//     com.google.javascript.jscomp.CheckLevel var77 = null;
//     com.google.javascript.jscomp.DiagnosticType var79 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var77, "hi!");
//     java.lang.String var80 = var79.toString();
//     com.google.javascript.jscomp.CheckLevel var82 = null;
//     com.google.javascript.jscomp.DiagnosticType var84 = com.google.javascript.jscomp.DiagnosticType.make("", var82, "hi!");
//     int var85 = var79.compareTo(var84);
//     com.google.javascript.rhino.Node var87 = null;
//     com.google.javascript.jscomp.DiagnosticType var90 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var92 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!", var87, var90, var92);
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var75, var84, var92);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make(": ", var47, var71, var92);
//     com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make(var34, var92);
//     com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", (-12), 12, var7, var92);
//     com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make(var0, var92);
// 
//   }

  public void test152() {}
//   public void test152() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test152"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: ");
// 
//   }

  public void test153() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test153"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var5 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
    java.lang.String var8 = var7.toString();
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
    int var13 = var7.compareTo(var12);
    java.lang.String[] var14 = null;
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make(var7, var14);
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var19 = var7.compareTo(var18);
    com.google.javascript.rhino.Node var21 = null;
    com.google.javascript.jscomp.CheckLevel var25 = null;
    com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var30 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var25, var28, var30);
    com.google.javascript.jscomp.CheckLevel var35 = null;
    com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var40 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var35, var38, var40);
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var21, var28, var40);
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("", 0, 1, var3, var18, var40);
    com.google.javascript.rhino.Node var48 = null;
    com.google.javascript.rhino.Node var50 = null;
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var55 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", var50, var53, var55);
    boolean var58 = var53.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var62 = null;
    com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var67 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var62, var65, var67);
    com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!", var48, var53, var67);
    com.google.javascript.rhino.Node var71 = null;
    com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var76 = null;
    com.google.javascript.jscomp.DiagnosticType var79 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var81 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("hi!", var76, var79, var81);
    com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var71, var74, var81);
    com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var53, var81);
    int var85 = var18.compareTo(var53);
    java.lang.String var86 = var53.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!: hi!"+ "'", var8.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == (-12));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + "hi!: hi!: hi!"+ "'", var86.equals("hi!: hi!: hi!"));

  }

  public void test154() {}
//   public void test154() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test154"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var8, "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var14 = var10.compareTo(var13);
//     com.google.javascript.rhino.Node var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var21 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", var16, var19, var21);
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var6, var10, var21);
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.disabled(": ", ": hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.rhino.Node var31 = null;
//     com.google.javascript.rhino.Node var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var38 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", var33, var36, var38);
//     boolean var41 = var36.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var50 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var45, var48, var50);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", var31, var36, var50);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi!: hi! line 3 : -8", (-46), 58, var29, var50);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("", var1, var2, var10, var50);
// 
//   }

  public void test155() {}
//   public void test155() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test155"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: ");
// 
//   }

  public void test156() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test156"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.CheckLevel var8 = null;
    com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var8, "hi!");
    java.lang.String var11 = var10.toString();
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("", var13, "hi!");
    int var16 = var10.compareTo(var15);
    java.lang.String[] var17 = null;
    com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make(var10, var17);
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var22 = var10.compareTo(var21);
    com.google.javascript.rhino.Node var24 = null;
    com.google.javascript.jscomp.CheckLevel var28 = null;
    com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var33 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var28, var31, var33);
    com.google.javascript.jscomp.CheckLevel var38 = null;
    com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var43 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var38, var41, var43);
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var24, var31, var43);
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("", 0, 1, var6, var21, var43);
    com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make(var2, var43);
    int var48 = var47.getCharno();
    int var49 = var47.getCharno();
    com.google.javascript.jscomp.DiagnosticType var50 = var47.getType();
    int var51 = var47.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!: hi!"+ "'", var11.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == (-1));

  }

  public void test157() {}
//   public void test157() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test157"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at (unknown source) line 0 : 1", "hi!: ");
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!", "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var24 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var19, var22, var24);
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var29, var32, var34);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var15, var22, var34);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", (-42), 3, var13, var34);
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("", var4, var7, var34);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var1, var2, var34);
// 
//   }

  public void test158() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test158"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!: hi!: hi!: hi!: hi!: hi!: hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test159() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test159"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var11 = null;
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var13, "hi!");
    java.lang.String var16 = var15.toString();
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
    int var21 = var15.compareTo(var20);
    java.lang.String[] var22 = null;
    com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make(var15, var22);
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var27 = var15.compareTo(var26);
    com.google.javascript.rhino.Node var29 = null;
    com.google.javascript.jscomp.CheckLevel var33 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var38 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var33, var36, var38);
    com.google.javascript.jscomp.CheckLevel var43 = null;
    com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var48 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var43, var46, var48);
    com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var29, var36, var48);
    com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("", 0, 1, var11, var26, var48);
    com.google.javascript.jscomp.CheckLevel var55 = null;
    com.google.javascript.jscomp.CheckLevel var57 = null;
    com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var57, "hi!");
    java.lang.String var60 = var59.toString();
    com.google.javascript.jscomp.CheckLevel var62 = null;
    com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.make("", var62, "hi!");
    int var65 = var59.compareTo(var64);
    java.lang.String[] var66 = null;
    com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make(var59, var66);
    com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var71 = var59.compareTo(var70);
    com.google.javascript.rhino.Node var73 = null;
    com.google.javascript.rhino.Node var75 = null;
    com.google.javascript.jscomp.DiagnosticType var78 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var80 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("hi!", var75, var78, var80);
    boolean var83 = var78.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var87 = null;
    com.google.javascript.jscomp.DiagnosticType var90 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var92 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var87, var90, var92);
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!", var73, var78, var92);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var55, var70, var92);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("hi!", 10, 10, var26, var92);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, var4, var92);
    com.google.javascript.jscomp.DiagnosticType var98 = var97.getType();
    java.lang.String var99 = var97.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!: hi!"+ "'", var16.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "hi!: hi!"+ "'", var60.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var99 + "' != '" + "hi!.  at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)"+ "'", var99.equals("hi!.  at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)"));

  }

  public void test160() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test160"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!: ");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test161() {}
//   public void test161() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test161"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var0 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at hi!: hi! line 0 : 3", var6, "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var14, "hi!");
//     java.lang.String var17 = var16.toString();
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var23, "hi!");
//     java.lang.String var26 = var25.toString();
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("", var28, "hi!");
//     int var31 = var25.compareTo(var30);
//     java.lang.String[] var32 = null;
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make(var25, var32);
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var37 = var25.compareTo(var36);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.rhino.Node var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var46 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!", var41, var44, var46);
//     boolean var49 = var44.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var58 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var53, var56, var58);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", var39, var44, var58);
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var21, var36, var58);
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 8, var12, var16, var58);
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3: ", 10, 3, var4, var8, var58);
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make(var0, var58);
// 
//   }

  public void test162() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test162"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: ", "hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test163() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test163"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", "");
    java.lang.String var3 = var2.toString();
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.CheckLevel var12 = null;
    com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var12, "hi!");
    java.lang.String var15 = var14.toString();
    com.google.javascript.jscomp.CheckLevel var17 = null;
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
    int var20 = var14.compareTo(var19);
    java.lang.String[] var21 = null;
    com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make(var14, var21);
    com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var26 = var14.compareTo(var25);
    com.google.javascript.rhino.Node var28 = null;
    com.google.javascript.jscomp.CheckLevel var32 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var37 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var32, var35, var37);
    com.google.javascript.jscomp.CheckLevel var42 = null;
    com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var47 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var42, var45, var47);
    com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var28, var35, var47);
    com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("", 0, 1, var10, var25, var47);
    com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make(var6, var47);
    com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!", "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    boolean var55 = var6.equals((java.lang.Object)"hi!: hi!");
    boolean var56 = var2.equals((java.lang.Object)var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: "+ "'", var3.equals("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi!: hi!"+ "'", var15.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);

  }

  public void test164() {}
//   public void test164() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test164"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var15, "hi!");
//     java.lang.String var18 = var17.toString();
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("", var20, "hi!");
//     int var23 = var17.compareTo(var22);
//     com.google.javascript.rhino.Node var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var30 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", var25, var28, var30);
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var13, var17, var30);
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", var6, var9, var30);
//     com.google.javascript.rhino.Node var35 = null;
//     com.google.javascript.rhino.Node var40 = null;
//     com.google.javascript.rhino.Node var42 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var47 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", var42, var45, var47);
//     boolean var50 = var45.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var54 = null;
//     com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var59 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var54, var57, var59);
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!", var40, var45, var59);
//     com.google.javascript.rhino.Node var63 = null;
//     com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var68 = null;
//     com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var73 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!", var68, var71, var73);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var63, var66, var73);
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var45, var73);
//     com.google.javascript.jscomp.DiagnosticType var77 = var76.getType();
//     com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var87 = null;
//     com.google.javascript.jscomp.DiagnosticType var90 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var92 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var87, var90, var92);
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 100, var83, var92);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", var35, var77, var92);
//     com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make(": hi!. hi! at hi!: hi! line 0 : 3", var4, var9, var92);
//     com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100", var1, var2, var92);
// 
//   }

  public void test165() {}
//   public void test165() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test165"); }
// 
// 
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var11 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var12 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var11);
//     boolean var14 = var9.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var18, var21, var23);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var4, var9, var23);
//     com.google.javascript.rhino.Node var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var37 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var37);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var27, var30, var37);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var9, var37);
//     com.google.javascript.jscomp.DiagnosticType var41 = var40.getType();
//     int var42 = var40.getCharno();
//     com.google.javascript.jscomp.DiagnosticType var43 = var40.getType();
//     int var44 = var40.getCharno();
//     com.google.javascript.jscomp.CheckLevel var45 = null;
//     com.google.javascript.jscomp.MessageFormatter var46 = null;
//     java.lang.String var47 = var40.format(var45, var46);
// 
//   }

  public void test166() {}
//   public void test166() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test166"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi! at hi!: hi! line -8 : 10");
// 
//   }

  public void test167() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test167"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var1, "hi!: hi!");
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var7 = var3.compareTo(var6);
    com.google.javascript.jscomp.CheckLevel var11 = null;
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var13, "hi!");
    java.lang.String var16 = var15.toString();
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
    int var21 = var15.compareTo(var20);
    com.google.javascript.rhino.Node var23 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var28 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var23, var26, var28);
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var11, var15, var28);
    com.google.javascript.jscomp.DiagnosticType var31 = var30.getType();
    java.lang.String var32 = var30.toString();
    com.google.javascript.rhino.Node var34 = null;
    com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var39 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var44 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var44);
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var34, var37, var44);
    boolean var47 = var30.equals((java.lang.Object)"hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    java.lang.String var48 = var30.toString();
    boolean var49 = var6.equals((java.lang.Object)var30);
    int var50 = var30.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == 12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!: hi!"+ "'", var16.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!. hi! at hi!: hi! line 0 : 3"+ "'", var32.equals("hi!. hi! at hi!: hi! line 0 : 3"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "hi!. hi! at hi!: hi! line 0 : 3"+ "'", var48.equals("hi!. hi! at hi!: hi! line 0 : 3"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 3);

  }

  public void test168() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test168"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make(": hi!", var1, "hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test169() {}
//   public void test169() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test169"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!: hi!: hi!", ". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0");
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var17 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!", var12, var15, var17);
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var7, var10, var17);
//     com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3.  at (unknown source) line (unknown line) : (unknown column)", var1, var2, var5, var17);
// 
//   }

  public void test170() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test170"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var1, "");
    com.google.javascript.rhino.Node var5 = null;
    com.google.javascript.jscomp.CheckLevel var7 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var7, "hi!");
    java.lang.String var10 = var9.toString();
    com.google.javascript.jscomp.CheckLevel var12 = null;
    com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("", var12, "hi!");
    int var15 = var9.compareTo(var14);
    java.lang.String[] var16 = null;
    com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make(var9, var16);
    int var18 = var17.getCharno();
    boolean var20 = var17.equals((java.lang.Object)'4');
    com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    boolean var24 = var17.equals((java.lang.Object)var23);
    com.google.javascript.rhino.Node var26 = null;
    com.google.javascript.rhino.Node var28 = null;
    com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var33 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", var28, var31, var33);
    boolean var36 = var31.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var40 = null;
    com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var45 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var40, var43, var45);
    com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!", var26, var31, var45);
    com.google.javascript.jscomp.CheckLevel var51 = null;
    com.google.javascript.jscomp.CheckLevel var53 = null;
    com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var53, "hi!");
    java.lang.String var56 = var55.toString();
    com.google.javascript.jscomp.CheckLevel var58 = null;
    com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.make("", var58, "hi!");
    int var61 = var55.compareTo(var60);
    java.lang.String[] var62 = null;
    com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make(var55, var62);
    com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var67 = var55.compareTo(var66);
    com.google.javascript.rhino.Node var69 = null;
    com.google.javascript.jscomp.CheckLevel var73 = null;
    com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var78 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var73, var76, var78);
    com.google.javascript.jscomp.CheckLevel var83 = null;
    com.google.javascript.jscomp.DiagnosticType var86 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var88 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var83, var86, var88);
    com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var69, var76, var88);
    com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("", 0, 1, var51, var66, var88);
    com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make(var31, var88);
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3: ", var5, var23, var88);
    int var94 = var3.compareTo(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!: hi!"+ "'", var10.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "hi!: hi!"+ "'", var56.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == (-64));

  }

  public void test171() {}
//   public void test171() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test171"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ": hi!: hi!");
// 
//   }

  public void test172() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test172"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", "hi!: hi!: hi!: hi!: hi!: hi!: hi!: hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test173() {}
//   public void test173() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test173"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.CheckLevel var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var11, "hi!");
//     java.lang.String var14 = var13.toString();
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.make("", var16, "hi!");
//     int var19 = var13.compareTo(var18);
//     com.google.javascript.rhino.Node var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var26 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", var21, var24, var26);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var9, var13, var26);
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("", (-64), 0, var5, var26);
//     com.google.javascript.jscomp.CheckLevel var30 = null;
//     com.google.javascript.jscomp.MessageFormatter var31 = null;
//     java.lang.String var32 = var29.format(var30, var31);
// 
//   }

  public void test174() {}
//   public void test174() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test174"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var9, "hi!");
//     java.lang.String var12 = var11.toString();
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
//     int var17 = var11.compareTo(var16);
//     java.lang.String[] var18 = null;
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make(var11, var18);
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var23 = var11.compareTo(var22);
//     com.google.javascript.rhino.Node var25 = null;
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var29, var32, var34);
//     com.google.javascript.jscomp.CheckLevel var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var39, var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var25, var32, var44);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("", 0, 1, var7, var22, var44);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", (-12), (-58), var3, var44);
// 
//   }

  public void test175() {}
//   public void test175() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test175"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var19 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var14, var17, var19);
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 100, var10, var19);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make(": hi!", var1, var4, var19);
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.MessageFormatter var24 = null;
//     java.lang.String var25 = var22.format(var23, var24);
// 
//   }

  public void test176() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test176"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var1, ": hi!");
    com.google.javascript.rhino.Node var5 = null;
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
    com.google.javascript.rhino.Node var13 = null;
    com.google.javascript.rhino.Node var15 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var20 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
    boolean var23 = var18.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var27 = null;
    com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var32 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var27, var30, var32);
    com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", var13, var18, var32);
    com.google.javascript.jscomp.DiagnosticType var35 = var34.getType();
    com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!. hi! at hi!: hi! line 0 : 3");
    int var39 = var35.compareTo(var38);
    com.google.javascript.rhino.Node var41 = null;
    com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.warning(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!. hi! at hi!: hi! line 0 : 3");
    com.google.javascript.rhino.Node var46 = null;
    com.google.javascript.rhino.Node var48 = null;
    com.google.javascript.rhino.Node var50 = null;
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var55 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", var50, var53, var55);
    boolean var58 = var53.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var62 = null;
    com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var67 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var62, var65, var67);
    com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!", var48, var53, var67);
    com.google.javascript.jscomp.DiagnosticType var70 = var69.getType();
    com.google.javascript.jscomp.CheckLevel var74 = null;
    com.google.javascript.jscomp.CheckLevel var76 = null;
    com.google.javascript.jscomp.DiagnosticType var78 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var76, "hi!");
    java.lang.String var79 = var78.toString();
    com.google.javascript.jscomp.CheckLevel var81 = null;
    com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.make("", var81, "hi!");
    int var84 = var78.compareTo(var83);
    com.google.javascript.rhino.Node var86 = null;
    com.google.javascript.jscomp.DiagnosticType var89 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var91 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!", var86, var89, var91);
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var74, var83, var91);
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make(": ", var46, var70, var91);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var41, var44, var91);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("", 66, (-12), var35, var91);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi!: hi! line 3 : -8", var5, var8, var91);
    com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make(var3, var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "hi!: hi!"+ "'", var79.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);

  }

  public void test177() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test177"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.rhino.Node var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var8 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", var3, var6, var8);
    boolean var11 = var6.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var20 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var15, var18, var20);
    com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", var1, var6, var20);
    com.google.javascript.jscomp.CheckLevel var24 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var24, "hi!");
    java.lang.String var27 = var26.toString();
    com.google.javascript.jscomp.CheckLevel var29 = null;
    com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("", var29, "hi!");
    int var32 = var26.compareTo(var31);
    java.lang.String[] var33 = null;
    com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make(var26, var33);
    int var35 = var34.getCharno();
    java.lang.String var36 = var34.toString();
    com.google.javascript.jscomp.CheckLevel var40 = null;
    com.google.javascript.jscomp.CheckLevel var42 = null;
    com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var42, "hi!");
    java.lang.String var45 = var44.toString();
    com.google.javascript.jscomp.CheckLevel var47 = null;
    com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.make("", var47, "hi!");
    int var50 = var44.compareTo(var49);
    com.google.javascript.rhino.Node var52 = null;
    com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var57 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!", var52, var55, var57);
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var40, var44, var57);
    com.google.javascript.jscomp.DiagnosticType var60 = var59.getType();
    boolean var61 = var34.equals((java.lang.Object)var60);
    int var62 = var6.compareTo(var60);
    java.lang.String var63 = var6.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "hi!: hi!"+ "'", var27.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "hi!. hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var36.equals("hi!. hi! at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "hi!: hi!"+ "'", var45.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "hi!: hi!: hi!"+ "'", var63.equals("hi!: hi!: hi!"));

  }

  public void test178() {}
//   public void test178() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test178"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var16, "hi!");
//     java.lang.String var19 = var18.toString();
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.make("", var21, "hi!");
//     int var24 = var18.compareTo(var23);
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var31 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var31);
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var14, var18, var31);
//     java.lang.String[] var34 = null;
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 10, var10, var18, var34);
//     int var36 = var6.compareTo(var18);
//     java.lang.String var37 = var6.toString();
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.CheckLevel var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var43, "hi!");
//     java.lang.String var46 = var45.toString();
//     com.google.javascript.jscomp.CheckLevel var48 = null;
//     com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("", var48, "hi!");
//     int var51 = var45.compareTo(var50);
//     java.lang.String[] var52 = null;
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make(var45, var52);
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var57 = var45.compareTo(var56);
//     com.google.javascript.rhino.Node var59 = null;
//     com.google.javascript.jscomp.CheckLevel var63 = null;
//     com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var68 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var63, var66, var68);
//     com.google.javascript.jscomp.CheckLevel var73 = null;
//     com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var78 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var73, var76, var78);
//     com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var59, var66, var78);
//     com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("", 0, 1, var41, var56, var78);
//     com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", 0, 100, var3, var6, var78);
//     int var83 = var82.getCharno();
//     com.google.javascript.jscomp.CheckLevel var84 = null;
//     com.google.javascript.jscomp.MessageFormatter var85 = null;
//     java.lang.String var86 = var82.format(var84, var85);
// 
//   }

  public void test179() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test179"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!: hi!: hi!: hi!: hi!: hi!: hi!", "hi!: hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test180() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test180"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at (unknown source) line 0 : 1", "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test181() {}
//   public void test181() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test181"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var3, var7, var20);
//     com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
//     java.lang.String var24 = var22.toString();
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var36 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", var31, var34, var36);
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var26, var29, var36);
//     boolean var39 = var22.equals((java.lang.Object)"hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     int var40 = var22.getCharno();
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.MessageFormatter var42 = null;
//     java.lang.String var43 = var22.format(var41, var42);
// 
//   }

  public void test182() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test182"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.CheckLevel var14 = null;
    com.google.javascript.jscomp.CheckLevel var16 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var16, "hi!");
    java.lang.String var19 = var18.toString();
    com.google.javascript.jscomp.CheckLevel var21 = null;
    com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.make("", var21, "hi!");
    int var24 = var18.compareTo(var23);
    com.google.javascript.rhino.Node var26 = null;
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var31 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var31);
    com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var14, var18, var31);
    java.lang.String[] var34 = null;
    com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 10, var10, var18, var34);
    int var36 = var6.compareTo(var18);
    java.lang.String var37 = var6.toString();
    com.google.javascript.jscomp.CheckLevel var41 = null;
    com.google.javascript.jscomp.CheckLevel var43 = null;
    com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var43, "hi!");
    java.lang.String var46 = var45.toString();
    com.google.javascript.jscomp.CheckLevel var48 = null;
    com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("", var48, "hi!");
    int var51 = var45.compareTo(var50);
    java.lang.String[] var52 = null;
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make(var45, var52);
    com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var57 = var45.compareTo(var56);
    com.google.javascript.rhino.Node var59 = null;
    com.google.javascript.jscomp.CheckLevel var63 = null;
    com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var68 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var63, var66, var68);
    com.google.javascript.jscomp.CheckLevel var73 = null;
    com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var78 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var73, var76, var78);
    com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var59, var66, var78);
    com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("", 0, 1, var41, var56, var78);
    com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", 0, 100, var3, var6, var78);
    int var83 = var82.getCharno();
    java.lang.String var84 = var82.toString();
    java.lang.String var85 = var82.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "hi!: hi!"+ "'", var19.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!: hi!: hi!"+ "'", var37.equals("hi!: hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "hi!: hi!"+ "'", var46.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 100);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + "hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100"+ "'", var84.equals("hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100"+ "'", var85.equals("hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100"));

  }

  public void test183() {}
//   public void test183() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test183"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.rhino.Node var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var17 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!", var12, var15, var17);
//     boolean var20 = var15.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var29 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var24, var27, var29);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", var10, var15, var29);
//     com.google.javascript.rhino.Node var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var43 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", var38, var41, var43);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var33, var36, var43);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var15, var43);
//     com.google.javascript.rhino.Node var48 = null;
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var53 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", var48, var51, var53);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-8), 10, var15, var53);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): : : ", var1, var2, var53);
// 
//   }

  public void test184() {}
//   public void test184() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test184"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100");
//     int var10 = var6.compareTo(var9);
//     com.google.javascript.rhino.Node var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var17 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!", var12, var15, var17);
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!: ", 66, 3, var3, var9, var17);
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.MessageFormatter var21 = null;
//     java.lang.String var22 = var19.format(var20, var21);
// 
//   }

  public void test185() {}
//   public void test185() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test185"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var3, "hi!");
//     java.lang.String var6 = var5.toString();
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("", var8, "hi!");
//     int var11 = var5.compareTo(var10);
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var17, "hi!");
//     java.lang.String var20 = var19.toString();
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("", var22, "hi!");
//     int var25 = var19.compareTo(var24);
//     com.google.javascript.rhino.Node var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var32 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", var27, var30, var32);
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var15, var24, var32);
//     int var35 = var5.compareTo(var24);
//     java.lang.String[] var36 = null;
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", var1, var24, var36);
//     com.google.javascript.jscomp.CheckLevel var38 = null;
//     com.google.javascript.jscomp.MessageFormatter var39 = null;
//     java.lang.String var40 = var37.format(var38, var39);
// 
//   }

  public void test186() {}
//   public void test186() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test186"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.warning(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var15 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var16 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var15);
//     boolean var18 = var13.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var27 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var22, var25, var27);
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var8, var13, var27);
//     com.google.javascript.jscomp.DiagnosticType var30 = var29.getType();
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.CheckLevel var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var36, "hi!");
//     java.lang.String var39 = var38.toString();
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.make("", var41, "hi!");
//     int var44 = var38.compareTo(var43);
//     com.google.javascript.rhino.Node var46 = null;
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var51 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", var46, var49, var51);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var34, var43, var51);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make(": ", var6, var30, var51);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, var4, var51);
//     java.lang.String var56 = var55.toString();
//     com.google.javascript.jscomp.CheckLevel var57 = null;
//     com.google.javascript.jscomp.MessageFormatter var58 = null;
//     java.lang.String var59 = var55.format(var57, var58);
// 
//   }

  public void test187() {}
//   public void test187() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test187"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.rhino.Node var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var15 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var16 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var15);
//     com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var5, var8, var15);
//     java.lang.String[] var18 = null;
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!: hi!", 5, 5, var3, var8, var18);
//     java.lang.Object var20 = null;
//     boolean var21 = var19.equals(var20);
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.MessageFormatter var23 = null;
//     java.lang.String var24 = var19.format(var22, var23);
// 
//   }

  public void test188() {}
//   public void test188() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test188"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var4, "hi!");
//     java.lang.String var7 = var6.toString();
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     int var12 = var6.compareTo(var11);
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var25, "hi!");
//     java.lang.String var28 = var27.toString();
//     com.google.javascript.jscomp.CheckLevel var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.make("", var30, "hi!");
//     int var33 = var27.compareTo(var32);
//     com.google.javascript.rhino.Node var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var40 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", var35, var38, var40);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var23, var27, var40);
//     java.lang.String[] var43 = null;
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 10, var19, var27, var43);
//     int var45 = var15.compareTo(var27);
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
//     com.google.javascript.jscomp.CheckLevel var52 = null;
//     com.google.javascript.jscomp.CheckLevel var54 = null;
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var54, "hi!");
//     java.lang.String var57 = var56.toString();
//     com.google.javascript.jscomp.CheckLevel var59 = null;
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.make("", var59, "hi!");
//     int var62 = var56.compareTo(var61);
//     java.lang.String[] var63 = null;
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make(var56, var63);
//     com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var68 = var56.compareTo(var67);
//     com.google.javascript.rhino.Node var70 = null;
//     com.google.javascript.jscomp.CheckLevel var74 = null;
//     com.google.javascript.jscomp.DiagnosticType var77 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var79 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var74, var77, var79);
//     com.google.javascript.jscomp.CheckLevel var84 = null;
//     com.google.javascript.jscomp.DiagnosticType var87 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var89 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var84, var87, var89);
//     com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var70, var77, var89);
//     com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("", 0, 1, var52, var67, var89);
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make(var48, var89);
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make(var15, var89);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("", var1, var2, var6, var89);
// 
//   }

  public void test189() {}
//   public void test189() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test189"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var1, "hi!");
//     java.lang.String var4 = var3.toString();
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.make("", var6, "hi!");
//     int var9 = var3.compareTo(var8);
//     java.lang.String[] var10 = null;
//     com.google.javascript.jscomp.JSError var11 = com.google.javascript.jscomp.JSError.make(var3, var10);
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var15 = var3.compareTo(var14);
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var17, "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var23 = var19.compareTo(var22);
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var29, "hi!");
//     java.lang.String var32 = var31.toString();
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     int var37 = var31.compareTo(var36);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var27, var31, var44);
//     com.google.javascript.jscomp.DiagnosticType var47 = var46.getType();
//     java.lang.String var48 = var46.toString();
//     com.google.javascript.rhino.Node var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var55 = null;
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var60 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!", var55, var58, var60);
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var50, var53, var60);
//     boolean var63 = var46.equals((java.lang.Object)"hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     java.lang.String var64 = var46.toString();
//     boolean var65 = var22.equals((java.lang.Object)var46);
//     boolean var66 = var3.equals((java.lang.Object)var46);
//     com.google.javascript.jscomp.DiagnosticType var67 = var46.getType();
//     com.google.javascript.jscomp.CheckLevel var68 = null;
//     com.google.javascript.jscomp.MessageFormatter var69 = null;
//     java.lang.String var70 = var46.format(var68, var69);
// 
//   }

  public void test190() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test190"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var5 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
    java.lang.String var8 = var7.toString();
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
    int var13 = var7.compareTo(var12);
    com.google.javascript.rhino.Node var15 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var20 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
    com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var3, var7, var20);
    com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
    com.google.javascript.jscomp.CheckLevel var27 = null;
    com.google.javascript.jscomp.CheckLevel var29 = null;
    com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var29, "hi!");
    java.lang.String var32 = var31.toString();
    com.google.javascript.jscomp.CheckLevel var34 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
    int var37 = var31.compareTo(var36);
    com.google.javascript.rhino.Node var39 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var44 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var44);
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var27, var31, var44);
    com.google.javascript.jscomp.DiagnosticType var47 = var46.getType();
    boolean var48 = var22.equals((java.lang.Object)var46);
    int var49 = var46.getCharno();
    com.google.javascript.jscomp.DiagnosticType var50 = var46.getType();
    com.google.javascript.jscomp.DiagnosticType var51 = var46.getType();
    com.google.javascript.jscomp.DiagnosticType var52 = var46.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!: hi!"+ "'", var8.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!: hi!"+ "'", var32.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);

  }

  public void test191() {}
//   public void test191() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test191"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ".  at hi!: hi!. hi! at hi!: hi! line (unknown line) : 10 line -46 : 1");
// 
//   }

  public void test192() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test192"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.make("", var3, "hi!: hi!: hi!: hi!");
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", ": hi!. hi! at hi!: hi! line 0 : 3");
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!: hi!");
    com.google.javascript.rhino.Node var22 = null;
    com.google.javascript.jscomp.CheckLevel var26 = null;
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var31 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var26, var29, var31);
    com.google.javascript.jscomp.CheckLevel var36 = null;
    com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var41 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var36, var39, var41);
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var22, var29, var41);
    com.google.javascript.rhino.Node var45 = null;
    com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var50 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", var45, var48, var50);
    com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", 8, 100, var29, var50);
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("", (-64), (-64), var17, var50);
    com.google.javascript.jscomp.DiagnosticType var54 = var53.getType();
    boolean var55 = var11.equals((java.lang.Object)var54);
    com.google.javascript.jscomp.CheckLevel var59 = null;
    com.google.javascript.jscomp.CheckLevel var63 = null;
    com.google.javascript.jscomp.CheckLevel var67 = null;
    com.google.javascript.jscomp.CheckLevel var69 = null;
    com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var69, "hi!");
    java.lang.String var72 = var71.toString();
    com.google.javascript.jscomp.CheckLevel var74 = null;
    com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.make("", var74, "hi!");
    int var77 = var71.compareTo(var76);
    com.google.javascript.rhino.Node var79 = null;
    com.google.javascript.jscomp.DiagnosticType var82 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var84 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!", var79, var82, var84);
    com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var67, var71, var84);
    java.lang.String[] var87 = null;
    com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 10, var63, var71, var87);
    com.google.javascript.rhino.Node var90 = null;
    com.google.javascript.jscomp.DiagnosticType var93 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var95 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("hi!", var90, var93, var95);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("", (-1), 10, var59, var71, var95);
    com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", 8, (-64), var54, var95);
    com.google.javascript.jscomp.JSError var99 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100", var1, var5, var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + "hi!: hi!"+ "'", var72.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var99);

  }

  public void test193() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test193"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!: hi!: hi!: hi!: hi!: hi!: hi!", var1, "");
    com.google.javascript.jscomp.CheckLevel var5 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var5, ": ");
    com.google.javascript.rhino.Node var9 = null;
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var18 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var13, var16, var18);
    com.google.javascript.jscomp.CheckLevel var23 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var28 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var23, var26, var28);
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var9, var16, var28);
    com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make(var7, var28);
    int var32 = var31.getCharno();
    com.google.javascript.rhino.Node var34 = null;
    com.google.javascript.jscomp.CheckLevel var36 = null;
    com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var36, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var40 = null;
    com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var45 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", var40, var43, var45);
    int var47 = var38.compareTo(var43);
    com.google.javascript.jscomp.CheckLevel var51 = null;
    com.google.javascript.jscomp.CheckLevel var53 = null;
    com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var53, "hi!");
    java.lang.String var56 = var55.toString();
    com.google.javascript.jscomp.CheckLevel var58 = null;
    com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.make("", var58, "hi!");
    int var61 = var55.compareTo(var60);
    java.lang.String[] var62 = null;
    com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make(var55, var62);
    com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var67 = var55.compareTo(var66);
    com.google.javascript.rhino.Node var69 = null;
    com.google.javascript.jscomp.CheckLevel var73 = null;
    com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var78 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var73, var76, var78);
    com.google.javascript.jscomp.CheckLevel var83 = null;
    com.google.javascript.jscomp.DiagnosticType var86 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var88 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var83, var86, var88);
    com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var69, var76, var88);
    com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("", 0, 1, var51, var66, var88);
    com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var34, var38, var88);
    java.lang.String[] var93 = null;
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make(var38, var93);
    java.lang.String var95 = var94.toString();
    boolean var96 = var31.equals((java.lang.Object)var94);
    java.lang.String var97 = var94.toString();
    boolean var98 = var3.equals((java.lang.Object)var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "hi!: hi!"+ "'", var56.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + "hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at (unknown source) line (unknown line) : (unknown column)"+ "'", var95.equals("hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var97 + "' != '" + "hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at (unknown source) line (unknown line) : (unknown column)"+ "'", var97.equals("hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == false);

  }

  public void test194() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test194"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(".  at hi!: hi!. hi! at hi!: hi! line (unknown line) : 10 line -46 : 1");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test195() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test195"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at hi!: hi! line 0 : 3: ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test196() {}
//   public void test196() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test196"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var3, var7, var20);
//     com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
//     java.lang.String var24 = var22.toString();
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var36 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", var31, var34, var36);
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var26, var29, var36);
//     boolean var39 = var22.equals((java.lang.Object)"hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     java.lang.String var40 = var22.toString();
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.MessageFormatter var42 = null;
//     java.lang.String var43 = var22.format(var41, var42);
// 
//   }

  public void test197() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test197"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.disabled(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0. hi!. hi! at hi!: hi! line 0 : 3 at hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)", "hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: ");
    com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: hi!: hi!", "hi!: hi!: hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var14 = null;
    com.google.javascript.jscomp.CheckLevel var16 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var16, "hi!: hi!");
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var22 = var18.compareTo(var21);
    com.google.javascript.rhino.Node var24 = null;
    com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var29 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", var24, var27, var29);
    com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var14, var18, var29);
    com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", (-1), 0, var10, var29);
    com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)", var1, var4, var29);
    com.google.javascript.rhino.Node var35 = null;
    com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.disabled(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0. hi!. hi! at hi!: hi! line 0 : 3 at hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)", "hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: ");
    com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: hi!: hi!", "hi!: hi!: hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var48 = null;
    com.google.javascript.jscomp.CheckLevel var50 = null;
    com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var50, "hi!: hi!");
    com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var56 = var52.compareTo(var55);
    com.google.javascript.rhino.Node var58 = null;
    com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var63 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("hi!", var58, var61, var63);
    com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var48, var52, var63);
    com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", (-1), 0, var44, var63);
    com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)", var35, var38, var63);
    boolean var68 = var4.equals((java.lang.Object)var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);

  }

  public void test198() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test198"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var5 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var5, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var9 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var14 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var14);
    int var16 = var7.compareTo(var12);
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at (unknown source) line 0 : 1", "");
    com.google.javascript.jscomp.CheckLevel var24 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var24, "hi!: hi!. hi! at (unknown source) line -64 : 100");
    com.google.javascript.jscomp.CheckLevel var28 = null;
    com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var28, "hi!");
    java.lang.String var31 = var30.toString();
    com.google.javascript.jscomp.CheckLevel var33 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
    int var36 = var30.compareTo(var35);
    java.lang.String[] var37 = null;
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make(var30, var37);
    int var39 = var38.getCharno();
    java.lang.String var40 = var38.toString();
    com.google.javascript.jscomp.CheckLevel var44 = null;
    com.google.javascript.jscomp.CheckLevel var46 = null;
    com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var46, "hi!");
    java.lang.String var49 = var48.toString();
    com.google.javascript.jscomp.CheckLevel var51 = null;
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
    int var54 = var48.compareTo(var53);
    com.google.javascript.rhino.Node var56 = null;
    com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var61 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!", var56, var59, var61);
    com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var44, var48, var61);
    com.google.javascript.jscomp.DiagnosticType var64 = var63.getType();
    boolean var65 = var38.equals((java.lang.Object)var64);
    com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at hi!: hi! line 0 : 3");
    com.google.javascript.jscomp.CheckLevel var75 = null;
    com.google.javascript.jscomp.CheckLevel var77 = null;
    com.google.javascript.jscomp.DiagnosticType var79 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var77, "hi!");
    java.lang.String var80 = var79.toString();
    com.google.javascript.jscomp.CheckLevel var82 = null;
    com.google.javascript.jscomp.DiagnosticType var84 = com.google.javascript.jscomp.DiagnosticType.make("", var82, "hi!");
    int var85 = var79.compareTo(var84);
    com.google.javascript.rhino.Node var87 = null;
    com.google.javascript.jscomp.DiagnosticType var90 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var92 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!", var87, var90, var92);
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var75, var79, var92);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("", (-64), 0, var71, var92);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make(var64, var92);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make(var26, var92);
    com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi!: hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100 line -46 : (unknown column)", 46, 10, var22, var92);
    com.google.javascript.jscomp.JSError var99 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3.  at (unknown source) line (unknown line) : (unknown column)", 12, 0, var3, var12, var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "hi!: hi!"+ "'", var31.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "hi!. hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var40.equals("hi!. hi! at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "hi!: hi!"+ "'", var49.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "hi!: hi!"+ "'", var80.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var99);

  }

  public void test199() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test199"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at hi!: hi! line 0 : 3");
    java.lang.String var6 = var5.toString();
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
    int var10 = var5.compareTo(var9);
    com.google.javascript.rhino.Node var12 = null;
    com.google.javascript.rhino.Node var14 = null;
    com.google.javascript.rhino.Node var16 = null;
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var21 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", var16, var19, var21);
    boolean var24 = var19.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var28 = null;
    com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var33 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var28, var31, var33);
    com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", var14, var19, var33);
    com.google.javascript.jscomp.DiagnosticType var36 = var35.getType();
    com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.error(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!. hi! at hi!: hi! line 0 : 3");
    int var40 = var36.compareTo(var39);
    com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: hi!: hi!", "hi!: hi!: hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var50 = null;
    com.google.javascript.jscomp.CheckLevel var52 = null;
    com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var52, "hi!: hi!");
    com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var58 = var54.compareTo(var57);
    com.google.javascript.rhino.Node var60 = null;
    com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var65 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!", var60, var63, var65);
    com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var50, var54, var65);
    com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", (-1), 0, var46, var65);
    com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var12, var36, var65);
    com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3: ", 1, (-58), var9, var65);
    int var71 = var70.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ": hi!. hi! at hi!: hi! line 0 : 3"+ "'", var6.equals(": hi!. hi! at hi!: hi! line 0 : 3"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == (-3));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == (-58));

  }

  public void test200() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test200"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0. hi!. hi! at hi!: hi! line 0 : 3 at hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)", "hi!: hi!. hi!: hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100 line -46 : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test201() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test201"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.rhino.Node var5 = null;
    com.google.javascript.rhino.Node var7 = null;
    com.google.javascript.rhino.Node var9 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var14 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var14);
    boolean var17 = var12.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var21 = null;
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var26 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var21, var24, var26);
    com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var7, var12, var26);
    com.google.javascript.jscomp.DiagnosticType var29 = var28.getType();
    com.google.javascript.jscomp.CheckLevel var33 = null;
    com.google.javascript.jscomp.CheckLevel var35 = null;
    com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var35, "hi!");
    java.lang.String var38 = var37.toString();
    com.google.javascript.jscomp.CheckLevel var40 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("", var40, "hi!");
    int var43 = var37.compareTo(var42);
    com.google.javascript.rhino.Node var45 = null;
    com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var50 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", var45, var48, var50);
    com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var33, var42, var50);
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make(": ", var5, var29, var50);
    com.google.javascript.jscomp.CheckLevel var57 = null;
    com.google.javascript.jscomp.CheckLevel var59 = null;
    com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var59, "hi!: hi!");
    com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var65 = var61.compareTo(var64);
    com.google.javascript.rhino.Node var67 = null;
    com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var72 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", var67, var70, var72);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var57, var61, var72);
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", (-1), (-8), var3, var29, var72);
    java.lang.String var76 = var75.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "hi!: hi!"+ "'", var38.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "hi!: hi!. hi! at hi!. hi! at hi!: hi! line 0 : 3 line (unknown line) : -8"+ "'", var76.equals("hi!: hi!. hi! at hi!. hi! at hi!: hi! line 0 : 3 line (unknown line) : -8"));

  }

  public void test202() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test202"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    java.lang.String[] var7 = null;
    com.google.javascript.jscomp.JSError var8 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", 35, (-64), var3, var6, var7);
    com.google.javascript.jscomp.CheckLevel var12 = null;
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var17 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var12, var15, var17);
    java.lang.String var19 = var18.toString();
    com.google.javascript.jscomp.DiagnosticType var20 = var18.getType();
    java.lang.String var21 = var18.toString();
    java.lang.String var22 = var18.toString();
    int var23 = var18.getCharno();
    boolean var24 = var8.equals((java.lang.Object)var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "hi!: hi!. hi! at hi!: hi! line (unknown line) : 10"+ "'", var19.equals("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "hi!: hi!. hi! at hi!: hi! line (unknown line) : 10"+ "'", var21.equals("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "hi!: hi!. hi! at hi!: hi! line (unknown line) : 10"+ "'", var22.equals("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);

  }

  public void test203() {}
//   public void test203() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test203"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ". hi! at hi! line (unknown line) : 10");
// 
//   }

  public void test204() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test204"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!: hi!: hi!: hi!");
    java.lang.String var3 = var2.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!: hi!: hi!"+ "'", var3.equals("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!: hi!: hi!"));

  }

  public void test205() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test205"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!. hi!: hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100 line -46 : (unknown column)");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test206() {}
//   public void test206() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test206"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", var4, ". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0");
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!", "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var14 = null;
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var18, var21, var23);
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var33 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var28, var31, var33);
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var14, var21, var33);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", (-42), 3, var12, var33);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("", var1, var2, var6, var33);
// 
//   }

  public void test207() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test207"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var1, ": hi!");
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at hi!: hi! line 0 : 3");
    com.google.javascript.jscomp.CheckLevel var16 = null;
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var18, "hi!");
    java.lang.String var21 = var20.toString();
    com.google.javascript.jscomp.CheckLevel var23 = null;
    com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("", var23, "hi!");
    int var26 = var20.compareTo(var25);
    com.google.javascript.rhino.Node var28 = null;
    com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var33 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", var28, var31, var33);
    com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var16, var20, var33);
    com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("", (-64), 0, var12, var33);
    java.lang.String var37 = var36.toString();
    boolean var38 = var6.equals((java.lang.Object)var36);
    boolean var39 = var3.equals((java.lang.Object)var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "hi!: hi!"+ "'", var21.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0"+ "'", var37.equals(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);

  }

  public void test208() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test208"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test209() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test209"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at hi!: hi! line 0 : 3", "hi!");
    com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var23 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var18, var21, var23);
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 100, var14, var23);
    com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100", (-28), (-3), var8, var23);
    com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make(var2, var23);
    java.lang.String[] var28 = null;
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make(var2, var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);

  }

  public void test210() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test210"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var1, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var5 = null;
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var10 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var11 = com.google.javascript.jscomp.JSError.make("hi!", var5, var8, var10);
    int var12 = var3.compareTo(var8);
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    int var16 = var3.compareTo(var15);
    com.google.javascript.jscomp.CheckLevel var20 = null;
    com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!: hi!", "");
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
    com.google.javascript.jscomp.CheckLevel var30 = null;
    com.google.javascript.jscomp.CheckLevel var32 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var32, "hi!");
    java.lang.String var35 = var34.toString();
    com.google.javascript.jscomp.CheckLevel var37 = null;
    com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.make("", var37, "hi!");
    int var40 = var34.compareTo(var39);
    java.lang.String[] var41 = null;
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make(var34, var41);
    com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var46 = var34.compareTo(var45);
    com.google.javascript.rhino.Node var48 = null;
    com.google.javascript.jscomp.CheckLevel var52 = null;
    com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var57 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var52, var55, var57);
    com.google.javascript.jscomp.CheckLevel var62 = null;
    com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var67 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var62, var65, var67);
    com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var48, var55, var67);
    com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("", 0, 1, var30, var45, var67);
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make(var26, var67);
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", 10, 8, var20, var23, var67);
    boolean var73 = var15.equals((java.lang.Object)var23);
    com.google.javascript.jscomp.CheckLevel var75 = null;
    com.google.javascript.jscomp.DiagnosticType var77 = com.google.javascript.jscomp.DiagnosticType.make("", var75, "hi!: hi!: hi!: hi!");
    boolean var78 = var23.equals((java.lang.Object)var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "hi!: hi!"+ "'", var35.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == false);

  }

  public void test211() {}
//   public void test211() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test211"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at hi!: hi! line (unknown line) : (unknown column)");
// 
//   }

  public void test212() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test212"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "hi!. hi! at hi!: hi! line 0 : 3: ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test213() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test213"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var7 = null;
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var9, "hi!");
    java.lang.String var12 = var11.toString();
    com.google.javascript.jscomp.CheckLevel var14 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
    int var17 = var11.compareTo(var16);
    com.google.javascript.rhino.Node var19 = null;
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var24 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var19, var22, var24);
    com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var7, var11, var24);
    com.google.javascript.jscomp.DiagnosticType var27 = var26.getType();
    com.google.javascript.jscomp.CheckLevel var31 = null;
    com.google.javascript.jscomp.CheckLevel var33 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var33, "hi!");
    java.lang.String var36 = var35.toString();
    com.google.javascript.jscomp.CheckLevel var38 = null;
    com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.make("", var38, "hi!");
    int var41 = var35.compareTo(var40);
    com.google.javascript.rhino.Node var43 = null;
    com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var48 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var48);
    com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var31, var35, var48);
    com.google.javascript.jscomp.DiagnosticType var51 = var50.getType();
    boolean var52 = var26.equals((java.lang.Object)var50);
    int var53 = var50.getCharno();
    com.google.javascript.jscomp.DiagnosticType var54 = var50.getType();
    com.google.javascript.jscomp.DiagnosticType var55 = var50.getType();
    java.lang.String[] var56 = null;
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line -64 : 100", 64, 8, var3, var55, var56);
    java.lang.String var58 = var55.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "hi!: hi!"+ "'", var12.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "hi!: hi!"+ "'", var36.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "hi!: hi!"+ "'", var58.equals("hi!: hi!"));

  }

  public void test214() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test214"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100", "hi!. hi! at hi!: hi!: hi! line 3 : -8");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test215() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test215"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: hi!: hi!", "hi!. hi! at hi!: hi! line 0 : 3");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test216() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test216"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at hi!: hi! line 0 : 3: ", var1, "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100");
    java.lang.String var4 = var3.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!. hi! at hi!: hi! line 0 : 3: : hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100"+ "'", var4.equals("hi!. hi! at hi!: hi! line 0 : 3: : hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100"));

  }

  public void test217() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test217"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100");
    int var6 = var2.compareTo(var5);
    com.google.javascript.rhino.Node var8 = null;
    com.google.javascript.rhino.Node var10 = null;
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var15 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var16 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var15);
    boolean var18 = var13.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var22 = null;
    com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var27 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var22, var25, var27);
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var8, var13, var27);
    com.google.javascript.jscomp.CheckLevel var33 = null;
    com.google.javascript.jscomp.CheckLevel var35 = null;
    com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var35, "hi!");
    java.lang.String var38 = var37.toString();
    com.google.javascript.jscomp.CheckLevel var40 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("", var40, "hi!");
    int var43 = var37.compareTo(var42);
    java.lang.String[] var44 = null;
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make(var37, var44);
    com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var49 = var37.compareTo(var48);
    com.google.javascript.rhino.Node var51 = null;
    com.google.javascript.jscomp.CheckLevel var55 = null;
    com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var60 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var55, var58, var60);
    com.google.javascript.jscomp.CheckLevel var65 = null;
    com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var70 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var65, var68, var70);
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var51, var58, var70);
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("", 0, 1, var33, var48, var70);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make(var13, var70);
    boolean var75 = var5.equals((java.lang.Object)var13);
    java.lang.String var76 = var13.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == (-46));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "hi!: hi!"+ "'", var38.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "hi!: hi!: hi!"+ "'", var76.equals("hi!: hi!: hi!"));

  }

  public void test218() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test218"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, "hi!: hi!. hi! at (unknown source) line -64 : 100");
    com.google.javascript.jscomp.CheckLevel var5 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
    java.lang.String var8 = var7.toString();
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
    int var13 = var7.compareTo(var12);
    java.lang.String[] var14 = null;
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make(var7, var14);
    int var16 = var15.getCharno();
    java.lang.String var17 = var15.toString();
    com.google.javascript.jscomp.CheckLevel var21 = null;
    com.google.javascript.jscomp.CheckLevel var23 = null;
    com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var23, "hi!");
    java.lang.String var26 = var25.toString();
    com.google.javascript.jscomp.CheckLevel var28 = null;
    com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("", var28, "hi!");
    int var31 = var25.compareTo(var30);
    com.google.javascript.rhino.Node var33 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var38 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", var33, var36, var38);
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var21, var25, var38);
    com.google.javascript.jscomp.DiagnosticType var41 = var40.getType();
    boolean var42 = var15.equals((java.lang.Object)var41);
    com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at hi!: hi! line 0 : 3");
    com.google.javascript.jscomp.CheckLevel var52 = null;
    com.google.javascript.jscomp.CheckLevel var54 = null;
    com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var54, "hi!");
    java.lang.String var57 = var56.toString();
    com.google.javascript.jscomp.CheckLevel var59 = null;
    com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.make("", var59, "hi!");
    int var62 = var56.compareTo(var61);
    com.google.javascript.rhino.Node var64 = null;
    com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var69 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!", var64, var67, var69);
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var52, var56, var69);
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("", (-64), 0, var48, var69);
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make(var41, var69);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make(var3, var69);
    com.google.javascript.jscomp.DiagnosticType var75 = var74.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!: hi!"+ "'", var8.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "hi!. hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var17.equals("hi!. hi! at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "hi!: hi!"+ "'", var26.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "hi!: hi!"+ "'", var57.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);

  }

  public void test219() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test219"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var1, "hi!");
    java.lang.String var4 = var3.toString();
    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.make("", var6, "hi!");
    int var9 = var3.compareTo(var8);
    java.lang.String[] var10 = null;
    com.google.javascript.jscomp.JSError var11 = com.google.javascript.jscomp.JSError.make(var3, var10);
    int var12 = var11.getCharno();
    java.lang.String var13 = var11.toString();
    com.google.javascript.jscomp.CheckLevel var17 = null;
    com.google.javascript.jscomp.CheckLevel var19 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var19, "hi!");
    java.lang.String var22 = var21.toString();
    com.google.javascript.jscomp.CheckLevel var24 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
    int var27 = var21.compareTo(var26);
    com.google.javascript.rhino.Node var29 = null;
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var34 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var34);
    com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var17, var21, var34);
    com.google.javascript.jscomp.DiagnosticType var37 = var36.getType();
    boolean var38 = var11.equals((java.lang.Object)var37);
    com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at hi!: hi! line 0 : 3");
    com.google.javascript.jscomp.CheckLevel var48 = null;
    com.google.javascript.jscomp.CheckLevel var50 = null;
    com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var50, "hi!");
    java.lang.String var53 = var52.toString();
    com.google.javascript.jscomp.CheckLevel var55 = null;
    com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.make("", var55, "hi!");
    int var58 = var52.compareTo(var57);
    com.google.javascript.rhino.Node var60 = null;
    com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var65 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!", var60, var63, var65);
    com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var48, var52, var65);
    com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("", (-64), 0, var44, var65);
    com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make(var37, var65);
    java.lang.String var70 = var37.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!: hi!"+ "'", var4.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "hi!. hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var13.equals("hi!. hi! at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "hi!: hi!"+ "'", var22.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "hi!: hi!"+ "'", var53.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "hi!: hi!"+ "'", var70.equals("hi!: hi!"));

  }

  public void test220() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test220"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.rhino.Node var5 = null;
    com.google.javascript.rhino.Node var7 = null;
    com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var12 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var13 = com.google.javascript.jscomp.JSError.make("hi!", var7, var10, var12);
    boolean var15 = var10.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var19 = null;
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var24 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var19, var22, var24);
    com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", var5, var10, var24);
    com.google.javascript.jscomp.CheckLevel var28 = null;
    com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var28, "hi!: hi!");
    boolean var31 = var26.equals((java.lang.Object)var30);
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
    com.google.javascript.jscomp.CheckLevel var38 = null;
    com.google.javascript.jscomp.CheckLevel var40 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var40, "hi!");
    java.lang.String var43 = var42.toString();
    com.google.javascript.jscomp.CheckLevel var45 = null;
    com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.make("", var45, "hi!");
    int var48 = var42.compareTo(var47);
    java.lang.String[] var49 = null;
    com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make(var42, var49);
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var54 = var42.compareTo(var53);
    com.google.javascript.rhino.Node var56 = null;
    com.google.javascript.jscomp.CheckLevel var60 = null;
    com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var65 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var60, var63, var65);
    com.google.javascript.jscomp.CheckLevel var70 = null;
    com.google.javascript.jscomp.DiagnosticType var73 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var75 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var70, var73, var75);
    com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var56, var63, var75);
    com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("", 0, 1, var38, var53, var75);
    com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make(var34, var75);
    com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100", (-46), (-1), var3, var30, var75);
    com.google.javascript.jscomp.DiagnosticType var81 = var80.getType();
    java.lang.String var82 = var80.toString();
    com.google.javascript.jscomp.CheckLevel var84 = null;
    com.google.javascript.jscomp.DiagnosticType var86 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var84, "hi!: hi!");
    com.google.javascript.jscomp.DiagnosticType var89 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var90 = var86.compareTo(var89);
    boolean var91 = var80.equals((java.lang.Object)var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!: hi!"+ "'", var43.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + "hi!: hi!. hi!: hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100 line -46 : (unknown column)"+ "'", var82.equals("hi!: hi!. hi!: hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100 line -46 : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == 12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);

  }

  public void test221() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test221"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var7 = null;
    com.google.javascript.jscomp.CheckLevel var11 = null;
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var13, "hi!");
    java.lang.String var16 = var15.toString();
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
    int var21 = var15.compareTo(var20);
    com.google.javascript.rhino.Node var23 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var28 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var23, var26, var28);
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var11, var15, var28);
    java.lang.String[] var31 = null;
    com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 10, var7, var15, var31);
    com.google.javascript.rhino.Node var34 = null;
    com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var39 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var34, var37, var39);
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("", (-1), 10, var3, var15, var39);
    com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    java.lang.String var45 = var44.toString();
    boolean var46 = var15.equals((java.lang.Object)var45);
    java.lang.String var47 = var15.toString();
    java.lang.String var48 = var15.toString();
    com.google.javascript.rhino.Node var50 = null;
    com.google.javascript.rhino.Node var52 = null;
    com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var57 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!", var52, var55, var57);
    boolean var60 = var55.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var64 = null;
    com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var69 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var64, var67, var69);
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", var50, var55, var69);
    java.lang.Object var72 = null;
    boolean var73 = var55.equals(var72);
    boolean var74 = var15.equals(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!: hi!"+ "'", var16.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var45.equals("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "hi!: hi!"+ "'", var47.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "hi!: hi!"+ "'", var48.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);

  }

  public void test222() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test222"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at hi!: hi! line 0 : 3");
    java.lang.String var6 = var5.toString();
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
    int var10 = var5.compareTo(var9);
    java.lang.String[] var11 = null;
    com.google.javascript.jscomp.JSError var12 = com.google.javascript.jscomp.JSError.make("", 1, 58, var9, var11);
    int var13 = var12.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ": hi!. hi! at hi!: hi! line 0 : 3"+ "'", var6.equals(": hi!. hi! at hi!: hi! line 0 : 3"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == (-3));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 58);

  }

  public void test223() {}
//   public void test223() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test223"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var3, var7, var20);
//     com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
//     java.lang.String var24 = var22.toString();
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var36 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", var31, var34, var36);
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var26, var29, var36);
//     boolean var39 = var22.equals((java.lang.Object)"hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     boolean var41 = var22.equals((java.lang.Object)10.0d);
//     com.google.javascript.jscomp.DiagnosticType var42 = var22.getType();
//     com.google.javascript.jscomp.CheckLevel var43 = null;
//     com.google.javascript.jscomp.MessageFormatter var44 = null;
//     java.lang.String var45 = var22.format(var43, var44);
// 
//   }

  public void test224() {}
//   public void test224() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test224"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var0 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!: hi!");
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var15, var18, var20);
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var30 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var25, var28, var30);
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var11, var18, var30);
//     com.google.javascript.rhino.Node var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var39 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var34, var37, var39);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", 8, 100, var18, var39);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("", (-64), (-64), var6, var39);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make(var0, var39);
// 
//   }

  public void test225() {}
//   public void test225() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test225"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!: hi!: hi!", "");
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", var10, ". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0");
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var14, "hi!: hi!. hi! at (unknown source) line -64 : 100");
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var18, "hi!");
//     java.lang.String var21 = var20.toString();
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("", var23, "hi!");
//     int var26 = var20.compareTo(var25);
//     java.lang.String[] var27 = null;
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make(var20, var27);
//     int var29 = var28.getCharno();
//     java.lang.String var30 = var28.toString();
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.CheckLevel var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var36, "hi!");
//     java.lang.String var39 = var38.toString();
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.make("", var41, "hi!");
//     int var44 = var38.compareTo(var43);
//     com.google.javascript.rhino.Node var46 = null;
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var51 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", var46, var49, var51);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var34, var38, var51);
//     com.google.javascript.jscomp.DiagnosticType var54 = var53.getType();
//     boolean var55 = var28.equals((java.lang.Object)var54);
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.jscomp.CheckLevel var65 = null;
//     com.google.javascript.jscomp.CheckLevel var67 = null;
//     com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var67, "hi!");
//     java.lang.String var70 = var69.toString();
//     com.google.javascript.jscomp.CheckLevel var72 = null;
//     com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.make("", var72, "hi!");
//     int var75 = var69.compareTo(var74);
//     com.google.javascript.rhino.Node var77 = null;
//     com.google.javascript.jscomp.DiagnosticType var80 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var82 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!", var77, var80, var82);
//     com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var65, var69, var82);
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("", (-64), 0, var61, var82);
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make(var54, var82);
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make(var16, var82);
//     com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 45, 72, var12, var82);
//     com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make("", var1, var2, var5, var82);
// 
//   }

  public void test226() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test226"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!. hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100 at (unknown source) line 1 : 58");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test227() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test227"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: ");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test228() {}
//   public void test228() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test228"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi! at hi!: hi! line (unknown line) : 10");
// 
//   }

  public void test229() {}
//   public void test229() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test229"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", var1, "hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!");
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.rhino.Node var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var18 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", var13, var16, var18);
//     boolean var21 = var16.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var30 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var25, var28, var30);
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", var11, var16, var30);
//     com.google.javascript.jscomp.DiagnosticType var33 = var32.getType();
//     com.google.javascript.jscomp.CheckLevel var37 = null;
//     com.google.javascript.jscomp.CheckLevel var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var39, "hi!");
//     java.lang.String var42 = var41.toString();
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.make("", var44, "hi!");
//     int var47 = var41.compareTo(var46);
//     com.google.javascript.rhino.Node var49 = null;
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var54 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", var49, var52, var54);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var37, var46, var54);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make(": ", var9, var33, var54);
//     com.google.javascript.jscomp.CheckLevel var61 = null;
//     com.google.javascript.jscomp.CheckLevel var63 = null;
//     com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var63, "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var69 = var65.compareTo(var68);
//     com.google.javascript.rhino.Node var71 = null;
//     com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var76 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!", var71, var74, var76);
//     com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var61, var65, var76);
//     com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", (-1), (-8), var7, var33, var76);
//     com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make(var3, var76);
//     com.google.javascript.jscomp.CheckLevel var81 = null;
//     com.google.javascript.jscomp.MessageFormatter var82 = null;
//     java.lang.String var83 = var80.format(var81, var82);
// 
//   }

  public void test230() {}
//   public void test230() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test230"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     java.lang.String[] var14 = null;
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make(var7, var14);
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var19 = var7.compareTo(var18);
//     com.google.javascript.rhino.Node var21 = null;
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var30 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var25, var28, var30);
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var40 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var35, var38, var40);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var21, var28, var40);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("", 0, 1, var3, var18, var40);
//     int var44 = var43.getCharno();
//     com.google.javascript.jscomp.CheckLevel var45 = null;
//     com.google.javascript.jscomp.MessageFormatter var46 = null;
//     java.lang.String var47 = var43.format(var45, var46);
// 
//   }

  public void test231() {}
//   public void test231() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test231"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.rhino.Node var5 = null;
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var12 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var13 = com.google.javascript.jscomp.JSError.make("hi!", var7, var10, var12);
//     boolean var15 = var10.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var24 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var19, var22, var24);
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", var5, var10, var24);
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var28, "hi!: hi!");
//     boolean var31 = var26.equals((java.lang.Object)var30);
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
//     com.google.javascript.jscomp.CheckLevel var38 = null;
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var40, "hi!");
//     java.lang.String var43 = var42.toString();
//     com.google.javascript.jscomp.CheckLevel var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.make("", var45, "hi!");
//     int var48 = var42.compareTo(var47);
//     java.lang.String[] var49 = null;
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make(var42, var49);
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var54 = var42.compareTo(var53);
//     com.google.javascript.rhino.Node var56 = null;
//     com.google.javascript.jscomp.CheckLevel var60 = null;
//     com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var65 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var60, var63, var65);
//     com.google.javascript.jscomp.CheckLevel var70 = null;
//     com.google.javascript.jscomp.DiagnosticType var73 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var75 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var70, var73, var75);
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var56, var63, var75);
//     com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("", 0, 1, var38, var53, var75);
//     com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make(var34, var75);
//     com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100", (-46), (-1), var3, var30, var75);
//     com.google.javascript.jscomp.DiagnosticType var81 = var80.getType();
//     java.lang.String var82 = var80.toString();
//     com.google.javascript.jscomp.CheckLevel var83 = null;
//     com.google.javascript.jscomp.MessageFormatter var84 = null;
//     java.lang.String var85 = var80.format(var83, var84);
// 
//   }

  public void test232() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test232"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!. hi! at (unknown source) line (unknown line) : (unknown column). :  at (unknown source) line 8 : 12");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test233() {}
//   public void test233() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test233"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, ": ");
//     com.google.javascript.rhino.Node var5 = null;
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var14 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var9, var12, var14);
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var24 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var19, var22, var24);
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var5, var12, var24);
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make(var3, var24);
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.MessageFormatter var29 = null;
//     java.lang.String var30 = var27.format(var28, var29);
// 
//   }

  public void test234() {}
//   public void test234() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test234"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var3, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var12 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var13 = com.google.javascript.jscomp.JSError.make("hi!", var7, var10, var12);
//     int var14 = var5.compareTo(var10);
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var20, "hi!");
//     java.lang.String var23 = var22.toString();
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
//     int var28 = var22.compareTo(var27);
//     java.lang.String[] var29 = null;
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make(var22, var29);
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var34 = var22.compareTo(var33);
//     com.google.javascript.rhino.Node var36 = null;
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var45 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var40, var43, var45);
//     com.google.javascript.jscomp.CheckLevel var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var55 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var50, var53, var55);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var36, var43, var55);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("", 0, 1, var18, var33, var55);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var1, var5, var55);
//     com.google.javascript.jscomp.CheckLevel var60 = null;
//     com.google.javascript.jscomp.MessageFormatter var61 = null;
//     java.lang.String var62 = var59.format(var60, var61);
// 
//   }

  public void test235() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test235"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at hi!: hi! line 0 : 3", "hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test236() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test236"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!: hi!", "");
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var15, "hi!");
    java.lang.String var18 = var17.toString();
    com.google.javascript.jscomp.CheckLevel var20 = null;
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("", var20, "hi!");
    int var23 = var17.compareTo(var22);
    java.lang.String[] var24 = null;
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make(var17, var24);
    com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var29 = var17.compareTo(var28);
    com.google.javascript.rhino.Node var31 = null;
    com.google.javascript.jscomp.CheckLevel var35 = null;
    com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var40 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var35, var38, var40);
    com.google.javascript.jscomp.CheckLevel var45 = null;
    com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var50 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var45, var48, var50);
    com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var31, var38, var50);
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("", 0, 1, var13, var28, var50);
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make(var9, var50);
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", 10, 8, var3, var6, var50);
    com.google.javascript.jscomp.CheckLevel var59 = null;
    com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var64 = null;
    com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100");
    com.google.javascript.rhino.Node var69 = null;
    com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var74 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!", var69, var72, var74);
    com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("", var64, var67, var74);
    com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make(": : : hi!. hi! at hi!: hi! line 0 : 3", (-46), 58, var59, var62, var74);
    int var78 = var6.compareTo(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "hi!: hi!"+ "'", var18.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == 12);

  }

  public void test237() {}
//   public void test237() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test237"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!: hi!: hi!: hi!: hi!: hi!: hi!: hi!");
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
//     com.google.javascript.rhino.Node var17 = null;
//     com.google.javascript.rhino.Node var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var24 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var19, var22, var24);
//     boolean var27 = var22.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var36 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var31, var34, var36);
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", var17, var22, var36);
//     com.google.javascript.rhino.Node var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var50 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", var45, var48, var50);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var40, var43, var50);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var22, var50);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var9, var12, var50);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi! line -8 : 10", var4, var7, var50);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var1, var2, var50);
// 
//   }

  public void test238() {}
//   public void test238() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test238"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", "");
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var8, ": ");
//     com.google.javascript.rhino.Node var12 = null;
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var21 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var16, var19, var21);
//     com.google.javascript.jscomp.CheckLevel var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var31 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var26, var29, var31);
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var12, var19, var31);
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make(var10, var31);
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100", 3, 100, var3, var6, var31);
//     com.google.javascript.jscomp.CheckLevel var36 = null;
//     com.google.javascript.jscomp.MessageFormatter var37 = null;
//     java.lang.String var38 = var35.format(var36, var37);
// 
//   }

  public void test239() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test239"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100");
    int var6 = var2.compareTo(var5);
    com.google.javascript.rhino.Node var8 = null;
    com.google.javascript.rhino.Node var10 = null;
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var15 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var16 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var15);
    boolean var18 = var13.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var22 = null;
    com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var27 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var22, var25, var27);
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var8, var13, var27);
    com.google.javascript.jscomp.CheckLevel var33 = null;
    com.google.javascript.jscomp.CheckLevel var35 = null;
    com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var35, "hi!");
    java.lang.String var38 = var37.toString();
    com.google.javascript.jscomp.CheckLevel var40 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("", var40, "hi!");
    int var43 = var37.compareTo(var42);
    java.lang.String[] var44 = null;
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make(var37, var44);
    com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var49 = var37.compareTo(var48);
    com.google.javascript.rhino.Node var51 = null;
    com.google.javascript.jscomp.CheckLevel var55 = null;
    com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var60 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var55, var58, var60);
    com.google.javascript.jscomp.CheckLevel var65 = null;
    com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var70 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var65, var68, var70);
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var51, var58, var70);
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("", 0, 1, var33, var48, var70);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make(var13, var70);
    boolean var75 = var5.equals((java.lang.Object)var13);
    java.lang.String var76 = var5.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == (-46));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "hi!: hi!"+ "'", var38.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100"+ "'", var76.equals("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100"));

  }

  public void test240() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test240"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!: hi!: hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test241() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test241"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var5 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
    java.lang.String var8 = var7.toString();
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
    int var13 = var7.compareTo(var12);
    com.google.javascript.jscomp.CheckLevel var17 = null;
    com.google.javascript.jscomp.CheckLevel var19 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var19, "hi!");
    java.lang.String var22 = var21.toString();
    com.google.javascript.jscomp.CheckLevel var24 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
    int var27 = var21.compareTo(var26);
    com.google.javascript.rhino.Node var29 = null;
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var34 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var34);
    com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var17, var21, var34);
    com.google.javascript.jscomp.DiagnosticType var37 = var36.getType();
    com.google.javascript.jscomp.CheckLevel var41 = null;
    com.google.javascript.jscomp.CheckLevel var43 = null;
    com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var43, "hi!");
    java.lang.String var46 = var45.toString();
    com.google.javascript.jscomp.CheckLevel var48 = null;
    com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("", var48, "hi!");
    int var51 = var45.compareTo(var50);
    com.google.javascript.rhino.Node var53 = null;
    com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var58 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", var53, var56, var58);
    com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var41, var45, var58);
    com.google.javascript.jscomp.DiagnosticType var61 = var60.getType();
    boolean var62 = var36.equals((java.lang.Object)var60);
    boolean var63 = var12.equals((java.lang.Object)var36);
    com.google.javascript.jscomp.CheckLevel var67 = null;
    com.google.javascript.jscomp.CheckLevel var69 = null;
    com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var69, "hi!");
    java.lang.String var72 = var71.toString();
    com.google.javascript.jscomp.CheckLevel var74 = null;
    com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.make("", var74, "hi!");
    int var77 = var71.compareTo(var76);
    com.google.javascript.rhino.Node var79 = null;
    com.google.javascript.jscomp.DiagnosticType var82 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var84 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!", var79, var82, var84);
    com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var67, var71, var84);
    com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", 3, (-46), var3, var12, var84);
    int var88 = var87.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!: hi!"+ "'", var8.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "hi!: hi!"+ "'", var22.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "hi!: hi!"+ "'", var46.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + "hi!: hi!"+ "'", var72.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == (-46));

  }

  public void test242() {}
//   public void test242() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test242"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var3, ": ");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.warning("", ": ");
//     int var9 = var5.compareTo(var8);
//     java.lang.String[] var10 = null;
//     com.google.javascript.jscomp.JSError var11 = com.google.javascript.jscomp.JSError.make("", var1, var5, var10);
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.MessageFormatter var13 = null;
//     java.lang.String var14 = var11.format(var12, var13);
// 
//   }

  public void test243() {}
//   public void test243() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test243"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ": : ");
// 
//   }

  public void test244() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test244"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(". hi! at hi! line (unknown line) : 10");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test245() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test245"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100 at (unknown source) line 1 : 58", "hi!.  at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test246() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test246"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!: hi!", "hi!: hi!: hi!: hi!: hi!: hi!: hi!: hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test247() {}
//   public void test247() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test247"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.rhino.Node var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
//     com.google.javascript.rhino.Node var13 = null;
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
//     boolean var23 = var18.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var32 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var27, var30, var32);
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", var13, var18, var32);
//     com.google.javascript.jscomp.DiagnosticType var35 = var34.getType();
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!. hi! at hi!: hi! line 0 : 3");
//     int var39 = var35.compareTo(var38);
//     com.google.javascript.rhino.Node var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.warning(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.rhino.Node var46 = null;
//     com.google.javascript.rhino.Node var48 = null;
//     com.google.javascript.rhino.Node var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var55 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", var50, var53, var55);
//     boolean var58 = var53.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var62 = null;
//     com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var67 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var62, var65, var67);
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!", var48, var53, var67);
//     com.google.javascript.jscomp.DiagnosticType var70 = var69.getType();
//     com.google.javascript.jscomp.CheckLevel var74 = null;
//     com.google.javascript.jscomp.CheckLevel var76 = null;
//     com.google.javascript.jscomp.DiagnosticType var78 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var76, "hi!");
//     java.lang.String var79 = var78.toString();
//     com.google.javascript.jscomp.CheckLevel var81 = null;
//     com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.make("", var81, "hi!");
//     int var84 = var78.compareTo(var83);
//     com.google.javascript.rhino.Node var86 = null;
//     com.google.javascript.jscomp.DiagnosticType var89 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var91 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!", var86, var89, var91);
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var74, var83, var91);
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make(": ", var46, var70, var91);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var41, var44, var91);
//     com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("", 66, (-12), var35, var91);
//     com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi!: hi! line 3 : -8", var5, var8, var91);
//     com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): : : ", 35, (-42), var3, var91);
// 
//   }

  public void test248() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test248"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var5 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
    java.lang.String var8 = var7.toString();
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
    int var13 = var7.compareTo(var12);
    com.google.javascript.rhino.Node var15 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var20 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
    com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var3, var7, var20);
    com.google.javascript.rhino.Node var27 = null;
    com.google.javascript.rhino.Node var29 = null;
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var34 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var34);
    boolean var37 = var32.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var41 = null;
    com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var46 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var41, var44, var46);
    com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", var27, var32, var46);
    com.google.javascript.rhino.Node var50 = null;
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var55 = null;
    com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var60 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!", var55, var58, var60);
    com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var50, var53, var60);
    com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var32, var60);
    com.google.javascript.jscomp.DiagnosticType var64 = var63.getType();
    com.google.javascript.jscomp.CheckLevel var66 = null;
    com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var66, "");
    boolean var69 = var63.equals((java.lang.Object)"hi!");
    java.lang.String var70 = var63.toString();
    boolean var71 = var22.equals((java.lang.Object)var63);
    java.lang.String var72 = var22.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!: hi!"+ "'", var8.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "hi!: hi!. hi! at (unknown source) line -64 : 100"+ "'", var70.equals("hi!: hi!. hi! at (unknown source) line -64 : 100"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + "hi!. hi! at hi!: hi! line 0 : 3"+ "'", var72.equals("hi!. hi! at hi!: hi! line 0 : 3"));

  }

  public void test249() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test249"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", "hi!: hi!: hi!: hi!");
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: ", "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var15, "hi!");
    java.lang.String var18 = var17.toString();
    com.google.javascript.jscomp.CheckLevel var20 = null;
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("", var20, "hi!");
    int var23 = var17.compareTo(var22);
    com.google.javascript.jscomp.CheckLevel var27 = null;
    com.google.javascript.jscomp.CheckLevel var29 = null;
    com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var29, "hi!");
    java.lang.String var32 = var31.toString();
    com.google.javascript.jscomp.CheckLevel var34 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
    int var37 = var31.compareTo(var36);
    com.google.javascript.rhino.Node var39 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var44 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var44);
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var27, var31, var44);
    com.google.javascript.jscomp.DiagnosticType var47 = var46.getType();
    com.google.javascript.jscomp.CheckLevel var51 = null;
    com.google.javascript.jscomp.CheckLevel var53 = null;
    com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var53, "hi!");
    java.lang.String var56 = var55.toString();
    com.google.javascript.jscomp.CheckLevel var58 = null;
    com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.make("", var58, "hi!");
    int var61 = var55.compareTo(var60);
    com.google.javascript.rhino.Node var63 = null;
    com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var68 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!", var63, var66, var68);
    com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var51, var55, var68);
    com.google.javascript.jscomp.DiagnosticType var71 = var70.getType();
    boolean var72 = var46.equals((java.lang.Object)var70);
    boolean var73 = var22.equals((java.lang.Object)var46);
    com.google.javascript.jscomp.CheckLevel var77 = null;
    com.google.javascript.jscomp.CheckLevel var79 = null;
    com.google.javascript.jscomp.DiagnosticType var81 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var79, "hi!");
    java.lang.String var82 = var81.toString();
    com.google.javascript.jscomp.CheckLevel var84 = null;
    com.google.javascript.jscomp.DiagnosticType var86 = com.google.javascript.jscomp.DiagnosticType.make("", var84, "hi!");
    int var87 = var81.compareTo(var86);
    com.google.javascript.rhino.Node var89 = null;
    com.google.javascript.jscomp.DiagnosticType var92 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var94 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!", var89, var92, var94);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var77, var81, var94);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", 3, (-46), var13, var22, var94);
    com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make(var9, var94);
    com.google.javascript.jscomp.JSError var99 = com.google.javascript.jscomp.JSError.make("", 100, 12, var3, var6, var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "hi!: hi!"+ "'", var18.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!: hi!"+ "'", var32.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "hi!: hi!"+ "'", var56.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + "hi!: hi!"+ "'", var82.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var99);

  }

  public void test250() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test250"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!. hi! at hi!. hi! at hi!: hi! line 0 : 3 line (unknown line) : -8", var1, "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test251() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test251"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!: hi!: hi!: hi!: hi!: hi!: hi!: hi!");
    com.google.javascript.rhino.Node var4 = null;
    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var6, "hi!: hi!. hi! at (unknown source) line -64 : 100");
    java.lang.String var9 = var8.toString();
    com.google.javascript.jscomp.CheckLevel var11 = null;
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var11, "hi!");
    java.lang.String var14 = var13.toString();
    com.google.javascript.jscomp.CheckLevel var16 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.make("", var16, "hi!");
    int var19 = var13.compareTo(var18);
    java.lang.String[] var20 = null;
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make(var13, var20);
    int var22 = var21.getCharno();
    java.lang.String var23 = var21.toString();
    com.google.javascript.jscomp.CheckLevel var27 = null;
    com.google.javascript.jscomp.CheckLevel var29 = null;
    com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var29, "hi!");
    java.lang.String var32 = var31.toString();
    com.google.javascript.jscomp.CheckLevel var34 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
    int var37 = var31.compareTo(var36);
    com.google.javascript.rhino.Node var39 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var44 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var44);
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var27, var31, var44);
    com.google.javascript.jscomp.DiagnosticType var47 = var46.getType();
    boolean var48 = var21.equals((java.lang.Object)var47);
    com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at hi!: hi! line 0 : 3");
    com.google.javascript.jscomp.CheckLevel var58 = null;
    com.google.javascript.jscomp.CheckLevel var60 = null;
    com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var60, "hi!");
    java.lang.String var63 = var62.toString();
    com.google.javascript.jscomp.CheckLevel var65 = null;
    com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.make("", var65, "hi!");
    int var68 = var62.compareTo(var67);
    com.google.javascript.rhino.Node var70 = null;
    com.google.javascript.jscomp.DiagnosticType var73 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var75 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!", var70, var73, var75);
    com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var58, var62, var75);
    com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("", (-64), 0, var54, var75);
    com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make(var47, var75);
    com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("", var4, var8, var75);
    boolean var81 = var2.equals((java.lang.Object)var8);
    java.lang.Object var82 = null;
    boolean var83 = var8.equals(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100"+ "'", var9.equals("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "hi!: hi!"+ "'", var14.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi!. hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var23.equals("hi!. hi! at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!: hi!"+ "'", var32.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "hi!: hi!"+ "'", var63.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == false);

  }

  public void test252() {}
//   public void test252() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test252"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var3, "hi!");
//     java.lang.String var6 = var5.toString();
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("", var8, "hi!");
//     int var11 = var5.compareTo(var10);
//     java.lang.String[] var12 = null;
//     com.google.javascript.jscomp.JSError var13 = com.google.javascript.jscomp.JSError.make(var5, var12);
//     int var14 = var13.getCharno();
//     boolean var16 = var13.equals((java.lang.Object)'4');
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     boolean var20 = var13.equals((java.lang.Object)var19);
//     com.google.javascript.rhino.Node var22 = null;
//     com.google.javascript.rhino.Node var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var29 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", var24, var27, var29);
//     boolean var32 = var27.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var41 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var36, var39, var41);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", var22, var27, var41);
//     com.google.javascript.jscomp.CheckLevel var47 = null;
//     com.google.javascript.jscomp.CheckLevel var49 = null;
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var49, "hi!");
//     java.lang.String var52 = var51.toString();
//     com.google.javascript.jscomp.CheckLevel var54 = null;
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.make("", var54, "hi!");
//     int var57 = var51.compareTo(var56);
//     java.lang.String[] var58 = null;
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make(var51, var58);
//     com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var63 = var51.compareTo(var62);
//     com.google.javascript.rhino.Node var65 = null;
//     com.google.javascript.jscomp.CheckLevel var69 = null;
//     com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var74 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var69, var72, var74);
//     com.google.javascript.jscomp.CheckLevel var79 = null;
//     com.google.javascript.jscomp.DiagnosticType var82 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var84 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var79, var82, var84);
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var65, var72, var84);
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("", 0, 1, var47, var62, var84);
//     com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make(var27, var84);
//     com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3: ", var1, var19, var84);
//     com.google.javascript.jscomp.CheckLevel var90 = null;
//     com.google.javascript.jscomp.MessageFormatter var91 = null;
//     java.lang.String var92 = var89.format(var90, var91);
// 
//   }

  public void test253() {}
//   public void test253() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test253"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at hi!: hi!: hi! line 3 : -8");
// 
//   }

  public void test254() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test254"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0. hi!. hi! at hi!: hi! line 0 : 3 at hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)", "hi!. hi! at hi!: hi! line 0 : 3");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test255() {}
//   public void test255() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test255"); }
// 
// 
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var11 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var12 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var11);
//     boolean var14 = var9.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var18, var21, var23);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var4, var9, var23);
//     com.google.javascript.rhino.Node var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var37 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var37);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var27, var30, var37);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var9, var37);
//     com.google.javascript.jscomp.DiagnosticType var41 = var40.getType();
//     com.google.javascript.jscomp.CheckLevel var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var43, "hi!");
//     java.lang.String[] var46 = null;
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make(var45, var46);
//     java.lang.String var48 = var47.toString();
//     boolean var49 = var41.equals((java.lang.Object)var47);
//     int var50 = var47.getCharno();
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.MessageFormatter var52 = null;
//     java.lang.String var53 = var47.format(var51, var52);
// 
//   }

  public void test256() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test256"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.rhino.Node var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.CheckLevel var12 = null;
    com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var12, "hi!");
    java.lang.String var15 = var14.toString();
    com.google.javascript.jscomp.CheckLevel var17 = null;
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
    int var20 = var14.compareTo(var19);
    com.google.javascript.rhino.Node var22 = null;
    com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var27 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var22, var25, var27);
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var10, var14, var27);
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", var3, var6, var27);
    com.google.javascript.rhino.Node var32 = null;
    com.google.javascript.rhino.Node var37 = null;
    com.google.javascript.rhino.Node var39 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var44 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var44);
    boolean var47 = var42.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var51 = null;
    com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var56 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var51, var54, var56);
    com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!", var37, var42, var56);
    com.google.javascript.rhino.Node var60 = null;
    com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var65 = null;
    com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var70 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", var65, var68, var70);
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var60, var63, var70);
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var42, var70);
    com.google.javascript.jscomp.DiagnosticType var74 = var73.getType();
    com.google.javascript.jscomp.DiagnosticType var80 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var84 = null;
    com.google.javascript.jscomp.DiagnosticType var87 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var89 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var84, var87, var89);
    com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 100, var80, var89);
    com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", var32, var74, var89);
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make(": hi!. hi! at hi!: hi! line 0 : 3", var1, var6, var89);
    com.google.javascript.jscomp.DiagnosticType var94 = var93.getType();
    java.lang.String var95 = var94.toString();
    java.lang.String var96 = var94.toString();
    java.lang.String var97 = var94.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi!: hi!"+ "'", var15.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + "hi!: hi!: hi!"+ "'", var95.equals("hi!: hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "hi!: hi!: hi!"+ "'", var96.equals("hi!: hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var97 + "' != '" + "hi!: hi!: hi!"+ "'", var97.equals("hi!: hi!: hi!"));

  }

  public void test257() {}
//   public void test257() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test257"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
// 
//   }

  public void test258() {}
//   public void test258() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test258"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", "");
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var12, ": ");
//     com.google.javascript.rhino.Node var16 = null;
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var25 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var20, var23, var25);
//     com.google.javascript.jscomp.CheckLevel var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var35 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var30, var33, var35);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var16, var23, var35);
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make(var14, var35);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100", 3, 100, var7, var10, var35);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make(": hi!. hi! at hi!: hi! line 0 : 3: hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", (-5), 4, var3, var35);
// 
//   }

  public void test259() {}
//   public void test259() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test259"); }
// 
// 
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var11 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var12 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var11);
//     boolean var14 = var9.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var18, var21, var23);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var4, var9, var23);
//     com.google.javascript.jscomp.DiagnosticType var26 = var25.getType();
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!. hi! at hi!: hi! line 0 : 3");
//     int var30 = var26.compareTo(var29);
//     com.google.javascript.rhino.Node var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.warning(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.rhino.Node var37 = null;
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.rhino.Node var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var46 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!", var41, var44, var46);
//     boolean var49 = var44.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var58 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var53, var56, var58);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", var39, var44, var58);
//     com.google.javascript.jscomp.DiagnosticType var61 = var60.getType();
//     com.google.javascript.jscomp.CheckLevel var65 = null;
//     com.google.javascript.jscomp.CheckLevel var67 = null;
//     com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var67, "hi!");
//     java.lang.String var70 = var69.toString();
//     com.google.javascript.jscomp.CheckLevel var72 = null;
//     com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.make("", var72, "hi!");
//     int var75 = var69.compareTo(var74);
//     com.google.javascript.rhino.Node var77 = null;
//     com.google.javascript.jscomp.DiagnosticType var80 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var82 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!", var77, var80, var82);
//     com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var65, var74, var82);
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make(": ", var37, var61, var82);
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var32, var35, var82);
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("", 66, (-12), var26, var82);
//     com.google.javascript.jscomp.CheckLevel var88 = null;
//     com.google.javascript.jscomp.MessageFormatter var89 = null;
//     java.lang.String var90 = var87.format(var88, var89);
// 
//   }

  public void test260() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test260"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test261() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test261"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test262() {}
//   public void test262() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test262"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!.  at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)");
// 
//   }

  public void test263() {}
//   public void test263() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test263"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var14 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var9, var12, var14);
//     com.google.javascript.jscomp.JSError var16 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 100, var5, var14);
//     boolean var18 = var16.equals((java.lang.Object)(short)100);
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var20, "hi!");
//     java.lang.String var23 = var22.toString();
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
//     int var28 = var22.compareTo(var27);
//     com.google.javascript.jscomp.CheckLevel var32 = null;
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var34, "hi!");
//     java.lang.String var37 = var36.toString();
//     com.google.javascript.jscomp.CheckLevel var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.make("", var39, "hi!");
//     int var42 = var36.compareTo(var41);
//     com.google.javascript.rhino.Node var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var49 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", var44, var47, var49);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var32, var41, var49);
//     int var52 = var22.compareTo(var41);
//     boolean var53 = var16.equals((java.lang.Object)var52);
//     com.google.javascript.jscomp.DiagnosticType var54 = var16.getType();
//     com.google.javascript.jscomp.CheckLevel var55 = null;
//     com.google.javascript.jscomp.MessageFormatter var56 = null;
//     java.lang.String var57 = var16.format(var55, var56);
// 
//   }

  public void test264() {}
//   public void test264() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test264"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100");
// 
//   }

  public void test265() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test265"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var3, ": ");
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.warning("", ": ");
    int var9 = var5.compareTo(var8);
    java.lang.String[] var10 = null;
    com.google.javascript.jscomp.JSError var11 = com.google.javascript.jscomp.JSError.make("", var1, var5, var10);
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!", "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", "");
    int var22 = var18.compareTo(var21);
    java.lang.String[] var23 = null;
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100", 58, (-8), var15, var21, var23);
    java.lang.String var25 = var21.toString();
    boolean var26 = var5.equals((java.lang.Object)var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == (-42));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "hi!: hi!. hi! at hi!: hi! line (unknown line) : 10: "+ "'", var25.equals("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);

  }

  public void test266() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test266"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var1, "hi!");
    java.lang.String var4 = var3.toString();
    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.make("", var6, "hi!");
    int var9 = var3.compareTo(var8);
    java.lang.String[] var10 = null;
    com.google.javascript.jscomp.JSError var11 = com.google.javascript.jscomp.JSError.make(var3, var10);
    com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    boolean var15 = var3.equals((java.lang.Object)var14);
    java.lang.String var16 = var3.toString();
    java.lang.String var17 = var3.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!: hi!"+ "'", var4.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!: hi!"+ "'", var16.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "hi!: hi!"+ "'", var17.equals("hi!: hi!"));

  }

  public void test267() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test267"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var1, "hi!");
    java.lang.String var4 = var3.toString();
    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.make("", var6, "hi!");
    int var9 = var3.compareTo(var8);
    java.lang.String[] var10 = null;
    com.google.javascript.jscomp.JSError var11 = com.google.javascript.jscomp.JSError.make(var3, var10);
    int var12 = var11.getCharno();
    int var13 = var11.getCharno();
    java.lang.String var14 = var11.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!: hi!"+ "'", var4.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "hi!. hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var14.equals("hi!. hi! at (unknown source) line (unknown line) : (unknown column)"));

  }

  public void test268() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test268"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100", "hi!: hi!: hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test269() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test269"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!. hi! at hi!: hi! line -8 : 10", ": hi!. hi! at hi!: hi! line 0 : 3: hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test270() {}
//   public void test270() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test270"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var3, var7, var20);
//     com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var29, "hi!");
//     java.lang.String var32 = var31.toString();
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     int var37 = var31.compareTo(var36);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var27, var31, var44);
//     com.google.javascript.jscomp.DiagnosticType var47 = var46.getType();
//     boolean var48 = var22.equals((java.lang.Object)var46);
//     java.lang.String var49 = var46.toString();
//     com.google.javascript.jscomp.DiagnosticType var50 = var46.getType();
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.warning(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0. hi!. hi! at hi!: hi! line 0 : 3 at hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)", "hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: : ");
//     java.lang.String[] var58 = new java.lang.String[] { "hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at (unknown source) line 0 : 1"};
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", 0, 35, var56, var58);
//     boolean var60 = var46.equals((java.lang.Object)var59);
//     com.google.javascript.jscomp.CheckLevel var61 = null;
//     com.google.javascript.jscomp.MessageFormatter var62 = null;
//     java.lang.String var63 = var46.format(var61, var62);
// 
//   }

  public void test271() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test271"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var5 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
    java.lang.String var8 = var7.toString();
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
    int var13 = var7.compareTo(var12);
    com.google.javascript.rhino.Node var15 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var20 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
    com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var3, var7, var20);
    com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
    com.google.javascript.jscomp.CheckLevel var27 = null;
    com.google.javascript.jscomp.CheckLevel var29 = null;
    com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var29, "hi!");
    java.lang.String var32 = var31.toString();
    com.google.javascript.jscomp.CheckLevel var34 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
    int var37 = var31.compareTo(var36);
    com.google.javascript.rhino.Node var39 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var44 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var44);
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var27, var31, var44);
    com.google.javascript.jscomp.DiagnosticType var47 = var46.getType();
    boolean var48 = var22.equals((java.lang.Object)var46);
    java.lang.String var49 = var46.toString();
    com.google.javascript.jscomp.DiagnosticType var50 = var46.getType();
    int var51 = var46.getCharno();
    com.google.javascript.jscomp.CheckLevel var55 = null;
    com.google.javascript.jscomp.CheckLevel var57 = null;
    com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var57, "hi!");
    java.lang.String var60 = var59.toString();
    com.google.javascript.jscomp.CheckLevel var62 = null;
    com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.make("", var62, "hi!");
    int var65 = var59.compareTo(var64);
    com.google.javascript.rhino.Node var67 = null;
    com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var72 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", var67, var70, var72);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var55, var59, var72);
    com.google.javascript.jscomp.DiagnosticType var75 = var74.getType();
    int var76 = var74.getCharno();
    boolean var77 = var46.equals((java.lang.Object)var74);
    com.google.javascript.jscomp.DiagnosticType var78 = var46.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!: hi!"+ "'", var8.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!: hi!"+ "'", var32.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "hi!. hi! at hi!: hi! line 0 : 3"+ "'", var49.equals("hi!. hi! at hi!: hi! line 0 : 3"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "hi!: hi!"+ "'", var60.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);

  }

  public void test272() {}
//   public void test272() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test272"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!");
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var12, "hi!");
//     java.lang.String var15 = var14.toString();
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
//     int var20 = var14.compareTo(var19);
//     com.google.javascript.rhino.Node var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var27 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var22, var25, var27);
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var10, var14, var27);
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!", var1, var2, var6, var27);
// 
//   }

  public void test273() {}
//   public void test273() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test273"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var11 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var12 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var11);
//     boolean var14 = var9.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var18, var21, var23);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var4, var9, var23);
//     com.google.javascript.jscomp.DiagnosticType var26 = var25.getType();
//     com.google.javascript.rhino.Node var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at (unknown source) line 0 : 1", "hi!: ");
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!", "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.CheckLevel var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var48 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var43, var46, var48);
//     com.google.javascript.jscomp.CheckLevel var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var58 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var53, var56, var58);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var39, var46, var58);
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", (-42), 3, var37, var58);
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("", var28, var31, var58);
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", var1, var2, var26, var58);
// 
//   }

  public void test274() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test274"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at (unknown source) line (unknown line) : (unknown column)");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test275() {}
//   public void test275() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test275"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100");
// 
//   }

  public void test276() {}
//   public void test276() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test276"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at hi!: hi! line 0 : 3: : hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100");
// 
//   }

  public void test277() {}
//   public void test277() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test277"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var14 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var14);
//     boolean var17 = var12.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var26 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var21, var24, var26);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var7, var12, var26);
//     com.google.javascript.jscomp.DiagnosticType var29 = var28.getType();
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!. hi! at hi!: hi! line 0 : 3");
//     int var33 = var29.compareTo(var32);
//     com.google.javascript.rhino.Node var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.warning(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.rhino.Node var40 = null;
//     com.google.javascript.rhino.Node var42 = null;
//     com.google.javascript.rhino.Node var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var49 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", var44, var47, var49);
//     boolean var52 = var47.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var56 = null;
//     com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var61 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var56, var59, var61);
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!", var42, var47, var61);
//     com.google.javascript.jscomp.DiagnosticType var64 = var63.getType();
//     com.google.javascript.jscomp.CheckLevel var68 = null;
//     com.google.javascript.jscomp.CheckLevel var70 = null;
//     com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var70, "hi!");
//     java.lang.String var73 = var72.toString();
//     com.google.javascript.jscomp.CheckLevel var75 = null;
//     com.google.javascript.jscomp.DiagnosticType var77 = com.google.javascript.jscomp.DiagnosticType.make("", var75, "hi!");
//     int var78 = var72.compareTo(var77);
//     com.google.javascript.rhino.Node var80 = null;
//     com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var85 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!", var80, var83, var85);
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var68, var77, var85);
//     com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make(": ", var40, var64, var85);
//     com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var35, var38, var85);
//     com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("", 66, (-12), var29, var85);
//     com.google.javascript.jscomp.DiagnosticType var91 = var90.getType();
//     java.lang.String[] var92 = null;
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", var1, var2, var91, var92);
// 
//   }

  public void test278() {}
//   public void test278() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test278"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var4, "hi!");
//     java.lang.String var7 = var6.toString();
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     int var12 = var6.compareTo(var11);
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var18, "hi!");
//     java.lang.String var21 = var20.toString();
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("", var23, "hi!");
//     int var26 = var20.compareTo(var25);
//     com.google.javascript.rhino.Node var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var33 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", var28, var31, var33);
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var16, var25, var33);
//     int var36 = var6.compareTo(var25);
//     int var37 = var2.compareTo(var6);
//     com.google.javascript.jscomp.DiagnosticType var38 = null;
//     int var39 = var6.compareTo(var38);
// 
//   }

  public void test279() {}
//   public void test279() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test279"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("", var5, "");
//     com.google.javascript.jscomp.CheckLevel var11 = null;
//     com.google.javascript.rhino.Node var13 = null;
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.rhino.Node var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var22 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", var17, var20, var22);
//     boolean var25 = var20.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var29, var32, var34);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var15, var20, var34);
//     com.google.javascript.jscomp.DiagnosticType var37 = var36.getType();
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.CheckLevel var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var43, "hi!");
//     java.lang.String var46 = var45.toString();
//     com.google.javascript.jscomp.CheckLevel var48 = null;
//     com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("", var48, "hi!");
//     int var51 = var45.compareTo(var50);
//     com.google.javascript.rhino.Node var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var58 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", var53, var56, var58);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var41, var50, var58);
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make(": ", var13, var37, var58);
//     com.google.javascript.jscomp.CheckLevel var65 = null;
//     com.google.javascript.jscomp.CheckLevel var67 = null;
//     com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var67, "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var73 = var69.compareTo(var72);
//     com.google.javascript.rhino.Node var75 = null;
//     com.google.javascript.jscomp.DiagnosticType var78 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var80 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("hi!", var75, var78, var80);
//     com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var65, var69, var80);
//     com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", (-1), (-8), var11, var37, var80);
//     com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", (-46), 1, var3, var7, var80);
//     java.lang.String var85 = var84.toString();
//     com.google.javascript.jscomp.CheckLevel var86 = null;
//     com.google.javascript.jscomp.MessageFormatter var87 = null;
//     java.lang.String var88 = var84.format(var86, var87);
// 
//   }

  public void test280() {}
//   public void test280() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test280"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var9, "hi!");
//     java.lang.String var12 = var11.toString();
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
//     int var17 = var11.compareTo(var16);
//     com.google.javascript.rhino.Node var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var24 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var19, var22, var24);
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var7, var11, var24);
//     com.google.javascript.jscomp.DiagnosticType var27 = var26.getType();
//     com.google.javascript.jscomp.CheckLevel var31 = null;
//     com.google.javascript.jscomp.CheckLevel var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var33, "hi!");
//     java.lang.String var36 = var35.toString();
//     com.google.javascript.jscomp.CheckLevel var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.make("", var38, "hi!");
//     int var41 = var35.compareTo(var40);
//     com.google.javascript.rhino.Node var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var48 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var48);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var31, var35, var48);
//     com.google.javascript.jscomp.DiagnosticType var51 = var50.getType();
//     boolean var52 = var26.equals((java.lang.Object)var50);
//     int var53 = var50.getCharno();
//     com.google.javascript.jscomp.DiagnosticType var54 = var50.getType();
//     com.google.javascript.jscomp.DiagnosticType var55 = var50.getType();
//     java.lang.String[] var56 = null;
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line -64 : 100", 64, 8, var3, var55, var56);
//     int var58 = var57.getCharno();
//     com.google.javascript.jscomp.CheckLevel var59 = null;
//     com.google.javascript.jscomp.MessageFormatter var60 = null;
//     java.lang.String var61 = var57.format(var59, var60);
// 
//   }

  public void test281() {}
//   public void test281() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test281"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var1, "hi!");
//     java.lang.String var4 = var3.toString();
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.make("", var6, "hi!");
//     int var9 = var3.compareTo(var8);
//     java.lang.String[] var10 = null;
//     com.google.javascript.jscomp.JSError var11 = com.google.javascript.jscomp.JSError.make(var3, var10);
//     int var12 = var11.getCharno();
//     java.lang.String var13 = var11.toString();
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var19, "hi!");
//     java.lang.String var22 = var21.toString();
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
//     int var27 = var21.compareTo(var26);
//     com.google.javascript.rhino.Node var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var34);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var17, var21, var34);
//     com.google.javascript.jscomp.DiagnosticType var37 = var36.getType();
//     boolean var38 = var11.equals((java.lang.Object)var37);
//     int var39 = var11.getCharno();
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.MessageFormatter var41 = null;
//     java.lang.String var42 = var11.format(var40, var41);
// 
//   }

  public void test282() {}
//   public void test282() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test282"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var15, "hi!");
//     java.lang.String var18 = var17.toString();
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("", var20, "hi!");
//     int var23 = var17.compareTo(var22);
//     com.google.javascript.rhino.Node var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var30 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", var25, var28, var30);
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var13, var17, var30);
//     java.lang.String[] var33 = null;
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 10, var9, var17, var33);
//     int var35 = var5.compareTo(var17);
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
//     com.google.javascript.jscomp.CheckLevel var42 = null;
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var44, "hi!");
//     java.lang.String var47 = var46.toString();
//     com.google.javascript.jscomp.CheckLevel var49 = null;
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.make("", var49, "hi!");
//     int var52 = var46.compareTo(var51);
//     java.lang.String[] var53 = null;
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make(var46, var53);
//     com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var58 = var46.compareTo(var57);
//     com.google.javascript.rhino.Node var60 = null;
//     com.google.javascript.jscomp.CheckLevel var64 = null;
//     com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var69 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var64, var67, var69);
//     com.google.javascript.jscomp.CheckLevel var74 = null;
//     com.google.javascript.jscomp.DiagnosticType var77 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var79 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var74, var77, var79);
//     com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var60, var67, var79);
//     com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("", 0, 1, var42, var57, var79);
//     com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make(var38, var79);
//     com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make(var5, var79);
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!: hi!: hi!", var1, var2, var79);
// 
//   }

  public void test283() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test283"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!: hi!: hi!", var1, ". hi! at hi! line (unknown line) : 10");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test284() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test284"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!. hi! at hi!: hi! line 0 : 3: ");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test285() {}
//   public void test285() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test285"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
// 
//   }

  public void test286() {}
//   public void test286() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test286"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var3, var7, var20);
//     com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
//     int var24 = var22.getCharno();
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.MessageFormatter var26 = null;
//     java.lang.String var27 = var22.format(var25, var26);
// 
//   }

  public void test287() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test287"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: ", "hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test288() {}
//   public void test288() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test288"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!: hi!: hi!: hi!: hi!: hi!: hi!");
// 
//   }

  public void test289() {}
//   public void test289() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test289"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!. hi! at hi!: hi! line -8 : 10", "hi!: hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var15, "hi!");
//     java.lang.String var18 = var17.toString();
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("", var20, "hi!");
//     int var23 = var17.compareTo(var22);
//     com.google.javascript.rhino.Node var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var30 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", var25, var28, var30);
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var13, var22, var30);
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.disabled("", "");
//     boolean var36 = var22.equals((java.lang.Object)"");
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.CheckLevel var42 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var42, "hi!");
//     com.google.javascript.jscomp.CheckLevel var46 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var46, "hi!");
//     java.lang.String var49 = var48.toString();
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
//     int var54 = var48.compareTo(var53);
//     java.lang.String[] var55 = null;
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make(var48, var55);
//     com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     boolean var60 = var48.equals((java.lang.Object)var59);
//     int var61 = var44.compareTo(var59);
//     com.google.javascript.jscomp.CheckLevel var63 = null;
//     com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var63, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var67 = null;
//     com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var72 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", var67, var70, var72);
//     int var74 = var65.compareTo(var70);
//     com.google.javascript.rhino.Node var76 = null;
//     com.google.javascript.jscomp.DiagnosticType var79 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var81 = null;
//     com.google.javascript.jscomp.DiagnosticType var84 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var86 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!", var81, var84, var86);
//     com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var76, var79, var86);
//     com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make(var65, var86);
//     com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", 66, 46, var40, var44, var86);
//     com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line 3 : 5", 10, 67, var9, var22, var86);
//     com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3.  at (unknown source) line (unknown line) : (unknown column)", var1, var2, var5, var86);
// 
//   }

  public void test290() {}
//   public void test290() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test290"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!", "hi!. hi! at hi!: hi! line 0 : 3: : hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100");
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("", var12, "");
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.rhino.Node var20 = null;
//     com.google.javascript.rhino.Node var22 = null;
//     com.google.javascript.rhino.Node var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var29 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", var24, var27, var29);
//     boolean var32 = var27.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var41 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var36, var39, var41);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", var22, var27, var41);
//     com.google.javascript.jscomp.DiagnosticType var44 = var43.getType();
//     com.google.javascript.jscomp.CheckLevel var48 = null;
//     com.google.javascript.jscomp.CheckLevel var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var50, "hi!");
//     java.lang.String var53 = var52.toString();
//     com.google.javascript.jscomp.CheckLevel var55 = null;
//     com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.make("", var55, "hi!");
//     int var58 = var52.compareTo(var57);
//     com.google.javascript.rhino.Node var60 = null;
//     com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var65 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!", var60, var63, var65);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var48, var57, var65);
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make(": ", var20, var44, var65);
//     com.google.javascript.jscomp.CheckLevel var72 = null;
//     com.google.javascript.jscomp.CheckLevel var74 = null;
//     com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var74, "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var79 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var80 = var76.compareTo(var79);
//     com.google.javascript.rhino.Node var82 = null;
//     com.google.javascript.jscomp.DiagnosticType var85 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var87 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!", var82, var85, var87);
//     com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var72, var76, var87);
//     com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", (-1), (-8), var18, var44, var87);
//     com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", (-46), 1, var10, var14, var87);
//     com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0: hi!. hi! at hi!: hi! line 0 : 3", (-46), (-3), var3, var6, var87);
//     com.google.javascript.jscomp.DiagnosticType var93 = var92.getType();
//     com.google.javascript.jscomp.CheckLevel var94 = null;
//     com.google.javascript.jscomp.MessageFormatter var95 = null;
//     java.lang.String var96 = var92.format(var94, var95);
// 
//   }

  public void test291() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test291"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", "");
    java.lang.String var3 = var2.toString();
    com.google.javascript.jscomp.CheckLevel var7 = null;
    com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var14 = null;
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.CheckLevel var20 = null;
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var20, "hi!");
    java.lang.String var23 = var22.toString();
    com.google.javascript.jscomp.CheckLevel var25 = null;
    com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
    int var28 = var22.compareTo(var27);
    com.google.javascript.rhino.Node var30 = null;
    com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var35 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var30, var33, var35);
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var18, var22, var35);
    java.lang.String[] var38 = null;
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 10, var14, var22, var38);
    int var40 = var10.compareTo(var22);
    java.lang.String var41 = var10.toString();
    com.google.javascript.jscomp.CheckLevel var45 = null;
    com.google.javascript.jscomp.CheckLevel var47 = null;
    com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var47, "hi!");
    java.lang.String var50 = var49.toString();
    com.google.javascript.jscomp.CheckLevel var52 = null;
    com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.make("", var52, "hi!");
    int var55 = var49.compareTo(var54);
    java.lang.String[] var56 = null;
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make(var49, var56);
    com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var61 = var49.compareTo(var60);
    com.google.javascript.rhino.Node var63 = null;
    com.google.javascript.jscomp.CheckLevel var67 = null;
    com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var72 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var67, var70, var72);
    com.google.javascript.jscomp.CheckLevel var77 = null;
    com.google.javascript.jscomp.DiagnosticType var80 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var82 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var77, var80, var82);
    com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var63, var70, var82);
    com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("", 0, 1, var45, var60, var82);
    com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", 0, 100, var7, var10, var82);
    com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make(var2, var82);
    java.lang.String var88 = var87.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: "+ "'", var3.equals("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi!: hi!"+ "'", var23.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "hi!: hi!: hi!"+ "'", var41.equals("hi!: hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "hi!: hi!"+ "'", var50.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + "hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100.  at (unknown source) line (unknown line) : (unknown column)"+ "'", var88.equals("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100.  at (unknown source) line (unknown line) : (unknown column)"));

  }

  public void test292() {}
//   public void test292() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test292"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var0 = null;
//     java.lang.String[] var1 = null;
//     com.google.javascript.jscomp.JSError var2 = com.google.javascript.jscomp.JSError.make(var0, var1);
// 
//   }

  public void test293() {}
//   public void test293() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test293"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at (unknown source) line (unknown line) : (unknown column): hi!");
// 
//   }

  public void test294() {}
//   public void test294() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test294"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var4, ": hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.disabled(": : ", "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var23, "hi!");
//     java.lang.String var26 = var25.toString();
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("", var28, "hi!");
//     int var31 = var25.compareTo(var30);
//     com.google.javascript.rhino.Node var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var38 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", var33, var36, var38);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var21, var25, var38);
//     java.lang.String[] var41 = null;
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 10, var17, var25, var41);
//     com.google.javascript.rhino.Node var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var49 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", var44, var47, var49);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("", (-1), 10, var13, var25, var49);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make(var9, var49);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, var2, var6, var49);
// 
//   }

  public void test295() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test295"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("", ": ");
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
    com.google.javascript.jscomp.CheckLevel var22 = null;
    com.google.javascript.jscomp.CheckLevel var24 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var24, "hi!");
    java.lang.String var27 = var26.toString();
    com.google.javascript.jscomp.CheckLevel var29 = null;
    com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("", var29, "hi!");
    int var32 = var26.compareTo(var31);
    java.lang.String[] var33 = null;
    com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make(var26, var33);
    com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var38 = var26.compareTo(var37);
    com.google.javascript.rhino.Node var40 = null;
    com.google.javascript.jscomp.CheckLevel var44 = null;
    com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var49 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var44, var47, var49);
    com.google.javascript.jscomp.CheckLevel var54 = null;
    com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var59 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var54, var57, var59);
    com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var40, var47, var59);
    com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("", 0, 1, var22, var37, var59);
    com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make(var18, var59);
    com.google.javascript.jscomp.CheckLevel var67 = null;
    com.google.javascript.jscomp.CheckLevel var69 = null;
    com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.make("", var69, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var75 = null;
    com.google.javascript.jscomp.CheckLevel var77 = null;
    com.google.javascript.jscomp.DiagnosticType var79 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var77, "hi!");
    java.lang.String var80 = var79.toString();
    com.google.javascript.jscomp.CheckLevel var82 = null;
    com.google.javascript.jscomp.DiagnosticType var84 = com.google.javascript.jscomp.DiagnosticType.make("", var82, "hi!");
    int var85 = var79.compareTo(var84);
    com.google.javascript.rhino.Node var87 = null;
    com.google.javascript.jscomp.DiagnosticType var90 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var92 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!", var87, var90, var92);
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var75, var79, var92);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", 10, 64, var67, var71, var92);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", (-46), (-8), var15, var18, var92);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line -64 : 100", 0, (-64), var11, var92);
    com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make(": ", 12, (-42), var5, var92);
    int var99 = var98.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "hi!: hi!"+ "'", var27.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "hi!: hi!"+ "'", var80.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var99 == (-42));

  }

  public void test296() {}
//   public void test296() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test296"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var8 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var3, var6, var8);
//     boolean var11 = var9.equals((java.lang.Object)(short)10);
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", "hi!: hi!: hi!");
//     boolean var15 = var9.equals((java.lang.Object)"hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.MessageFormatter var17 = null;
//     java.lang.String var18 = var9.format(var16, var17);
// 
//   }

  public void test297() {}
//   public void test297() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test297"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var3, var7, var20);
//     com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var29, "hi!");
//     java.lang.String var32 = var31.toString();
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     int var37 = var31.compareTo(var36);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var27, var31, var44);
//     com.google.javascript.jscomp.DiagnosticType var47 = var46.getType();
//     boolean var48 = var22.equals((java.lang.Object)var46);
//     java.lang.String var49 = var46.toString();
//     com.google.javascript.jscomp.DiagnosticType var50 = var46.getType();
//     int var51 = var46.getCharno();
//     com.google.javascript.jscomp.CheckLevel var52 = null;
//     com.google.javascript.jscomp.MessageFormatter var53 = null;
//     java.lang.String var54 = var46.format(var52, var53);
// 
//   }

  public void test298() {}
//   public void test298() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test298"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var4, "hi!");
//     java.lang.String var7 = var6.toString();
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     int var12 = var6.compareTo(var11);
//     java.lang.String[] var13 = null;
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make(var6, var13);
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     boolean var18 = var6.equals((java.lang.Object)var17);
//     java.lang.String var19 = var6.toString();
//     com.google.javascript.rhino.Node var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
//     com.google.javascript.rhino.Node var29 = null;
//     com.google.javascript.rhino.Node var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var36 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", var31, var34, var36);
//     boolean var39 = var34.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var48 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var43, var46, var48);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", var29, var34, var48);
//     com.google.javascript.rhino.Node var52 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var57 = null;
//     com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var62 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!", var57, var60, var62);
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var52, var55, var62);
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var34, var62);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var21, var24, var62);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("", (-1), 5, var6, var62);
//     java.lang.Object var68 = null;
//     boolean var69 = var67.equals(var68);
//     com.google.javascript.jscomp.CheckLevel var70 = null;
//     com.google.javascript.jscomp.MessageFormatter var71 = null;
//     java.lang.String var72 = var67.format(var70, var71);
// 
//   }

  public void test299() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test299"); }


    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.CheckLevel var8 = null;
    com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var8, "hi!");
    java.lang.String var11 = var10.toString();
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("", var13, "hi!");
    int var16 = var10.compareTo(var15);
    com.google.javascript.rhino.Node var18 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var23 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", var18, var21, var23);
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var6, var10, var23);
    com.google.javascript.jscomp.DiagnosticType var26 = var25.getType();
    com.google.javascript.jscomp.CheckLevel var30 = null;
    com.google.javascript.jscomp.CheckLevel var32 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var32, "hi!");
    java.lang.String var35 = var34.toString();
    com.google.javascript.jscomp.CheckLevel var37 = null;
    com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.make("", var37, "hi!");
    int var40 = var34.compareTo(var39);
    com.google.javascript.rhino.Node var42 = null;
    com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var47 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", var42, var45, var47);
    com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var30, var34, var47);
    com.google.javascript.jscomp.DiagnosticType var50 = var49.getType();
    boolean var51 = var25.equals((java.lang.Object)var49);
    boolean var53 = var49.equals((java.lang.Object)0L);
    int var54 = var49.getCharno();
    com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", "hi!: ");
    boolean var58 = var49.equals((java.lang.Object)var57);
    com.google.javascript.jscomp.DiagnosticType var59 = var49.getType();
    com.google.javascript.rhino.Node var61 = null;
    com.google.javascript.jscomp.CheckLevel var65 = null;
    com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var70 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var65, var68, var70);
    com.google.javascript.jscomp.CheckLevel var75 = null;
    com.google.javascript.jscomp.DiagnosticType var78 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var80 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var75, var78, var80);
    com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var61, var68, var80);
    com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line 3 : 5", 45, (-1), var59, var80);
    java.lang.String var84 = var59.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!: hi!"+ "'", var11.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "hi!: hi!"+ "'", var35.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + "hi!: hi!"+ "'", var84.equals("hi!: hi!"));

  }

  public void test300() {}
//   public void test300() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test300"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var3, var7, var20);
//     com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
//     java.lang.String var24 = var22.toString();
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var36 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", var31, var34, var36);
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var26, var29, var36);
//     boolean var39 = var22.equals((java.lang.Object)"hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.MessageFormatter var41 = null;
//     java.lang.String var42 = var22.format(var40, var41);
// 
//   }

  public void test301() {}
//   public void test301() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test301"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at hi!: hi! line 0 : 3", "");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!", "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var19 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var14, var17, var19);
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var29 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var24, var27, var29);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var10, var17, var29);
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", (-42), 3, var8, var29);
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make(var2, var29);
//     com.google.javascript.jscomp.DiagnosticType var34 = null;
//     int var35 = var2.compareTo(var34);
// 
//   }

  public void test302() {}
//   public void test302() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test302"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.warning(": : ", "hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!");
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at hi!: hi! line 0 : 3", "hi!");
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var32 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var27, var30, var32);
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 100, var23, var32);
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100", (-28), (-3), var17, var32);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi!. hi! at hi!: hi! line (unknown line) : 10 line (unknown line) : (unknown column)", (-58), (-28), var8, var11, var32);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", 66, (-28), var3, var4, var32);
// 
//   }

  public void test303() {}
//   public void test303() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test303"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var3, var7, var20);
//     com.google.javascript.rhino.Node var27 = null;
//     com.google.javascript.rhino.Node var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var34);
//     boolean var37 = var32.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var46 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var41, var44, var46);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", var27, var32, var46);
//     com.google.javascript.rhino.Node var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var55 = null;
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var60 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!", var55, var58, var60);
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var50, var53, var60);
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var32, var60);
//     com.google.javascript.jscomp.DiagnosticType var64 = var63.getType();
//     com.google.javascript.jscomp.CheckLevel var66 = null;
//     com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var66, "");
//     boolean var69 = var63.equals((java.lang.Object)"hi!");
//     java.lang.String var70 = var63.toString();
//     boolean var71 = var22.equals((java.lang.Object)var63);
//     com.google.javascript.jscomp.CheckLevel var72 = null;
//     com.google.javascript.jscomp.MessageFormatter var73 = null;
//     java.lang.String var74 = var63.format(var72, var73);
// 
//   }

  public void test304() {}
//   public void test304() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test304"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var4, "hi!: hi!: hi!: hi!");
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.rhino.Node var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var18 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", var13, var16, var18);
//     boolean var21 = var16.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var30 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var25, var28, var30);
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", var11, var16, var30);
//     com.google.javascript.jscomp.DiagnosticType var33 = var32.getType();
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!. hi! at hi!: hi! line 0 : 3");
//     int var37 = var33.compareTo(var36);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.warning(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.rhino.Node var44 = null;
//     com.google.javascript.rhino.Node var46 = null;
//     com.google.javascript.rhino.Node var48 = null;
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var53 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", var48, var51, var53);
//     boolean var56 = var51.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var60 = null;
//     com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var65 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var60, var63, var65);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!", var46, var51, var65);
//     com.google.javascript.jscomp.DiagnosticType var68 = var67.getType();
//     com.google.javascript.jscomp.CheckLevel var72 = null;
//     com.google.javascript.jscomp.CheckLevel var74 = null;
//     com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var74, "hi!");
//     java.lang.String var77 = var76.toString();
//     com.google.javascript.jscomp.CheckLevel var79 = null;
//     com.google.javascript.jscomp.DiagnosticType var81 = com.google.javascript.jscomp.DiagnosticType.make("", var79, "hi!");
//     int var82 = var76.compareTo(var81);
//     com.google.javascript.rhino.Node var84 = null;
//     com.google.javascript.jscomp.DiagnosticType var87 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var89 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!", var84, var87, var89);
//     com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var72, var81, var89);
//     com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make(": ", var44, var68, var89);
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var39, var42, var89);
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("", 66, (-12), var33, var89);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, var2, var6, var89);
// 
//   }

  public void test305() {}
//   public void test305() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test305"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var11 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var12 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var11);
//     boolean var14 = var9.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var18, var21, var23);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var4, var9, var23);
//     com.google.javascript.jscomp.DiagnosticType var26 = var25.getType();
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!. hi! at hi!: hi! line 0 : 3");
//     int var30 = var26.compareTo(var29);
//     com.google.javascript.rhino.Node var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var37 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var37);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!: hi!", var1, var2, var29, var37);
// 
//   }

  public void test306() {}
//   public void test306() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test306"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi!: hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100 line -46 : (unknown column)");
// 
//   }

  public void test307() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test307"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!. hi! at hi!: hi!. hi! at hi!: hi! line (unknown line) : 10 line (unknown line) : (unknown column)", "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!: hi!: hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test308() {}
//   public void test308() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test308"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var1, "hi!");
//     java.lang.String var4 = var3.toString();
//     com.google.javascript.jscomp.DiagnosticType var5 = null;
//     int var6 = var3.compareTo(var5);
// 
//   }

  public void test309() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test309"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var5 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
    java.lang.String var8 = var7.toString();
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
    int var13 = var7.compareTo(var12);
    com.google.javascript.jscomp.CheckLevel var17 = null;
    com.google.javascript.jscomp.CheckLevel var19 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var19, "hi!");
    java.lang.String var22 = var21.toString();
    com.google.javascript.jscomp.CheckLevel var24 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
    int var27 = var21.compareTo(var26);
    com.google.javascript.rhino.Node var29 = null;
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var34 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var34);
    com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var17, var21, var34);
    com.google.javascript.jscomp.DiagnosticType var37 = var36.getType();
    com.google.javascript.jscomp.CheckLevel var41 = null;
    com.google.javascript.jscomp.CheckLevel var43 = null;
    com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var43, "hi!");
    java.lang.String var46 = var45.toString();
    com.google.javascript.jscomp.CheckLevel var48 = null;
    com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("", var48, "hi!");
    int var51 = var45.compareTo(var50);
    com.google.javascript.rhino.Node var53 = null;
    com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var58 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", var53, var56, var58);
    com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var41, var45, var58);
    com.google.javascript.jscomp.DiagnosticType var61 = var60.getType();
    boolean var62 = var36.equals((java.lang.Object)var60);
    boolean var63 = var12.equals((java.lang.Object)var36);
    com.google.javascript.jscomp.CheckLevel var67 = null;
    com.google.javascript.jscomp.CheckLevel var69 = null;
    com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var69, "hi!");
    java.lang.String var72 = var71.toString();
    com.google.javascript.jscomp.CheckLevel var74 = null;
    com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.make("", var74, "hi!");
    int var77 = var71.compareTo(var76);
    com.google.javascript.rhino.Node var79 = null;
    com.google.javascript.jscomp.DiagnosticType var82 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var84 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!", var79, var82, var84);
    com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var67, var71, var84);
    com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", 3, (-46), var3, var12, var84);
    com.google.javascript.jscomp.DiagnosticType var90 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi!: hi! line 3 : -8", "hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
    boolean var91 = var87.equals((java.lang.Object)"hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!: hi!"+ "'", var8.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "hi!: hi!"+ "'", var22.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "hi!: hi!"+ "'", var46.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + "hi!: hi!"+ "'", var72.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);

  }

  public void test310() {}
//   public void test310() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test310"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     java.lang.String[] var5 = null;
//     com.google.javascript.jscomp.JSError var6 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100.  at (unknown source) line (unknown line) : (unknown column)", (-3), (-43), var3, var4, var5);
// 
//   }

  public void test311() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test311"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", "hi!: hi!. hi! at hi!: hi!. hi! at hi!: hi! line (unknown line) : 10 line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var7 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var7, ": ");
    com.google.javascript.rhino.Node var11 = null;
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var20 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var15, var18, var20);
    com.google.javascript.jscomp.CheckLevel var25 = null;
    com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var30 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var25, var28, var30);
    com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var11, var18, var30);
    com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make(var9, var30);
    com.google.javascript.rhino.Node var35 = null;
    com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
    com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var48 = null;
    com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var53 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var48, var51, var53);
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 100, var44, var53);
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make(": hi!", var35, var38, var53);
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("", 8, 12, var9, var53);
    com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make(var2, var53);
    java.lang.Object var59 = null;
    boolean var60 = var2.equals(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);

  }

  public void test312() {}
//   public void test312() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test312"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var8, "hi!");
//     java.lang.String var11 = var10.toString();
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("", var13, "hi!");
//     int var16 = var10.compareTo(var15);
//     java.lang.String[] var17 = null;
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make(var10, var17);
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var22 = var10.compareTo(var21);
//     com.google.javascript.rhino.Node var24 = null;
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var33 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var28, var31, var33);
//     com.google.javascript.jscomp.CheckLevel var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var43 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var38, var41, var43);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var24, var31, var43);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("", 0, 1, var6, var21, var43);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make(var2, var43);
//     int var48 = var47.getCharno();
//     int var49 = var47.getCharno();
//     com.google.javascript.jscomp.DiagnosticType var50 = var47.getType();
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.MessageFormatter var52 = null;
//     java.lang.String var53 = var47.format(var51, var52);
// 
//   }

  public void test313() {}
//   public void test313() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test313"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at (unknown source) line (unknown line) : (unknown column)");
// 
//   }

  public void test314() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test314"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var5 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
    java.lang.String var8 = var7.toString();
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
    int var13 = var7.compareTo(var12);
    java.lang.String[] var14 = null;
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make(var7, var14);
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var19 = var7.compareTo(var18);
    com.google.javascript.rhino.Node var21 = null;
    com.google.javascript.rhino.Node var23 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var28 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var23, var26, var28);
    boolean var31 = var26.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var35 = null;
    com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var40 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var35, var38, var40);
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", var21, var26, var40);
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var3, var18, var40);
    java.lang.String var44 = var18.toString();
    com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!: hi!");
    com.google.javascript.rhino.Node var55 = null;
    com.google.javascript.jscomp.CheckLevel var59 = null;
    com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var64 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var59, var62, var64);
    com.google.javascript.jscomp.CheckLevel var69 = null;
    com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var74 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var69, var72, var74);
    com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var55, var62, var74);
    com.google.javascript.rhino.Node var78 = null;
    com.google.javascript.jscomp.DiagnosticType var81 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var83 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("hi!", var78, var81, var83);
    com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!", 8, 100, var62, var83);
    com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("", (-64), (-64), var50, var83);
    com.google.javascript.jscomp.DiagnosticType var87 = var86.getType();
    int var88 = var18.compareTo(var87);
    java.lang.String var89 = var18.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!: hi!"+ "'", var8.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!"+ "'", var44.equals("hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 67);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + "hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!"+ "'", var89.equals("hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!"));

  }

  public void test315() {}
//   public void test315() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test315"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100.  at (unknown source) line (unknown line) : (unknown column)");
// 
//   }

  public void test316() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test316"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var5 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
    java.lang.String var8 = var7.toString();
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
    int var13 = var7.compareTo(var12);
    com.google.javascript.rhino.Node var15 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var20 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
    com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var3, var7, var20);
    com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
    java.lang.String var24 = var22.toString();
    com.google.javascript.rhino.Node var26 = null;
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var31 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var36 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", var31, var34, var36);
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var26, var29, var36);
    boolean var39 = var22.equals((java.lang.Object)"hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    boolean var41 = var22.equals((java.lang.Object)10.0d);
    com.google.javascript.jscomp.DiagnosticType var42 = var22.getType();
    java.lang.String var43 = var42.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!: hi!"+ "'", var8.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "hi!. hi! at hi!: hi! line 0 : 3"+ "'", var24.equals("hi!. hi! at hi!: hi! line 0 : 3"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!: hi!"+ "'", var43.equals("hi!: hi!"));

  }

  public void test317() {}
//   public void test317() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test317"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at hi!: hi! line 0 : 3.  at (unknown source) line (unknown line) : (unknown column)");
// 
//   }

  public void test318() {}
//   public void test318() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test318"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.rhino.Node var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var8 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", var3, var6, var8);
//     boolean var11 = var6.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", var1, var6, var20);
//     com.google.javascript.jscomp.CheckLevel var26 = null;
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var28, "hi!");
//     java.lang.String var31 = var30.toString();
//     com.google.javascript.jscomp.CheckLevel var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
//     int var36 = var30.compareTo(var35);
//     java.lang.String[] var37 = null;
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make(var30, var37);
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var42 = var30.compareTo(var41);
//     com.google.javascript.rhino.Node var44 = null;
//     com.google.javascript.jscomp.CheckLevel var48 = null;
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var53 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var48, var51, var53);
//     com.google.javascript.jscomp.CheckLevel var58 = null;
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var63 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var58, var61, var63);
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var44, var51, var63);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("", 0, 1, var26, var41, var63);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make(var6, var63);
//     com.google.javascript.jscomp.DiagnosticType var73 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: hi!: hi!", "hi!: hi!: hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var77 = null;
//     com.google.javascript.jscomp.CheckLevel var79 = null;
//     com.google.javascript.jscomp.DiagnosticType var81 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var79, "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var84 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var85 = var81.compareTo(var84);
//     com.google.javascript.rhino.Node var87 = null;
//     com.google.javascript.jscomp.DiagnosticType var90 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var92 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!", var87, var90, var92);
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var77, var81, var92);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", (-1), 0, var73, var92);
//     com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make(var6, var92);
//     com.google.javascript.jscomp.CheckLevel var97 = null;
//     com.google.javascript.jscomp.MessageFormatter var98 = null;
//     java.lang.String var99 = var96.format(var97, var98);
// 
//   }

  public void test319() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test319"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!. hi! at hi!: hi!. hi! at hi!: hi! line (unknown line) : 10 line (unknown line) : (unknown column)", ": hi!. hi! at hi!: hi! line 0 : 3");
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var9, "hi!");
    java.lang.String var12 = var11.toString();
    com.google.javascript.jscomp.CheckLevel var14 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
    int var17 = var11.compareTo(var16);
    java.lang.String[] var18 = null;
    com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make(var11, var18);
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var23 = var11.compareTo(var22);
    com.google.javascript.rhino.Node var25 = null;
    com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var30 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", var25, var28, var30);
    com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", 3, (-8), var11, var30);
    com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var1, var4, var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "hi!: hi!"+ "'", var12.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);

  }

  public void test320() {}
//   public void test320() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test320"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     java.lang.String[] var5 = null;
//     com.google.javascript.jscomp.JSError var6 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi!: hi! line 3 : -8", 8, 4, var3, var4, var5);
// 
//   }

  public void test321() {}
//   public void test321() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test321"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.warning(": : ", "hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!");
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at hi!: hi! line 0 : 3", "hi!");
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var27 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var22, var25, var27);
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 100, var18, var27);
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100", (-28), (-3), var12, var27);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi!. hi! at hi!: hi! line (unknown line) : 10 line (unknown line) : (unknown column)", (-58), (-28), var3, var6, var27);
//     com.google.javascript.jscomp.CheckLevel var32 = null;
//     com.google.javascript.jscomp.MessageFormatter var33 = null;
//     java.lang.String var34 = var31.format(var32, var33);
// 
//   }

  public void test322() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test322"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!. hi! at : hi!. hi! at hi!: hi! line 0 : 3 line (unknown line) : (unknown column)");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test323() {}
//   public void test323() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test323"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi! at hi!: hi!. hi! at hi!: hi! line (unknown line) : 10 line (unknown line) : (unknown column): hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at hi!: hi! line (unknown line) : (unknown column)");
// 
//   }

  public void test324() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test324"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.CheckLevel var12 = null;
    com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var12, "hi!");
    java.lang.String var15 = var14.toString();
    com.google.javascript.jscomp.CheckLevel var17 = null;
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
    int var20 = var14.compareTo(var19);
    com.google.javascript.rhino.Node var22 = null;
    com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var27 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var22, var25, var27);
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var10, var14, var27);
    java.lang.String[] var30 = null;
    com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 10, var6, var14, var30);
    int var32 = var2.compareTo(var14);
    java.lang.Object var33 = null;
    boolean var34 = var2.equals(var33);
    com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!: hi!: hi!");
    boolean var38 = var2.equals((java.lang.Object)var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi!: hi!"+ "'", var15.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);

  }

  public void test325() {}
//   public void test325() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test325"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line 3 : 5");
// 
//   }

  public void test326() {}
//   public void test326() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test326"); }
// 
// 
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var11 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var12 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var11);
//     boolean var14 = var9.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var18, var21, var23);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var4, var9, var23);
//     com.google.javascript.rhino.Node var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var37 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var37);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var27, var30, var37);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var9, var37);
//     com.google.javascript.jscomp.DiagnosticType var41 = var40.getType();
//     com.google.javascript.jscomp.DiagnosticType var42 = null;
//     int var43 = var41.compareTo(var42);
// 
//   }

  public void test327() {}
//   public void test327() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test327"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at hi!: hi! line 0 : 10");
// 
//   }

  public void test328() {}
//   public void test328() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test328"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at hi!: hi! line 0 : 3", var5, "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var11 = null;
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var13, "hi!");
//     java.lang.String var16 = var15.toString();
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var22, "hi!");
//     java.lang.String var25 = var24.toString();
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.make("", var27, "hi!");
//     int var30 = var24.compareTo(var29);
//     java.lang.String[] var31 = null;
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make(var24, var31);
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var36 = var24.compareTo(var35);
//     com.google.javascript.rhino.Node var38 = null;
//     com.google.javascript.rhino.Node var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var45 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", var40, var43, var45);
//     boolean var48 = var43.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var52 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var57 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var52, var55, var57);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", var38, var43, var57);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var20, var35, var57);
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 8, var11, var15, var57);
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3: ", 10, 3, var3, var7, var57);
//     int var63 = var62.getCharno();
//     com.google.javascript.jscomp.CheckLevel var64 = null;
//     com.google.javascript.jscomp.MessageFormatter var65 = null;
//     java.lang.String var66 = var62.format(var64, var65);
// 
//   }

  public void test329() {}
//   public void test329() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test329"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var0 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!", "");
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.disabled(": : ", "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.CheckLevel var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var26, "hi!");
//     java.lang.String var29 = var28.toString();
//     com.google.javascript.jscomp.CheckLevel var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.make("", var31, "hi!");
//     int var34 = var28.compareTo(var33);
//     com.google.javascript.rhino.Node var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var41 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", var36, var39, var41);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var24, var28, var41);
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", 10, 64, var16, var20, var41);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100", var9, var12, var41);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0. hi!. hi! at hi!: hi! line 0 : 3 at hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)", 45, (-1), var4, var7, var41);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make(var0, var41);
// 
//   }

  public void test330() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test330"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var1, "hi!");
    java.lang.String var4 = var3.toString();
    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.make("", var6, "hi!");
    int var9 = var3.compareTo(var8);
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var15, "hi!");
    java.lang.String var18 = var17.toString();
    com.google.javascript.jscomp.CheckLevel var20 = null;
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("", var20, "hi!");
    int var23 = var17.compareTo(var22);
    com.google.javascript.rhino.Node var25 = null;
    com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var30 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", var25, var28, var30);
    com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var13, var17, var30);
    com.google.javascript.jscomp.DiagnosticType var33 = var32.getType();
    com.google.javascript.jscomp.CheckLevel var37 = null;
    com.google.javascript.jscomp.CheckLevel var39 = null;
    com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var39, "hi!");
    java.lang.String var42 = var41.toString();
    com.google.javascript.jscomp.CheckLevel var44 = null;
    com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.make("", var44, "hi!");
    int var47 = var41.compareTo(var46);
    com.google.javascript.rhino.Node var49 = null;
    com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var54 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", var49, var52, var54);
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var37, var41, var54);
    com.google.javascript.jscomp.DiagnosticType var57 = var56.getType();
    boolean var58 = var32.equals((java.lang.Object)var56);
    boolean var59 = var8.equals((java.lang.Object)var32);
    com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!. hi! at hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line -64 : 0", ": hi!");
    int var63 = var8.compareTo(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!: hi!"+ "'", var4.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "hi!: hi!"+ "'", var18.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "hi!: hi!"+ "'", var42.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == (-102));

  }

  public void test331() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test331"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): : : ");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test332() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test332"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    java.lang.String var3 = var2.toString();
    java.lang.Object var4 = null;
    boolean var5 = var2.equals(var4);
    java.lang.String var6 = var2.toString();
    java.lang.String var7 = var2.toString();
    java.lang.String var8 = var2.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var3.equals("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var6.equals("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var7.equals("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var8.equals("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)"));

  }

  public void test333() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test333"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var11 = null;
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var13, "hi!");
    java.lang.String var16 = var15.toString();
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
    int var21 = var15.compareTo(var20);
    java.lang.String[] var22 = null;
    com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make(var15, var22);
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var27 = var15.compareTo(var26);
    com.google.javascript.rhino.Node var29 = null;
    com.google.javascript.jscomp.CheckLevel var33 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var38 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var33, var36, var38);
    com.google.javascript.jscomp.CheckLevel var43 = null;
    com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var48 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var43, var46, var48);
    com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var29, var36, var48);
    com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("", 0, 1, var11, var26, var48);
    com.google.javascript.jscomp.CheckLevel var55 = null;
    com.google.javascript.jscomp.CheckLevel var57 = null;
    com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var57, "hi!");
    java.lang.String var60 = var59.toString();
    com.google.javascript.jscomp.CheckLevel var62 = null;
    com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.make("", var62, "hi!");
    int var65 = var59.compareTo(var64);
    java.lang.String[] var66 = null;
    com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make(var59, var66);
    com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var71 = var59.compareTo(var70);
    com.google.javascript.rhino.Node var73 = null;
    com.google.javascript.rhino.Node var75 = null;
    com.google.javascript.jscomp.DiagnosticType var78 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var80 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("hi!", var75, var78, var80);
    boolean var83 = var78.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var87 = null;
    com.google.javascript.jscomp.DiagnosticType var90 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var92 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var87, var90, var92);
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!", var73, var78, var92);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var55, var70, var92);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("hi!", 10, 10, var26, var92);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, var4, var92);
    java.lang.String var98 = var4.toString();
    java.lang.String var99 = var4.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!: hi!"+ "'", var16.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "hi!: hi!"+ "'", var60.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var98 + "' != '" + "hi!: "+ "'", var98.equals("hi!: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var99 + "' != '" + "hi!: "+ "'", var99.equals("hi!: "));

  }

  public void test334() {}
//   public void test334() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test334"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi! at hi!: hi! line (unknown line) : 10: ");
// 
//   }

  public void test335() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test335"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var1, "hi!");
    java.lang.String var4 = var3.toString();
    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.make("", var6, "hi!");
    int var9 = var3.compareTo(var8);
    java.lang.String[] var10 = null;
    com.google.javascript.jscomp.JSError var11 = com.google.javascript.jscomp.JSError.make(var3, var10);
    com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    boolean var15 = var3.equals((java.lang.Object)"hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var19 = null;
    com.google.javascript.rhino.Node var21 = null;
    com.google.javascript.rhino.Node var23 = null;
    com.google.javascript.rhino.Node var25 = null;
    com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var30 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", var25, var28, var30);
    boolean var33 = var28.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var37 = null;
    com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var42 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var37, var40, var42);
    com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", var23, var28, var42);
    com.google.javascript.jscomp.DiagnosticType var45 = var44.getType();
    com.google.javascript.jscomp.CheckLevel var49 = null;
    com.google.javascript.jscomp.CheckLevel var51 = null;
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var51, "hi!");
    java.lang.String var54 = var53.toString();
    com.google.javascript.jscomp.CheckLevel var56 = null;
    com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.make("", var56, "hi!");
    int var59 = var53.compareTo(var58);
    com.google.javascript.rhino.Node var61 = null;
    com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var66 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!", var61, var64, var66);
    com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var49, var58, var66);
    com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make(": ", var21, var45, var66);
    com.google.javascript.jscomp.CheckLevel var73 = null;
    com.google.javascript.jscomp.CheckLevel var75 = null;
    com.google.javascript.jscomp.DiagnosticType var77 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var75, "hi!: hi!");
    com.google.javascript.jscomp.DiagnosticType var80 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var81 = var77.compareTo(var80);
    com.google.javascript.rhino.Node var83 = null;
    com.google.javascript.jscomp.DiagnosticType var86 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var88 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make("hi!", var83, var86, var88);
    com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var73, var77, var88);
    com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", (-1), (-8), var19, var45, var88);
    com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make(var3, var88);
    com.google.javascript.jscomp.DiagnosticType var93 = var92.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!: hi!"+ "'", var4.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "hi!: hi!"+ "'", var54.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);

  }

  public void test336() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test336"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at (unknown source) line (unknown line) : (unknown column): hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test337() {}
//   public void test337() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test337"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var15 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var16 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var15);
//     boolean var18 = var13.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var27 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var22, var25, var27);
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var8, var13, var27);
//     com.google.javascript.rhino.Node var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var41 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", var36, var39, var41);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var31, var34, var41);
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var13, var41);
//     com.google.javascript.jscomp.DiagnosticType var45 = var44.getType();
//     com.google.javascript.jscomp.CheckLevel var47 = null;
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var47, "");
//     boolean var50 = var44.equals((java.lang.Object)"hi!");
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
//     boolean var54 = var44.equals((java.lang.Object)var53);
//     java.lang.String var55 = var53.toString();
//     java.lang.String[] var56 = null;
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 8, 67, var3, var53, var56);
//     com.google.javascript.jscomp.DiagnosticType var58 = var57.getType();
//     com.google.javascript.jscomp.DiagnosticType var59 = var57.getType();
//     com.google.javascript.jscomp.CheckLevel var60 = null;
//     com.google.javascript.jscomp.MessageFormatter var61 = null;
//     java.lang.String var62 = var57.format(var60, var61);
// 
//   }

  public void test338() {}
//   public void test338() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test338"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", var5, "hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!");
//     com.google.javascript.jscomp.CheckLevel var11 = null;
//     com.google.javascript.rhino.Node var13 = null;
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.rhino.Node var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var22 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", var17, var20, var22);
//     boolean var25 = var20.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var29, var32, var34);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var15, var20, var34);
//     com.google.javascript.jscomp.DiagnosticType var37 = var36.getType();
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.CheckLevel var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var43, "hi!");
//     java.lang.String var46 = var45.toString();
//     com.google.javascript.jscomp.CheckLevel var48 = null;
//     com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("", var48, "hi!");
//     int var51 = var45.compareTo(var50);
//     com.google.javascript.rhino.Node var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var58 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", var53, var56, var58);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var41, var50, var58);
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make(": ", var13, var37, var58);
//     com.google.javascript.jscomp.CheckLevel var65 = null;
//     com.google.javascript.jscomp.CheckLevel var67 = null;
//     com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var67, "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var73 = var69.compareTo(var72);
//     com.google.javascript.rhino.Node var75 = null;
//     com.google.javascript.jscomp.DiagnosticType var78 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var80 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("hi!", var75, var78, var80);
//     com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var65, var69, var80);
//     com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", (-1), (-8), var11, var37, var80);
//     com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make(var7, var80);
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line 3 : 5", var1, var2, var3, var80);
// 
//   }

  public void test339() {}
//   public void test339() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test339"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: : : : ");
// 
//   }

  public void test340() {}
//   public void test340() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test340"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!. hi! at (unknown source) line -64 : 100", "hi!.  at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)");
//     java.lang.String[] var6 = null;
//     com.google.javascript.jscomp.JSError var7 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: ", var1, var2, var5, var6);
// 
//   }

  public void test341() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test341"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!. hi! at hi!: hi! line -8 : 10. hi! at hi!: hi!. hi! at hi! line (unknown line) : (unknown column) line 0 : -12");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test342() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test342"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100", "hi!: hi!. hi! at (unknown source) line 66 : -12");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test343() {}
//   public void test343() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test343"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("", ": hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", "");
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var14, ": ");
//     com.google.javascript.rhino.Node var18 = null;
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var27 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var22, var25, var27);
//     com.google.javascript.jscomp.CheckLevel var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var37 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var32, var35, var37);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var18, var25, var37);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make(var16, var37);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100", 3, 100, var9, var12, var37);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line 66 : -12", var1, var2, var5, var37);
// 
//   }

  public void test344() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test344"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at hi!: hi!: hi! line 3 : -8", var1, "hi!: hi!. hi! at hi!. hi! at hi!: hi! line 0 : 3 line (unknown line) : -8");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test345() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test345"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0: hi!. hi! at hi!: hi! line 0 : 3", ".  at hi!: hi!. hi! at hi!: hi! line (unknown line) : 10 line -46 : 1");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test346() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test346"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!. hi! at (unknown source) line 66 : -12");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test347() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test347"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", var3, ": ");
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
    com.google.javascript.jscomp.CheckLevel var22 = null;
    com.google.javascript.jscomp.CheckLevel var24 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var24, "hi!");
    java.lang.String var27 = var26.toString();
    com.google.javascript.jscomp.CheckLevel var29 = null;
    com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("", var29, "hi!");
    int var32 = var26.compareTo(var31);
    java.lang.String[] var33 = null;
    com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make(var26, var33);
    com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var38 = var26.compareTo(var37);
    com.google.javascript.rhino.Node var40 = null;
    com.google.javascript.jscomp.CheckLevel var44 = null;
    com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var49 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var44, var47, var49);
    com.google.javascript.jscomp.CheckLevel var54 = null;
    com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var59 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var54, var57, var59);
    com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var40, var47, var59);
    com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("", 0, 1, var22, var37, var59);
    com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make(var18, var59);
    com.google.javascript.jscomp.CheckLevel var67 = null;
    com.google.javascript.jscomp.CheckLevel var69 = null;
    com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.make("", var69, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var75 = null;
    com.google.javascript.jscomp.CheckLevel var77 = null;
    com.google.javascript.jscomp.DiagnosticType var79 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var77, "hi!");
    java.lang.String var80 = var79.toString();
    com.google.javascript.jscomp.CheckLevel var82 = null;
    com.google.javascript.jscomp.DiagnosticType var84 = com.google.javascript.jscomp.DiagnosticType.make("", var82, "hi!");
    int var85 = var79.compareTo(var84);
    com.google.javascript.rhino.Node var87 = null;
    com.google.javascript.jscomp.DiagnosticType var90 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var92 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!", var87, var90, var92);
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var75, var79, var92);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", 10, 64, var67, var71, var92);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", (-46), (-8), var15, var18, var92);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line -64 : 100", 0, (-64), var11, var92);
    com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make(": : : hi!. hi! at hi!: hi! line 0 : 3", var1, var5, var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "hi!: hi!"+ "'", var27.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "hi!: hi!"+ "'", var80.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);

  }

  public void test348() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test348"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var8 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var3, var6, var8);
    boolean var11 = var9.equals((java.lang.Object)(short)10);
    com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", "hi!: hi!: hi!");
    boolean var15 = var9.equals((java.lang.Object)"hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
    java.lang.String var16 = var9.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!: hi!. hi! at hi!: hi! line (unknown line) : 10"+ "'", var16.equals("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10"));

  }

  public void test349() {}
//   public void test349() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test349"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.jscomp.CheckLevel var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", var11, ": ");
//     int var14 = var9.compareTo(var13);
//     java.lang.String var15 = var9.toString();
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.disabled(": ", ": hi!. hi! at hi!: hi! line 0 : 3");
//     int var19 = var9.compareTo(var18);
//     com.google.javascript.rhino.Node var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", ". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0. hi!. hi! at hi!: hi! line 0 : 3 at hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var26, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var35 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var30, var33, var35);
//     int var37 = var28.compareTo(var33);
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     int var41 = var28.compareTo(var40);
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!", "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var49 = null;
//     com.google.javascript.jscomp.CheckLevel var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var58 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var53, var56, var58);
//     com.google.javascript.jscomp.CheckLevel var63 = null;
//     com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var68 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var63, var66, var68);
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var49, var56, var68);
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", (-42), 3, var47, var68);
//     boolean var72 = var28.equals((java.lang.Object)var68);
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!: : ", var21, var24, var68);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100.  at (unknown source) line (unknown line) : (unknown column)", var6, var18, var68);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make(": hi!. hi! at hi!: hi! line 0 : 3", 45, 46, var3, var4, var68);
// 
//   }

  public void test350() {}
//   public void test350() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test350"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!. hi! at hi!: hi! line -8 : 10", "hi!");
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var12, "hi!: hi!. hi! at (unknown source) line -64 : 100");
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var16, "hi!");
//     java.lang.String var19 = var18.toString();
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.make("", var21, "hi!");
//     int var24 = var18.compareTo(var23);
//     java.lang.String[] var25 = null;
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make(var18, var25);
//     int var27 = var26.getCharno();
//     java.lang.String var28 = var26.toString();
//     com.google.javascript.jscomp.CheckLevel var32 = null;
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var34, "hi!");
//     java.lang.String var37 = var36.toString();
//     com.google.javascript.jscomp.CheckLevel var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.make("", var39, "hi!");
//     int var42 = var36.compareTo(var41);
//     com.google.javascript.rhino.Node var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var49 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", var44, var47, var49);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var32, var36, var49);
//     com.google.javascript.jscomp.DiagnosticType var52 = var51.getType();
//     boolean var53 = var26.equals((java.lang.Object)var52);
//     com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.jscomp.CheckLevel var63 = null;
//     com.google.javascript.jscomp.CheckLevel var65 = null;
//     com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var65, "hi!");
//     java.lang.String var68 = var67.toString();
//     com.google.javascript.jscomp.CheckLevel var70 = null;
//     com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.make("", var70, "hi!");
//     int var73 = var67.compareTo(var72);
//     com.google.javascript.rhino.Node var75 = null;
//     com.google.javascript.jscomp.DiagnosticType var78 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var80 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("hi!", var75, var78, var80);
//     com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var63, var67, var80);
//     com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("", (-64), 0, var59, var80);
//     com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make(var52, var80);
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make(var14, var80);
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi! line (unknown line) : (unknown column)", 0, (-12), var7, var10, var80);
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!: : ", var1, var2, var3, var80);
// 
//   }

  public void test351() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test351"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at hi!: hi! line 0 : 3", "");
    java.lang.String var3 = var2.toString();
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", ": hi!. hi! at hi!: hi! line 0 : 3");
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!: hi!");
    com.google.javascript.rhino.Node var20 = null;
    com.google.javascript.jscomp.CheckLevel var24 = null;
    com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var29 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var24, var27, var29);
    com.google.javascript.jscomp.CheckLevel var34 = null;
    com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var39 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var34, var37, var39);
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var20, var27, var39);
    com.google.javascript.rhino.Node var43 = null;
    com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var48 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var48);
    com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", 8, 100, var27, var48);
    com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("", (-64), (-64), var15, var48);
    com.google.javascript.jscomp.DiagnosticType var52 = var51.getType();
    boolean var53 = var9.equals((java.lang.Object)var52);
    com.google.javascript.jscomp.CheckLevel var57 = null;
    com.google.javascript.jscomp.CheckLevel var61 = null;
    com.google.javascript.jscomp.CheckLevel var65 = null;
    com.google.javascript.jscomp.CheckLevel var67 = null;
    com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var67, "hi!");
    java.lang.String var70 = var69.toString();
    com.google.javascript.jscomp.CheckLevel var72 = null;
    com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.make("", var72, "hi!");
    int var75 = var69.compareTo(var74);
    com.google.javascript.rhino.Node var77 = null;
    com.google.javascript.jscomp.DiagnosticType var80 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var82 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!", var77, var80, var82);
    com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var65, var69, var82);
    java.lang.String[] var85 = null;
    com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 10, var61, var69, var85);
    com.google.javascript.rhino.Node var88 = null;
    com.google.javascript.jscomp.DiagnosticType var91 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var93 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!", var88, var91, var93);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("", (-1), 10, var57, var69, var93);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", 8, (-64), var52, var93);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make(var2, var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "hi!. hi! at hi!: hi! line 0 : 3: "+ "'", var3.equals("hi!. hi! at hi!: hi! line 0 : 3: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "hi!: hi!"+ "'", var70.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);

  }

  public void test352() {}
//   public void test352() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test352"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi! at hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line 66 : 46");
// 
//   }

  public void test353() {}
//   public void test353() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test353"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var4, "hi!");
//     java.lang.String var7 = var6.toString();
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     int var12 = var6.compareTo(var11);
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var18, "hi!");
//     java.lang.String var21 = var20.toString();
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("", var23, "hi!");
//     int var26 = var20.compareTo(var25);
//     com.google.javascript.rhino.Node var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var33 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", var28, var31, var33);
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var16, var25, var33);
//     int var36 = var6.compareTo(var25);
//     java.lang.String var37 = var6.toString();
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.CheckLevel var45 = null;
//     com.google.javascript.jscomp.CheckLevel var47 = null;
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var47, "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var53 = var49.compareTo(var52);
//     com.google.javascript.rhino.Node var55 = null;
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var60 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!", var55, var58, var60);
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var45, var49, var60);
//     java.lang.String[] var64 = new java.lang.String[] { "hi!. hi! at hi!: hi! line 0 : 3: "};
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("", 30, 0, var41, var49, var64);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100", var1, var2, var6, var64);
// 
//   }

  public void test354() {}
//   public void test354() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test354"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", ": ");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var9, "hi!");
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var13, "hi!");
//     java.lang.String var16 = var15.toString();
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
//     int var21 = var15.compareTo(var20);
//     java.lang.String[] var22 = null;
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make(var15, var22);
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     boolean var27 = var15.equals((java.lang.Object)var26);
//     int var28 = var11.compareTo(var26);
//     boolean var29 = var7.equals((java.lang.Object)var28);
//     java.lang.String[] var30 = null;
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var4, var7, var30);
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100");
//     com.google.javascript.rhino.Node var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var50 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", var45, var48, var50);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("", var40, var43, var50);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make(": : : hi!. hi! at hi!: hi! line 0 : 3", (-46), 58, var35, var38, var50);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!", var1, var2, var7, var50);
// 
//   }

  public void test355() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test355"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!", ": ");
    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    int var6 = var2.compareTo(var5);
    java.lang.Object var7 = null;
    boolean var8 = var2.equals(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == (-5));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);

  }

  public void test356() {}
//   public void test356() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test356"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.make(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", var7, "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var11, ": ");
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var24 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var19, var22, var24);
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var29, var32, var34);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var15, var22, var34);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make(var13, var34);
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make(". hi! at hi! line (unknown line) : 10", 66, 58, var9, var34);
//     java.lang.String[] var39 = null;
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", var1, var2, var9, var39);
// 
//   }

  public void test357() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test357"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled(": : ", ": : ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test358() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test358"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!", ". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test359() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test359"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!. hi! at hi!. hi! at hi!: hi! line 0 : 3 line (unknown line) : -8", var1, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test360() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test360"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var4 = null;
    com.google.javascript.rhino.Node var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var11 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var12 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var11);
    boolean var14 = var9.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var23 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var18, var21, var23);
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var4, var9, var23);
    java.lang.Object var26 = null;
    boolean var27 = var9.equals(var26);
    boolean var28 = var2.equals((java.lang.Object)var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);

  }

  public void test361() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test361"); }


    com.google.javascript.rhino.Node var4 = null;
    com.google.javascript.jscomp.CheckLevel var8 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var13 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var8, var11, var13);
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var23 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var18, var21, var23);
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var4, var11, var23);
    com.google.javascript.rhino.Node var27 = null;
    com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var32 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", var27, var30, var32);
    com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", 8, 100, var11, var32);
    com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var38 = var11.compareTo(var37);
    java.lang.Object var39 = null;
    boolean var40 = var11.equals(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);

  }

  public void test362() {}
//   public void test362() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test362"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.rhino.Node var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var10, "hi!");
//     java.lang.String var13 = var12.toString();
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("", var15, "hi!");
//     int var18 = var12.compareTo(var17);
//     java.lang.String[] var19 = null;
//     com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make(var12, var19);
//     int var21 = var20.getCharno();
//     java.lang.String var22 = var20.toString();
//     com.google.javascript.jscomp.CheckLevel var26 = null;
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var28, "hi!");
//     java.lang.String var31 = var30.toString();
//     com.google.javascript.jscomp.CheckLevel var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
//     int var36 = var30.compareTo(var35);
//     com.google.javascript.rhino.Node var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var43 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", var38, var41, var43);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var26, var30, var43);
//     com.google.javascript.jscomp.DiagnosticType var46 = var45.getType();
//     boolean var47 = var20.equals((java.lang.Object)var46);
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.jscomp.CheckLevel var57 = null;
//     com.google.javascript.jscomp.CheckLevel var59 = null;
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var59, "hi!");
//     java.lang.String var62 = var61.toString();
//     com.google.javascript.jscomp.CheckLevel var64 = null;
//     com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.make("", var64, "hi!");
//     int var67 = var61.compareTo(var66);
//     com.google.javascript.rhino.Node var69 = null;
//     com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var74 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!", var69, var72, var74);
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var57, var61, var74);
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("", (-64), 0, var53, var74);
//     com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make(var46, var74);
//     com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line 3 : 5", var5, var8, var74);
//     com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi! line -8 : 10", 64, (-5), var3, var74);
// 
//   }

  public void test363() {}
//   public void test363() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test363"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.warning(": hi!. hi! at hi!: hi! line 0 : 3", "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", "hi!: hi!. hi! at hi!: hi!. hi! at hi!: hi! line (unknown line) : 10 line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     java.lang.String[] var22 = null;
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", 35, (-64), var18, var21, var22);
//     com.google.javascript.jscomp.DiagnosticType var24 = var23.getType();
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.rhino.Node var28 = null;
//     com.google.javascript.rhino.Node var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var35 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var30, var33, var35);
//     boolean var38 = var33.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var42 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var47 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var42, var45, var47);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", var28, var33, var47);
//     com.google.javascript.jscomp.DiagnosticType var50 = var49.getType();
//     com.google.javascript.jscomp.CheckLevel var54 = null;
//     com.google.javascript.jscomp.CheckLevel var56 = null;
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var56, "hi!");
//     java.lang.String var59 = var58.toString();
//     com.google.javascript.jscomp.CheckLevel var61 = null;
//     com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.make("", var61, "hi!");
//     int var64 = var58.compareTo(var63);
//     com.google.javascript.rhino.Node var66 = null;
//     com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var71 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!", var66, var69, var71);
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var54, var63, var71);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make(": ", var26, var50, var71);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!. hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100 at (unknown source) line 1 : 58", 1, (-28), var14, var24, var71);
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make(var10, var71);
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!", var4, var7, var71);
//     com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10: ", var1, var2, var71);
// 
//   }

  public void test364() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test364"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(": hi!: hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test365() {}
//   public void test365() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test365"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var3, var7, var20);
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.MessageFormatter var24 = null;
//     java.lang.String var25 = var22.format(var23, var24);
// 
//   }

  public void test366() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test366"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!: hi!");
    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!. hi! at hi!: hi! line -8 : 10", "hi!");
    boolean var6 = var2.equals((java.lang.Object)"hi!: hi!. hi! at hi!: hi! line -8 : 10");
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error(": hi!. hi! at hi!: hi! line 0 : 3", "hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var20 = null;
    com.google.javascript.jscomp.CheckLevel var24 = null;
    com.google.javascript.jscomp.CheckLevel var26 = null;
    com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var26, "hi!");
    java.lang.String var29 = var28.toString();
    com.google.javascript.jscomp.CheckLevel var31 = null;
    com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.make("", var31, "hi!");
    int var34 = var28.compareTo(var33);
    com.google.javascript.rhino.Node var36 = null;
    com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var41 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", var36, var39, var41);
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var24, var28, var41);
    java.lang.String[] var44 = null;
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 10, var20, var28, var44);
    int var46 = var16.compareTo(var28);
    java.lang.String var47 = var16.toString();
    com.google.javascript.jscomp.CheckLevel var51 = null;
    com.google.javascript.jscomp.CheckLevel var53 = null;
    com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var53, "hi!");
    java.lang.String var56 = var55.toString();
    com.google.javascript.jscomp.CheckLevel var58 = null;
    com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.make("", var58, "hi!");
    int var61 = var55.compareTo(var60);
    java.lang.String[] var62 = null;
    com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make(var55, var62);
    com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var67 = var55.compareTo(var66);
    com.google.javascript.rhino.Node var69 = null;
    com.google.javascript.jscomp.CheckLevel var73 = null;
    com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var78 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var73, var76, var78);
    com.google.javascript.jscomp.CheckLevel var83 = null;
    com.google.javascript.jscomp.DiagnosticType var86 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var88 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var83, var86, var88);
    com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var69, var76, var88);
    com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("", 0, 1, var51, var66, var88);
    com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", 0, 100, var13, var16, var88);
    int var93 = var92.getCharno();
    java.lang.String var94 = var92.toString();
    com.google.javascript.jscomp.DiagnosticType var95 = var92.getType();
    boolean var96 = var9.equals((java.lang.Object)var92);
    boolean var97 = var2.equals((java.lang.Object)var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "hi!: hi!"+ "'", var29.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "hi!: hi!: hi!"+ "'", var47.equals("hi!: hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "hi!: hi!"+ "'", var56.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == 100);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100"+ "'", var94.equals("hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == false);

  }

  public void test367() {}
//   public void test367() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test367"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.rhino.Node var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var8 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", var3, var6, var8);
//     boolean var11 = var6.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", var1, var6, var20);
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     boolean var26 = var22.equals((java.lang.Object)"hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.MessageFormatter var28 = null;
//     java.lang.String var29 = var22.format(var27, var28);
// 
//   }

  public void test368() {}
//   public void test368() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test368"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     int var4 = var2.compareTo(var3);
// 
//   }

  public void test369() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test369"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error(": hi!. hi! at hi!: hi! line 0 : 3", ": hi!");
    com.google.javascript.rhino.Node var8 = null;
    com.google.javascript.jscomp.CheckLevel var12 = null;
    com.google.javascript.jscomp.CheckLevel var14 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var14, "hi!");
    java.lang.String var17 = var16.toString();
    com.google.javascript.jscomp.CheckLevel var19 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
    int var22 = var16.compareTo(var21);
    com.google.javascript.rhino.Node var24 = null;
    com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var29 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", var24, var27, var29);
    com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var12, var21, var29);
    com.google.javascript.jscomp.DiagnosticType var32 = var31.getType();
    com.google.javascript.rhino.Node var34 = null;
    com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.disabled(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0. hi!. hi! at hi!: hi! line 0 : 3 at hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)", "hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: ");
    com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: hi!: hi!", "hi!: hi!: hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var47 = null;
    com.google.javascript.jscomp.CheckLevel var49 = null;
    com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var49, "hi!: hi!");
    com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var55 = var51.compareTo(var54);
    com.google.javascript.rhino.Node var57 = null;
    com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var62 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!", var57, var60, var62);
    com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var47, var51, var62);
    com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", (-1), 0, var43, var62);
    com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)", var34, var37, var62);
    com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: ", var8, var32, var62);
    com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", 30, 12, var3, var6, var62);
    java.lang.String var69 = var68.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "hi!: hi!"+ "'", var17.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ": hi!. hi! at hi!: hi! line 0 : 3. : hi! at hi!: hi!: hi! line 30 : 12"+ "'", var69.equals(": hi!. hi! at hi!: hi! line 0 : 3. : hi! at hi!: hi!: hi! line 30 : 12"));

  }

  public void test370() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test370"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.rhino.Node var9 = null;
    com.google.javascript.rhino.Node var11 = null;
    com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var16 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!", var11, var14, var16);
    boolean var19 = var14.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var23 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var28 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var23, var26, var28);
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", var9, var14, var28);
    com.google.javascript.rhino.Node var32 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var37 = null;
    com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var42 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", var37, var40, var42);
    com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var32, var35, var42);
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var14, var42);
    com.google.javascript.rhino.Node var47 = null;
    com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var52 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", var47, var50, var52);
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-8), 10, var14, var52);
    java.lang.String var55 = var14.toString();
    java.lang.String[] var56 = null;
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at hi!: hi! line (unknown line) : (unknown column)", var1, var14, var56);
    com.google.javascript.jscomp.DiagnosticType var58 = var57.getType();
    com.google.javascript.jscomp.CheckLevel var60 = null;
    com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.make("", var60, "hi!: hi!. hi! at hi!: hi!. hi! at hi!: hi! line (unknown line) : 10 line (unknown line) : (unknown column)");
    boolean var63 = var57.equals((java.lang.Object)var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!: hi!: hi!"+ "'", var55.equals("hi!: hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);

  }

  public void test371() {}
//   public void test371() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test371"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled(": : ", "hi!. hi! at hi!: hi! line 0 : 3");
//     java.lang.String[] var6 = null;
//     com.google.javascript.jscomp.JSError var7 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3: ", var1, var2, var5, var6);
// 
//   }

  public void test372() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test372"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning(". hi! at hi! line (unknown line) : 10", "hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at (unknown source) line 0 : 1");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test373() {}
//   public void test373() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test373"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var10, "hi!");
//     java.lang.String var13 = var12.toString();
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("", var15, "hi!");
//     int var18 = var12.compareTo(var17);
//     com.google.javascript.rhino.Node var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var25 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", var20, var23, var25);
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var8, var12, var25);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", var1, var4, var25);
//     java.lang.String var29 = var28.toString();
//     com.google.javascript.jscomp.CheckLevel var30 = null;
//     com.google.javascript.jscomp.MessageFormatter var31 = null;
//     java.lang.String var32 = var28.format(var30, var31);
// 
//   }

  public void test374() {}
//   public void test374() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test374"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var3, var7, var20);
//     com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var29, "hi!");
//     java.lang.String var32 = var31.toString();
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     int var37 = var31.compareTo(var36);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var27, var31, var44);
//     com.google.javascript.jscomp.DiagnosticType var47 = var46.getType();
//     boolean var48 = var22.equals((java.lang.Object)var46);
//     int var49 = var46.getCharno();
//     com.google.javascript.jscomp.DiagnosticType var50 = var46.getType();
//     int var51 = var46.getCharno();
//     com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.disabled(": : ", "hi!. hi! at hi!: hi! line 0 : 3");
//     boolean var55 = var46.equals((java.lang.Object)": : ");
//     com.google.javascript.jscomp.CheckLevel var56 = null;
//     com.google.javascript.jscomp.MessageFormatter var57 = null;
//     java.lang.String var58 = var46.format(var56, var57);
// 
//   }

  public void test375() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test375"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!: hi!. hi! at (unknown source) line 66 : -12");
    com.google.javascript.rhino.Node var7 = null;
    com.google.javascript.rhino.Node var9 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var14 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var14);
    boolean var17 = var12.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var21 = null;
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var26 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var21, var24, var26);
    com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var7, var12, var26);
    com.google.javascript.rhino.Node var30 = null;
    com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var35 = null;
    com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var40 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", var35, var38, var40);
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var30, var33, var40);
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var12, var40);
    boolean var44 = var2.equals((java.lang.Object)(-64));
    com.google.javascript.rhino.Node var46 = null;
    com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", ": hi!. hi! at hi!: hi! line 0 : 3");
    com.google.javascript.rhino.Node var51 = null;
    com.google.javascript.rhino.Node var53 = null;
    com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var58 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", var53, var56, var58);
    boolean var61 = var56.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var65 = null;
    com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var70 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var65, var68, var70);
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!", var51, var56, var70);
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("", var46, var49, var70);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make(var2, var70);
    java.lang.String var75 = var74.toString();
    com.google.javascript.jscomp.DiagnosticType var78 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!: hi!: hi!: hi!: hi!: hi!: hi!", ": hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
    boolean var79 = var74.equals((java.lang.Object)": hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ". hi!: hi!. hi! at (unknown source) line 66 : -12 at (unknown source) line (unknown line) : (unknown column)"+ "'", var75.equals(". hi!: hi!. hi! at (unknown source) line 66 : -12 at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);

  }

  public void test376() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test376"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(": hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test377() {}
//   public void test377() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test377"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.rhino.Node var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.error(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var20, "hi!");
//     java.lang.String var23 = var22.toString();
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
//     int var28 = var22.compareTo(var27);
//     com.google.javascript.rhino.Node var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var35 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var30, var33, var35);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var18, var22, var35);
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("", (-64), 0, var14, var35);
//     int var39 = var8.compareTo(var14);
//     com.google.javascript.rhino.Node var41 = null;
//     com.google.javascript.rhino.Node var43 = null;
//     com.google.javascript.rhino.Node var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var50 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", var45, var48, var50);
//     boolean var53 = var48.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var57 = null;
//     com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var62 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var57, var60, var62);
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("hi!", var43, var48, var62);
//     com.google.javascript.jscomp.DiagnosticType var65 = var64.getType();
//     com.google.javascript.jscomp.CheckLevel var69 = null;
//     com.google.javascript.jscomp.CheckLevel var71 = null;
//     com.google.javascript.jscomp.DiagnosticType var73 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var71, "hi!");
//     java.lang.String var74 = var73.toString();
//     com.google.javascript.jscomp.CheckLevel var76 = null;
//     com.google.javascript.jscomp.DiagnosticType var78 = com.google.javascript.jscomp.DiagnosticType.make("", var76, "hi!");
//     int var79 = var73.compareTo(var78);
//     com.google.javascript.rhino.Node var81 = null;
//     com.google.javascript.jscomp.DiagnosticType var84 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var86 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!", var81, var84, var86);
//     com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var69, var78, var86);
//     com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make(": ", var41, var65, var86);
//     com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var5, var14, var86);
//     com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", var1, var2, var3, var86);
// 
//   }

  public void test378() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test378"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var8 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var3, var6, var8);
    boolean var11 = var9.equals((java.lang.Object)(short)10);
    java.lang.String var12 = var9.toString();
    java.lang.String var13 = var9.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "hi!: hi!. hi! at hi!: hi! line (unknown line) : 10"+ "'", var12.equals("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "hi!: hi!. hi! at hi!: hi! line (unknown line) : 10"+ "'", var13.equals("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10"));

  }

  public void test379() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test379"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: hi!: hi!", "hi!: hi!: hi!: hi!");
    java.lang.String var7 = var6.toString();
    com.google.javascript.rhino.Node var9 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: hi!: hi!: hi!: hi!: hi!: hi!", "hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: ");
    com.google.javascript.rhino.Node var20 = null;
    com.google.javascript.rhino.Node var22 = null;
    com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var27 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var22, var25, var27);
    boolean var30 = var25.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var34 = null;
    com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var39 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var34, var37, var39);
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", var20, var25, var39);
    com.google.javascript.rhino.Node var43 = null;
    com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var48 = null;
    com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var53 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", var48, var51, var53);
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var43, var46, var53);
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var25, var53);
    com.google.javascript.rhino.Node var58 = null;
    com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var63 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("hi!", var58, var61, var63);
    com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-8), 10, var25, var63);
    boolean var66 = var12.equals((java.lang.Object)"hi!: hi!");
    com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.disabled(": ", ": hi!. hi! at hi!: hi! line 0 : 3");
    com.google.javascript.rhino.Node var74 = null;
    com.google.javascript.rhino.Node var76 = null;
    com.google.javascript.jscomp.DiagnosticType var79 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var81 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("hi!", var76, var79, var81);
    boolean var84 = var79.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var88 = null;
    com.google.javascript.jscomp.DiagnosticType var91 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var93 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var88, var91, var93);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!", var74, var79, var93);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi!: hi! line 3 : -8", (-46), 58, var72, var93);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", var9, var12, var93);
    com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!: hi!: hi!", 0, 45, var3, var6, var93);
    com.google.javascript.jscomp.DiagnosticType var99 = var98.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!: hi!: hi!: hi!: hi!: hi!: hi!: hi!"+ "'", var7.equals("hi!: hi!: hi!: hi!: hi!: hi!: hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var99);

  }

  public void test380() {}
//   public void test380() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test380"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var1, "hi!");
//     java.lang.String var4 = var3.toString();
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var15 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var16 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var10, var13, var15);
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var25 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var20, var23, var25);
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var6, var13, var25);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make(var3, var25);
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.MessageFormatter var30 = null;
//     java.lang.String var31 = var28.format(var29, var30);
// 
//   }

  public void test381() {}
//   public void test381() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test381"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var0 = null;
//     com.google.javascript.rhino.Node var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!: hi!: hi!: hi!: hi!: hi!: hi!: hi!");
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.rhino.Node var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var22 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", var17, var20, var22);
//     boolean var25 = var20.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var29, var32, var34);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var15, var20, var34);
//     com.google.javascript.rhino.Node var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var48 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var48);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var38, var41, var48);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var20, var48);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var7, var10, var48);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi! line -8 : 10", var2, var5, var48);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make(var0, var48);
// 
//   }

  public void test382() {}
//   public void test382() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test382"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var9, "hi!");
//     java.lang.String var12 = var11.toString();
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
//     int var17 = var11.compareTo(var16);
//     com.google.javascript.rhino.Node var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var24 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var19, var22, var24);
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var7, var16, var24);
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.disabled("", "");
//     boolean var30 = var16.equals((java.lang.Object)"");
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.CheckLevel var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var36, "hi!");
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var40, "hi!");
//     java.lang.String var43 = var42.toString();
//     com.google.javascript.jscomp.CheckLevel var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.make("", var45, "hi!");
//     int var48 = var42.compareTo(var47);
//     java.lang.String[] var49 = null;
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make(var42, var49);
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     boolean var54 = var42.equals((java.lang.Object)var53);
//     int var55 = var38.compareTo(var53);
//     com.google.javascript.jscomp.CheckLevel var57 = null;
//     com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var57, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var61 = null;
//     com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var66 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!", var61, var64, var66);
//     int var68 = var59.compareTo(var64);
//     com.google.javascript.rhino.Node var70 = null;
//     com.google.javascript.jscomp.DiagnosticType var73 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var75 = null;
//     com.google.javascript.jscomp.DiagnosticType var78 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var80 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("hi!", var75, var78, var80);
//     com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var70, var73, var80);
//     com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make(var59, var80);
//     com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", 66, 46, var34, var38, var80);
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line 3 : 5", 10, 67, var3, var16, var80);
//     com.google.javascript.jscomp.DiagnosticType var86 = null;
//     int var87 = var16.compareTo(var86);
// 
//   }

  public void test383() {}
//   public void test383() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test383"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var12, "hi!");
//     java.lang.String var15 = var14.toString();
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
//     int var20 = var14.compareTo(var19);
//     java.lang.String[] var21 = null;
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make(var14, var21);
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var26 = var14.compareTo(var25);
//     com.google.javascript.rhino.Node var28 = null;
//     com.google.javascript.jscomp.CheckLevel var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var37 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var32, var35, var37);
//     com.google.javascript.jscomp.CheckLevel var42 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var47 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var42, var45, var47);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var28, var35, var47);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("", 0, 1, var10, var25, var47);
//     com.google.javascript.jscomp.CheckLevel var54 = null;
//     com.google.javascript.jscomp.CheckLevel var56 = null;
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var56, "hi!");
//     java.lang.String var59 = var58.toString();
//     com.google.javascript.jscomp.CheckLevel var61 = null;
//     com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.make("", var61, "hi!");
//     int var64 = var58.compareTo(var63);
//     java.lang.String[] var65 = null;
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make(var58, var65);
//     com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var70 = var58.compareTo(var69);
//     com.google.javascript.rhino.Node var72 = null;
//     com.google.javascript.rhino.Node var74 = null;
//     com.google.javascript.jscomp.DiagnosticType var77 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var79 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("hi!", var74, var77, var79);
//     boolean var82 = var77.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var86 = null;
//     com.google.javascript.jscomp.DiagnosticType var89 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var91 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var86, var89, var91);
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!", var72, var77, var91);
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var54, var69, var91);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!", 10, 10, var25, var91);
//     com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at (unknown source) line 0 : 1. hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi! at (unknown source) line (unknown line) : (unknown column)", 35, 0, var3, var91);
// 
//   }

  public void test384() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test384"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0: hi!. hi! at hi!: hi! line 0 : 3", "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test385() {}
//   public void test385() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test385"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var8 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var3, var6, var8);
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.MessageFormatter var11 = null;
//     java.lang.String var12 = var9.format(var10, var11);
// 
//   }

  public void test386() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test386"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!: : ", "hi!. hi! at hi!: hi! line 0 : 3.  at (unknown source) line (unknown line) : (unknown column): hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test387() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test387"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var1, "hi!");
    java.lang.String var4 = var3.toString();
    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.make("", var6, "hi!");
    int var9 = var3.compareTo(var8);
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "hi!: hi!. hi! at hi!: hi! line (unknown line) : 10");
    int var13 = var3.compareTo(var12);
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!: hi!");
    com.google.javascript.rhino.Node var24 = null;
    com.google.javascript.jscomp.CheckLevel var28 = null;
    com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var33 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var28, var31, var33);
    com.google.javascript.jscomp.CheckLevel var38 = null;
    com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var43 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var38, var41, var43);
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var24, var31, var43);
    com.google.javascript.rhino.Node var47 = null;
    com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var52 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", var47, var50, var52);
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", 8, 100, var31, var52);
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("", (-64), (-64), var19, var52);
    java.lang.String var56 = var19.toString();
    boolean var57 = var3.equals((java.lang.Object)var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!: hi!"+ "'", var4.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == (-28));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ": hi!: hi!"+ "'", var56.equals(": hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);

  }

  public void test388() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test388"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at hi!: hi! line 0 : 10", var1, "hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at (unknown source) line (unknown line) : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test389() {}
//   public void test389() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test389"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!.  at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)", var4, "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100 at hi!:  line 66 : 3");
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var10, "hi!");
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.disabled(": : ", "hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at hi!: hi! line 0 : 3", var24, "");
//     com.google.javascript.jscomp.CheckLevel var30 = null;
//     com.google.javascript.jscomp.CheckLevel var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at hi!: hi! line 0 : 3", var32, "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var38 = null;
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var40, "hi!");
//     java.lang.String var43 = var42.toString();
//     com.google.javascript.jscomp.CheckLevel var47 = null;
//     com.google.javascript.jscomp.CheckLevel var49 = null;
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var49, "hi!");
//     java.lang.String var52 = var51.toString();
//     com.google.javascript.jscomp.CheckLevel var54 = null;
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.make("", var54, "hi!");
//     int var57 = var51.compareTo(var56);
//     java.lang.String[] var58 = null;
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make(var51, var58);
//     com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var63 = var51.compareTo(var62);
//     com.google.javascript.rhino.Node var65 = null;
//     com.google.javascript.rhino.Node var67 = null;
//     com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var72 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", var67, var70, var72);
//     boolean var75 = var70.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var79 = null;
//     com.google.javascript.jscomp.DiagnosticType var82 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var84 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var79, var82, var84);
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!", var65, var70, var84);
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var47, var62, var84);
//     com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 8, var38, var42, var84);
//     com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3: ", 10, 3, var30, var34, var84);
//     com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at (unknown source) line (unknown line) : (unknown column)", 30, (-3), var22, var26, var84);
//     com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: : ", (-64), 35, var18, var84);
//     com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", var8, var12, var84);
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", var1, var2, var6, var84);
// 
//   }

  public void test390() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test390"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var6, "hi!");
    java.lang.String var9 = var8.toString();
    com.google.javascript.jscomp.CheckLevel var11 = null;
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.make("", var11, "hi!");
    int var14 = var8.compareTo(var13);
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.CheckLevel var20 = null;
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var20, "hi!");
    java.lang.String var23 = var22.toString();
    com.google.javascript.jscomp.CheckLevel var25 = null;
    com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
    int var28 = var22.compareTo(var27);
    com.google.javascript.rhino.Node var30 = null;
    com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var35 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var30, var33, var35);
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var18, var27, var35);
    int var38 = var8.compareTo(var27);
    int var39 = var4.compareTo(var8);
    com.google.javascript.jscomp.CheckLevel var44 = null;
    com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var44, "hi!");
    java.lang.String var47 = var46.toString();
    com.google.javascript.jscomp.CheckLevel var49 = null;
    com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.make("", var49, "hi!");
    int var52 = var46.compareTo(var51);
    java.lang.String[] var53 = null;
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make(var46, var53);
    com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var58 = var46.compareTo(var57);
    com.google.javascript.rhino.Node var60 = null;
    com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var65 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!", var60, var63, var65);
    com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", 3, (-8), var46, var65);
    com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3: ", var1, var4, var65);
    java.lang.String var69 = var4.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "hi!: hi!"+ "'", var9.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi!: hi!"+ "'", var23.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == (-46));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "hi!: hi!"+ "'", var47.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ": : "+ "'", var69.equals(": : "));

  }

  public void test391() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test391"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var3, "hi!");
    java.lang.String var6 = var5.toString();
    com.google.javascript.jscomp.CheckLevel var8 = null;
    com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("", var8, "hi!");
    int var11 = var5.compareTo(var10);
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.CheckLevel var17 = null;
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var17, "hi!");
    java.lang.String var20 = var19.toString();
    com.google.javascript.jscomp.CheckLevel var22 = null;
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("", var22, "hi!");
    int var25 = var19.compareTo(var24);
    com.google.javascript.rhino.Node var27 = null;
    com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var32 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", var27, var30, var32);
    com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var15, var24, var32);
    int var35 = var5.compareTo(var24);
    java.lang.String[] var36 = null;
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", var1, var24, var36);
    com.google.javascript.jscomp.DiagnosticType var38 = var37.getType();
    com.google.javascript.rhino.Node var40 = null;
    com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at (unknown source) line 0 : 1", "hi!: ");
    com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!", "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var51 = null;
    com.google.javascript.jscomp.CheckLevel var55 = null;
    com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var60 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var55, var58, var60);
    com.google.javascript.jscomp.CheckLevel var65 = null;
    com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var70 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var65, var68, var70);
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var51, var58, var70);
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", (-42), 3, var49, var70);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("", var40, var43, var70);
    com.google.javascript.jscomp.DiagnosticType var77 = com.google.javascript.jscomp.DiagnosticType.warning("hi!.  at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)", "hi!: hi!. hi! at hi!: hi! line (unknown line) : 10");
    int var78 = var43.compareTo(var77);
    boolean var79 = var37.equals((java.lang.Object)var77);
    java.lang.String var80 = var77.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "hi!: hi!"+ "'", var6.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "hi!: hi!"+ "'", var20.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == 72);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "hi!.  at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column): hi!: hi!. hi! at hi!: hi! line (unknown line) : 10"+ "'", var80.equals("hi!.  at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column): hi!: hi!. hi! at hi!: hi! line (unknown line) : 10"));

  }

  public void test392() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test392"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100 at (unknown source) line 1 : 58", ": hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test393() {}
//   public void test393() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test393"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     java.lang.String var3 = var2.toString();
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     int var5 = var2.compareTo(var4);
// 
//   }

  public void test394() {}
//   public void test394() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test394"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var18 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var13, var16, var18);
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var28 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var23, var26, var28);
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var9, var16, var28);
//     com.google.javascript.rhino.Node var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var37 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var37);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 8, 100, var16, var37);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("", 5, 100, var3, var4, var37);
// 
//   }

  public void test395() {}
//   public void test395() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test395"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!. hi! at hi!: hi! line -8 : 10", "");
//     java.lang.String[] var6 = null;
//     com.google.javascript.jscomp.JSError var7 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)", var1, var2, var5, var6);
// 
//   }

  public void test396() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test396"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!. hi! at hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line -64 : 0");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test397() {}
//   public void test397() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test397"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var1, "hi!");
//     java.lang.String var4 = var3.toString();
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.make("", var6, "hi!");
//     int var9 = var3.compareTo(var8);
//     java.lang.String[] var10 = null;
//     com.google.javascript.jscomp.JSError var11 = com.google.javascript.jscomp.JSError.make(var3, var10);
//     boolean var13 = var11.equals((java.lang.Object)(byte)1);
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.MessageFormatter var15 = null;
//     java.lang.String var16 = var11.format(var14, var15);
// 
//   }

  public void test398() {}
//   public void test398() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test398"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var1, "hi!");
//     java.lang.String var4 = var3.toString();
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.make("", var6, "hi!");
//     int var9 = var3.compareTo(var8);
//     java.lang.String[] var10 = null;
//     com.google.javascript.jscomp.JSError var11 = com.google.javascript.jscomp.JSError.make(var3, var10);
//     int var12 = var11.getCharno();
//     boolean var14 = var11.equals((java.lang.Object)'4');
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     boolean var18 = var11.equals((java.lang.Object)var17);
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.MessageFormatter var20 = null;
//     java.lang.String var21 = var11.format(var19, var20);
// 
//   }

  public void test399() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test399"); }


    com.google.javascript.rhino.Node var4 = null;
    com.google.javascript.rhino.Node var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var11 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var12 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var11);
    boolean var14 = var9.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var23 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var18, var21, var23);
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var4, var9, var23);
    com.google.javascript.rhino.Node var27 = null;
    com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var32 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var37 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var37);
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var27, var30, var37);
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var9, var37);
    int var41 = var40.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 100);

  }

  public void test400() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test400"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!: hi!: hi!: hi!: hi!: hi!: hi!", var1, "hi!. hi! at hi!: hi! line 0 : 10");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test401() {}
//   public void test401() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test401"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var4, "hi!");
//     java.lang.String var7 = var6.toString();
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var18 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var13, var16, var18);
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var28 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var23, var26, var28);
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var9, var16, var28);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make(var6, var28);
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at hi!: hi! line 0 : 3", "hi!");
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var56 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var51, var54, var56);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 100, var47, var56);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100", (-28), (-3), var41, var56);
//     com.google.javascript.jscomp.CheckLevel var61 = null;
//     com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var61, "hi!");
//     java.lang.String var64 = var63.toString();
//     com.google.javascript.jscomp.CheckLevel var66 = null;
//     com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.make("", var66, "hi!");
//     int var69 = var63.compareTo(var68);
//     java.lang.String[] var70 = null;
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make(var63, var70);
//     com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     boolean var75 = var63.equals((java.lang.Object)var74);
//     boolean var76 = var59.equals((java.lang.Object)var74);
//     java.lang.String[] var78 = new java.lang.String[] { "hi!: hi!. hi! at hi!: hi! line -8 : 10. hi! at hi!: hi!. hi! at hi! line (unknown line) : (unknown column) line 0 : -12"};
//     com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make(": ", (-43), 3, var35, var74, var78);
//     com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make(": ", var1, var2, var6, var78);
// 
//   }

  public void test402() {}
//   public void test402() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test402"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error(": : ", "");
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.rhino.Node var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var22 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", var17, var20, var22);
//     boolean var25 = var20.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var29, var32, var34);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var15, var20, var34);
//     com.google.javascript.rhino.Node var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var48 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var48);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var38, var41, var48);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var20, var48);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var7, var10, var48);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", (-28), (-12), var5, var48);
//     int var54 = var53.getCharno();
//     com.google.javascript.jscomp.CheckLevel var55 = null;
//     com.google.javascript.jscomp.MessageFormatter var56 = null;
//     java.lang.String var57 = var53.format(var55, var56);
// 
//   }

  public void test403() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test403"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", "");
    java.lang.String var3 = var2.toString();
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    java.lang.String var7 = var6.toString();
    java.lang.String var8 = var6.toString();
    int var9 = var2.compareTo(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: "+ "'", var3.equals("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ": "+ "'", var7.equals(": "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ": "+ "'", var8.equals(": "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 48);

  }

  public void test404() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test404"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var1, "hi!: hi!. hi! at hi!: hi!. hi! at hi!: hi! line (unknown line) : 10 line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.warning(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0. hi!. hi! at hi!: hi! line 0 : 3 at hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)", "hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: : ");
    java.lang.String[] var11 = new java.lang.String[] { "hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at (unknown source) line 0 : 1"};
    com.google.javascript.jscomp.JSError var12 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", 0, 35, var9, var11);
    int var13 = var12.getCharno();
    boolean var14 = var3.equals((java.lang.Object)var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);

  }

  public void test405() {}
//   public void test405() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test405"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.rhino.Node var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var8 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", var3, var6, var8);
//     boolean var11 = var6.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", var1, var6, var20);
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     boolean var26 = var22.equals((java.lang.Object)"hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", "");
//     java.lang.String var30 = var29.toString();
//     boolean var31 = var22.equals((java.lang.Object)var29);
//     int var32 = var22.getCharno();
//     com.google.javascript.jscomp.CheckLevel var33 = null;
//     com.google.javascript.jscomp.MessageFormatter var34 = null;
//     java.lang.String var35 = var22.format(var33, var34);
// 
//   }

  public void test406() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test406"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning(": ", ". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0");
    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.CheckLevel var8 = null;
    com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!. hi! at hi!: hi! line -8 : 10", var8, "hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.disabled(": : ", "hi!. hi! at hi!: hi! line 0 : 3");
    com.google.javascript.jscomp.CheckLevel var20 = null;
    com.google.javascript.jscomp.CheckLevel var22 = null;
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at hi!: hi! line 0 : 3", var22, "");
    com.google.javascript.jscomp.CheckLevel var28 = null;
    com.google.javascript.jscomp.CheckLevel var30 = null;
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at hi!: hi! line 0 : 3", var30, "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var36 = null;
    com.google.javascript.jscomp.CheckLevel var38 = null;
    com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var38, "hi!");
    java.lang.String var41 = var40.toString();
    com.google.javascript.jscomp.CheckLevel var45 = null;
    com.google.javascript.jscomp.CheckLevel var47 = null;
    com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var47, "hi!");
    java.lang.String var50 = var49.toString();
    com.google.javascript.jscomp.CheckLevel var52 = null;
    com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.make("", var52, "hi!");
    int var55 = var49.compareTo(var54);
    java.lang.String[] var56 = null;
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make(var49, var56);
    com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var61 = var49.compareTo(var60);
    com.google.javascript.rhino.Node var63 = null;
    com.google.javascript.rhino.Node var65 = null;
    com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var70 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", var65, var68, var70);
    boolean var73 = var68.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var77 = null;
    com.google.javascript.jscomp.DiagnosticType var80 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var82 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var77, var80, var82);
    com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("hi!", var63, var68, var82);
    com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var45, var60, var82);
    com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 8, var36, var40, var82);
    com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3: ", 10, 3, var28, var32, var82);
    com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at (unknown source) line (unknown line) : (unknown column)", 30, (-3), var20, var24, var82);
    com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: : ", (-64), 35, var16, var82);
    com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: . hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0. hi!. hi! at hi!: hi! line 0 : 3 at hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)", 66, (-8), var6, var10, var82);
    boolean var91 = var2.equals((java.lang.Object)var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "hi!: hi!"+ "'", var41.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "hi!: hi!"+ "'", var50.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);

  }

  public void test407() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test407"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100");
    java.lang.String var3 = var2.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ": hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100"+ "'", var3.equals(": hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100"));

  }

  public void test408() {}
//   public void test408() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test408"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var3, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var12 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var13 = com.google.javascript.jscomp.JSError.make("hi!", var7, var10, var12);
//     int var14 = var5.compareTo(var10);
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var20, "hi!");
//     java.lang.String var23 = var22.toString();
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
//     int var28 = var22.compareTo(var27);
//     java.lang.String[] var29 = null;
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make(var22, var29);
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var34 = var22.compareTo(var33);
//     com.google.javascript.rhino.Node var36 = null;
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var45 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var40, var43, var45);
//     com.google.javascript.jscomp.CheckLevel var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var55 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var50, var53, var55);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var36, var43, var55);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("", 0, 1, var18, var33, var55);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var1, var5, var55);
//     com.google.javascript.jscomp.DiagnosticType var60 = var59.getType();
//     com.google.javascript.jscomp.CheckLevel var61 = null;
//     com.google.javascript.jscomp.MessageFormatter var62 = null;
//     java.lang.String var63 = var59.format(var61, var62);
// 
//   }

  public void test409() {}
//   public void test409() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test409"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var11 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var12 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var11);
//     boolean var14 = var9.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var18, var21, var23);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var4, var9, var23);
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100", var1, var2, var23);
// 
//   }

  public void test410() {}
//   public void test410() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test410"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0: hi!. hi! at hi!: hi! line 0 : 3");
// 
//   }

  public void test411() {}
//   public void test411() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test411"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     java.lang.String[] var14 = null;
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make(var7, var14);
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var19 = var7.compareTo(var18);
//     com.google.javascript.rhino.Node var21 = null;
//     com.google.javascript.rhino.Node var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var28 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var23, var26, var28);
//     boolean var31 = var26.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var40 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var35, var38, var40);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", var21, var26, var40);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var3, var18, var40);
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.MessageFormatter var45 = null;
//     java.lang.String var46 = var43.format(var44, var45);
// 
//   }

  public void test412() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test412"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!.  at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column): hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", var1, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test413() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test413"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.rhino.Node var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var8 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", var3, var6, var8);
    boolean var11 = var6.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var22 = null;
    com.google.javascript.jscomp.CheckLevel var26 = null;
    com.google.javascript.jscomp.CheckLevel var28 = null;
    com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var28, "hi!");
    java.lang.String var31 = var30.toString();
    com.google.javascript.jscomp.CheckLevel var33 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
    int var36 = var30.compareTo(var35);
    com.google.javascript.rhino.Node var38 = null;
    com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var43 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", var38, var41, var43);
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var26, var30, var43);
    java.lang.String[] var46 = null;
    com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 10, var22, var30, var46);
    int var48 = var18.compareTo(var30);
    java.lang.String var49 = var18.toString();
    com.google.javascript.jscomp.CheckLevel var53 = null;
    com.google.javascript.jscomp.CheckLevel var55 = null;
    com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var55, "hi!");
    java.lang.String var58 = var57.toString();
    com.google.javascript.jscomp.CheckLevel var60 = null;
    com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.make("", var60, "hi!");
    int var63 = var57.compareTo(var62);
    java.lang.String[] var64 = null;
    com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make(var57, var64);
    com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var69 = var57.compareTo(var68);
    com.google.javascript.rhino.Node var71 = null;
    com.google.javascript.jscomp.CheckLevel var75 = null;
    com.google.javascript.jscomp.DiagnosticType var78 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var80 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var75, var78, var80);
    com.google.javascript.jscomp.CheckLevel var85 = null;
    com.google.javascript.jscomp.DiagnosticType var88 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var90 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var85, var88, var90);
    com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var71, var78, var90);
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("", 0, 1, var53, var68, var90);
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", 0, 100, var15, var18, var90);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("", var1, var6, var90);
    java.lang.String var96 = var95.toString();
    boolean var98 = var95.equals((java.lang.Object)false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "hi!: hi!"+ "'", var31.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "hi!: hi!: hi!"+ "'", var49.equals("hi!: hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "hi!: hi!"+ "'", var58.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var96.equals("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == false);

  }

  public void test414() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test414"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var1, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var5 = null;
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var10 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var11 = com.google.javascript.jscomp.JSError.make("hi!", var5, var8, var10);
    int var12 = var3.compareTo(var8);
    com.google.javascript.rhino.Node var14 = null;
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var19 = null;
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var24 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var19, var22, var24);
    com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var14, var17, var24);
    com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make(var3, var24);
    com.google.javascript.jscomp.CheckLevel var31 = null;
    com.google.javascript.jscomp.CheckLevel var33 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var33, "hi!");
    java.lang.String var36 = var35.toString();
    com.google.javascript.jscomp.CheckLevel var38 = null;
    com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.make("", var38, "hi!");
    int var41 = var35.compareTo(var40);
    java.lang.String[] var42 = null;
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make(var35, var42);
    com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var47 = var35.compareTo(var46);
    com.google.javascript.rhino.Node var49 = null;
    com.google.javascript.jscomp.CheckLevel var53 = null;
    com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var58 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var53, var56, var58);
    com.google.javascript.jscomp.CheckLevel var63 = null;
    com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var68 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var63, var66, var68);
    com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var49, var56, var68);
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("", 0, 1, var31, var46, var68);
    int var72 = var71.getCharno();
    java.lang.String var73 = var71.toString();
    boolean var74 = var3.equals((java.lang.Object)var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "hi!: hi!"+ "'", var36.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at (unknown source) line 0 : 1"+ "'", var73.equals("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at (unknown source) line 0 : 1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);

  }

  public void test415() {}
//   public void test415() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test415"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!: hi!: hi!");
// 
//   }

  public void test416() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test416"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.CheckLevel var11 = null;
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var11, "hi!");
    java.lang.String var14 = var13.toString();
    com.google.javascript.jscomp.CheckLevel var16 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.make("", var16, "hi!");
    int var19 = var13.compareTo(var18);
    java.lang.String[] var20 = null;
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make(var13, var20);
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var25 = var13.compareTo(var24);
    com.google.javascript.rhino.Node var27 = null;
    com.google.javascript.jscomp.CheckLevel var31 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var36 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var31, var34, var36);
    com.google.javascript.jscomp.CheckLevel var41 = null;
    com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var46 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var41, var44, var46);
    com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var27, var34, var46);
    com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("", 0, 1, var9, var24, var46);
    com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make(var5, var46);
    java.lang.String[] var51 = null;
    com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!: hi!: hi!", 5, 45, var5, var51);
    com.google.javascript.rhino.Node var54 = null;
    com.google.javascript.rhino.Node var56 = null;
    com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var61 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!", var56, var59, var61);
    boolean var64 = var59.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var68 = null;
    com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var73 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var68, var71, var73);
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!", var54, var59, var73);
    com.google.javascript.jscomp.CheckLevel var77 = null;
    com.google.javascript.jscomp.DiagnosticType var79 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var77, "hi!: hi!");
    boolean var80 = var75.equals((java.lang.Object)var79);
    int var81 = var5.compareTo(var79);
    java.lang.String var82 = var79.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "hi!: hi!"+ "'", var14.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == (-12));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + "hi!: hi!: hi!: hi!"+ "'", var82.equals("hi!: hi!: hi!: hi!"));

  }

  public void test417() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test417"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var5 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var5, "hi!");
    java.lang.String[] var8 = null;
    com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make(var7, var8);
    com.google.javascript.rhino.Node var11 = null;
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var13, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var17 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var22 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", var17, var20, var22);
    int var24 = var15.compareTo(var20);
    com.google.javascript.jscomp.CheckLevel var28 = null;
    com.google.javascript.jscomp.CheckLevel var30 = null;
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var30, "hi!");
    java.lang.String var33 = var32.toString();
    com.google.javascript.jscomp.CheckLevel var35 = null;
    com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.make("", var35, "hi!");
    int var38 = var32.compareTo(var37);
    java.lang.String[] var39 = null;
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make(var32, var39);
    com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var44 = var32.compareTo(var43);
    com.google.javascript.rhino.Node var46 = null;
    com.google.javascript.jscomp.CheckLevel var50 = null;
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var55 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var50, var53, var55);
    com.google.javascript.jscomp.CheckLevel var60 = null;
    com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var65 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var60, var63, var65);
    com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var46, var53, var65);
    com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("", 0, 1, var28, var43, var65);
    com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var11, var15, var65);
    com.google.javascript.jscomp.DiagnosticType var70 = var69.getType();
    com.google.javascript.jscomp.DiagnosticType var73 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!: hi!");
    boolean var74 = var70.equals((java.lang.Object)"hi!: hi!");
    boolean var75 = var7.equals((java.lang.Object)var70);
    com.google.javascript.rhino.Node var77 = null;
    com.google.javascript.jscomp.CheckLevel var81 = null;
    com.google.javascript.jscomp.DiagnosticType var84 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var86 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var81, var84, var86);
    com.google.javascript.jscomp.CheckLevel var91 = null;
    com.google.javascript.jscomp.DiagnosticType var94 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var96 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var91, var94, var96);
    com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var77, var84, var96);
    com.google.javascript.jscomp.JSError var99 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)", (-77), 67, var3, var7, var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "hi!: hi!"+ "'", var33.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var99);

  }

  public void test418() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test418"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at hi!: hi! line 0 : 3");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test419() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test419"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!. hi! at hi! line (unknown line) : (unknown column)");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test420() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test420"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at (unknown source) line (unknown line) : (unknown column)", "hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test421() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test421"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at hi!: hi! line 0 : 3", "hi!: hi!: hi!: hi!: hi!: hi!: hi!: hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test422() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test422"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make(".  at hi!: hi!. hi! at hi!: hi! line (unknown line) : 10 line -46 : 1", var1, "hi!: ");
    com.google.javascript.jscomp.CheckLevel var5 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", var5, "hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!");
    com.google.javascript.jscomp.CheckLevel var11 = null;
    com.google.javascript.rhino.Node var13 = null;
    com.google.javascript.rhino.Node var15 = null;
    com.google.javascript.rhino.Node var17 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var22 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", var17, var20, var22);
    boolean var25 = var20.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var29 = null;
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var34 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var29, var32, var34);
    com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var15, var20, var34);
    com.google.javascript.jscomp.DiagnosticType var37 = var36.getType();
    com.google.javascript.jscomp.CheckLevel var41 = null;
    com.google.javascript.jscomp.CheckLevel var43 = null;
    com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var43, "hi!");
    java.lang.String var46 = var45.toString();
    com.google.javascript.jscomp.CheckLevel var48 = null;
    com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("", var48, "hi!");
    int var51 = var45.compareTo(var50);
    com.google.javascript.rhino.Node var53 = null;
    com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var58 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", var53, var56, var58);
    com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var41, var50, var58);
    com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make(": ", var13, var37, var58);
    com.google.javascript.jscomp.CheckLevel var65 = null;
    com.google.javascript.jscomp.CheckLevel var67 = null;
    com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var67, "hi!: hi!");
    com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var73 = var69.compareTo(var72);
    com.google.javascript.rhino.Node var75 = null;
    com.google.javascript.jscomp.DiagnosticType var78 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var80 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("hi!", var75, var78, var80);
    com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var65, var69, var80);
    com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", (-1), (-8), var11, var37, var80);
    com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make(var7, var80);
    com.google.javascript.jscomp.CheckLevel var86 = null;
    com.google.javascript.jscomp.DiagnosticType var88 = com.google.javascript.jscomp.DiagnosticType.make(": ", var86, "hi!. hi! at hi!: hi!: hi! line 3 : -8");
    boolean var89 = var7.equals((java.lang.Object)var88);
    boolean var90 = var3.equals((java.lang.Object)var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "hi!: hi!"+ "'", var46.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == false);

  }

  public void test423() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test423"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled(": hi!. hi! at hi!: hi! line 0 : 3", "hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at (unknown source) line 0 : 1");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test424() {}
//   public void test424() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test424"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
//     java.lang.String var7 = var6.toString();
//     com.google.javascript.jscomp.CheckLevel var11 = null;
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var13, "hi!");
//     java.lang.String var16 = var15.toString();
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
//     int var21 = var15.compareTo(var20);
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var27, "hi!");
//     java.lang.String var30 = var29.toString();
//     com.google.javascript.jscomp.CheckLevel var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.make("", var32, "hi!");
//     int var35 = var29.compareTo(var34);
//     com.google.javascript.rhino.Node var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var42 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", var37, var40, var42);
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var25, var29, var42);
//     com.google.javascript.jscomp.DiagnosticType var45 = var44.getType();
//     com.google.javascript.jscomp.CheckLevel var49 = null;
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var51, "hi!");
//     java.lang.String var54 = var53.toString();
//     com.google.javascript.jscomp.CheckLevel var56 = null;
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.make("", var56, "hi!");
//     int var59 = var53.compareTo(var58);
//     com.google.javascript.rhino.Node var61 = null;
//     com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var66 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!", var61, var64, var66);
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var49, var53, var66);
//     com.google.javascript.jscomp.DiagnosticType var69 = var68.getType();
//     boolean var70 = var44.equals((java.lang.Object)var68);
//     boolean var71 = var20.equals((java.lang.Object)var44);
//     com.google.javascript.jscomp.CheckLevel var75 = null;
//     com.google.javascript.jscomp.CheckLevel var77 = null;
//     com.google.javascript.jscomp.DiagnosticType var79 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var77, "hi!");
//     java.lang.String var80 = var79.toString();
//     com.google.javascript.jscomp.CheckLevel var82 = null;
//     com.google.javascript.jscomp.DiagnosticType var84 = com.google.javascript.jscomp.DiagnosticType.make("", var82, "hi!");
//     int var85 = var79.compareTo(var84);
//     com.google.javascript.rhino.Node var87 = null;
//     com.google.javascript.jscomp.DiagnosticType var90 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var92 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!", var87, var90, var92);
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var75, var79, var92);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", 3, (-46), var11, var20, var92);
//     com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: ", 45, 0, var3, var6, var92);
//     com.google.javascript.jscomp.CheckLevel var97 = null;
//     com.google.javascript.jscomp.MessageFormatter var98 = null;
//     java.lang.String var99 = var96.format(var97, var98);
// 
//   }

  public void test425() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test425"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var5 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
    java.lang.String var8 = var7.toString();
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
    int var13 = var7.compareTo(var12);
    com.google.javascript.jscomp.CheckLevel var17 = null;
    com.google.javascript.jscomp.CheckLevel var19 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var19, "hi!");
    java.lang.String var22 = var21.toString();
    com.google.javascript.jscomp.CheckLevel var24 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
    int var27 = var21.compareTo(var26);
    com.google.javascript.rhino.Node var29 = null;
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var34 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var34);
    com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var17, var21, var34);
    com.google.javascript.jscomp.DiagnosticType var37 = var36.getType();
    com.google.javascript.jscomp.CheckLevel var41 = null;
    com.google.javascript.jscomp.CheckLevel var43 = null;
    com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var43, "hi!");
    java.lang.String var46 = var45.toString();
    com.google.javascript.jscomp.CheckLevel var48 = null;
    com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("", var48, "hi!");
    int var51 = var45.compareTo(var50);
    com.google.javascript.rhino.Node var53 = null;
    com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var58 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", var53, var56, var58);
    com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var41, var45, var58);
    com.google.javascript.jscomp.DiagnosticType var61 = var60.getType();
    boolean var62 = var36.equals((java.lang.Object)var60);
    boolean var63 = var12.equals((java.lang.Object)var36);
    com.google.javascript.jscomp.CheckLevel var67 = null;
    com.google.javascript.jscomp.CheckLevel var69 = null;
    com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var69, "hi!");
    java.lang.String var72 = var71.toString();
    com.google.javascript.jscomp.CheckLevel var74 = null;
    com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.make("", var74, "hi!");
    int var77 = var71.compareTo(var76);
    com.google.javascript.rhino.Node var79 = null;
    com.google.javascript.jscomp.DiagnosticType var82 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var84 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!", var79, var82, var84);
    com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var67, var71, var84);
    com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", 3, (-46), var3, var12, var84);
    com.google.javascript.jscomp.DiagnosticType var88 = var87.getType();
    int var89 = var87.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!: hi!"+ "'", var8.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "hi!: hi!"+ "'", var22.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "hi!: hi!"+ "'", var46.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + "hi!: hi!"+ "'", var72.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == (-46));

  }

  public void test426() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test426"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", ": hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test427() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test427"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled(": ", "hi!: hi!: hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!", "hi!. hi! at hi!: hi! line 0 : 3: : hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100");
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("", var15, "");
    com.google.javascript.jscomp.CheckLevel var21 = null;
    com.google.javascript.rhino.Node var23 = null;
    com.google.javascript.rhino.Node var25 = null;
    com.google.javascript.rhino.Node var27 = null;
    com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var32 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", var27, var30, var32);
    boolean var35 = var30.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var39 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var44 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var39, var42, var44);
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", var25, var30, var44);
    com.google.javascript.jscomp.DiagnosticType var47 = var46.getType();
    com.google.javascript.jscomp.CheckLevel var51 = null;
    com.google.javascript.jscomp.CheckLevel var53 = null;
    com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var53, "hi!");
    java.lang.String var56 = var55.toString();
    com.google.javascript.jscomp.CheckLevel var58 = null;
    com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.make("", var58, "hi!");
    int var61 = var55.compareTo(var60);
    com.google.javascript.rhino.Node var63 = null;
    com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var68 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!", var63, var66, var68);
    com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var51, var60, var68);
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make(": ", var23, var47, var68);
    com.google.javascript.jscomp.CheckLevel var75 = null;
    com.google.javascript.jscomp.CheckLevel var77 = null;
    com.google.javascript.jscomp.DiagnosticType var79 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var77, "hi!: hi!");
    com.google.javascript.jscomp.DiagnosticType var82 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var83 = var79.compareTo(var82);
    com.google.javascript.rhino.Node var85 = null;
    com.google.javascript.jscomp.DiagnosticType var88 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var90 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!", var85, var88, var90);
    com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var75, var79, var90);
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", (-1), (-8), var21, var47, var90);
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", (-46), 1, var13, var17, var90);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0: hi!. hi! at hi!: hi! line 0 : 3", (-46), (-3), var6, var9, var90);
    boolean var96 = var2.equals((java.lang.Object)var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "hi!: hi!"+ "'", var56.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == false);

  }

  public void test428() {}
//   public void test428() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test428"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var3, var7, var20);
//     com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var29, "hi!");
//     java.lang.String var32 = var31.toString();
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     int var37 = var31.compareTo(var36);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var27, var31, var44);
//     com.google.javascript.jscomp.DiagnosticType var47 = var46.getType();
//     boolean var48 = var22.equals((java.lang.Object)var46);
//     java.lang.String var49 = var46.toString();
//     com.google.javascript.jscomp.DiagnosticType var50 = var46.getType();
//     int var51 = var46.getCharno();
//     com.google.javascript.jscomp.CheckLevel var55 = null;
//     com.google.javascript.jscomp.CheckLevel var57 = null;
//     com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var57, "hi!");
//     java.lang.String var60 = var59.toString();
//     com.google.javascript.jscomp.CheckLevel var62 = null;
//     com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.make("", var62, "hi!");
//     int var65 = var59.compareTo(var64);
//     com.google.javascript.rhino.Node var67 = null;
//     com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var72 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", var67, var70, var72);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var55, var59, var72);
//     com.google.javascript.jscomp.DiagnosticType var75 = var74.getType();
//     int var76 = var74.getCharno();
//     boolean var77 = var46.equals((java.lang.Object)var74);
//     java.lang.String var78 = var46.toString();
//     com.google.javascript.jscomp.CheckLevel var79 = null;
//     com.google.javascript.jscomp.MessageFormatter var80 = null;
//     java.lang.String var81 = var46.format(var79, var80);
// 
//   }

  public void test429() {}
//   public void test429() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test429"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var12, "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var18 = var14.compareTo(var17);
//     com.google.javascript.rhino.Node var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var25 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", var20, var23, var25);
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var10, var14, var25);
//     java.lang.String[] var29 = new java.lang.String[] { "hi!. hi! at hi!: hi! line 0 : 3: "};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("", 30, 0, var6, var14, var29);
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.rhino.Node var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.warning(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.rhino.Node var40 = null;
//     com.google.javascript.rhino.Node var42 = null;
//     com.google.javascript.rhino.Node var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var49 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", var44, var47, var49);
//     boolean var52 = var47.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var56 = null;
//     com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var61 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var56, var59, var61);
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!", var42, var47, var61);
//     com.google.javascript.jscomp.DiagnosticType var64 = var63.getType();
//     com.google.javascript.jscomp.CheckLevel var68 = null;
//     com.google.javascript.jscomp.CheckLevel var70 = null;
//     com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var70, "hi!");
//     java.lang.String var73 = var72.toString();
//     com.google.javascript.jscomp.CheckLevel var75 = null;
//     com.google.javascript.jscomp.DiagnosticType var77 = com.google.javascript.jscomp.DiagnosticType.make("", var75, "hi!");
//     int var78 = var72.compareTo(var77);
//     com.google.javascript.rhino.Node var80 = null;
//     com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var85 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!", var80, var83, var85);
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var68, var77, var85);
//     com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make(": ", var40, var64, var85);
//     com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var35, var38, var85);
//     com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make(var33, var85);
//     com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at (unknown source) line 0 : 1. hi!:  at (unknown source) line (unknown line) : (unknown column)", var1, var2, var14, var85);
// 
//   }

  public void test430() {}
//   public void test430() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test430"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var14, "hi!");
//     java.lang.String var17 = var16.toString();
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
//     int var22 = var16.compareTo(var21);
//     com.google.javascript.rhino.Node var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var29 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", var24, var27, var29);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var12, var21, var29);
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.disabled("", "");
//     boolean var35 = var21.equals((java.lang.Object)"");
//     com.google.javascript.jscomp.CheckLevel var39 = null;
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var41, "hi!");
//     com.google.javascript.jscomp.CheckLevel var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var45, "hi!");
//     java.lang.String var48 = var47.toString();
//     com.google.javascript.jscomp.CheckLevel var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.make("", var50, "hi!");
//     int var53 = var47.compareTo(var52);
//     java.lang.String[] var54 = null;
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make(var47, var54);
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     boolean var59 = var47.equals((java.lang.Object)var58);
//     int var60 = var43.compareTo(var58);
//     com.google.javascript.jscomp.CheckLevel var62 = null;
//     com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var62, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var66 = null;
//     com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var71 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!", var66, var69, var71);
//     int var73 = var64.compareTo(var69);
//     com.google.javascript.rhino.Node var75 = null;
//     com.google.javascript.jscomp.DiagnosticType var78 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var80 = null;
//     com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var85 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!", var80, var83, var85);
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var75, var78, var85);
//     com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make(var64, var85);
//     com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", 66, 46, var39, var43, var85);
//     com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line 3 : 5", 10, 67, var8, var21, var85);
//     com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!: ", (-42), 0, var3, var4, var85);
// 
//   }

  public void test431() {}
//   public void test431() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test431"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var5, "hi!");
//     java.lang.String var8 = var7.toString();
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     int var13 = var7.compareTo(var12);
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var3, var7, var20);
//     com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var29, "hi!");
//     java.lang.String var32 = var31.toString();
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     int var37 = var31.compareTo(var36);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var27, var31, var44);
//     com.google.javascript.jscomp.DiagnosticType var47 = var46.getType();
//     boolean var48 = var22.equals((java.lang.Object)var46);
//     int var49 = var22.getCharno();
//     java.lang.String var50 = var22.toString();
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.MessageFormatter var52 = null;
//     java.lang.String var53 = var22.format(var51, var52);
// 
//   }

  public void test432() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test432"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test433() {}
//   public void test433() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test433"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100", "hi!. hi! at (unknown source) line (unknown line) : (unknown column). :  at (unknown source) line 8 : 12");
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.disabled(": : ", "hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at hi!: hi! line 0 : 3", var21, "");
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at hi!: hi! line 0 : 3", var29, "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.CheckLevel var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var37, "hi!");
//     java.lang.String var40 = var39.toString();
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.CheckLevel var46 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var46, "hi!");
//     java.lang.String var49 = var48.toString();
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
//     int var54 = var48.compareTo(var53);
//     java.lang.String[] var55 = null;
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make(var48, var55);
//     com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var60 = var48.compareTo(var59);
//     com.google.javascript.rhino.Node var62 = null;
//     com.google.javascript.rhino.Node var64 = null;
//     com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var69 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!", var64, var67, var69);
//     boolean var72 = var67.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var76 = null;
//     com.google.javascript.jscomp.DiagnosticType var79 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var81 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var76, var79, var81);
//     com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!", var62, var67, var81);
//     com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("hi!", 0, 100, var44, var59, var81);
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 8, var35, var39, var81);
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3: ", 10, 3, var27, var31, var81);
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at (unknown source) line (unknown line) : (unknown column)", 30, (-3), var19, var23, var81);
//     com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: : ", (-64), 35, var15, var81);
//     com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!: hi!: hi!: hi!: hi!: hi!", var6, var9, var81);
//     com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", 18, 66, var3, var4, var81);
// 
//   }

  public void test434() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test434"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var3, "hi!");
    java.lang.String var6 = var5.toString();
    com.google.javascript.jscomp.CheckLevel var8 = null;
    com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("", var8, "hi!");
    int var11 = var5.compareTo(var10);
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.CheckLevel var17 = null;
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var17, "hi!");
    java.lang.String var20 = var19.toString();
    com.google.javascript.jscomp.CheckLevel var22 = null;
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("", var22, "hi!");
    int var25 = var19.compareTo(var24);
    com.google.javascript.rhino.Node var27 = null;
    com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var32 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", var27, var30, var32);
    com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var15, var24, var32);
    int var35 = var5.compareTo(var24);
    java.lang.String[] var36 = null;
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", var1, var24, var36);
    com.google.javascript.jscomp.DiagnosticType var38 = var37.getType();
    com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.disabled(": ", "");
    boolean var42 = var38.equals((java.lang.Object)": ");
    java.lang.String var43 = var38.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "hi!: hi!"+ "'", var6.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "hi!: hi!"+ "'", var20.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ": hi!"+ "'", var43.equals(": hi!"));

  }

  public void test435() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test435"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
    com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var14 = null;
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var19 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var14, var17, var19);
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 100, var10, var19);
    com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make(": hi!", var1, var4, var19);
    java.lang.String var23 = var4.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi!. hi! at hi!: hi! line 0 : 3: "+ "'", var23.equals("hi!. hi! at hi!: hi! line 0 : 3: "));

  }

  public void test436() {}
//   public void test436() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test436"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var4, "hi!");
//     java.lang.String var7 = var6.toString();
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     int var12 = var6.compareTo(var11);
//     java.lang.String[] var13 = null;
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make(var6, var13);
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var18 = var6.compareTo(var17);
//     com.google.javascript.rhino.Node var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var25 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", var20, var23, var25);
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", 3, (-8), var6, var25);
//     int var28 = var27.getCharno();
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.MessageFormatter var30 = null;
//     java.lang.String var31 = var27.format(var29, var30);
// 
//   }

  public void test437() {}
//   public void test437() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test437"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi! at hi! line (unknown line) : (unknown column)");
// 
//   }

  public void test438() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test438"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test439() {}
//   public void test439() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test439"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var14 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var14);
//     com.google.javascript.jscomp.JSError var16 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var4, var7, var14);
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var29, "hi!");
//     java.lang.String var32 = var31.toString();
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     int var37 = var31.compareTo(var36);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var27, var31, var44);
//     java.lang.String[] var47 = null;
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 10, var23, var31, var47);
//     int var49 = var19.compareTo(var31);
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
//     com.google.javascript.jscomp.CheckLevel var56 = null;
//     com.google.javascript.jscomp.CheckLevel var58 = null;
//     com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var58, "hi!");
//     java.lang.String var61 = var60.toString();
//     com.google.javascript.jscomp.CheckLevel var63 = null;
//     com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.make("", var63, "hi!");
//     int var66 = var60.compareTo(var65);
//     java.lang.String[] var67 = null;
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make(var60, var67);
//     com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var72 = var60.compareTo(var71);
//     com.google.javascript.rhino.Node var74 = null;
//     com.google.javascript.jscomp.CheckLevel var78 = null;
//     com.google.javascript.jscomp.DiagnosticType var81 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var83 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var78, var81, var83);
//     com.google.javascript.jscomp.CheckLevel var88 = null;
//     com.google.javascript.jscomp.DiagnosticType var91 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var93 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var88, var91, var93);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var74, var81, var93);
//     com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("", 0, 1, var56, var71, var93);
//     com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make(var52, var93);
//     com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make(var19, var93);
//     com.google.javascript.jscomp.JSError var99 = com.google.javascript.jscomp.JSError.make("", var1, var2, var7, var93);
// 
//   }

  public void test440() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test440"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!.  at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test441() {}
//   public void test441() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test441"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!. hi! at hi!. hi! at hi!: hi! line 0 : 3 line (unknown line) : -8", "hi!: hi!. hi! at hi!: hi!. hi! at hi!: hi! line (unknown line) : 10 line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var9, "hi!");
//     java.lang.String var12 = var11.toString();
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
//     int var17 = var11.compareTo(var16);
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var23, "hi!");
//     java.lang.String var26 = var25.toString();
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("", var28, "hi!");
//     int var31 = var25.compareTo(var30);
//     com.google.javascript.rhino.Node var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var38 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", var33, var36, var38);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var21, var30, var38);
//     int var41 = var11.compareTo(var30);
//     int var42 = var7.compareTo(var11);
//     com.google.javascript.jscomp.CheckLevel var47 = null;
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var47, "hi!");
//     java.lang.String var50 = var49.toString();
//     com.google.javascript.jscomp.CheckLevel var52 = null;
//     com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.make("", var52, "hi!");
//     int var55 = var49.compareTo(var54);
//     java.lang.String[] var56 = null;
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make(var49, var56);
//     com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var61 = var49.compareTo(var60);
//     com.google.javascript.rhino.Node var63 = null;
//     com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var68 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!", var63, var66, var68);
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", 3, (-8), var49, var68);
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3: ", var4, var7, var68);
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make(var2, var68);
//     com.google.javascript.jscomp.CheckLevel var73 = null;
//     com.google.javascript.jscomp.MessageFormatter var74 = null;
//     java.lang.String var75 = var72.format(var73, var74);
// 
//   }

  public void test442() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test442"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String var3 = var2.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "hi!: hi!: hi!"+ "'", var3.equals("hi!: hi!: hi!"));

  }

  public void test443() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test443"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make(": hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", var1, "hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at (unknown source) line 0 : 1");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test444() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test444"); }


    com.google.javascript.rhino.Node var4 = null;
    com.google.javascript.rhino.Node var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var11 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var12 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var11);
    boolean var14 = var9.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var23 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var18, var21, var23);
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var4, var9, var23);
    com.google.javascript.jscomp.DiagnosticType var26 = var25.getType();
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!. hi! at hi!: hi! line 0 : 3");
    int var30 = var26.compareTo(var29);
    com.google.javascript.rhino.Node var32 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.warning(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!. hi! at hi!: hi! line 0 : 3");
    com.google.javascript.rhino.Node var37 = null;
    com.google.javascript.rhino.Node var39 = null;
    com.google.javascript.rhino.Node var41 = null;
    com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var46 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!", var41, var44, var46);
    boolean var49 = var44.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var53 = null;
    com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var58 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var53, var56, var58);
    com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", var39, var44, var58);
    com.google.javascript.jscomp.DiagnosticType var61 = var60.getType();
    com.google.javascript.jscomp.CheckLevel var65 = null;
    com.google.javascript.jscomp.CheckLevel var67 = null;
    com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var67, "hi!");
    java.lang.String var70 = var69.toString();
    com.google.javascript.jscomp.CheckLevel var72 = null;
    com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.make("", var72, "hi!");
    int var75 = var69.compareTo(var74);
    com.google.javascript.rhino.Node var77 = null;
    com.google.javascript.jscomp.DiagnosticType var80 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var82 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!", var77, var80, var82);
    com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var65, var74, var82);
    com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make(": ", var37, var61, var82);
    com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var32, var35, var82);
    com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("", 66, (-12), var26, var82);
    com.google.javascript.jscomp.DiagnosticType var88 = var87.getType();
    com.google.javascript.jscomp.DiagnosticType var89 = var87.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "hi!: hi!"+ "'", var70.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);

  }

  public void test445() {}
//   public void test445() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test445"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at hi!: hi! line 0 : 3.  at (unknown source) line (unknown line) : (unknown column)", ". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0: hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", var10, ". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0");
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var14, "hi!: hi!. hi! at (unknown source) line -64 : 100");
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var18, "hi!");
//     java.lang.String var21 = var20.toString();
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("", var23, "hi!");
//     int var26 = var20.compareTo(var25);
//     java.lang.String[] var27 = null;
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make(var20, var27);
//     int var29 = var28.getCharno();
//     java.lang.String var30 = var28.toString();
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.CheckLevel var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var36, "hi!");
//     java.lang.String var39 = var38.toString();
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.make("", var41, "hi!");
//     int var44 = var38.compareTo(var43);
//     com.google.javascript.rhino.Node var46 = null;
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var51 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", var46, var49, var51);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var34, var38, var51);
//     com.google.javascript.jscomp.DiagnosticType var54 = var53.getType();
//     boolean var55 = var28.equals((java.lang.Object)var54);
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.jscomp.CheckLevel var65 = null;
//     com.google.javascript.jscomp.CheckLevel var67 = null;
//     com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var67, "hi!");
//     java.lang.String var70 = var69.toString();
//     com.google.javascript.jscomp.CheckLevel var72 = null;
//     com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.make("", var72, "hi!");
//     int var75 = var69.compareTo(var74);
//     com.google.javascript.rhino.Node var77 = null;
//     com.google.javascript.jscomp.DiagnosticType var80 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var82 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!", var77, var80, var82);
//     com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var65, var69, var82);
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("", (-64), 0, var61, var82);
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make(var54, var82);
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make(var16, var82);
//     com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 45, 72, var12, var82);
//     com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: ", 0, 5, var5, var82);
//     com.google.javascript.jscomp.CheckLevel var90 = null;
//     com.google.javascript.jscomp.MessageFormatter var91 = null;
//     java.lang.String var92 = var89.format(var90, var91);
// 
//   }

  public void test446() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test446"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10. hi!: hi!. hi! at hi!: hi!. hi! at hi!: hi! line (unknown line) : 10 line (unknown line) : (unknown column) at (unknown source) line (unknown line) : (unknown column)");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test447() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test447"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var5 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("", var5, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var11 = null;
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var13, "hi!");
    java.lang.String var16 = var15.toString();
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
    int var21 = var15.compareTo(var20);
    com.google.javascript.rhino.Node var23 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var28 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var23, var26, var28);
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var11, var15, var28);
    com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", 10, 64, var3, var7, var28);
    com.google.javascript.jscomp.DiagnosticType var32 = var31.getType();
    java.lang.String var33 = var32.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!: hi!"+ "'", var16.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ": hi!. hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var33.equals(": hi!. hi! at (unknown source) line (unknown line) : (unknown column)"));

  }

  public void test448() {}
//   public void test448() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test448"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make(": : ", var4, "hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at (unknown source) line (unknown line) : (unknown column): hi!");
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error(": : : hi!. hi! at hi!: hi! line 0 : 3", "");
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "hi!: hi!. hi! at hi!: hi! line (unknown line) : 10");
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var19, "hi!");
//     java.lang.String var22 = var21.toString();
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
//     int var27 = var21.compareTo(var26);
//     java.lang.String[] var28 = null;
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make(var21, var28);
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var33 = var21.compareTo(var32);
//     com.google.javascript.rhino.Node var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var40 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", var35, var38, var40);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", 3, (-8), var21, var40);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make(var14, var40);
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at hi!: hi! line (unknown line) : (unknown column)", var8, var11, var40);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!: ", var1, var2, var6, var40);
// 
//   }

  public void test449() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test449"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.rhino.Node var8 = null;
    com.google.javascript.rhino.Node var10 = null;
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var15 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var16 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var15);
    boolean var18 = var13.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var22 = null;
    com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var27 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var22, var25, var27);
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var8, var13, var27);
    com.google.javascript.rhino.Node var31 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var36 = null;
    com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var41 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", var36, var39, var41);
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var31, var34, var41);
    com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var13, var41);
    com.google.javascript.jscomp.DiagnosticType var45 = var44.getType();
    com.google.javascript.jscomp.CheckLevel var47 = null;
    com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var47, "");
    boolean var50 = var44.equals((java.lang.Object)"hi!");
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
    boolean var54 = var44.equals((java.lang.Object)var53);
    java.lang.String var55 = var53.toString();
    java.lang.String[] var56 = null;
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 8, 67, var3, var53, var56);
    com.google.javascript.jscomp.DiagnosticType var58 = var57.getType();
    java.lang.String var59 = var58.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100"+ "'", var55.equals("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100"+ "'", var59.equals("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100"));

  }

  public void test450() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test450"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at hi!: hi! line (unknown line) : (unknown column)", ". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0. hi!. hi! at hi!: hi! line 0 : 3 at hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    java.lang.String[] var10 = null;
    com.google.javascript.jscomp.JSError var11 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", 35, (-64), var6, var9, var10);
    com.google.javascript.jscomp.DiagnosticType var12 = var11.getType();
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.warning(": ", ". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0");
    boolean var16 = var12.equals((java.lang.Object)": ");
    int var17 = var2.compareTo(var12);
    com.google.javascript.jscomp.CheckLevel var21 = null;
    com.google.javascript.jscomp.CheckLevel var23 = null;
    com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var23, "hi!");
    java.lang.String var26 = var25.toString();
    com.google.javascript.jscomp.CheckLevel var28 = null;
    com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("", var28, "hi!");
    int var31 = var25.compareTo(var30);
    com.google.javascript.rhino.Node var33 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var38 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", var33, var36, var38);
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var21, var25, var38);
    com.google.javascript.jscomp.DiagnosticType var41 = var40.getType();
    com.google.javascript.jscomp.CheckLevel var45 = null;
    com.google.javascript.jscomp.CheckLevel var47 = null;
    com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var47, "hi!");
    java.lang.String var50 = var49.toString();
    com.google.javascript.jscomp.CheckLevel var52 = null;
    com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.make("", var52, "hi!");
    int var55 = var49.compareTo(var54);
    com.google.javascript.rhino.Node var57 = null;
    com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var62 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!", var57, var60, var62);
    com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var45, var49, var62);
    com.google.javascript.jscomp.DiagnosticType var65 = var64.getType();
    boolean var66 = var40.equals((java.lang.Object)var64);
    java.lang.String var67 = var64.toString();
    com.google.javascript.jscomp.DiagnosticType var68 = var64.getType();
    com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.warning(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0. hi!. hi! at hi!: hi! line 0 : 3 at hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)", "hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: : ");
    java.lang.String[] var76 = new java.lang.String[] { "hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at (unknown source) line 0 : 1"};
    com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", 0, 35, var74, var76);
    boolean var78 = var64.equals((java.lang.Object)var77);
    boolean var79 = var2.equals((java.lang.Object)var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "hi!: hi!"+ "'", var26.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "hi!: hi!"+ "'", var50.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "hi!. hi! at hi!: hi! line 0 : 3"+ "'", var67.equals("hi!. hi! at hi!: hi! line 0 : 3"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);

  }

  public void test451() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test451"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!. hi! at hi!: hi!. hi! at hi!: hi! line (unknown line) : 10 line (unknown line) : (unknown column)", ": ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test452() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test452"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.rhino.Node var9 = null;
    com.google.javascript.rhino.Node var11 = null;
    com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var16 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!", var11, var14, var16);
    boolean var19 = var14.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var23 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var28 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var23, var26, var28);
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", var9, var14, var28);
    com.google.javascript.rhino.Node var32 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var37 = null;
    com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var42 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", var37, var40, var42);
    com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var32, var35, var42);
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var14, var42);
    com.google.javascript.rhino.Node var47 = null;
    com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var52 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", var47, var50, var52);
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-8), 10, var14, var52);
    java.lang.String var55 = var14.toString();
    java.lang.String[] var56 = null;
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at hi!: hi! line (unknown line) : (unknown column)", var1, var14, var56);
    java.lang.String var58 = var57.toString();
    com.google.javascript.jscomp.DiagnosticType var59 = var57.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!: hi!: hi!"+ "'", var55.equals("hi!: hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "hi!: hi!. hi! at hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at hi!: hi! line (unknown line) : (unknown column) line (unknown line) : (unknown column)"+ "'", var58.equals("hi!: hi!. hi! at hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at hi!: hi! line (unknown line) : (unknown column) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);

  }

  public void test453() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test453"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!: hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var4 = null;
    com.google.javascript.rhino.Node var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var15, "hi!");
    java.lang.String var18 = var17.toString();
    com.google.javascript.jscomp.CheckLevel var20 = null;
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("", var20, "hi!");
    int var23 = var17.compareTo(var22);
    com.google.javascript.rhino.Node var25 = null;
    com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var30 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", var25, var28, var30);
    com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var13, var17, var30);
    com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", var6, var9, var30);
    com.google.javascript.rhino.Node var35 = null;
    com.google.javascript.rhino.Node var40 = null;
    com.google.javascript.rhino.Node var42 = null;
    com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var47 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", var42, var45, var47);
    boolean var50 = var45.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var54 = null;
    com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var59 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var54, var57, var59);
    com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!", var40, var45, var59);
    com.google.javascript.rhino.Node var63 = null;
    com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var68 = null;
    com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var73 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!", var68, var71, var73);
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var63, var66, var73);
    com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var45, var73);
    com.google.javascript.jscomp.DiagnosticType var77 = var76.getType();
    com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var87 = null;
    com.google.javascript.jscomp.DiagnosticType var90 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var92 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var87, var90, var92);
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 100, var83, var92);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", var35, var77, var92);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make(": hi!. hi! at hi!: hi! line 0 : 3", var4, var9, var92);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make(var2, var92);
    java.lang.String var98 = var97.toString();
    com.google.javascript.jscomp.DiagnosticType var99 = var97.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "hi!: hi!"+ "'", var18.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var98 + "' != '" + "hi!: hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at (unknown source) line (unknown line) : (unknown column)"+ "'", var98.equals("hi!: hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var99);

  }

  public void test454() {}
//   public void test454() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test454"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!: hi!: hi!: hi!: hi!: hi!: hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100");
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.rhino.Node var24 = null;
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.rhino.Node var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var33 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", var28, var31, var33);
//     boolean var36 = var31.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var45 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var40, var43, var45);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!", var26, var31, var45);
//     com.google.javascript.jscomp.DiagnosticType var48 = var47.getType();
//     com.google.javascript.jscomp.CheckLevel var52 = null;
//     com.google.javascript.jscomp.CheckLevel var54 = null;
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var54, "hi!");
//     java.lang.String var57 = var56.toString();
//     com.google.javascript.jscomp.CheckLevel var59 = null;
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.make("", var59, "hi!");
//     int var62 = var56.compareTo(var61);
//     com.google.javascript.rhino.Node var64 = null;
//     com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var69 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!", var64, var67, var69);
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var52, var61, var69);
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make(": ", var24, var48, var69);
//     com.google.javascript.jscomp.CheckLevel var76 = null;
//     com.google.javascript.jscomp.CheckLevel var78 = null;
//     com.google.javascript.jscomp.DiagnosticType var80 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var78, "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var84 = var80.compareTo(var83);
//     com.google.javascript.rhino.Node var86 = null;
//     com.google.javascript.jscomp.DiagnosticType var89 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var91 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!", var86, var89, var91);
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var76, var80, var91);
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", (-1), (-8), var22, var48, var91);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: : : : ", 0, 0, var18, var91);
//     com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column). :  at (unknown source) line (unknown line) : (unknown column)", 0, 0, var9, var12, var91);
//     com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make(": hi!. hi! at hi!: hi! line 0 : 3. : hi! at hi!: hi!: hi! line 30 : 12", var1, var2, var5, var91);
// 
//   }

  public void test455() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test455"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!. hi! at hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line 66 : 46", "hi!. hi! at hi!: hi! line 0 : 3");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test456() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test456"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.rhino.Node var5 = null;
    com.google.javascript.rhino.Node var7 = null;
    com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var12 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var13 = com.google.javascript.jscomp.JSError.make("hi!", var7, var10, var12);
    boolean var15 = var10.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var19 = null;
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var24 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var19, var22, var24);
    com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", var5, var10, var24);
    com.google.javascript.jscomp.CheckLevel var28 = null;
    com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var28, "hi!: hi!");
    boolean var31 = var26.equals((java.lang.Object)var30);
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
    com.google.javascript.jscomp.CheckLevel var38 = null;
    com.google.javascript.jscomp.CheckLevel var40 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var40, "hi!");
    java.lang.String var43 = var42.toString();
    com.google.javascript.jscomp.CheckLevel var45 = null;
    com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.make("", var45, "hi!");
    int var48 = var42.compareTo(var47);
    java.lang.String[] var49 = null;
    com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make(var42, var49);
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    int var54 = var42.compareTo(var53);
    com.google.javascript.rhino.Node var56 = null;
    com.google.javascript.jscomp.CheckLevel var60 = null;
    com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var65 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var60, var63, var65);
    com.google.javascript.jscomp.CheckLevel var70 = null;
    com.google.javascript.jscomp.DiagnosticType var73 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var75 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var70, var73, var75);
    com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var56, var63, var75);
    com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("", 0, 1, var38, var53, var75);
    com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make(var34, var75);
    com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100", (-46), (-1), var3, var30, var75);
    java.lang.String var81 = var80.toString();
    int var82 = var80.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!: hi!"+ "'", var43.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "hi!: hi!. hi!: hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100 line -46 : (unknown column)"+ "'", var81.equals("hi!: hi!. hi!: hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100 line -46 : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == (-1));

  }

  public void test457() {}
//   public void test457() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test457"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning(". hi! at hi! line (unknown line) : 10", "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.CheckLevel var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var11, "hi!");
//     java.lang.String var14 = var13.toString();
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.make("", var16, "hi!");
//     int var19 = var13.compareTo(var18);
//     java.lang.String[] var20 = null;
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make(var13, var20);
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var25 = var13.compareTo(var24);
//     com.google.javascript.rhino.Node var30 = null;
//     com.google.javascript.rhino.Node var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var37 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var37);
//     boolean var40 = var35.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var49 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var44, var47, var49);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", var30, var35, var49);
//     com.google.javascript.rhino.Node var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var58 = null;
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var63 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("hi!", var58, var61, var63);
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var53, var56, var63);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var35, var63);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make(": ", (-46), 0, var9, var24, var63);
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, var2, var5, var63);
// 
//   }

  public void test458() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test458"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at hi!: hi! line 0 : 3.  at (unknown source) line (unknown line) : (unknown column): hi!", var1, "hi!: hi!. hi! at (unknown source) line 66 : -12");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test459() {}
//   public void test459() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test459"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100");
//     int var8 = var4.compareTo(var7);
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", var10, "hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!");
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.rhino.Node var18 = null;
//     com.google.javascript.rhino.Node var20 = null;
//     com.google.javascript.rhino.Node var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var27 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var22, var25, var27);
//     boolean var30 = var25.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var39 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var34, var37, var39);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", var20, var25, var39);
//     com.google.javascript.jscomp.DiagnosticType var42 = var41.getType();
//     com.google.javascript.jscomp.CheckLevel var46 = null;
//     com.google.javascript.jscomp.CheckLevel var48 = null;
//     com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var48, "hi!");
//     java.lang.String var51 = var50.toString();
//     com.google.javascript.jscomp.CheckLevel var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.make("", var53, "hi!");
//     int var56 = var50.compareTo(var55);
//     com.google.javascript.rhino.Node var58 = null;
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var63 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("hi!", var58, var61, var63);
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var46, var55, var63);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make(": ", var18, var42, var63);
//     com.google.javascript.jscomp.CheckLevel var70 = null;
//     com.google.javascript.jscomp.CheckLevel var72 = null;
//     com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var72, "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var77 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var78 = var74.compareTo(var77);
//     com.google.javascript.rhino.Node var80 = null;
//     com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var85 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!", var80, var83, var85);
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var70, var74, var85);
//     com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", (-1), (-8), var16, var42, var85);
//     com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make(var12, var85);
//     com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make(": : ", var1, var7, var85);
//     com.google.javascript.jscomp.CheckLevel var91 = null;
//     com.google.javascript.jscomp.MessageFormatter var92 = null;
//     java.lang.String var93 = var90.format(var91, var92);
// 
//   }

  public void test460() {}
//   public void test460() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test460"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at (unknown source) line (unknown line) : (unknown column). :  at (unknown source) line 8 : 12");
// 
//   }

  public void test461() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test461"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test462() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test462"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at hi!: hi! line 0 : 10", "hi!: hi!. hi! at hi!. hi! at hi!: hi! line 0 : 3:  line 8 : -42");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test463() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test463"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100.  at (unknown source) line (unknown line) : (unknown column)");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test464() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test464"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3: ", "hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test465() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test465"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var1, "hi!");
    java.lang.String[] var4 = null;
    com.google.javascript.jscomp.JSError var5 = com.google.javascript.jscomp.JSError.make(var3, var4);
    int var6 = var5.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == (-1));

  }

  public void test466() {}
//   public void test466() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test466"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var4, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var13 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", var8, var11, var13);
//     int var15 = var6.compareTo(var11);
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     int var19 = var6.compareTo(var18);
//     java.lang.Object var20 = null;
//     boolean var21 = var6.equals(var20);
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3: ", "hi!: hi!. hi! at (unknown source) line -64 : 100");
//     com.google.javascript.rhino.Node var29 = null;
//     com.google.javascript.rhino.Node var31 = null;
//     com.google.javascript.rhino.Node var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var38 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", var33, var36, var38);
//     boolean var41 = var36.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var50 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var45, var48, var50);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", var31, var36, var50);
//     com.google.javascript.jscomp.DiagnosticType var53 = var52.getType();
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.error(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!. hi! at hi!: hi! line 0 : 3");
//     int var57 = var53.compareTo(var56);
//     com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: hi!: hi!", "hi!: hi!: hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var67 = null;
//     com.google.javascript.jscomp.CheckLevel var69 = null;
//     com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var69, "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var75 = var71.compareTo(var74);
//     com.google.javascript.rhino.Node var77 = null;
//     com.google.javascript.jscomp.DiagnosticType var80 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var82 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!", var77, var80, var82);
//     com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 12, 0, var67, var71, var82);
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", (-1), 0, var63, var82);
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var29, var53, var82);
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", (-43), 0, var27, var82);
//     com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at (unknown source) line 0 : 1", (-28), 66, var6, var82);
//     com.google.javascript.jscomp.CheckLevel var89 = null;
//     com.google.javascript.jscomp.MessageFormatter var90 = null;
//     java.lang.String var91 = var88.format(var89, var90);
// 
//   }

  public void test467() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test467"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning(": : ", "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    java.lang.String var3 = var2.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ": : : hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var3.equals(": : : hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)"));

  }

  public void test468() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test468"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.rhino.Node var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var8 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", var3, var6, var8);
    boolean var11 = var6.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var20 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var15, var18, var20);
    com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", var1, var6, var20);
    com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
    java.lang.String var24 = var23.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "hi!: hi!: hi!"+ "'", var24.equals("hi!: hi!: hi!"));

  }

  public void test469() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test469"); }


    com.google.javascript.jscomp.CheckLevel var4 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var4, ". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0");
    com.google.javascript.rhino.Node var11 = null;
    com.google.javascript.rhino.Node var13 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var18 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", var13, var16, var18);
    boolean var21 = var16.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var25 = null;
    com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var30 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var25, var28, var30);
    com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", var11, var16, var30);
    com.google.javascript.jscomp.DiagnosticType var33 = var32.getType();
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!. hi! at hi!: hi! line 0 : 3");
    int var37 = var33.compareTo(var36);
    com.google.javascript.rhino.Node var39 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.warning(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", "hi!. hi! at hi!: hi! line 0 : 3");
    com.google.javascript.rhino.Node var44 = null;
    com.google.javascript.rhino.Node var46 = null;
    com.google.javascript.rhino.Node var48 = null;
    com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var53 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", var48, var51, var53);
    boolean var56 = var51.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var60 = null;
    com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var65 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var60, var63, var65);
    com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!", var46, var51, var65);
    com.google.javascript.jscomp.DiagnosticType var68 = var67.getType();
    com.google.javascript.jscomp.CheckLevel var72 = null;
    com.google.javascript.jscomp.CheckLevel var74 = null;
    com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var74, "hi!");
    java.lang.String var77 = var76.toString();
    com.google.javascript.jscomp.CheckLevel var79 = null;
    com.google.javascript.jscomp.DiagnosticType var81 = com.google.javascript.jscomp.DiagnosticType.make("", var79, "hi!");
    int var82 = var76.compareTo(var81);
    com.google.javascript.rhino.Node var84 = null;
    com.google.javascript.jscomp.DiagnosticType var87 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var89 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!", var84, var87, var89);
    com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var72, var81, var89);
    com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make(": ", var44, var68, var89);
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var39, var42, var89);
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("", 66, (-12), var33, var89);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!", 66, (-8), var6, var89);
    java.lang.Object var96 = null;
    boolean var97 = var95.equals(var96);
    int var98 = var95.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "hi!: hi!"+ "'", var77.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == (-8));

  }

  public void test470() {}
//   public void test470() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test470"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled(": ", ": hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var14 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var14);
//     boolean var17 = var12.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var26 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var21, var24, var26);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var7, var12, var26);
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi!: hi! line 3 : -8", (-46), 58, var5, var26);
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var34, "hi!: hi!. hi! at hi!: hi!. hi! at hi!: hi! line (unknown line) : 10 line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at hi!: hi! line 0 : 3", "hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.rhino.Node var44 = null;
//     com.google.javascript.rhino.Node var46 = null;
//     com.google.javascript.rhino.Node var48 = null;
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var53 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", var48, var51, var53);
//     boolean var56 = var51.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var60 = null;
//     com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var65 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var60, var63, var65);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!", var46, var51, var65);
//     com.google.javascript.jscomp.DiagnosticType var68 = var67.getType();
//     com.google.javascript.jscomp.CheckLevel var72 = null;
//     com.google.javascript.jscomp.CheckLevel var74 = null;
//     com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var74, "hi!");
//     java.lang.String var77 = var76.toString();
//     com.google.javascript.jscomp.CheckLevel var79 = null;
//     com.google.javascript.jscomp.DiagnosticType var81 = com.google.javascript.jscomp.DiagnosticType.make("", var79, "hi!");
//     int var82 = var76.compareTo(var81);
//     com.google.javascript.rhino.Node var84 = null;
//     com.google.javascript.jscomp.DiagnosticType var87 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var89 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!", var84, var87, var89);
//     com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var72, var81, var89);
//     com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make(": ", var44, var68, var89);
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make(": : ", 5, 12, var42, var89);
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("", 58, (-28), var36, var89);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make(var5, var89);
//     com.google.javascript.jscomp.CheckLevel var96 = null;
//     com.google.javascript.jscomp.MessageFormatter var97 = null;
//     java.lang.String var98 = var95.format(var96, var97);
// 
//   }

  public void test471() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test471"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var1, "hi!");
    java.lang.String var4 = var3.toString();
    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.make("", var6, "hi!");
    int var9 = var3.compareTo(var8);
    java.lang.String[] var10 = null;
    com.google.javascript.jscomp.JSError var11 = com.google.javascript.jscomp.JSError.make(var3, var10);
    int var12 = var11.getCharno();
    java.lang.String var13 = var11.toString();
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var15, "hi!");
    java.lang.String var18 = var17.toString();
    com.google.javascript.jscomp.CheckLevel var20 = null;
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("", var20, "hi!");
    int var23 = var17.compareTo(var22);
    java.lang.String[] var24 = null;
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make(var17, var24);
    boolean var27 = var25.equals((java.lang.Object)(byte)1);
    int var28 = var25.getCharno();
    int var29 = var25.getCharno();
    boolean var30 = var11.equals((java.lang.Object)var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!: hi!"+ "'", var4.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "hi!. hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var13.equals("hi!. hi! at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "hi!: hi!"+ "'", var18.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);

  }

  public void test472() {}
//   public void test472() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test472"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!: hi!. hi! at hi!: hi! line (unknown line) : 10");
//     java.lang.String[] var6 = null;
//     com.google.javascript.jscomp.JSError var7 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi! line -8 : 10: . hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0. hi!. hi! at hi!: hi! line 0 : 3 at hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : (unknown column)", var1, var2, var5, var6);
// 
//   }

  public void test473() {}
//   public void test473() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test473"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var4, ": ");
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var17 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var12, var15, var17);
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var27 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var22, var25, var27);
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var8, var15, var27);
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make(var6, var27);
//     com.google.javascript.rhino.Node var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var50 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var45, var48, var50);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 100, var41, var50);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make(": hi!", var32, var35, var50);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("", 8, 12, var6, var50);
//     com.google.javascript.jscomp.CheckLevel var55 = null;
//     com.google.javascript.jscomp.MessageFormatter var56 = null;
//     java.lang.String var57 = var54.format(var55, var56);
// 
//   }

  public void test474() {}
//   public void test474() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test474"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var18 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var13, var16, var18);
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!: hi!", "");
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3", "");
//     com.google.javascript.jscomp.CheckLevel var33 = null;
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var35, "hi!");
//     java.lang.String var38 = var37.toString();
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("", var40, "hi!");
//     int var43 = var37.compareTo(var42);
//     java.lang.String[] var44 = null;
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make(var37, var44);
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var49 = var37.compareTo(var48);
//     com.google.javascript.rhino.Node var51 = null;
//     com.google.javascript.jscomp.CheckLevel var55 = null;
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var60 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var55, var58, var60);
//     com.google.javascript.jscomp.CheckLevel var65 = null;
//     com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var70 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var65, var68, var70);
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var51, var58, var70);
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("", 0, 1, var33, var48, var70);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make(var29, var70);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", 10, 8, var23, var26, var70);
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", (-64), 0, var9, var16, var70);
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3.  at (unknown source) line (unknown line) : (unknown column)", var1, var2, var5, var70);
// 
//   }

  public void test475() {}
//   public void test475() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test475"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled(": hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100", "hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at hi!: hi! line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     int var4 = var2.compareTo(var3);
// 
//   }

  public void test476() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test476"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100", "");
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.CheckLevel var11 = null;
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var11, "hi!");
    java.lang.String var14 = var13.toString();
    com.google.javascript.jscomp.CheckLevel var16 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.make("", var16, "hi!");
    int var19 = var13.compareTo(var18);
    com.google.javascript.rhino.Node var21 = null;
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var26 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", var21, var24, var26);
    com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var9, var13, var26);
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at hi!: hi! line 0 : 3 line (unknown line) : -8", (-1), (-43), var5, var26);
    java.lang.Object var30 = null;
    boolean var31 = var29.equals(var30);
    java.lang.String var32 = var29.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "hi!: hi!"+ "'", var14.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100.  at hi!: hi!. hi! at hi!. hi! at hi!: hi! line 0 : 3 line (unknown line) : -8 line (unknown line) : -43"+ "'", var32.equals("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at (unknown source) line -64 : 100.  at hi!: hi!. hi! at hi!. hi! at hi!: hi! line 0 : 3 line (unknown line) : -8 line (unknown line) : -43"));

  }

  public void test477() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test477"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: hi!: hi!: hi!: hi!: hi!: hi!", "hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100: ");
    com.google.javascript.rhino.Node var12 = null;
    com.google.javascript.rhino.Node var14 = null;
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var19 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!", var14, var17, var19);
    boolean var22 = var17.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var26 = null;
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var31 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var26, var29, var31);
    com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", var12, var17, var31);
    com.google.javascript.rhino.Node var35 = null;
    com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var40 = null;
    com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var45 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", var40, var43, var45);
    com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var35, var38, var45);
    com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var17, var45);
    com.google.javascript.rhino.Node var50 = null;
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var55 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", var50, var53, var55);
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-8), 10, var17, var55);
    boolean var58 = var4.equals((java.lang.Object)"hi!: hi!");
    com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.disabled(": ", ": hi!. hi! at hi!: hi! line 0 : 3");
    com.google.javascript.rhino.Node var66 = null;
    com.google.javascript.rhino.Node var68 = null;
    com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var73 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!", var68, var71, var73);
    boolean var76 = var71.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var80 = null;
    com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var85 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var80, var83, var85);
    com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!", var66, var71, var85);
    com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi!: hi! line 3 : -8", (-46), 58, var64, var85);
    com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make(". hi!. hi! at hi!: hi! line 0 : 3 at (unknown source) line -64 : 0", var1, var4, var85);
    int var90 = var89.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == (-1));

  }

  public void test478() {}
//   public void test478() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test478"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var4, "hi!");
//     java.lang.String var7 = var6.toString();
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     int var12 = var6.compareTo(var11);
//     java.lang.String[] var13 = null;
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make(var6, var13);
//     java.lang.String var15 = var6.toString();
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     int var19 = var6.compareTo(var18);
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at hi!: hi! line 0 : 3", "");
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!", "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var30 = null;
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var39 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var34, var37, var39);
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var49 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var44, var47, var49);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var30, var37, var49);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", (-42), 3, var28, var49);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make(var22, var49);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make(": hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100", var1, var2, var6, var49);
// 
//   }

  public void test479() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test479"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(": hi!. hi! at hi!: hi! line 0 : 3: hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test480() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test480"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!: hi!: hi!");
    java.lang.String var3 = var2.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ": hi!: hi!: hi!"+ "'", var3.equals(": hi!: hi!: hi!"));

  }

  public void test481() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test481"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!. hi!. hi! at (unknown source) line (unknown line) : (unknown column) at hi!: hi! line (unknown line) : (unknown column)", "hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test482() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test482"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", "hi!: hi!: hi!: hi!");
    com.google.javascript.rhino.Node var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
    com.google.javascript.rhino.Node var14 = null;
    com.google.javascript.rhino.Node var16 = null;
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var21 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", var16, var19, var21);
    boolean var24 = var19.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var28 = null;
    com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var33 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var28, var31, var33);
    com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", var14, var19, var33);
    com.google.javascript.rhino.Node var37 = null;
    com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var42 = null;
    com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var47 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", var42, var45, var47);
    com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var37, var40, var47);
    com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("", (-64), 100, var19, var47);
    com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var6, var9, var47);
    com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3.  at (unknown source) line (unknown line) : (unknown column): hi!", var1, var4, var47);
    java.lang.String var53 = var52.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100. hi!: hi!: hi!: hi! at hi!. hi! at hi!: hi! line 0 : 3.  at (unknown source) line (unknown line) : (unknown column): hi! line (unknown line) : (unknown column)"+ "'", var53.equals("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100. hi!: hi!: hi!: hi! at hi!. hi! at hi!: hi! line 0 : 3.  at (unknown source) line (unknown line) : (unknown column): hi! line (unknown line) : (unknown column)"));

  }

  public void test483() {}
//   public void test483() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test483"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var9, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     java.lang.String var12 = var11.toString();
//     com.google.javascript.rhino.Node var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var23, "hi!");
//     java.lang.String var26 = var25.toString();
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("", var28, "hi!");
//     int var31 = var25.compareTo(var30);
//     com.google.javascript.rhino.Node var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var38 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", var33, var36, var38);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var21, var25, var38);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!: hi! line (unknown line) : 10", var14, var17, var38);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!: hi!", 0, 67, var7, var11, var38);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("", 48, (-8), var3, var38);
// 
//   }

  public void test484() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test484"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
    com.google.javascript.jscomp.CheckLevel var4 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var4, "hi!");
    java.lang.String var7 = var6.toString();
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
    int var12 = var6.compareTo(var11);
    java.lang.String[] var13 = null;
    com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make(var6, var13);
    int var15 = var14.getCharno();
    java.lang.String var16 = var14.toString();
    com.google.javascript.jscomp.CheckLevel var20 = null;
    com.google.javascript.jscomp.CheckLevel var22 = null;
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var22, "hi!");
    java.lang.String var25 = var24.toString();
    com.google.javascript.jscomp.CheckLevel var27 = null;
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.make("", var27, "hi!");
    int var30 = var24.compareTo(var29);
    com.google.javascript.rhino.Node var32 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var37 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var37);
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var20, var24, var37);
    com.google.javascript.jscomp.DiagnosticType var40 = var39.getType();
    boolean var41 = var14.equals((java.lang.Object)var40);
    com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at hi!: hi! line 0 : 3");
    com.google.javascript.jscomp.CheckLevel var51 = null;
    com.google.javascript.jscomp.CheckLevel var53 = null;
    com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var53, "hi!");
    java.lang.String var56 = var55.toString();
    com.google.javascript.jscomp.CheckLevel var58 = null;
    com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.make("", var58, "hi!");
    int var61 = var55.compareTo(var60);
    com.google.javascript.rhino.Node var63 = null;
    com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var68 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!", var63, var66, var68);
    com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var51, var55, var68);
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("", (-64), 0, var47, var68);
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make(var40, var68);
    boolean var73 = var2.equals((java.lang.Object)var72);
    java.lang.Object var74 = null;
    boolean var75 = var72.equals(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!: hi!"+ "'", var7.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!. hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var16.equals("hi!. hi! at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "hi!: hi!"+ "'", var25.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "hi!: hi!"+ "'", var56.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == false);

  }

  public void test485() {}
//   public void test485() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test485"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error(": : ", "");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.disabled(": ", ": hi!. hi! at hi!: hi! line 0 : 3");
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.rhino.Node var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var17 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!", var12, var15, var17);
//     boolean var20 = var15.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var29 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var24, var27, var29);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", var10, var15, var29);
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi!: hi! line 3 : -8", (-46), 58, var8, var29);
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make(var2, var29);
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.MessageFormatter var35 = null;
//     java.lang.String var36 = var33.format(var34, var35);
// 
//   }

  public void test486() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test486"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", ": ");
    com.google.javascript.jscomp.CheckLevel var7 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var7, "hi!");
    com.google.javascript.jscomp.CheckLevel var11 = null;
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var11, "hi!");
    java.lang.String var14 = var13.toString();
    com.google.javascript.jscomp.CheckLevel var16 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.make("", var16, "hi!");
    int var19 = var13.compareTo(var18);
    java.lang.String[] var20 = null;
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make(var13, var20);
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
    boolean var25 = var13.equals((java.lang.Object)var24);
    int var26 = var9.compareTo(var24);
    boolean var27 = var5.equals((java.lang.Object)var26);
    com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.disabled(": ", ": hi!. hi! at hi!: hi! line 0 : 3");
    com.google.javascript.rhino.Node var35 = null;
    com.google.javascript.rhino.Node var37 = null;
    com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var42 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", var37, var40, var42);
    boolean var45 = var40.equals((java.lang.Object)10);
    com.google.javascript.jscomp.CheckLevel var49 = null;
    com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var54 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var49, var52, var54);
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", var35, var40, var54);
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi!: hi! line 3 : -8", (-46), 58, var33, var54);
    com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", 8, 4, var5, var54);
    com.google.javascript.jscomp.DiagnosticType var59 = var58.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "hi!: hi!"+ "'", var14.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);

  }

  public void test487() {}
//   public void test487() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test487"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var14 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var9, var12, var14);
//     com.google.javascript.jscomp.JSError var16 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 100, var5, var14);
//     boolean var18 = var16.equals((java.lang.Object)(short)100);
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var20, "hi!");
//     java.lang.String var23 = var22.toString();
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
//     int var28 = var22.compareTo(var27);
//     com.google.javascript.jscomp.CheckLevel var32 = null;
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var34, "hi!");
//     java.lang.String var37 = var36.toString();
//     com.google.javascript.jscomp.CheckLevel var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.make("", var39, "hi!");
//     int var42 = var36.compareTo(var41);
//     com.google.javascript.rhino.Node var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var49 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", var44, var47, var49);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 10, var32, var41, var49);
//     int var52 = var22.compareTo(var41);
//     boolean var53 = var16.equals((java.lang.Object)var52);
//     com.google.javascript.jscomp.DiagnosticType var54 = var16.getType();
//     int var55 = var16.getCharno();
//     com.google.javascript.jscomp.CheckLevel var56 = null;
//     com.google.javascript.jscomp.MessageFormatter var57 = null;
//     java.lang.String var58 = var16.format(var56, var57);
// 
//   }

  public void test488() {}
//   public void test488() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test488"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!", "hi!: hi!");
//     java.lang.String var6 = var5.toString();
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var8, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var17 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!", var12, var15, var17);
//     int var19 = var10.compareTo(var15);
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     int var23 = var10.compareTo(var22);
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!", "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var31 = null;
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var40 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var35, var38, var40);
//     com.google.javascript.jscomp.CheckLevel var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var50 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var45, var48, var50);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var31, var38, var50);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", (-42), 3, var29, var50);
//     boolean var54 = var10.equals((java.lang.Object)var50);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 10", var1, var2, var5, var50);
// 
//   }

  public void test489() {}
//   public void test489() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test489"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
// 
//   }

  public void test490() {}
//   public void test490() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test490"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ": hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100");
// 
//   }

  public void test491() {}
//   public void test491() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test491"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : 3.  at (unknown source) line (unknown line) : (unknown column)", "hi!: hi!: ");
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var14 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var14);
//     boolean var17 = var12.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var26 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var21, var24, var26);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var7, var12, var26);
//     com.google.javascript.jscomp.CheckLevel var32 = null;
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var34, "hi!");
//     java.lang.String var37 = var36.toString();
//     com.google.javascript.jscomp.CheckLevel var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.make("", var39, "hi!");
//     int var42 = var36.compareTo(var41);
//     java.lang.String[] var43 = null;
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make(var36, var43);
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var48 = var36.compareTo(var47);
//     com.google.javascript.rhino.Node var50 = null;
//     com.google.javascript.jscomp.CheckLevel var54 = null;
//     com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var59 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var54, var57, var59);
//     com.google.javascript.jscomp.CheckLevel var64 = null;
//     com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var69 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var64, var67, var69);
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var50, var57, var69);
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("", 0, 1, var32, var47, var69);
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make(var12, var69);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!: hi!: hi!: hi!: hi!: hi!", var1, var2, var5, var69);
// 
//   }

  public void test492() {}
//   public void test492() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test492"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi! at hi!: hi! line -8 : 10. hi! at hi!: hi!. hi! at hi! line (unknown line) : (unknown column) line 0 : -12");
// 
//   }

  public void test493() {}
//   public void test493() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test493"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.disabled(": : ", "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var18, "hi!");
//     java.lang.String var21 = var20.toString();
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("", var23, "hi!");
//     int var26 = var20.compareTo(var25);
//     com.google.javascript.rhino.Node var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var33 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", var28, var31, var33);
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var16, var20, var33);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : 3", 10, 64, var8, var12, var33);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at hi! line 0 : 100", var1, var4, var33);
//     com.google.javascript.jscomp.CheckLevel var38 = null;
//     com.google.javascript.jscomp.MessageFormatter var39 = null;
//     java.lang.String var40 = var37.format(var38, var39);
// 
//   }

  public void test494() {}
//   public void test494() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test494"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var3, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var12 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var13 = com.google.javascript.jscomp.JSError.make("hi!", var7, var10, var12);
//     int var14 = var5.compareTo(var10);
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var20, "hi!");
//     java.lang.String var23 = var22.toString();
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
//     int var28 = var22.compareTo(var27);
//     java.lang.String[] var29 = null;
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make(var22, var29);
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!");
//     int var34 = var22.compareTo(var33);
//     com.google.javascript.rhino.Node var36 = null;
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var45 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var40, var43, var45);
//     com.google.javascript.jscomp.CheckLevel var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var55 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var50, var53, var55);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var36, var43, var55);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("", 0, 1, var18, var33, var55);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var1, var5, var55);
//     com.google.javascript.jscomp.DiagnosticType var60 = var59.getType();
//     int var61 = var59.getCharno();
//     com.google.javascript.jscomp.CheckLevel var62 = null;
//     com.google.javascript.jscomp.MessageFormatter var63 = null;
//     java.lang.String var64 = var59.format(var62, var63);
// 
//   }

  public void test495() {}
//   public void test495() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test495"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at (unknown source) line (unknown line) : (unknown column). hi! at (unknown source) line 0 : 1. hi!. hi! at (unknown source) line (unknown line) : (unknown column): hi! at (unknown source) line (unknown line) : (unknown column)");
// 
//   }

  public void test496() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test496"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(": : : hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test497() {}
//   public void test497() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test497"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var1, "hi!");
//     java.lang.String var4 = var3.toString();
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.make("", var6, "hi!");
//     int var9 = var3.compareTo(var8);
//     java.lang.String[] var10 = null;
//     com.google.javascript.jscomp.JSError var11 = com.google.javascript.jscomp.JSError.make(var3, var10);
//     int var12 = var11.getCharno();
//     java.lang.String var13 = var11.toString();
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var19, "hi!");
//     java.lang.String var22 = var21.toString();
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
//     int var27 = var21.compareTo(var26);
//     com.google.javascript.rhino.Node var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var34);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var17, var21, var34);
//     com.google.javascript.jscomp.DiagnosticType var37 = var36.getType();
//     boolean var38 = var11.equals((java.lang.Object)var37);
//     java.lang.String var39 = var11.toString();
//     java.lang.Object var40 = null;
//     boolean var41 = var11.equals(var40);
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.disabled(": : ", "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var48 = null;
//     com.google.javascript.jscomp.CheckLevel var52 = null;
//     com.google.javascript.jscomp.CheckLevel var56 = null;
//     com.google.javascript.jscomp.CheckLevel var58 = null;
//     com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var58, "hi!");
//     java.lang.String var61 = var60.toString();
//     com.google.javascript.jscomp.CheckLevel var63 = null;
//     com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.make("", var63, "hi!");
//     int var66 = var60.compareTo(var65);
//     com.google.javascript.rhino.Node var68 = null;
//     com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var73 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!", var68, var71, var73);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var56, var60, var73);
//     java.lang.String[] var76 = null;
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 10, var52, var60, var76);
//     com.google.javascript.rhino.Node var79 = null;
//     com.google.javascript.jscomp.DiagnosticType var82 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     java.lang.String[] var84 = new java.lang.String[] { ""};
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!", var79, var82, var84);
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("", (-1), 10, var48, var60, var84);
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make(var44, var84);
//     boolean var88 = var11.equals((java.lang.Object)var44);
//     com.google.javascript.jscomp.DiagnosticType var89 = null;
//     int var90 = var44.compareTo(var89);
// 
//   }

  public void test498() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test498"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(": : ");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test499() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test499"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!. hi! at hi!: hi!. hi! at hi!: hi! line (unknown line) : 10 line (unknown line) : (unknown column)", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var11 = null;
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var13, "hi!");
    java.lang.String var16 = var15.toString();
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
    int var21 = var15.compareTo(var20);
    com.google.javascript.rhino.Node var23 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var28 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var23, var26, var28);
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var11, var15, var28);
    com.google.javascript.jscomp.DiagnosticType var31 = var30.getType();
    com.google.javascript.jscomp.CheckLevel var35 = null;
    com.google.javascript.jscomp.CheckLevel var37 = null;
    com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var37, "hi!");
    java.lang.String var40 = var39.toString();
    com.google.javascript.jscomp.CheckLevel var42 = null;
    com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.make("", var42, "hi!");
    int var45 = var39.compareTo(var44);
    com.google.javascript.rhino.Node var47 = null;
    com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var52 = new java.lang.String[] { ""};
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", var47, var50, var52);
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, 3, var35, var39, var52);
    com.google.javascript.jscomp.DiagnosticType var55 = var54.getType();
    boolean var56 = var30.equals((java.lang.Object)var54);
    boolean var58 = var54.equals((java.lang.Object)0L);
    int var59 = var54.getCharno();
    com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!: hi!. hi! at hi!: hi!: hi! line 0 : 100", "hi!: ");
    boolean var63 = var54.equals((java.lang.Object)var62);
    com.google.javascript.jscomp.DiagnosticType var64 = var54.getType();
    com.google.javascript.rhino.Node var66 = null;
    com.google.javascript.jscomp.CheckLevel var70 = null;
    com.google.javascript.jscomp.DiagnosticType var73 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var75 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var70, var73, var75);
    com.google.javascript.jscomp.CheckLevel var80 = null;
    com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    java.lang.String[] var85 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var80, var83, var85);
    com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var66, var73, var85);
    com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column) line 3 : 5", 45, (-1), var64, var85);
    com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make(": : ", var1, var4, var85);
    int var90 = var89.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!: hi!"+ "'", var16.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "hi!: hi!"+ "'", var40.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == (-1));

  }

  public void test500() {}
//   public void test500() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test500"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled(": hi!", "");
//     java.lang.String[] var6 = null;
//     com.google.javascript.jscomp.JSError var7 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi! line (unknown line) : (unknown column)", var1, var2, var5, var6);
// 
//   }

}
