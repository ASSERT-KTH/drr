
import junit.framework.*;

public class RandoopTest0 extends TestCase {

  public static boolean debug = false;

  public void test1() {}
//   public void test1() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test1"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     java.lang.String[] var7 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var8 = com.google.javascript.jscomp.JSError.make("hi!", var1, var2, var5, var7);
// 
//   }

  public void test2() {}
//   public void test2() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test2"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "");
// 
//   }

  public void test3() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test3"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test4() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test4"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test5() {}
//   public void test5() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test5"); }
// 
// 
//     com.google.javascript.jscomp.SourceExcerptProvider var0 = null;
//     com.google.javascript.jscomp.LightweightMessageFormatter var1 = new com.google.javascript.jscomp.LightweightMessageFormatter(var0);
// 
//   }

  public void test6() {}
//   public void test6() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test6"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var0 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("", var5, "hi!");
//     java.lang.String[] var9 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var10 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var7, var9);
//     com.google.javascript.jscomp.JSError var11 = com.google.javascript.jscomp.JSError.make(var0, var9);
// 
//   }

  public void test7() {}
//   public void test7() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test7"); }
// 
// 
//     com.google.javascript.jscomp.SourceExcerptProvider var0 = null;
//     com.google.javascript.jscomp.SourceExcerptProvider.SourceExcerpt var1 = null;
//     com.google.javascript.jscomp.LightweightMessageFormatter var2 = new com.google.javascript.jscomp.LightweightMessageFormatter(var0, var1);
// 
//   }

  public void test8() {}
//   public void test8() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test8"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!");
//     java.lang.String[] var8 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var6, var8);
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.MessageFormatter var11 = null;
//     java.lang.String var12 = var9.format(var10, var11);
// 
//   }

  public void test9() {}
//   public void test9() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test9"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     java.lang.String[] var13 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
//     com.google.javascript.jscomp.DiagnosticType var16 = var15.getType();
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.MessageFormatter var18 = null;
//     java.lang.String var19 = var15.format(var17, var18);
// 
//   }

  public void test10() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test10"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!. hi! at hi! line (unknown line) : (unknown column)");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test11() {}
//   public void test11() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test11"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at hi! line (unknown line) : (unknown column)");
// 
//   }

  public void test12() {}
//   public void test12() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test12"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!");
// 
//   }

  public void test13() {}
//   public void test13() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test13"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
//     java.lang.String[] var18 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var16, var18);
//     com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var18);
//     com.google.javascript.rhino.Node var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.make("", var30, "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var32, var34);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var22, var25, var34);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var4, var9, var34);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var47 = null;
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.make("", var47, "hi!");
//     java.lang.String[] var51 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var49, var51);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var51);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make(var9, var51);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var1, var2, var51);
// 
//   }

  public void test14() {}
//   public void test14() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test14"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     java.lang.String[] var13 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
//     int var16 = var15.getCharno();
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.MessageFormatter var18 = null;
//     java.lang.String var19 = var15.format(var17, var18);
// 
//   }

  public void test15() {}
//   public void test15() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test15"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var13 = var9.compareTo(var12);
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.rhino.Node var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
//     java.lang.String[] var29 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var27, var29);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", var17, var20, var29);
//     com.google.javascript.rhino.Node var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.make("", var41, "hi!");
//     java.lang.String[] var45 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var43, var45);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!", var33, var36, var45);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var15, var20, var45);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("", 100, 1, var6, var12, var45);
//     com.google.javascript.jscomp.CheckLevel var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var60 = var56.compareTo(var59);
//     com.google.javascript.rhino.Node var62 = null;
//     com.google.javascript.rhino.Node var64 = null;
//     com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var72 = null;
//     com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.make("", var72, "hi!");
//     java.lang.String[] var76 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var74, var76);
//     com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("hi!", var64, var67, var76);
//     com.google.javascript.rhino.Node var80 = null;
//     com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var88 = null;
//     com.google.javascript.jscomp.DiagnosticType var90 = com.google.javascript.jscomp.DiagnosticType.make("", var88, "hi!");
//     java.lang.String[] var92 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var90, var92);
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!", var80, var83, var92);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var62, var67, var92);
//     com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("", 100, 1, var53, var59, var92);
//     com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!", var1, var2, var12, var92);
// 
//   }

  public void test16() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test16"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test17() {}
//   public void test17() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test17"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
// 
//   }

  public void test18() {}
//   public void test18() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test18"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var9 = var5.compareTo(var8);
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var16 = var12.compareTo(var15);
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var23 = var19.compareTo(var22);
//     int var24 = var12.compareTo(var19);
//     boolean var25 = var5.equals((java.lang.Object)var19);
//     com.google.javascript.jscomp.CheckLevel var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.make("", var30, "");
//     com.google.javascript.rhino.Node var34 = null;
//     com.google.javascript.rhino.Node var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.make("", var44, "hi!");
//     java.lang.String[] var48 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var46, var48);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", var36, var39, var48);
//     com.google.javascript.rhino.Node var52 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var60 = null;
//     com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.make("", var60, "hi!");
//     java.lang.String[] var64 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var62, var64);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!", var52, var55, var64);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var34, var39, var64);
//     com.google.javascript.rhino.Node var69 = null;
//     com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var77 = null;
//     com.google.javascript.jscomp.DiagnosticType var79 = com.google.javascript.jscomp.DiagnosticType.make("", var77, "hi!");
//     java.lang.String[] var81 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var79, var81);
//     com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!", var69, var72, var81);
//     com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make(var39, var81);
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("", (-3), (-1), var32, var81);
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make(": hi!", var1, var2, var5, var81);
// 
//   }

  public void test19() {}
//   public void test19() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test19"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
//     java.lang.String[] var18 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var16, var18);
//     com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var18);
//     com.google.javascript.rhino.Node var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.make("", var30, "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var32, var34);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var22, var25, var34);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var4, var9, var34);
//     com.google.javascript.jscomp.CheckLevel var42 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.make("", var42, "hi!");
//     java.lang.String[] var46 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var44, var46);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, var2, var9, var46);
// 
//   }

  public void test20() {}
//   public void test20() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test20"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var20 = var16.compareTo(var19);
//     com.google.javascript.rhino.Node var22 = null;
//     com.google.javascript.rhino.Node var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.make("", var32, "hi!");
//     java.lang.String[] var36 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var34, var36);
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", var24, var27, var36);
//     com.google.javascript.rhino.Node var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var48 = null;
//     com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("", var48, "hi!");
//     java.lang.String[] var52 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var50, var52);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", var40, var43, var52);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var22, var27, var52);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("", 100, 1, var13, var19, var52);
//     com.google.javascript.rhino.Node var58 = null;
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var66 = null;
//     com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.make("", var66, "hi!");
//     java.lang.String[] var70 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var68, var70);
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("", var58, var61, var70);
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("", 1, 10, var9, var19, var70);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make(": hi!", var1, var2, var5, var70);
// 
//   }

  public void test21() {}
//   public void test21() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test21"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     java.lang.String[] var13 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
//     com.google.javascript.jscomp.DiagnosticType var16 = var15.getType();
//     int var17 = var15.getCharno();
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.MessageFormatter var19 = null;
//     java.lang.String var20 = var15.format(var18, var19);
// 
//   }

  public void test22() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test22"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test23() {}
//   public void test23() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test23"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     java.lang.String[] var13 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
//     int var16 = var15.getCharno();
//     java.lang.String var17 = var15.toString();
//     com.google.javascript.jscomp.DiagnosticType var18 = var15.getType();
//     com.google.javascript.jscomp.DiagnosticType var19 = var15.getType();
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.MessageFormatter var21 = null;
//     java.lang.String var22 = var15.format(var20, var21);
// 
//   }

  public void test24() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test24"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!.  at hi!: hi! line (unknown line) : 10", var1, ": hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test25() {}
//   public void test25() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test25"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.rhino.Node var5 = null;
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("", var15, "hi!");
//     java.lang.String[] var19 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var17, var19);
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var7, var10, var19);
//     com.google.javascript.rhino.Node var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.make("", var31, "hi!");
//     java.lang.String[] var35 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var33, var35);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", var23, var26, var35);
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var5, var10, var35);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var1, var2, var3, var35);
// 
//   }

  public void test26() {}
//   public void test26() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test26"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!");
//     java.lang.String[] var8 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var6, var8);
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var21, var23);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var11, var14, var23);
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make(var6, var23);
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.MessageFormatter var28 = null;
//     java.lang.String var29 = var26.format(var27, var28);
// 
//   }

  public void test27() {}
//   public void test27() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test27"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var4, "");
//     java.lang.String[] var7 = null;
//     com.google.javascript.jscomp.JSError var8 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var1, var2, var6, var7);
// 
//   }

  public void test28() {}
//   public void test28() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test28"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!");
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var22 = var18.compareTo(var21);
//     com.google.javascript.rhino.Node var24 = null;
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     java.lang.String[] var38 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var38);
//     com.google.javascript.rhino.Node var42 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.make("", var50, "hi!");
//     java.lang.String[] var54 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var52, var54);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", var42, var45, var54);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var24, var29, var54);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("", 100, 1, var15, var21, var54);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("", 0, (-1), var8, var11, var54);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", (-3), (-8), var3, var4, var54);
// 
//   }

  public void test29() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test29"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
    java.lang.String[] var13 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
    java.lang.String var16 = var4.toString();
    java.lang.String var17 = var4.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!: hi!"+ "'", var16.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "hi!: hi!"+ "'", var17.equals("hi!: hi!"));

  }

  public void test30() {}
//   public void test30() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test30"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ": hi!");
// 
//   }

  public void test31() {}
//   public void test31() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test31"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var9 = var5.compareTo(var8);
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var16 = var12.compareTo(var15);
//     int var17 = var5.compareTo(var12);
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", ": hi!");
//     int var21 = var12.compareTo(var20);
//     com.google.javascript.rhino.Node var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.make("", var31, "hi!");
//     java.lang.String[] var35 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var33, var35);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", var23, var26, var35);
//     com.google.javascript.jscomp.DiagnosticType var38 = var37.getType();
//     com.google.javascript.rhino.Node var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var48 = null;
//     com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("", var48, "hi!");
//     java.lang.String[] var52 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var50, var52);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", var40, var43, var52);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make(var38, var52);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", var1, var2, var20, var52);
// 
//   }

  public void test32() {}
//   public void test32() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test32"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
// 
//   }

  public void test33() {}
//   public void test33() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test33"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", "hi!: hi!: ");
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.make("", var16, "hi!");
//     com.google.javascript.rhino.Node var20 = null;
//     com.google.javascript.rhino.Node var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.make("", var30, "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var32, var34);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var22, var25, var34);
//     com.google.javascript.rhino.Node var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var46 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.make("", var46, "hi!");
//     java.lang.String[] var50 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var48, var50);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", var38, var41, var50);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var20, var25, var50);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var14, var18, var50);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("", var7, var10, var50);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10", var1, var2, var5, var50);
// 
//   }

  public void test34() {}
//   public void test34() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test34"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.rhino.Node var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
//     java.lang.String[] var22 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var20, var22);
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var22);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var5, var8, var22);
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make(": hi!", var1, var2, var3, var22);
// 
//   }

  public void test35() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test35"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
    com.google.javascript.rhino.Node var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var14 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
    java.lang.String[] var18 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var16, var18);
    com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("", var6, var9, var18);
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, var4, var18);
    com.google.javascript.rhino.Node var23 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", "hi!");
    com.google.javascript.rhino.Node var28 = null;
    com.google.javascript.rhino.Node var30 = null;
    com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var38 = null;
    com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.make("", var38, "hi!");
    java.lang.String[] var42 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var40, var42);
    com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", var30, var33, var42);
    com.google.javascript.rhino.Node var46 = null;
    com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var54 = null;
    com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.make("", var54, "hi!");
    java.lang.String[] var58 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var56, var58);
    com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", var46, var49, var58);
    com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var28, var33, var58);
    com.google.javascript.rhino.Node var63 = null;
    com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var71 = null;
    com.google.javascript.jscomp.DiagnosticType var73 = com.google.javascript.jscomp.DiagnosticType.make("", var71, "hi!");
    java.lang.String[] var75 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var73, var75);
    com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!", var63, var66, var75);
    com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make(var33, var75);
    com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make(": hi!", var23, var26, var75);
    boolean var80 = var4.equals((java.lang.Object)var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);

  }

  public void test36() {}
//   public void test36() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test36"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
//     java.lang.String[] var18 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var16, var18);
//     com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("", var6, var9, var18);
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, var4, var18);
//     com.google.javascript.rhino.Node var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var30 = null;
//     com.google.javascript.jscomp.CheckLevel var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.make("", var32, "hi!");
//     com.google.javascript.rhino.Node var36 = null;
//     com.google.javascript.rhino.Node var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var46 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.make("", var46, "hi!");
//     java.lang.String[] var50 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var48, var50);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", var38, var41, var50);
//     com.google.javascript.rhino.Node var54 = null;
//     com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var62 = null;
//     com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.make("", var62, "hi!");
//     java.lang.String[] var66 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var64, var66);
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!", var54, var57, var66);
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var36, var41, var66);
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var30, var34, var66);
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("", var23, var26, var66);
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make(var4, var66);
//     com.google.javascript.jscomp.CheckLevel var73 = null;
//     com.google.javascript.jscomp.MessageFormatter var74 = null;
//     java.lang.String var75 = var72.format(var73, var74);
// 
//   }

  public void test37() {}
//   public void test37() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test37"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
//     java.lang.String[] var18 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var16, var18);
//     com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var18);
//     com.google.javascript.rhino.Node var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.make("", var30, "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var32, var34);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var22, var25, var34);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var4, var9, var34);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var47 = null;
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.make("", var47, "hi!");
//     java.lang.String[] var51 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var49, var51);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var51);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make(var9, var51);
//     com.google.javascript.jscomp.CheckLevel var58 = null;
//     com.google.javascript.rhino.Node var60 = null;
//     com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var68 = null;
//     com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.make("", var68, "hi!");
//     java.lang.String[] var72 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var70, var72);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("", var60, var63, var72);
//     com.google.javascript.jscomp.DiagnosticType var77 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     int var78 = var63.compareTo(var77);
//     com.google.javascript.rhino.Node var80 = null;
//     com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var88 = null;
//     com.google.javascript.jscomp.DiagnosticType var90 = com.google.javascript.jscomp.DiagnosticType.make("", var88, "hi!");
//     java.lang.String[] var92 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var90, var92);
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("", var80, var83, var92);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", 1, 46, var58, var77, var92);
//     com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var1, var2, var9, var92);
// 
//   }

  public void test38() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test38"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
    java.lang.String[] var13 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
    com.google.javascript.jscomp.DiagnosticType var16 = var15.getType();
    int var17 = var15.getCharno();
    boolean var19 = var15.equals((java.lang.Object)(short)1);
    java.lang.String var20 = var15.toString();
    com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
    boolean var24 = var15.equals((java.lang.Object)var23);
    com.google.javascript.jscomp.DiagnosticType var25 = var15.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "hi!. hi! at hi! line (unknown line) : (unknown column)"+ "'", var20.equals("hi!. hi! at hi! line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);

  }

  public void test39() {}
//   public void test39() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test39"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     com.google.javascript.rhino.Node var14 = null;
//     com.google.javascript.rhino.Node var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
//     java.lang.String[] var28 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var26, var28);
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", var16, var19, var28);
//     com.google.javascript.rhino.Node var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("", var40, "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var44);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var14, var19, var44);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var8, var12, var44);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", 46, 46, var3, var4, var44);
// 
//   }

  public void test40() {}
//   public void test40() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test40"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.rhino.Node var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("", var13, "hi!");
//     java.lang.String[] var17 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var15, var17);
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", var5, var8, var17);
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var23 = var8.compareTo(var22);
//     java.lang.String[] var25 = new java.lang.String[] { "hi!: hi!: "};
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 46, (-3), var3, var22, var25);
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.MessageFormatter var28 = null;
//     java.lang.String var29 = var26.format(var27, var28);
// 
//   }

  public void test41() {}
//   public void test41() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test41"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     java.lang.String[] var13 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
//     com.google.javascript.jscomp.DiagnosticType var16 = var15.getType();
//     int var17 = var15.getCharno();
//     boolean var19 = var15.equals((java.lang.Object)(short)1);
//     com.google.javascript.jscomp.DiagnosticType var20 = var15.getType();
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.MessageFormatter var22 = null;
//     java.lang.String var23 = var15.format(var21, var22);
// 
//   }

  public void test42() {}
//   public void test42() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test42"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!: ");
// 
//   }

  public void test43() {}
//   public void test43() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test43"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("", var23, "hi!");
//     java.lang.String[] var27 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var25, var27);
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var27);
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var33 = var18.compareTo(var32);
//     java.lang.String[] var35 = new java.lang.String[] { "hi!: hi!: "};
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 46, (-3), var13, var32, var35);
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.make("", var41, "hi!");
//     com.google.javascript.rhino.Node var45 = null;
//     com.google.javascript.rhino.Node var47 = null;
//     com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var55 = null;
//     com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.make("", var55, "hi!");
//     java.lang.String[] var59 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var57, var59);
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!", var47, var50, var59);
//     com.google.javascript.rhino.Node var63 = null;
//     com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var71 = null;
//     com.google.javascript.jscomp.DiagnosticType var73 = com.google.javascript.jscomp.DiagnosticType.make("", var71, "hi!");
//     java.lang.String[] var75 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var73, var75);
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!", var63, var66, var75);
//     com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var45, var50, var75);
//     com.google.javascript.rhino.Node var80 = null;
//     com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var88 = null;
//     com.google.javascript.jscomp.DiagnosticType var90 = com.google.javascript.jscomp.DiagnosticType.make("", var88, "hi!");
//     java.lang.String[] var92 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var90, var92);
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!", var80, var83, var92);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make(var50, var92);
//     com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("", 0, 0, var43, var92);
//     com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 3, 0, var9, var32, var92);
//     com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, var2, var5, var92);
// 
//   }

  public void test44() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test44"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: ");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test45() {}
//   public void test45() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test45"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!. hi! at hi! line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var23 = var19.compareTo(var22);
//     com.google.javascript.rhino.Node var25 = null;
//     com.google.javascript.rhino.Node var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.make("", var35, "hi!");
//     java.lang.String[] var39 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var37, var39);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", var27, var30, var39);
//     com.google.javascript.rhino.Node var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
//     java.lang.String[] var55 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var53, var55);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var55);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var25, var30, var55);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("", 100, 1, var16, var22, var55);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make(": hi!", 0, 10, var9, var12, var55);
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make(": ", var1, var2, var5, var55);
// 
//   }

  public void test46() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test46"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
    java.lang.String[] var14 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var12, var14);
    com.google.javascript.rhino.Node var17 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var25 = null;
    com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
    java.lang.String[] var29 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var27, var29);
    com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", var17, var20, var29);
    com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make(var12, var29);
    com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", (-1), (-3), var5, var29);
    java.lang.String var34 = var5.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "hi!: hi!: hi!"+ "'", var34.equals("hi!: hi!: hi!"));

  }

  public void test47() {}
//   public void test47() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test47"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!");
//     java.lang.String[] var8 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var6, var8);
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var21, var23);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var11, var14, var23);
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make(var6, var23);
//     int var27 = var26.getCharno();
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.MessageFormatter var29 = null;
//     java.lang.String var30 = var26.format(var28, var29);
// 
//   }

  public void test48() {}
//   public void test48() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test48"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var9 = var5.compareTo(var8);
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var16 = var12.compareTo(var15);
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var23 = var19.compareTo(var22);
//     int var24 = var12.compareTo(var19);
//     boolean var25 = var5.equals((java.lang.Object)var19);
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.CheckLevel var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var31, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.make("", var38, "hi!");
//     java.lang.String[] var42 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var40, var42);
//     com.google.javascript.rhino.Node var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.make("", var53, "hi!");
//     java.lang.String[] var57 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var55, var57);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", var45, var48, var57);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make(var40, var57);
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("", 0, 1, var29, var33, var57);
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", var1, var2, var19, var57);
// 
//   }

  public void test49() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test49"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
    com.google.javascript.rhino.Node var7 = null;
    com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("", var15, "hi!");
    java.lang.String[] var19 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var17, var19);
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("", var7, var10, var19);
    com.google.javascript.rhino.Node var23 = null;
    com.google.javascript.rhino.Node var25 = null;
    com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var33 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
    java.lang.String[] var37 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var35, var37);
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", var25, var28, var37);
    com.google.javascript.rhino.Node var41 = null;
    com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var49 = null;
    com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.make("", var49, "hi!");
    java.lang.String[] var53 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var51, var53);
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", var41, var44, var53);
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var23, var28, var53);
    com.google.javascript.rhino.Node var58 = null;
    com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var66 = null;
    com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.make("", var66, "hi!");
    java.lang.String[] var70 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var68, var70);
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!", var58, var61, var70);
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make(var28, var70);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var10, var70);
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make(var2, var70);
    com.google.javascript.jscomp.CheckLevel var77 = null;
    com.google.javascript.jscomp.DiagnosticType var79 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var77, ": hi!");
    int var80 = var2.compareTo(var79);
    java.lang.String var81 = var79.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "hi!. hi! at hi! line (unknown line) : (unknown column): : hi!"+ "'", var81.equals("hi!. hi! at hi! line (unknown line) : (unknown column): : hi!"));

  }

  public void test50() {}
//   public void test50() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test50"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var17, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
//     java.lang.String[] var28 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var26, var28);
//     com.google.javascript.rhino.Node var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.make("", var39, "hi!");
//     java.lang.String[] var43 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var41, var43);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var31, var34, var43);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make(var26, var43);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("", 0, 1, var15, var19, var43);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var8, var11, var43);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 54, 54, var3, var4, var43);
// 
//   }

  public void test51() {}
//   public void test51() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test51"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     int var4 = var2.compareTo(var3);
// 
//   }

  public void test52() {}
//   public void test52() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test52"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     java.lang.String[] var14 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var12, var14);
//     com.google.javascript.rhino.Node var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
//     java.lang.String[] var29 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var27, var29);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", var17, var20, var29);
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make(var12, var29);
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", (-1), (-3), var5, var29);
//     java.lang.String var34 = var33.toString();
//     java.lang.String var35 = var33.toString();
//     int var36 = var33.getCharno();
//     com.google.javascript.jscomp.DiagnosticType var37 = var33.getType();
//     com.google.javascript.jscomp.CheckLevel var38 = null;
//     com.google.javascript.jscomp.MessageFormatter var39 = null;
//     java.lang.String var40 = var33.format(var38, var39);
// 
//   }

  public void test53() {}
//   public void test53() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test53"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at hi! line (unknown line) : (unknown column): : hi!");
// 
//   }

  public void test54() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test54"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test55() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test55"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var9 = var5.compareTo(var8);
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var16 = var12.compareTo(var15);
    int var17 = var5.compareTo(var12);
    java.lang.String[] var18 = null;
    com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 10, 1, var5, var18);
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    boolean var23 = var5.equals((java.lang.Object)"");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);

  }

  public void test56() {}
//   public void test56() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test56"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     int var4 = var2.compareTo(var3);
// 
//   }

  public void test57() {}
//   public void test57() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test57"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.make("", var7, "hi!");
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.rhino.Node var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.make("", var21, "hi!");
//     java.lang.String[] var25 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var23, var25);
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", var13, var16, var25);
//     com.google.javascript.rhino.Node var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.make("", var37, "hi!");
//     java.lang.String[] var41 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var39, var41);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var41);
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var11, var16, var41);
//     com.google.javascript.rhino.Node var46 = null;
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var54 = null;
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.make("", var54, "hi!");
//     java.lang.String[] var58 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var56, var58);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", var46, var49, var58);
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make(var16, var58);
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("", 0, 0, var9, var58);
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, var2, var58);
// 
//   }

  public void test58() {}
//   public void test58() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test58"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!");
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("", var15, "hi!");
//     com.google.javascript.rhino.Node var19 = null;
//     com.google.javascript.rhino.Node var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("", var29, "hi!");
//     java.lang.String[] var33 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var31, var33);
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", var21, var24, var33);
//     com.google.javascript.rhino.Node var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.make("", var45, "hi!");
//     java.lang.String[] var49 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var47, var49);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", var37, var40, var49);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var19, var24, var49);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var13, var17, var49);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make(var9, var49);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var1, var2, var6, var49);
// 
//   }

  public void test59() {}
//   public void test59() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test59"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("", var8, "hi!");
//     com.google.javascript.rhino.Node var12 = null;
//     com.google.javascript.rhino.Node var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("", var22, "hi!");
//     java.lang.String[] var26 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var24, var26);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var14, var17, var26);
//     com.google.javascript.rhino.Node var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.make("", var38, "hi!");
//     java.lang.String[] var42 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var40, var42);
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", var30, var33, var42);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var12, var17, var42);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var6, var10, var42);
//     com.google.javascript.jscomp.CheckLevel var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var57 = null;
//     com.google.javascript.jscomp.CheckLevel var59 = null;
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var59, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var66 = null;
//     com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.make("", var66, "hi!");
//     java.lang.String[] var70 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var68, var70);
//     com.google.javascript.rhino.Node var73 = null;
//     com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var81 = null;
//     com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.make("", var81, "hi!");
//     java.lang.String[] var85 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var83, var85);
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!", var73, var76, var85);
//     com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make(var68, var85);
//     com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make("", 0, 1, var57, var61, var85);
//     com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var50, var53, var85);
//     com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", var1, var2, var10, var85);
// 
//   }

  public void test60() {}
//   public void test60() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test60"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.rhino.Node var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.make("", var11, "hi!");
//     java.lang.String[] var15 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var16 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var13, var15);
//     com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!", var3, var6, var15);
//     com.google.javascript.rhino.Node var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.make("", var27, "hi!");
//     java.lang.String[] var31 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var29, var31);
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", var19, var22, var31);
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var1, var6, var31);
//     com.google.javascript.rhino.Node var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.make("", var44, "hi!");
//     java.lang.String[] var48 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var46, var48);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", var36, var39, var48);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make(var6, var48);
//     boolean var53 = var51.equals((java.lang.Object)0L);
//     com.google.javascript.jscomp.CheckLevel var54 = null;
//     com.google.javascript.jscomp.MessageFormatter var55 = null;
//     java.lang.String var56 = var51.format(var54, var55);
// 
//   }

  public void test61() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test61"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(": ");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test62() {}
//   public void test62() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test62"); }
// 
// 
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("", var12, "hi!");
//     java.lang.String[] var16 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var14, var16);
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("", var4, var7, var16);
//     com.google.javascript.rhino.Node var20 = null;
//     com.google.javascript.rhino.Node var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.make("", var30, "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var32, var34);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var22, var25, var34);
//     com.google.javascript.rhino.Node var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var46 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.make("", var46, "hi!");
//     java.lang.String[] var50 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var48, var50);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", var38, var41, var50);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var20, var25, var50);
//     com.google.javascript.rhino.Node var55 = null;
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var63 = null;
//     com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.make("", var63, "hi!");
//     java.lang.String[] var67 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var65, var67);
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!", var55, var58, var67);
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make(var25, var67);
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var7, var67);
//     java.lang.String var72 = var71.toString();
//     int var73 = var71.getCharno();
//     com.google.javascript.jscomp.CheckLevel var74 = null;
//     com.google.javascript.jscomp.MessageFormatter var75 = null;
//     java.lang.String var76 = var71.format(var74, var75);
// 
//   }

  public void test63() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test63"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at hi! line (unknown line) : (unknown column): : hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test64() {}
//   public void test64() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test64"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("", var12, "hi!");
//     java.lang.String[] var16 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var14, var16);
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!", var4, var7, var16);
//     com.google.javascript.jscomp.DiagnosticType var19 = var18.getType();
//     int var20 = var18.getCharno();
//     boolean var22 = var18.equals((java.lang.Object)(short)1);
//     java.lang.String var23 = var18.toString();
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
//     boolean var27 = var18.equals((java.lang.Object)var26);
//     java.lang.String var28 = var26.toString();
//     com.google.javascript.rhino.Node var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.make("", var38, "hi!");
//     java.lang.String[] var42 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var40, var42);
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", var30, var33, var42);
//     com.google.javascript.jscomp.DiagnosticType var45 = var44.getType();
//     com.google.javascript.rhino.Node var47 = null;
//     com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var55 = null;
//     com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.make("", var55, "hi!");
//     java.lang.String[] var59 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var57, var59);
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!", var47, var50, var59);
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make(var45, var59);
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var1, var2, var26, var59);
// 
//   }

  public void test65() {}
//   public void test65() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test65"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at hi! line (unknown line) : (unknown column)", "");
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
//     java.lang.String[] var21 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var19, var21);
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make(": ", 100, 100, var9, var12, var21);
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10", var1, var2, var5, var21);
// 
//   }

  public void test66() {}
//   public void test66() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test66"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!");
//     java.lang.String[] var8 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var6, var8);
//     boolean var11 = var9.equals((java.lang.Object)": ");
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.MessageFormatter var13 = null;
//     java.lang.String var14 = var9.format(var12, var13);
// 
//   }

  public void test67() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test67"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("", var1, ": hi!");
    com.google.javascript.rhino.Node var5 = null;
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("", var13, "hi!");
    java.lang.String[] var17 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var15, var17);
    com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", var5, var8, var17);
    boolean var20 = var3.equals((java.lang.Object)var8);
    com.google.javascript.jscomp.CheckLevel var22 = null;
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make(": hi!", var22, ": hi!");
    boolean var26 = var24.equals((java.lang.Object)1.0f);
    boolean var27 = var8.equals((java.lang.Object)1.0f);
    com.google.javascript.jscomp.CheckLevel var31 = null;
    com.google.javascript.jscomp.CheckLevel var33 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
    com.google.javascript.rhino.Node var37 = null;
    com.google.javascript.rhino.Node var39 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var47 = null;
    com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.make("", var47, "hi!");
    java.lang.String[] var51 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var49, var51);
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var51);
    com.google.javascript.rhino.Node var55 = null;
    com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var63 = null;
    com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.make("", var63, "hi!");
    java.lang.String[] var67 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var65, var67);
    com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!", var55, var58, var67);
    com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var37, var42, var67);
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var31, var35, var67);
    int var72 = var8.compareTo(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 3);

  }

  public void test68() {}
//   public void test68() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test68"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var14 = var10.compareTo(var13);
//     com.google.javascript.rhino.Node var16 = null;
//     com.google.javascript.rhino.Node var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.make("", var26, "hi!");
//     java.lang.String[] var30 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var28, var30);
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", var18, var21, var30);
//     com.google.javascript.rhino.Node var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var42 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.make("", var42, "hi!");
//     java.lang.String[] var46 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var44, var46);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", var34, var37, var46);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var16, var21, var46);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("", 100, 1, var7, var13, var46);
//     com.google.javascript.rhino.Node var52 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var60 = null;
//     com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.make("", var60, "hi!");
//     java.lang.String[] var64 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var62, var64);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("", var52, var55, var64);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("", 1, 10, var3, var13, var64);
//     java.lang.String var68 = var67.toString();
//     com.google.javascript.jscomp.CheckLevel var69 = null;
//     com.google.javascript.jscomp.MessageFormatter var70 = null;
//     java.lang.String var71 = var67.format(var69, var70);
// 
//   }

  public void test69() {}
//   public void test69() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test69"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!");
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
//     java.lang.String[] var22 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var20, var22);
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var22);
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     java.lang.String[] var38 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var38);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var8, var13, var38);
//     com.google.javascript.rhino.Node var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
//     java.lang.String[] var55 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var53, var55);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var55);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make(var13, var55);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("", 0, 0, var6, var55);
//     boolean var61 = var59.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.DiagnosticType var62 = var59.getType();
//     com.google.javascript.jscomp.DiagnosticType var63 = null;
//     int var64 = var62.compareTo(var63);
// 
//   }

  public void test70() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test70"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test71() {}
//   public void test71() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test71"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
//     java.lang.String[] var18 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var16, var18);
//     com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-8), (-64), var6, var9, var18);
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make(var2, var18);
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.MessageFormatter var23 = null;
//     java.lang.String var24 = var21.format(var22, var23);
// 
//   }

  public void test72() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test72"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!. hi! at hi! line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var16 = null;
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var18, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var25 = null;
    com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
    java.lang.String[] var29 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var27, var29);
    com.google.javascript.rhino.Node var32 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var40 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("", var40, "hi!");
    java.lang.String[] var44 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var42, var44);
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var44);
    com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make(var27, var44);
    com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("", 0, 1, var16, var20, var44);
    com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var9, var12, var44);
    com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make(": ", 100, (-1), var5, var44);
    com.google.javascript.jscomp.CheckLevel var54 = null;
    com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var62 = null;
    com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.make("", var62, "hi!");
    java.lang.String[] var66 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var64, var66);
    com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-8), (-64), var54, var57, var66);
    boolean var69 = var50.equals((java.lang.Object)"hi!.  at hi!: hi! line (unknown line) : 10");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == false);

  }

  public void test73() {}
//   public void test73() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test73"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var0 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.disabled("", "");
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var21, var23);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var11, var14, var23);
//     com.google.javascript.rhino.Node var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.make("", var35, "hi!");
//     java.lang.String[] var39 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var37, var39);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", var27, var30, var39);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var9, var14, var39);
//     com.google.javascript.rhino.Node var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var52 = null;
//     com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.make("", var52, "hi!");
//     java.lang.String[] var56 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var54, var56);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!", var44, var47, var56);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make(var14, var56);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("", 0, 100, var4, var7, var56);
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make(var0, var56);
// 
//   }

  public void test74() {}
//   public void test74() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test74"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var9 = var5.compareTo(var8);
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("", var23, "hi!");
//     java.lang.String[] var27 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var25, var27);
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var27);
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var33 = var18.compareTo(var32);
//     java.lang.String[] var35 = new java.lang.String[] { "hi!: hi!: "};
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 46, (-3), var13, var32, var35);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var1, var2, var8, var35);
// 
//   }

  public void test75() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test75"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
    java.lang.String[] var13 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("", var1, var4, var13);
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    int var19 = var4.compareTo(var18);
    com.google.javascript.jscomp.CheckLevel var26 = null;
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.CheckLevel var33 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var40 = var36.compareTo(var39);
    com.google.javascript.rhino.Node var42 = null;
    com.google.javascript.rhino.Node var44 = null;
    com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var52 = null;
    com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.make("", var52, "hi!");
    java.lang.String[] var56 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var54, var56);
    com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!", var44, var47, var56);
    com.google.javascript.rhino.Node var60 = null;
    com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var68 = null;
    com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.make("", var68, "hi!");
    java.lang.String[] var72 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var70, var72);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!", var60, var63, var72);
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var42, var47, var72);
    com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("", 100, 1, var33, var39, var72);
    com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make(": hi!", 0, 10, var26, var29, var72);
    java.lang.String[] var78 = null;
    com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", (-3), 0, var29, var78);
    com.google.javascript.jscomp.DiagnosticType var82 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var85 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var86 = var82.compareTo(var85);
    com.google.javascript.jscomp.DiagnosticType var89 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var92 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var93 = var89.compareTo(var92);
    int var94 = var82.compareTo(var89);
    int var95 = var29.compareTo(var89);
    boolean var96 = var4.equals((java.lang.Object)var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == false);

  }

  public void test76() {}
//   public void test76() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test76"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var9 = var5.compareTo(var8);
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var16 = var12.compareTo(var15);
//     int var17 = var5.compareTo(var12);
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("", var23, "");
//     com.google.javascript.jscomp.CheckLevel var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.make("", var30, "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var32, var34);
//     com.google.javascript.rhino.Node var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.make("", var45, "hi!");
//     java.lang.String[] var49 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var47, var49);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", var37, var40, var49);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make(var32, var49);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make(": ", 0, (-64), var21, var25, var49);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column): : hi!", var1, var2, var12, var49);
// 
//   }

  public void test77() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test77"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
    java.lang.String[] var13 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
    com.google.javascript.jscomp.DiagnosticType var16 = var15.getType();
    com.google.javascript.rhino.Node var18 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var26 = null;
    com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.make("", var26, "hi!");
    java.lang.String[] var30 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var28, var30);
    com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", var18, var21, var30);
    com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make(var16, var30);
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ".  at (unknown source) line 1 : 10");
    int var37 = var16.compareTo(var36);
    java.lang.String var38 = var16.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == (-39));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "hi!: hi!"+ "'", var38.equals("hi!: hi!"));

  }

  public void test78() {}
//   public void test78() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test78"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     java.lang.String[] var5 = new java.lang.String[] { ".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3"};
//     com.google.javascript.jscomp.JSError var6 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", 0, 0, var3, var5);
// 
//   }

  public void test79() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test79"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(": hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test80() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test80"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!.  at hi!: hi! line (unknown line) : 10");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test81() {}
//   public void test81() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test81"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var0 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.warning("hi!.  at hi!: hi! line (unknown line) : 10", "hi!. hi! at hi! line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.make("", var16, "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", var8, var11, var20);
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 2, var6, var20);
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make(var0, var20);
// 
//   }

  public void test82() {}
//   public void test82() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test82"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("", ": ");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("", var13, "hi!");
//     com.google.javascript.rhino.Node var17 = null;
//     com.google.javascript.rhino.Node var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.make("", var27, "hi!");
//     java.lang.String[] var31 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var29, var31);
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", var19, var22, var31);
//     com.google.javascript.rhino.Node var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.make("", var43, "hi!");
//     java.lang.String[] var47 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var45, var47);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", var35, var38, var47);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var17, var22, var47);
//     com.google.javascript.rhino.Node var52 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var60 = null;
//     com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.make("", var60, "hi!");
//     java.lang.String[] var64 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var62, var64);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!", var52, var55, var64);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make(var22, var64);
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("", 0, 0, var15, var64);
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("", (-64), (-8), var8, var64);
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make(var2, var64);
//     com.google.javascript.jscomp.CheckLevel var71 = null;
//     com.google.javascript.jscomp.MessageFormatter var72 = null;
//     java.lang.String var73 = var70.format(var71, var72);
// 
//   }

  public void test83() {}
//   public void test83() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test83"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("", var12, "hi!");
//     java.lang.String[] var16 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var14, var16);
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("", var4, var7, var16);
//     java.lang.String var19 = var7.toString();
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.warning("hi!.  at hi!: hi! line (unknown line) : 10", "hi!. hi! at hi! line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.make("", var35, "hi!");
//     java.lang.String[] var39 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var37, var39);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", var27, var30, var39);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 2, var25, var39);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var1, var2, var7, var39);
// 
//   }

  public void test84() {}
//   public void test84() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test84"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     java.lang.String[] var4 = null;
//     com.google.javascript.jscomp.JSError var5 = com.google.javascript.jscomp.JSError.make("hi!: ", 0, 1, var3, var4);
// 
//   }

  public void test85() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test85"); }


    com.google.javascript.jscomp.CheckLevel var4 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!");
    com.google.javascript.rhino.Node var8 = null;
    com.google.javascript.rhino.Node var10 = null;
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
    java.lang.String[] var22 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var20, var22);
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var22);
    com.google.javascript.rhino.Node var26 = null;
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var34 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
    java.lang.String[] var38 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var38);
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var8, var13, var38);
    com.google.javascript.rhino.Node var43 = null;
    com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var51 = null;
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
    java.lang.String[] var55 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var53, var55);
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var55);
    com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make(var13, var55);
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("", 0, 0, var6, var55);
    boolean var61 = var59.equals((java.lang.Object)10);
    com.google.javascript.jscomp.DiagnosticType var62 = var59.getType();
    com.google.javascript.jscomp.CheckLevel var64 = null;
    com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.make("", var64, ": hi!");
    boolean var67 = var59.equals((java.lang.Object)": hi!");
    int var68 = var59.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 0);

  }

  public void test86() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test86"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test87() {}
//   public void test87() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test87"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     java.lang.String[] var14 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var12, var14);
//     com.google.javascript.rhino.Node var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
//     java.lang.String[] var29 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var27, var29);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", var17, var20, var29);
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make(var12, var29);
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", (-1), (-3), var5, var29);
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.MessageFormatter var35 = null;
//     java.lang.String var36 = var33.format(var34, var35);
// 
//   }

  public void test88() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test88"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(": hi!. hi! at hi! line (unknown line) : (unknown column)");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test89() {}
//   public void test89() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test89"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var10 = var6.compareTo(var9);
//     com.google.javascript.rhino.Node var12 = null;
//     com.google.javascript.rhino.Node var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("", var22, "hi!");
//     java.lang.String[] var26 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var24, var26);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var14, var17, var26);
//     com.google.javascript.rhino.Node var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.make("", var38, "hi!");
//     java.lang.String[] var42 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var40, var42);
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", var30, var33, var42);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var12, var17, var42);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("", 100, 1, var3, var9, var42);
//     com.google.javascript.jscomp.CheckLevel var47 = null;
//     com.google.javascript.jscomp.MessageFormatter var48 = null;
//     java.lang.String var49 = var46.format(var47, var48);
// 
//   }

  public void test90() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test90"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!. hi! at hi! line (unknown line) : (unknown column): : hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test91() {}
//   public void test91() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test91"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var4, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
//     com.google.javascript.rhino.Node var21 = null;
//     com.google.javascript.rhino.Node var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.make("", var31, "hi!");
//     java.lang.String[] var35 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var33, var35);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", var23, var26, var35);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var47 = null;
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.make("", var47, "hi!");
//     java.lang.String[] var51 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var49, var51);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var51);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var21, var26, var51);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var15, var19, var51);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("", var8, var11, var51);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var1, var2, var6, var51);
// 
//   }

  public void test92() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test92"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test93() {}
//   public void test93() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test93"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.make("", var21, "hi!");
//     java.lang.String[] var25 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var23, var25);
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", var13, var16, var25);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var8, var11, var25);
//     com.google.javascript.jscomp.DiagnosticType var29 = var28.getType();
//     int var30 = var6.compareTo(var29);
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.CheckLevel var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var36, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.make("", var43, "hi!");
//     java.lang.String[] var47 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var45, var47);
//     com.google.javascript.rhino.Node var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var58 = null;
//     com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.make("", var58, "hi!");
//     java.lang.String[] var62 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var60, var62);
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("hi!", var50, var53, var62);
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make(var45, var62);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("", 0, 1, var34, var38, var62);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("", (-39), 1, var3, var29, var62);
//     com.google.javascript.jscomp.CheckLevel var68 = null;
//     com.google.javascript.jscomp.MessageFormatter var69 = null;
//     java.lang.String var70 = var67.format(var68, var69);
// 
//   }

  public void test94() {}
//   public void test94() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test94"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ": ");
// 
//   }

  public void test95() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test95"); }


    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var20 = var16.compareTo(var19);
    com.google.javascript.rhino.Node var22 = null;
    com.google.javascript.rhino.Node var24 = null;
    com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var32 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.make("", var32, "hi!");
    java.lang.String[] var36 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var34, var36);
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", var24, var27, var36);
    com.google.javascript.rhino.Node var40 = null;
    com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var48 = null;
    com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("", var48, "hi!");
    java.lang.String[] var52 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var50, var52);
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", var40, var43, var52);
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var22, var27, var52);
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("", 100, 1, var13, var19, var52);
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make(": hi!", 0, 10, var6, var9, var52);
    java.lang.String[] var58 = null;
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", (-3), 0, var9, var58);
    com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var66 = var62.compareTo(var65);
    com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var73 = var69.compareTo(var72);
    int var74 = var62.compareTo(var69);
    int var75 = var9.compareTo(var69);
    java.lang.String var76 = var9.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ": "+ "'", var76.equals(": "));

  }

  public void test96() {}
//   public void test96() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test96"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     java.lang.String[] var13 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
//     int var16 = var15.getCharno();
//     com.google.javascript.jscomp.DiagnosticType var17 = var15.getType();
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("", var23, "hi!");
//     com.google.javascript.rhino.Node var27 = null;
//     com.google.javascript.rhino.Node var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.make("", var37, "hi!");
//     java.lang.String[] var41 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var39, var41);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var41);
//     com.google.javascript.rhino.Node var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.make("", var53, "hi!");
//     java.lang.String[] var57 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var55, var57);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", var45, var48, var57);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var27, var32, var57);
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var21, var25, var57);
//     boolean var62 = var15.equals((java.lang.Object)var25);
//     com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     boolean var66 = var15.equals((java.lang.Object)var65);
//     com.google.javascript.jscomp.CheckLevel var67 = null;
//     com.google.javascript.jscomp.MessageFormatter var68 = null;
//     java.lang.String var69 = var15.format(var67, var68);
// 
//   }

  public void test97() {}
//   public void test97() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test97"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "");
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.make("", var16, "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var18, var20);
//     com.google.javascript.rhino.Node var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.make("", var31, "hi!");
//     java.lang.String[] var35 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var33, var35);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", var23, var26, var35);
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make(var18, var35);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make(": ", 0, (-64), var7, var11, var35);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("", var1, var2, var3, var35);
// 
//   }

  public void test98() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test98"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.rhino.Node var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var11 = null;
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.make("", var11, "hi!");
    java.lang.String[] var15 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var16 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var13, var15);
    com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!", var3, var6, var15);
    com.google.javascript.jscomp.DiagnosticType var18 = var17.getType();
    int var19 = var17.getCharno();
    boolean var21 = var17.equals((java.lang.Object)(short)1);
    java.lang.String var22 = var17.toString();
    com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
    boolean var26 = var17.equals((java.lang.Object)var25);
    com.google.javascript.jscomp.CheckLevel var30 = null;
    com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var37 = var33.compareTo(var36);
    com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var44 = var40.compareTo(var43);
    com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var51 = var47.compareTo(var50);
    int var52 = var40.compareTo(var47);
    boolean var53 = var33.equals((java.lang.Object)var47);
    com.google.javascript.rhino.Node var55 = null;
    com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var63 = null;
    com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.make("", var63, "hi!");
    java.lang.String[] var67 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var65, var67);
    com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("", var55, var58, var67);
    com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("", 0, 1, var30, var33, var67);
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("", var1, var25, var67);
    com.google.javascript.jscomp.DiagnosticType var72 = var71.getType();
    java.lang.String var73 = var72.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "hi!. hi! at hi! line (unknown line) : (unknown column)"+ "'", var22.equals("hi!. hi! at hi! line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "hi!: "+ "'", var73.equals("hi!: "));

  }

  public void test99() {}
//   public void test99() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test99"); }
// 
// 
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
//     java.lang.String[] var18 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var16, var18);
//     com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var18);
//     com.google.javascript.rhino.Node var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.make("", var30, "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var32, var34);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var22, var25, var34);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var4, var9, var34);
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var48 = var44.compareTo(var47);
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var55 = var51.compareTo(var54);
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var62 = var58.compareTo(var61);
//     int var63 = var51.compareTo(var58);
//     boolean var64 = var44.equals((java.lang.Object)var58);
//     com.google.javascript.rhino.Node var66 = null;
//     com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var74 = null;
//     com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.make("", var74, "hi!");
//     java.lang.String[] var78 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var76, var78);
//     com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("", var66, var69, var78);
//     com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("", 0, 1, var41, var44, var78);
//     com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, (-3), var9, var78);
//     int var83 = var82.getCharno();
//     int var84 = var82.getCharno();
//     com.google.javascript.jscomp.CheckLevel var85 = null;
//     com.google.javascript.jscomp.MessageFormatter var86 = null;
//     java.lang.String var87 = var82.format(var85, var86);
// 
//   }

  public void test100() {}
//   public void test100() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test100"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     com.google.javascript.jscomp.CheckLevel var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var18 = var14.compareTo(var17);
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var25 = var21.compareTo(var24);
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var32 = var28.compareTo(var31);
//     int var33 = var21.compareTo(var28);
//     boolean var34 = var14.equals((java.lang.Object)var28);
//     com.google.javascript.rhino.Node var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.make("", var44, "hi!");
//     java.lang.String[] var48 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var46, var48);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("", var36, var39, var48);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("", 0, 1, var11, var14, var48);
//     com.google.javascript.rhino.Node var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
//     com.google.javascript.rhino.Node var58 = null;
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var66 = null;
//     com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.make("", var66, "hi!");
//     java.lang.String[] var70 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var68, var70);
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("", var58, var61, var70);
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var53, var56, var70);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make(": ", (-12), 46, var14, var70);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", (-3), 1, var3, var4, var70);
// 
//   }

  public void test101() {}
//   public void test101() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test101"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
//     java.lang.String var10 = var9.toString();
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
//     com.google.javascript.rhino.Node var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.make("", var31, "hi!");
//     java.lang.String[] var35 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var33, var35);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", var23, var26, var35);
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var18, var21, var35);
//     com.google.javascript.jscomp.DiagnosticType var39 = var38.getType();
//     int var40 = var16.compareTo(var39);
//     com.google.javascript.rhino.Node var42 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     java.lang.String[] var47 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var42, var45, var47);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-39), 10, var39, var47);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column): : hi!", 2, (-1), var6, var9, var47);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var1, var2, var47);
// 
//   }

  public void test102() {}
//   public void test102() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test102"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!");
// 
//   }

  public void test103() {}
//   public void test103() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test103"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!");
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
//     java.lang.String[] var22 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var20, var22);
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var22);
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     java.lang.String[] var38 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var38);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var8, var13, var38);
//     com.google.javascript.rhino.Node var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
//     java.lang.String[] var55 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var53, var55);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var55);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make(var13, var55);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("", 0, 0, var6, var55);
//     boolean var61 = var59.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.DiagnosticType var62 = var59.getType();
//     com.google.javascript.jscomp.CheckLevel var63 = null;
//     com.google.javascript.jscomp.MessageFormatter var64 = null;
//     java.lang.String var65 = var59.format(var63, var64);
// 
//   }

  public void test104() {}
//   public void test104() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test104"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("", var20, "hi!");
//     java.lang.String[] var24 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var22, var24);
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-8), (-64), var12, var15, var24);
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make(var8, var24);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", var1, var2, var5, var24);
// 
//   }

  public void test105() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test105"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var6 = var2.compareTo(var5);
    com.google.javascript.rhino.Node var8 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", "hi!");
    com.google.javascript.rhino.Node var13 = null;
    com.google.javascript.rhino.Node var15 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var23 = null;
    com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("", var23, "hi!");
    java.lang.String[] var27 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var25, var27);
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var27);
    com.google.javascript.rhino.Node var31 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var39 = null;
    com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.make("", var39, "hi!");
    java.lang.String[] var43 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var41, var43);
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var31, var34, var43);
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var13, var18, var43);
    com.google.javascript.rhino.Node var48 = null;
    com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var56 = null;
    com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.make("", var56, "hi!");
    java.lang.String[] var60 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var58, var60);
    com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!", var48, var51, var60);
    com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make(var18, var60);
    com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make(": hi!", var8, var11, var60);
    boolean var65 = var2.equals((java.lang.Object)var8);
    com.google.javascript.rhino.Node var67 = null;
    com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var75 = null;
    com.google.javascript.jscomp.DiagnosticType var77 = com.google.javascript.jscomp.DiagnosticType.make("", var75, "hi!");
    java.lang.String[] var79 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var77, var79);
    com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("hi!", var67, var70, var79);
    com.google.javascript.jscomp.DiagnosticType var82 = var81.getType();
    int var83 = var81.getCharno();
    boolean var85 = var81.equals((java.lang.Object)(short)1);
    java.lang.String var86 = var81.toString();
    com.google.javascript.jscomp.DiagnosticType var89 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
    boolean var90 = var81.equals((java.lang.Object)var89);
    int var91 = var2.compareTo(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + "hi!. hi! at hi! line (unknown line) : (unknown column)"+ "'", var86.equals("hi!. hi! at hi! line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == (-3));

  }

  public void test106() {}
//   public void test106() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test106"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.make("", var16, "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", var8, var11, var20);
//     com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
//     com.google.javascript.rhino.Node var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
//     java.lang.String[] var37 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var35, var37);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", var25, var28, var37);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make(var23, var37);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make(var6, var37);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", var1, var2, var3, var37);
// 
//   }

  public void test107() {}
//   public void test107() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test107"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at hi! line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("", var13, "hi!");
//     java.lang.String[] var17 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var15, var17);
//     com.google.javascript.rhino.Node var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("", var28, "hi!");
//     java.lang.String[] var32 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var30, var32);
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", var20, var23, var32);
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make(var15, var32);
//     com.google.javascript.jscomp.CheckLevel var42 = null;
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.make("", var44, "hi!");
//     com.google.javascript.rhino.Node var48 = null;
//     com.google.javascript.rhino.Node var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var58 = null;
//     com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.make("", var58, "hi!");
//     java.lang.String[] var62 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var60, var62);
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("hi!", var50, var53, var62);
//     com.google.javascript.rhino.Node var66 = null;
//     com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var74 = null;
//     com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.make("", var74, "hi!");
//     java.lang.String[] var78 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var76, var78);
//     com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("hi!", var66, var69, var78);
//     com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var48, var53, var78);
//     com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var42, var46, var78);
//     com.google.javascript.jscomp.CheckLevel var87 = null;
//     com.google.javascript.jscomp.DiagnosticType var89 = com.google.javascript.jscomp.DiagnosticType.make("", var87, "hi!");
//     java.lang.String[] var91 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var89, var91);
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column): : hi!", 3, 3, var46, var91);
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!", 0, 0, var15, var91);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!: : ", var1, var2, var5, var91);
// 
//   }

  public void test108() {}
//   public void test108() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test108"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!");
//     java.lang.String[] var8 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var6, var8);
//     boolean var11 = var9.equals((java.lang.Object)": ");
//     com.google.javascript.jscomp.DiagnosticType var12 = var9.getType();
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.MessageFormatter var14 = null;
//     java.lang.String var15 = var9.format(var13, var14);
// 
//   }

  public void test109() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test109"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test110() {}
//   public void test110() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test110"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("", var12, "hi!");
//     java.lang.String[] var16 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var14, var16);
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!", var4, var7, var16);
//     com.google.javascript.jscomp.DiagnosticType var19 = var18.getType();
//     int var20 = var18.getCharno();
//     boolean var22 = var18.equals((java.lang.Object)(short)1);
//     java.lang.String var23 = var18.toString();
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     boolean var27 = var18.equals((java.lang.Object)"hi!");
//     boolean var29 = var18.equals((java.lang.Object)(byte)100);
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var36 = var32.compareTo(var35);
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var43 = var39.compareTo(var42);
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var50 = var46.compareTo(var49);
//     int var51 = var39.compareTo(var46);
//     boolean var52 = var32.equals((java.lang.Object)var46);
//     boolean var53 = var18.equals((java.lang.Object)var46);
//     com.google.javascript.rhino.Node var55 = null;
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var60 = null;
//     com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var68 = null;
//     com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.make("", var68, "hi!");
//     java.lang.String[] var72 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var70, var72);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!", var60, var63, var72);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var55, var58, var72);
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make(".  at :  line -12 : 46", var1, var2, var46, var72);
// 
//   }

  public void test111() {}
//   public void test111() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test111"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!");
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
//     java.lang.String[] var22 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var20, var22);
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var22);
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     java.lang.String[] var38 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var38);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var8, var13, var38);
//     com.google.javascript.rhino.Node var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
//     java.lang.String[] var55 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var53, var55);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var55);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make(var13, var55);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("", 0, 0, var6, var55);
//     boolean var61 = var59.equals((java.lang.Object)10);
//     com.google.javascript.jscomp.DiagnosticType var62 = var59.getType();
//     com.google.javascript.jscomp.CheckLevel var64 = null;
//     com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.make("", var64, ": hi!");
//     boolean var67 = var59.equals((java.lang.Object)": hi!");
//     com.google.javascript.jscomp.CheckLevel var72 = null;
//     com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.make("", var72, "hi!");
//     java.lang.String[] var76 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var74, var76);
//     boolean var79 = var77.equals((java.lang.Object)(byte)(-1));
//     com.google.javascript.jscomp.DiagnosticType var80 = var77.getType();
//     boolean var81 = var59.equals((java.lang.Object)var77);
//     com.google.javascript.jscomp.CheckLevel var82 = null;
//     com.google.javascript.jscomp.MessageFormatter var83 = null;
//     java.lang.String var84 = var59.format(var82, var83);
// 
//   }

  public void test112() {}
//   public void test112() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test112"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.make("", var7, "hi!");
//     java.lang.String[] var11 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var12 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var9, var11);
//     com.google.javascript.rhino.Node var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("", var22, "hi!");
//     java.lang.String[] var26 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var24, var26);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var14, var17, var26);
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make(var9, var26);
//     com.google.javascript.jscomp.CheckLevel var36 = null;
//     com.google.javascript.jscomp.CheckLevel var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.make("", var38, "hi!");
//     com.google.javascript.rhino.Node var42 = null;
//     com.google.javascript.rhino.Node var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var52 = null;
//     com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.make("", var52, "hi!");
//     java.lang.String[] var56 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var54, var56);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!", var44, var47, var56);
//     com.google.javascript.rhino.Node var60 = null;
//     com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var68 = null;
//     com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.make("", var68, "hi!");
//     java.lang.String[] var72 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var70, var72);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!", var60, var63, var72);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var42, var47, var72);
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var36, var40, var72);
//     com.google.javascript.jscomp.CheckLevel var81 = null;
//     com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.make("", var81, "hi!");
//     java.lang.String[] var85 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var83, var85);
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column): : hi!", 3, 3, var40, var85);
//     com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!", 0, 0, var9, var85);
//     com.google.javascript.jscomp.CheckLevel var89 = null;
//     com.google.javascript.jscomp.MessageFormatter var90 = null;
//     java.lang.String var91 = var88.format(var89, var90);
// 
//   }

  public void test113() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test113"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(".  at (unknown source) line 1 : 10");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test114() {}
//   public void test114() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test114"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!: hi!");
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var21, var23);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var11, var14, var23);
//     com.google.javascript.jscomp.DiagnosticType var26 = var25.getType();
//     com.google.javascript.rhino.Node var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.make("", var36, "hi!");
//     java.lang.String[] var40 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var38, var40);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", var28, var31, var40);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make(var26, var40);
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 2, 0, var6, var9, var40);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at hi!.  at hi!: hi! line (unknown line) : 10 line 54 : -3", var1, var2, var40);
// 
//   }

  public void test115() {}
//   public void test115() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test115"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.rhino.Node var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ".  at (unknown source) line 1 : 10");
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", "hi!");
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.rhino.Node var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
//     java.lang.String[] var29 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var27, var29);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", var17, var20, var29);
//     com.google.javascript.rhino.Node var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.make("", var41, "hi!");
//     java.lang.String[] var45 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var43, var45);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!", var33, var36, var45);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var15, var20, var45);
//     com.google.javascript.rhino.Node var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var58 = null;
//     com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.make("", var58, "hi!");
//     java.lang.String[] var62 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var60, var62);
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("hi!", var50, var53, var62);
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make(var20, var62);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make(": hi!", var10, var13, var62);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var5, var8, var62);
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!: hi!: hi!", (-39), 46, var3, var62);
// 
//   }

  public void test116() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test116"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", "hi!: : ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test117() {}
//   public void test117() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test117"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     java.lang.String[] var4 = null;
//     com.google.javascript.jscomp.JSError var5 = com.google.javascript.jscomp.JSError.make("hi!.  at (unknown source) line (unknown line) : (unknown column)", (-67), (-3), var3, var4);
// 
//   }

  public void test118() {}
//   public void test118() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test118"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", "hi!.  at hi!: hi! line (unknown line) : 10");
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
//     java.lang.String[] var21 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var19, var21);
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var21);
//     com.google.javascript.rhino.Node var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
//     java.lang.String[] var37 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var35, var37);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", var25, var28, var37);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var7, var12, var37);
//     com.google.javascript.rhino.Node var42 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.make("", var50, "hi!");
//     java.lang.String[] var54 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var52, var54);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", var42, var45, var54);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make(var12, var54);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("", var1, var2, var5, var54);
// 
//   }

  public void test119() {}
//   public void test119() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test119"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at hi! line (unknown line) : (unknown column). hi!: hi! at hi!.  at hi!: hi! line (unknown line) : 10 line -8 : -64");
// 
//   }

  public void test120() {}
//   public void test120() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test120"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var15 = var11.compareTo(var14);
//     com.google.javascript.rhino.Node var17 = null;
//     com.google.javascript.rhino.Node var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.make("", var27, "hi!");
//     java.lang.String[] var31 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var29, var31);
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", var19, var22, var31);
//     com.google.javascript.rhino.Node var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.make("", var43, "hi!");
//     java.lang.String[] var47 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var45, var47);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", var35, var38, var47);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var17, var22, var47);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("", 100, 1, var8, var14, var47);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make(": ", (-39), 46, var3, var4, var47);
// 
//   }

  public void test121() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test121"); }


    com.google.javascript.jscomp.CheckLevel var4 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!");
    java.lang.String[] var8 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var6, var8);
    com.google.javascript.rhino.Node var11 = null;
    com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var19 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
    java.lang.String[] var23 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var21, var23);
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var11, var14, var23);
    com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make(var6, var23);
    int var27 = var26.getCharno();
    com.google.javascript.jscomp.CheckLevel var31 = null;
    com.google.javascript.jscomp.CheckLevel var35 = null;
    com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var42 = var38.compareTo(var41);
    com.google.javascript.rhino.Node var44 = null;
    com.google.javascript.rhino.Node var46 = null;
    com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var54 = null;
    com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.make("", var54, "hi!");
    java.lang.String[] var58 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var56, var58);
    com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", var46, var49, var58);
    com.google.javascript.rhino.Node var62 = null;
    com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var70 = null;
    com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.make("", var70, "hi!");
    java.lang.String[] var74 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var72, var74);
    com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!", var62, var65, var74);
    com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var44, var49, var74);
    com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("", 100, 1, var35, var41, var74);
    com.google.javascript.rhino.Node var80 = null;
    com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var88 = null;
    com.google.javascript.jscomp.DiagnosticType var90 = com.google.javascript.jscomp.DiagnosticType.make("", var88, "hi!");
    java.lang.String[] var92 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var90, var92);
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("", var80, var83, var92);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("", 1, 10, var31, var41, var92);
    boolean var96 = var26.equals((java.lang.Object)"");
    int var97 = var26.getCharno();
    java.lang.Object var98 = null;
    boolean var99 = var26.equals(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var99 == false);

  }

  public void test122() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test122"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
    com.google.javascript.rhino.Node var10 = null;
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
    java.lang.String[] var22 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var20, var22);
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("", var10, var13, var22);
    com.google.javascript.rhino.Node var26 = null;
    com.google.javascript.rhino.Node var28 = null;
    com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var36 = null;
    com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.make("", var36, "hi!");
    java.lang.String[] var40 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var38, var40);
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", var28, var31, var40);
    com.google.javascript.rhino.Node var44 = null;
    com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var52 = null;
    com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.make("", var52, "hi!");
    java.lang.String[] var56 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var54, var56);
    com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!", var44, var47, var56);
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var26, var31, var56);
    com.google.javascript.rhino.Node var61 = null;
    com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var69 = null;
    com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.make("", var69, "hi!");
    java.lang.String[] var73 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var71, var73);
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!", var61, var64, var73);
    com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make(var31, var73);
    com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var13, var73);
    com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make(var5, var73);
    com.google.javascript.jscomp.CheckLevel var80 = null;
    com.google.javascript.jscomp.DiagnosticType var82 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var80, ": hi!");
    int var83 = var5.compareTo(var82);
    com.google.javascript.jscomp.CheckLevel var88 = null;
    com.google.javascript.jscomp.DiagnosticType var90 = com.google.javascript.jscomp.DiagnosticType.make("", var88, "hi!");
    java.lang.String[] var92 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var90, var92);
    boolean var95 = var93.equals((java.lang.Object)": ");
    com.google.javascript.jscomp.DiagnosticType var96 = var93.getType();
    int var97 = var5.compareTo(var96);
    int var98 = var2.compareTo(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == 67);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == 3);

  }

  public void test123() {}
//   public void test123() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test123"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!.  at hi!: hi! line (unknown line) : 10");
// 
//   }

  public void test124() {}
//   public void test124() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test124"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     java.lang.String[] var4 = null;
//     com.google.javascript.jscomp.JSError var5 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var1, var2, var3, var4);
// 
//   }

  public void test125() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test125"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
    java.lang.String[] var13 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
    int var16 = var15.getCharno();
    java.lang.String var17 = var15.toString();
    com.google.javascript.jscomp.DiagnosticType var18 = var15.getType();
    com.google.javascript.jscomp.DiagnosticType var19 = var15.getType();
    java.lang.String var20 = var15.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "hi!. hi! at hi! line (unknown line) : (unknown column)"+ "'", var17.equals("hi!. hi! at hi! line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "hi!. hi! at hi! line (unknown line) : (unknown column)"+ "'", var20.equals("hi!. hi! at hi! line (unknown line) : (unknown column)"));

  }

  public void test126() {}
//   public void test126() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test126"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!");
//     java.lang.String[] var8 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var6, var8);
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var21, var23);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var11, var14, var23);
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make(var6, var23);
//     int var27 = var26.getCharno();
//     com.google.javascript.jscomp.CheckLevel var31 = null;
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var42 = var38.compareTo(var41);
//     com.google.javascript.rhino.Node var44 = null;
//     com.google.javascript.rhino.Node var46 = null;
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var54 = null;
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.make("", var54, "hi!");
//     java.lang.String[] var58 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var56, var58);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", var46, var49, var58);
//     com.google.javascript.rhino.Node var62 = null;
//     com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var70 = null;
//     com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.make("", var70, "hi!");
//     java.lang.String[] var74 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var72, var74);
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!", var62, var65, var74);
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var44, var49, var74);
//     com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("", 100, 1, var35, var41, var74);
//     com.google.javascript.rhino.Node var80 = null;
//     com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var88 = null;
//     com.google.javascript.jscomp.DiagnosticType var90 = com.google.javascript.jscomp.DiagnosticType.make("", var88, "hi!");
//     java.lang.String[] var92 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var90, var92);
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("", var80, var83, var92);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("", 1, 10, var31, var41, var92);
//     boolean var96 = var26.equals((java.lang.Object)"");
//     com.google.javascript.jscomp.CheckLevel var97 = null;
//     com.google.javascript.jscomp.MessageFormatter var98 = null;
//     java.lang.String var99 = var26.format(var97, var98);
// 
//   }

  public void test127() {}
//   public void test127() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test127"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var9 = var5.compareTo(var8);
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var16 = var12.compareTo(var15);
//     int var17 = var5.compareTo(var12);
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("", var22, "hi!");
//     java.lang.String[] var26 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var24, var26);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!.  at (unknown source) line (unknown line) : (unknown column)", (-3), 2, var12, var26);
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.MessageFormatter var30 = null;
//     java.lang.String var31 = var28.format(var29, var30);
// 
//   }

  public void test128() {}
//   public void test128() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test128"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var10 = var6.compareTo(var9);
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var17 = var13.compareTo(var16);
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var24 = var20.compareTo(var23);
//     int var25 = var13.compareTo(var20);
//     boolean var26 = var6.equals((java.lang.Object)var20);
//     com.google.javascript.rhino.Node var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.make("", var36, "hi!");
//     java.lang.String[] var40 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var38, var40);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("", var28, var31, var40);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("", 0, 1, var3, var6, var40);
//     com.google.javascript.jscomp.DiagnosticType var44 = var43.getType();
//     com.google.javascript.jscomp.CheckLevel var45 = null;
//     com.google.javascript.jscomp.MessageFormatter var46 = null;
//     java.lang.String var47 = var43.format(var45, var46);
// 
//   }

  public void test129() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test129"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.rhino.Node var7 = null;
    com.google.javascript.rhino.Node var9 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var17 = null;
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
    java.lang.String[] var21 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var19, var21);
    com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var21);
    com.google.javascript.rhino.Node var25 = null;
    com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var33 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
    java.lang.String[] var37 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var35, var37);
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", var25, var28, var37);
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var7, var12, var37);
    com.google.javascript.rhino.Node var42 = null;
    com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var50 = null;
    com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.make("", var50, "hi!");
    java.lang.String[] var54 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var52, var54);
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", var42, var45, var54);
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make(var12, var54);
    java.lang.String var58 = var12.toString();
    int var59 = var5.compareTo(var12);
    com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
    com.google.javascript.rhino.Node var67 = null;
    com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var72 = null;
    com.google.javascript.jscomp.DiagnosticType var75 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var80 = null;
    com.google.javascript.jscomp.DiagnosticType var82 = com.google.javascript.jscomp.DiagnosticType.make("", var80, "hi!");
    java.lang.String[] var84 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var82, var84);
    com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!", var72, var75, var84);
    com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var67, var70, var84);
    com.google.javascript.jscomp.DiagnosticType var88 = var87.getType();
    int var89 = var65.compareTo(var88);
    com.google.javascript.rhino.Node var91 = null;
    com.google.javascript.jscomp.DiagnosticType var94 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
    java.lang.String[] var96 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var91, var94, var96);
    com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-39), 10, var88, var96);
    com.google.javascript.jscomp.JSError var99 = com.google.javascript.jscomp.JSError.make("hi!.  at (unknown source) line (unknown line) : (unknown column)", 100, 3, var5, var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "hi!: hi!"+ "'", var58.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var99);

  }

  public void test130() {}
//   public void test130() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test130"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var13 = var9.compareTo(var12);
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var20 = var16.compareTo(var19);
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var27 = var23.compareTo(var26);
//     int var28 = var16.compareTo(var23);
//     boolean var29 = var9.equals((java.lang.Object)var23);
//     com.google.javascript.rhino.Node var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.make("", var39, "hi!");
//     java.lang.String[] var43 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var41, var43);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("", var31, var34, var43);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("", 0, 1, var6, var9, var43);
//     com.google.javascript.jscomp.DiagnosticType var47 = var46.getType();
//     java.lang.String var48 = var47.toString();
//     java.lang.String var49 = var47.toString();
//     com.google.javascript.jscomp.CheckLevel var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var61 = null;
//     com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.make("", var61, "hi!");
//     java.lang.String[] var65 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var63, var65);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-8), (-64), var53, var56, var65);
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10: hi!: hi!: ", var1, var2, var47, var65);
// 
//   }

  public void test131() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test131"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.rhino.Node var5 = null;
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("", var13, "hi!");
    java.lang.String[] var17 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var15, var17);
    com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("", var5, var8, var17);
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    int var23 = var8.compareTo(var22);
    com.google.javascript.rhino.Node var25 = null;
    com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var33 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
    java.lang.String[] var37 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var35, var37);
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("", var25, var28, var37);
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", 1, 46, var3, var22, var37);
    com.google.javascript.jscomp.DiagnosticType var41 = var40.getType();
    com.google.javascript.jscomp.CheckLevel var43 = null;
    com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.make(": ", var43, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    boolean var46 = var41.equals((java.lang.Object)"hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);

  }

  public void test132() {}
//   public void test132() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test132"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "hi!. hi! at hi! line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var21, var23);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("", var11, var14, var23);
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     int var29 = var14.compareTo(var28);
//     com.google.javascript.rhino.Node var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.make("", var39, "hi!");
//     java.lang.String[] var43 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var41, var43);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("", var31, var34, var43);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", 1, 46, var9, var28, var43);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!: : ", var1, var2, var5, var43);
// 
//   }

  public void test133() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test133"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning(". hi! at (unknown source) line (unknown line) : (unknown column)", ".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test134() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test134"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var15, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var22 = null;
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("", var22, "hi!");
    java.lang.String[] var26 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var24, var26);
    com.google.javascript.rhino.Node var29 = null;
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var37 = null;
    com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.make("", var37, "hi!");
    java.lang.String[] var41 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var39, var41);
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var41);
    com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make(var24, var41);
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("", 0, 1, var13, var17, var41);
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var6, var9, var41);
    int var47 = var2.compareTo(var9);
    java.lang.String var48 = var9.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == (-12));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "hi!: hi!: hi!"+ "'", var48.equals("hi!: hi!: hi!"));

  }

  public void test135() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test135"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
    java.lang.String[] var13 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
    com.google.javascript.jscomp.DiagnosticType var16 = var15.getType();
    int var17 = var15.getCharno();
    boolean var19 = var15.equals((java.lang.Object)(short)1);
    java.lang.String var20 = var15.toString();
    com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
    boolean var24 = var15.equals((java.lang.Object)var23);
    com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
    int var28 = var23.compareTo(var27);
    com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.warning(".  at (unknown source) line 1 : 10", "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
    int var32 = var27.compareTo(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "hi!. hi! at hi! line (unknown line) : (unknown column)"+ "'", var20.equals("hi!. hi! at hi! line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 12);

  }

  public void test136() {}
//   public void test136() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test136"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var4, "");
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
//     com.google.javascript.rhino.Node var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.make("", var21, "hi!");
//     java.lang.String[] var25 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var23, var25);
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("", var13, var16, var25);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var8, var11, var25);
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at hi!.  at hi!: hi! line (unknown line) : 10 line 54 : -3", var1, var2, var6, var25);
// 
//   }

  public void test137() {}
//   public void test137() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test137"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var12 = var8.compareTo(var11);
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var19 = var15.compareTo(var18);
//     int var20 = var8.compareTo(var15);
//     int var21 = var5.compareTo(var15);
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
//     java.lang.String var29 = var28.toString();
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
//     com.google.javascript.rhino.Node var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var42 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.make("", var50, "hi!");
//     java.lang.String[] var54 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var52, var54);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", var42, var45, var54);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var37, var40, var54);
//     com.google.javascript.jscomp.DiagnosticType var58 = var57.getType();
//     int var59 = var35.compareTo(var58);
//     com.google.javascript.rhino.Node var61 = null;
//     com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     java.lang.String[] var66 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var61, var64, var66);
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-39), 10, var58, var66);
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column): : hi!", 2, (-1), var25, var28, var66);
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make(". hi! at (unknown source) line (unknown line) : (unknown column)", var1, var2, var5, var66);
// 
//   }

  public void test138() {}
//   public void test138() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test138"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("", var13, "hi!");
//     java.lang.String[] var17 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var15, var17);
//     com.google.javascript.rhino.Node var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("", var28, "hi!");
//     java.lang.String[] var32 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var30, var32);
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", var20, var23, var32);
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make(var15, var32);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", (-1), (-3), var8, var32);
//     java.lang.String var37 = var36.toString();
//     java.lang.String var38 = var36.toString();
//     int var39 = var36.getCharno();
//     com.google.javascript.jscomp.DiagnosticType var40 = var36.getType();
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var52 = null;
//     com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.make("", var52, "hi!");
//     java.lang.String[] var56 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var54, var56);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-8), (-64), var44, var47, var56);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("", var1, var2, var40, var56);
// 
//   }

  public void test139() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test139"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!.  at (unknown source) line (unknown line) : (unknown column)");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test140() {}
//   public void test140() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test140"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at (unknown source) line (unknown line) : (unknown column)");
// 
//   }

  public void test141() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test141"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.disabled("", ".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ");
    com.google.javascript.rhino.Node var8 = null;
    com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var19 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
    java.lang.String[] var23 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var21, var23);
    com.google.javascript.rhino.Node var26 = null;
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var34 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
    java.lang.String[] var38 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var38);
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make(var21, var38);
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", (-1), (-3), var14, var38);
    com.google.javascript.jscomp.CheckLevel var46 = null;
    com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.CheckLevel var53 = null;
    com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var60 = var56.compareTo(var59);
    com.google.javascript.rhino.Node var62 = null;
    com.google.javascript.rhino.Node var64 = null;
    com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var72 = null;
    com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.make("", var72, "hi!");
    java.lang.String[] var76 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var74, var76);
    com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("hi!", var64, var67, var76);
    com.google.javascript.rhino.Node var80 = null;
    com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var88 = null;
    com.google.javascript.jscomp.DiagnosticType var90 = com.google.javascript.jscomp.DiagnosticType.make("", var88, "hi!");
    java.lang.String[] var92 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var90, var92);
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!", var80, var83, var92);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var62, var67, var92);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("", 100, 1, var53, var59, var92);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make(": hi!", 0, 10, var46, var49, var92);
    com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make(": hi!", var8, var14, var92);
    com.google.javascript.jscomp.JSError var99 = com.google.javascript.jscomp.JSError.make("", 100, (-3), var3, var6, var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var99);

  }

  public void test142() {}
//   public void test142() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test142"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var12 = var8.compareTo(var11);
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var19 = var15.compareTo(var18);
//     int var20 = var8.compareTo(var15);
//     java.lang.String[] var21 = null;
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 10, 1, var8, var21);
//     com.google.javascript.jscomp.CheckLevel var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!.  at hi!: hi! line (unknown line) : 10");
//     com.google.javascript.rhino.Node var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.make("", var39, "hi!");
//     java.lang.String[] var43 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var41, var43);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var31, var34, var43);
//     com.google.javascript.jscomp.DiagnosticType var46 = var45.getType();
//     com.google.javascript.rhino.Node var48 = null;
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var56 = null;
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.make("", var56, "hi!");
//     java.lang.String[] var60 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var58, var60);
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!", var48, var51, var60);
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make(var46, var60);
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10", (-12), 100, var26, var29, var60);
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var1, var2, var8, var60);
// 
//   }

  public void test143() {}
//   public void test143() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test143"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var0 = null;
//     com.google.javascript.rhino.Node var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     java.lang.String[] var14 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var12, var14);
//     com.google.javascript.jscomp.JSError var16 = com.google.javascript.jscomp.JSError.make("hi!", var2, var5, var14);
//     com.google.javascript.jscomp.DiagnosticType var17 = var16.getType();
//     com.google.javascript.rhino.Node var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.make("", var27, "hi!");
//     java.lang.String[] var31 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var29, var31);
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", var19, var22, var31);
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make(var17, var31);
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make(var0, var31);
// 
//   }

  public void test144() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test144"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test145() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test145"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.rhino.Node var4 = null;
    com.google.javascript.rhino.Node var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var14 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
    java.lang.String[] var18 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var16, var18);
    com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var18);
    com.google.javascript.rhino.Node var22 = null;
    com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var30 = null;
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.make("", var30, "hi!");
    java.lang.String[] var34 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var32, var34);
    com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var22, var25, var34);
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var4, var9, var34);
    com.google.javascript.rhino.Node var39 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var47 = null;
    com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.make("", var47, "hi!");
    java.lang.String[] var51 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var49, var51);
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var51);
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make(var9, var51);
    boolean var55 = var2.equals((java.lang.Object)var54);
    com.google.javascript.rhino.Node var57 = null;
    com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var65 = null;
    com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.make("", var65, "hi!");
    java.lang.String[] var69 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var67, var69);
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("", var57, var60, var69);
    com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    int var75 = var60.compareTo(var74);
    int var76 = var2.compareTo(var74);
    com.google.javascript.jscomp.CheckLevel var78 = null;
    com.google.javascript.jscomp.DiagnosticType var80 = com.google.javascript.jscomp.DiagnosticType.make("hi!.  at (unknown source) line (unknown line) : (unknown column)", var78, ". hi! at (unknown source) line (unknown line) : (unknown column)");
    int var81 = var2.compareTo(var80);
    java.lang.String var82 = var2.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == (-3));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + ": "+ "'", var82.equals(": "));

  }

  public void test146() {}
//   public void test146() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test146"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ".  at (unknown source) line -3 : (unknown column)");
// 
//   }

  public void test147() {}
//   public void test147() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test147"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var12, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var21, var23);
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     java.lang.String[] var38 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var38);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make(var21, var38);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("", 0, 1, var10, var14, var38);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var3, var6, var38);
//     int var44 = var43.getCharno();
//     int var45 = var43.getCharno();
//     com.google.javascript.jscomp.CheckLevel var46 = null;
//     com.google.javascript.jscomp.MessageFormatter var47 = null;
//     java.lang.String var48 = var43.format(var46, var47);
// 
//   }

  public void test148() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test148"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: . hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3 at (unknown source) line (unknown line) : (unknown column)");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test149() {}
//   public void test149() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test149"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("", var12, "hi!");
//     java.lang.String[] var16 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var14, var16);
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("", var4, var7, var16);
//     java.lang.String var19 = var7.toString();
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!. hi! at hi! line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var36 = null;
//     com.google.javascript.jscomp.CheckLevel var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var38, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.make("", var45, "hi!");
//     java.lang.String[] var49 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var47, var49);
//     com.google.javascript.rhino.Node var52 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var60 = null;
//     com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.make("", var60, "hi!");
//     java.lang.String[] var64 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var62, var64);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!", var52, var55, var64);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make(var47, var64);
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("", 0, 1, var36, var40, var64);
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var29, var32, var64);
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make(": ", 100, (-1), var25, var64);
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("", var1, var2, var7, var64);
// 
//   }

  public void test150() {}
//   public void test150() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test150"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at hi!: hi! line 0 : -3");
// 
//   }

  public void test151() {}
//   public void test151() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test151"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("", "");
//     java.lang.String[] var3 = null;
//     com.google.javascript.jscomp.JSError var4 = com.google.javascript.jscomp.JSError.make(var2, var3);
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.MessageFormatter var6 = null;
//     java.lang.String var7 = var4.format(var5, var6);
// 
//   }

  public void test152() {}
//   public void test152() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test152"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var9 = var5.compareTo(var8);
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var16 = var12.compareTo(var15);
//     int var17 = var5.compareTo(var12);
//     java.lang.String[] var18 = null;
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 10, 1, var5, var18);
//     com.google.javascript.jscomp.DiagnosticType var20 = var19.getType();
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.MessageFormatter var22 = null;
//     java.lang.String var23 = var19.format(var21, var22);
// 
//   }

  public void test153() {}
//   public void test153() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test153"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     com.google.javascript.rhino.Node var14 = null;
//     com.google.javascript.rhino.Node var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
//     java.lang.String[] var28 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var26, var28);
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", var16, var19, var28);
//     com.google.javascript.rhino.Node var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("", var40, "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var44);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var14, var19, var44);
//     com.google.javascript.rhino.Node var49 = null;
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var57 = null;
//     com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.make("", var57, "hi!");
//     java.lang.String[] var61 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var59, var61);
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!", var49, var52, var61);
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make(var19, var61);
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("", 0, 0, var12, var61);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("", (-64), (-8), var5, var61);
//     java.lang.Object var67 = null;
//     boolean var68 = var66.equals(var67);
//     com.google.javascript.jscomp.CheckLevel var69 = null;
//     com.google.javascript.jscomp.MessageFormatter var70 = null;
//     java.lang.String var71 = var66.format(var69, var70);
// 
//   }

  public void test154() {}
//   public void test154() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test154"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var0 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: : ", "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
//     int var11 = var7.compareTo(var10);
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!.  at hi!: hi! line (unknown line) : 10");
//     com.google.javascript.rhino.Node var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("", var28, "hi!");
//     java.lang.String[] var32 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var30, var32);
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", var20, var23, var32);
//     com.google.javascript.jscomp.DiagnosticType var35 = var34.getType();
//     com.google.javascript.rhino.Node var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.make("", var45, "hi!");
//     java.lang.String[] var49 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var47, var49);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", var37, var40, var49);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make(var35, var49);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10", (-12), 100, var15, var18, var49);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("", (-64), (-67), var4, var7, var49);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make(var0, var49);
// 
//   }

  public void test155() {}
//   public void test155() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test155"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!. hi! at hi! line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var22, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("", var29, "hi!");
//     java.lang.String[] var33 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var31, var33);
//     com.google.javascript.rhino.Node var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.make("", var44, "hi!");
//     java.lang.String[] var48 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var46, var48);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", var36, var39, var48);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make(var31, var48);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("", 0, 1, var20, var24, var48);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var13, var16, var48);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make(": ", 100, (-1), var9, var48);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line -67 : 0", (-64), 4, var3, var48);
// 
//   }

  public void test156() {}
//   public void test156() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test156"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: : ", "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
//     int var10 = var6.compareTo(var9);
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!.  at hi!: hi! line (unknown line) : 10");
//     com.google.javascript.rhino.Node var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.make("", var27, "hi!");
//     java.lang.String[] var31 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var29, var31);
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", var19, var22, var31);
//     com.google.javascript.jscomp.DiagnosticType var34 = var33.getType();
//     com.google.javascript.rhino.Node var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.make("", var44, "hi!");
//     java.lang.String[] var48 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var46, var48);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", var36, var39, var48);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make(var34, var48);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10", (-12), 100, var14, var17, var48);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("", (-64), (-67), var3, var6, var48);
//     com.google.javascript.jscomp.CheckLevel var54 = null;
//     com.google.javascript.jscomp.MessageFormatter var55 = null;
//     java.lang.String var56 = var53.format(var54, var55);
// 
//   }

  public void test157() {}
//   public void test157() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test157"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.rhino.Node var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("", var13, "hi!");
//     java.lang.String[] var17 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var15, var17);
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", var5, var8, var17);
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var23 = var8.compareTo(var22);
//     java.lang.String[] var25 = new java.lang.String[] { "hi!: hi!: "};
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 46, (-3), var3, var22, var25);
//     com.google.javascript.jscomp.DiagnosticType var27 = var26.getType();
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.MessageFormatter var29 = null;
//     java.lang.String var30 = var26.format(var28, var29);
// 
//   }

  public void test158() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test158"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.rhino.Node var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var11 = null;
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.make("", var11, "hi!");
    java.lang.String[] var15 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var16 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var13, var15);
    com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!", var3, var6, var15);
    com.google.javascript.rhino.Node var19 = null;
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var27 = null;
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.make("", var27, "hi!");
    java.lang.String[] var31 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var29, var31);
    com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", var19, var22, var31);
    com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var1, var6, var31);
    com.google.javascript.rhino.Node var36 = null;
    com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var44 = null;
    com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.make("", var44, "hi!");
    java.lang.String[] var48 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var46, var48);
    com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", var36, var39, var48);
    com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make(var6, var48);
    boolean var53 = var51.equals((java.lang.Object)0L);
    com.google.javascript.jscomp.DiagnosticType var54 = var51.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);

  }

  public void test159() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test159"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at (unknown source) line (unknown line) : (unknown column)", "");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test160() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test160"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var10 = var6.compareTo(var9);
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var17 = var13.compareTo(var16);
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var24 = var20.compareTo(var23);
    int var25 = var13.compareTo(var20);
    boolean var26 = var6.equals((java.lang.Object)var20);
    com.google.javascript.rhino.Node var28 = null;
    com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var36 = null;
    com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.make("", var36, "hi!");
    java.lang.String[] var40 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var38, var40);
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("", var28, var31, var40);
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("", 0, 1, var3, var6, var40);
    com.google.javascript.jscomp.DiagnosticType var44 = var43.getType();
    com.google.javascript.jscomp.DiagnosticType var45 = var43.getType();
    com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!. hi! at hi! line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var55 = null;
    com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var62 = null;
    com.google.javascript.jscomp.CheckLevel var64 = null;
    com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var64, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var71 = null;
    com.google.javascript.jscomp.DiagnosticType var73 = com.google.javascript.jscomp.DiagnosticType.make("", var71, "hi!");
    java.lang.String[] var75 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var73, var75);
    com.google.javascript.rhino.Node var78 = null;
    com.google.javascript.jscomp.DiagnosticType var81 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var86 = null;
    com.google.javascript.jscomp.DiagnosticType var88 = com.google.javascript.jscomp.DiagnosticType.make("", var86, "hi!");
    java.lang.String[] var90 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var88, var90);
    com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!", var78, var81, var90);
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make(var73, var90);
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("", 0, 1, var62, var66, var90);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var55, var58, var90);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make(": ", 100, (-1), var51, var90);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make(var45, var90);
    java.lang.String var98 = var97.toString();
    int var99 = var97.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var98 + "' != '" + ".  at (unknown source) line (unknown line) : (unknown column)"+ "'", var98.equals(".  at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var99 == (-1));

  }

  public void test161() {}
//   public void test161() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test161"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var8 = var4.compareTo(var7);
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var15 = var11.compareTo(var14);
//     int var16 = var4.compareTo(var11);
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", ": hi!");
//     int var20 = var11.compareTo(var19);
//     java.lang.String[] var21 = null;
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("", var1, var19, var21);
//     java.lang.String[] var23 = null;
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make(var19, var23);
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.MessageFormatter var26 = null;
//     java.lang.String var27 = var24.format(var25, var26);
// 
//   }

  public void test162() {}
//   public void test162() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test162"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     java.lang.String[] var13 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
//     com.google.javascript.jscomp.DiagnosticType var16 = var15.getType();
//     int var17 = var15.getCharno();
//     java.lang.String var18 = var15.toString();
//     java.lang.String var19 = var15.toString();
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.MessageFormatter var21 = null;
//     java.lang.String var22 = var15.format(var20, var21);
// 
//   }

  public void test163() {}
//   public void test163() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test163"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     java.lang.String[] var3 = null;
//     com.google.javascript.jscomp.JSError var4 = com.google.javascript.jscomp.JSError.make(var2, var3);
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.MessageFormatter var6 = null;
//     java.lang.String var7 = var4.format(var5, var6);
// 
//   }

  public void test164() {}
//   public void test164() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test164"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("", var12, "hi!");
//     java.lang.String[] var16 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var14, var16);
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!", var4, var7, var16);
//     com.google.javascript.jscomp.DiagnosticType var19 = var18.getType();
//     int var20 = var18.getCharno();
//     boolean var22 = var18.equals((java.lang.Object)(short)1);
//     com.google.javascript.jscomp.DiagnosticType var23 = var18.getType();
//     com.google.javascript.rhino.Node var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var32 = null;
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     com.google.javascript.rhino.Node var38 = null;
//     com.google.javascript.rhino.Node var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var48 = null;
//     com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("", var48, "hi!");
//     java.lang.String[] var52 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var50, var52);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", var40, var43, var52);
//     com.google.javascript.rhino.Node var56 = null;
//     com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var64 = null;
//     com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.make("", var64, "hi!");
//     java.lang.String[] var68 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var66, var68);
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!", var56, var59, var68);
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var38, var43, var68);
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var32, var36, var68);
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("", var25, var28, var68);
//     com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     int var77 = var28.compareTo(var76);
//     com.google.javascript.jscomp.CheckLevel var81 = null;
//     com.google.javascript.jscomp.DiagnosticType var84 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var89 = null;
//     com.google.javascript.jscomp.DiagnosticType var91 = com.google.javascript.jscomp.DiagnosticType.make("", var89, "hi!");
//     java.lang.String[] var93 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var91, var93);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-8), (-64), var81, var84, var93);
//     com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make(var76, var93);
//     com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10: : hi!", var1, var2, var23, var93);
// 
//   }

  public void test165() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test165"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var1, "");
    com.google.javascript.rhino.Node var8 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var16 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.make("", var16, "hi!");
    java.lang.String[] var20 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var18, var20);
    com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("", var8, var11, var20);
    com.google.javascript.rhino.Node var24 = null;
    com.google.javascript.rhino.Node var26 = null;
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var34 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
    java.lang.String[] var38 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var38);
    com.google.javascript.rhino.Node var42 = null;
    com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var50 = null;
    com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.make("", var50, "hi!");
    java.lang.String[] var54 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var52, var54);
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", var42, var45, var54);
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var24, var29, var54);
    com.google.javascript.rhino.Node var59 = null;
    com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var67 = null;
    com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.make("", var67, "hi!");
    java.lang.String[] var71 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var69, var71);
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", var59, var62, var71);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make(var29, var71);
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var11, var71);
    boolean var76 = var3.equals((java.lang.Object)var11);
    java.lang.Object var77 = null;
    boolean var78 = var11.equals(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == false);

  }

  public void test166() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test166"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var7 = null;
    com.google.javascript.rhino.Node var9 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var17 = null;
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
    java.lang.String[] var21 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var19, var21);
    com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var21);
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var27 = var12.compareTo(var26);
    java.lang.String[] var29 = new java.lang.String[] { "hi!: hi!: "};
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 46, (-3), var7, var26, var29);
    com.google.javascript.jscomp.CheckLevel var35 = null;
    com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.make("", var35, "hi!");
    com.google.javascript.rhino.Node var39 = null;
    com.google.javascript.rhino.Node var41 = null;
    com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var49 = null;
    com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.make("", var49, "hi!");
    java.lang.String[] var53 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var51, var53);
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", var41, var44, var53);
    com.google.javascript.rhino.Node var57 = null;
    com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var65 = null;
    com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.make("", var65, "hi!");
    java.lang.String[] var69 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var67, var69);
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", var57, var60, var69);
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var39, var44, var69);
    com.google.javascript.rhino.Node var74 = null;
    com.google.javascript.jscomp.DiagnosticType var77 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var82 = null;
    com.google.javascript.jscomp.DiagnosticType var84 = com.google.javascript.jscomp.DiagnosticType.make("", var82, "hi!");
    java.lang.String[] var86 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var84, var86);
    com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!", var74, var77, var86);
    com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make(var44, var86);
    com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("", 0, 0, var37, var86);
    com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 3, 0, var3, var26, var86);
    com.google.javascript.jscomp.DiagnosticType var94 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!. hi! at hi! line (unknown line) : (unknown column)");
    boolean var95 = var26.equals((java.lang.Object)"hi!. hi! at hi! line (unknown line) : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == false);

  }

  public void test167() {}
//   public void test167() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test167"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ".  at (unknown source) line 1 : 10: hi!: hi!: ");
// 
//   }

  public void test168() {}
//   public void test168() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test168"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.warning(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("", var23, "hi!");
//     java.lang.String[] var27 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var25, var27);
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-8), (-64), var15, var18, var27);
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make(var11, var27);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make(var8, var27);
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var1, var2, var5, var27);
// 
//   }

  public void test169() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test169"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(".  at (unknown source) line 1 : 10: hi!: hi!: ");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test170() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test170"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at (unknown source) line (unknown line) : (unknown column)", "hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test171() {}
//   public void test171() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test171"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.make("", var7, "");
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.rhino.Node var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.make("", var21, "hi!");
//     java.lang.String[] var25 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var23, var25);
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", var13, var16, var25);
//     com.google.javascript.rhino.Node var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.make("", var37, "hi!");
//     java.lang.String[] var41 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var39, var41);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var41);
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var11, var16, var41);
//     com.google.javascript.rhino.Node var46 = null;
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var54 = null;
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.make("", var54, "hi!");
//     java.lang.String[] var58 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var56, var58);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", var46, var49, var58);
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make(var16, var58);
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("", (-3), (-1), var9, var58);
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var1, var2, var58);
// 
//   }

  public void test172() {}
//   public void test172() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test172"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var0 = null;
//     com.google.javascript.rhino.Node var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error(".  at (unknown source) line 1 : 10", "hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!");
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var23 = var19.compareTo(var22);
//     com.google.javascript.rhino.Node var25 = null;
//     com.google.javascript.rhino.Node var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.make("", var35, "hi!");
//     java.lang.String[] var39 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var37, var39);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", var27, var30, var39);
//     com.google.javascript.rhino.Node var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
//     java.lang.String[] var55 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var53, var55);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var55);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var25, var30, var55);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("", 100, 1, var16, var22, var55);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("", 0, (-1), var9, var12, var55);
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!", var2, var5, var55);
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make(var0, var55);
// 
//   }

  public void test173() {}
//   public void test173() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test173"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled(": ", "hi!: hi!: ");
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.make(".  at :  line -12 : 46", var7, "hi!");
//     int var10 = var5.compareTo(var9);
//     com.google.javascript.rhino.Node var12 = null;
//     com.google.javascript.rhino.Node var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("", var22, "hi!");
//     java.lang.String[] var26 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var24, var26);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var14, var17, var26);
//     com.google.javascript.jscomp.DiagnosticType var29 = var28.getType();
//     int var30 = var28.getCharno();
//     boolean var32 = var28.equals((java.lang.Object)(short)1);
//     java.lang.String var33 = var28.toString();
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
//     boolean var37 = var28.equals((java.lang.Object)var36);
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var48 = var44.compareTo(var47);
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var55 = var51.compareTo(var54);
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var62 = var58.compareTo(var61);
//     int var63 = var51.compareTo(var58);
//     boolean var64 = var44.equals((java.lang.Object)var58);
//     com.google.javascript.rhino.Node var66 = null;
//     com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var74 = null;
//     com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.make("", var74, "hi!");
//     java.lang.String[] var78 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var76, var78);
//     com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("", var66, var69, var78);
//     com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("", 0, 1, var41, var44, var78);
//     com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("", var12, var36, var78);
//     com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!: : : hi!: ", var1, var2, var9, var78);
// 
//   }

  public void test174() {}
//   public void test174() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test174"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var4, "hi!.  at hi!: hi! line (unknown line) : 10");
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("", var12, "hi!");
//     com.google.javascript.rhino.Node var16 = null;
//     com.google.javascript.rhino.Node var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.make("", var26, "hi!");
//     java.lang.String[] var30 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var28, var30);
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", var18, var21, var30);
//     com.google.javascript.rhino.Node var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var42 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.make("", var42, "hi!");
//     java.lang.String[] var46 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var44, var46);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", var34, var37, var46);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var16, var21, var46);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var10, var14, var46);
//     int var51 = var50.getCharno();
//     com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.warning(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
//     com.google.javascript.jscomp.CheckLevel var61 = null;
//     com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var69 = null;
//     com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.make("", var69, "hi!");
//     java.lang.String[] var73 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var71, var73);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-8), (-64), var61, var64, var73);
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make(var57, var73);
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make(var54, var73);
//     boolean var78 = var50.equals((java.lang.Object)var73);
//     com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at hi!.  at hi!: hi! line (unknown line) : 10 line 54 : -3", var1, var2, var6, var73);
// 
//   }

  public void test175() {}
//   public void test175() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test175"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var9 = var5.compareTo(var8);
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var16 = var12.compareTo(var15);
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var23 = var19.compareTo(var22);
//     int var24 = var12.compareTo(var19);
//     boolean var25 = var5.equals((java.lang.Object)var19);
//     com.google.javascript.rhino.Node var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.make("", var38, "hi!");
//     java.lang.String[] var42 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var40, var42);
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("", var30, var33, var42);
//     com.google.javascript.rhino.Node var46 = null;
//     com.google.javascript.rhino.Node var48 = null;
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var56 = null;
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.make("", var56, "hi!");
//     java.lang.String[] var60 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var58, var60);
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!", var48, var51, var60);
//     com.google.javascript.rhino.Node var64 = null;
//     com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var72 = null;
//     com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.make("", var72, "hi!");
//     java.lang.String[] var76 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var74, var76);
//     com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("hi!", var64, var67, var76);
//     com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var46, var51, var76);
//     com.google.javascript.rhino.Node var81 = null;
//     com.google.javascript.jscomp.DiagnosticType var84 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var89 = null;
//     com.google.javascript.jscomp.DiagnosticType var91 = com.google.javascript.jscomp.DiagnosticType.make("", var89, "hi!");
//     java.lang.String[] var93 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var91, var93);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!", var81, var84, var93);
//     com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make(var51, var93);
//     com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var33, var93);
//     com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make("", var1, var2, var19, var93);
// 
//   }

  public void test176() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test176"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at hi!: hi! line 0 : -3", var1, "hi!: hi!: ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test177() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test177"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!: . hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3 at (unknown source) line (unknown line) : (unknown column)", var1, ".  at (unknown source) line (unknown line) : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test178() {}
//   public void test178() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test178"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!");
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var20 = var16.compareTo(var19);
//     com.google.javascript.rhino.Node var22 = null;
//     com.google.javascript.rhino.Node var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.make("", var32, "hi!");
//     java.lang.String[] var36 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var34, var36);
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", var24, var27, var36);
//     com.google.javascript.rhino.Node var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var48 = null;
//     com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("", var48, "hi!");
//     java.lang.String[] var52 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var50, var52);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", var40, var43, var52);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var22, var27, var52);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("", 100, 1, var13, var19, var52);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("", 0, (-1), var6, var9, var52);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("", var1, var2, var52);
// 
//   }

  public void test179() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test179"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make(".  at (unknown source) line -3 : (unknown column)", var1, "hi!: hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test180() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test180"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!.  at hi!: hi! line (unknown line) : 10: : hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test181() {}
//   public void test181() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test181"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("", var12, "hi!");
//     java.lang.String[] var16 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var14, var16);
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!", var4, var7, var16);
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
//     java.lang.String var25 = var24.toString();
//     com.google.javascript.jscomp.CheckLevel var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var39 = var35.compareTo(var38);
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var46 = var42.compareTo(var45);
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var53 = var49.compareTo(var52);
//     int var54 = var42.compareTo(var49);
//     boolean var55 = var35.equals((java.lang.Object)var49);
//     com.google.javascript.rhino.Node var57 = null;
//     com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var65 = null;
//     com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.make("", var65, "hi!");
//     java.lang.String[] var69 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var67, var69);
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("", var57, var60, var69);
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("", 0, 1, var32, var35, var69);
//     com.google.javascript.rhino.Node var74 = null;
//     com.google.javascript.jscomp.DiagnosticType var77 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
//     com.google.javascript.rhino.Node var79 = null;
//     com.google.javascript.jscomp.DiagnosticType var82 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var87 = null;
//     com.google.javascript.jscomp.DiagnosticType var89 = com.google.javascript.jscomp.DiagnosticType.make("", var87, "hi!");
//     java.lang.String[] var91 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var89, var91);
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("", var79, var82, var91);
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var74, var77, var91);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make(": ", (-12), 46, var35, var91);
//     com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 54, (-3), var24, var91);
//     com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make(": hi!. hi! at hi! line (unknown line) : (unknown column)", var1, var2, var7, var91);
// 
//   }

  public void test182() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test182"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning(". hi! at (unknown source) line (unknown line) : (unknown column)", "hi!: : : hi!: ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test183() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test183"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!.  at hi!: hi! line (unknown line) : 10", ": ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test184() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test184"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
    java.lang.String var6 = var5.toString();
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var20 = var16.compareTo(var19);
    com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var27 = var23.compareTo(var26);
    com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var34 = var30.compareTo(var33);
    int var35 = var23.compareTo(var30);
    boolean var36 = var16.equals((java.lang.Object)var30);
    com.google.javascript.rhino.Node var38 = null;
    com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var46 = null;
    com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.make("", var46, "hi!");
    java.lang.String[] var50 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var48, var50);
    com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("", var38, var41, var50);
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("", 0, 1, var13, var16, var50);
    com.google.javascript.rhino.Node var55 = null;
    com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
    com.google.javascript.rhino.Node var60 = null;
    com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var68 = null;
    com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.make("", var68, "hi!");
    java.lang.String[] var72 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var70, var72);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("", var60, var63, var72);
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var55, var58, var72);
    com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make(": ", (-12), 46, var16, var72);
    com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 54, (-3), var5, var72);
    java.lang.Object var78 = null;
    boolean var79 = var77.equals(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "hi!. hi! at (unknown source) line (unknown line) : (unknown column): "+ "'", var6.equals("hi!. hi! at (unknown source) line (unknown line) : (unknown column): "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);

  }

  public void test185() {}
//   public void test185() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test185"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!");
//     java.lang.String[] var8 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var6, var8);
//     boolean var11 = var9.equals((java.lang.Object)(byte)(-1));
//     com.google.javascript.jscomp.DiagnosticType var12 = var9.getType();
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.MessageFormatter var14 = null;
//     java.lang.String var15 = var9.format(var13, var14);
// 
//   }

  public void test186() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test186"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!: : : hi!: ", var1, "hi!: hi!: hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test187() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test187"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!: ");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test188() {}
//   public void test188() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test188"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ". hi! at (unknown source) line (unknown line) : (unknown column)");
// 
//   }

  public void test189() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test189"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.rhino.Node var4 = null;
    com.google.javascript.rhino.Node var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var14 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
    java.lang.String[] var18 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var16, var18);
    com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var18);
    com.google.javascript.rhino.Node var22 = null;
    com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var30 = null;
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.make("", var30, "hi!");
    java.lang.String[] var34 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var32, var34);
    com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var22, var25, var34);
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var4, var9, var34);
    com.google.javascript.rhino.Node var39 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var47 = null;
    com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.make("", var47, "hi!");
    java.lang.String[] var51 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var49, var51);
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var51);
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make(var9, var51);
    boolean var55 = var2.equals((java.lang.Object)var54);
    int var56 = var54.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == (-1));

  }

  public void test190() {}
//   public void test190() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test190"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make(".  at (unknown source) line 1 : 10", var8, ": ");
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("", var23, "hi!");
//     java.lang.String[] var27 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var25, var27);
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var27);
//     com.google.javascript.jscomp.DiagnosticType var30 = var29.getType();
//     com.google.javascript.rhino.Node var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("", var40, "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var44);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make(var30, var44);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make(var13, var44);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make(". hi! at hi! line 1 : (unknown column)", (-8), 5, var6, var10, var44);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, var2, var44);
// 
//   }

  public void test191() {}
//   public void test191() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test191"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
//     java.lang.String[] var21 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var19, var21);
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var21);
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var27 = var12.compareTo(var26);
//     java.lang.String[] var29 = new java.lang.String[] { "hi!: hi!: "};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 46, (-3), var7, var26, var29);
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.make("", var35, "hi!");
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.rhino.Node var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var49 = null;
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.make("", var49, "hi!");
//     java.lang.String[] var53 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var51, var53);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", var41, var44, var53);
//     com.google.javascript.rhino.Node var57 = null;
//     com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var65 = null;
//     com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.make("", var65, "hi!");
//     java.lang.String[] var69 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var67, var69);
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", var57, var60, var69);
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var39, var44, var69);
//     com.google.javascript.rhino.Node var74 = null;
//     com.google.javascript.jscomp.DiagnosticType var77 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var82 = null;
//     com.google.javascript.jscomp.DiagnosticType var84 = com.google.javascript.jscomp.DiagnosticType.make("", var82, "hi!");
//     java.lang.String[] var86 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var84, var86);
//     com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!", var74, var77, var86);
//     com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make(var44, var86);
//     com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("", 0, 0, var37, var86);
//     com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 3, 0, var3, var26, var86);
//     com.google.javascript.jscomp.CheckLevel var92 = null;
//     com.google.javascript.jscomp.MessageFormatter var93 = null;
//     java.lang.String var94 = var91.format(var92, var93);
// 
//   }

  public void test192() {}
//   public void test192() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test192"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
//     java.lang.String[] var21 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var19, var21);
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var21);
//     com.google.javascript.rhino.Node var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
//     java.lang.String[] var37 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var35, var37);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", var25, var28, var37);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var7, var12, var37);
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var51 = var47.compareTo(var50);
//     com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var58 = var54.compareTo(var57);
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var65 = var61.compareTo(var64);
//     int var66 = var54.compareTo(var61);
//     boolean var67 = var47.equals((java.lang.Object)var61);
//     com.google.javascript.rhino.Node var69 = null;
//     com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var77 = null;
//     com.google.javascript.jscomp.DiagnosticType var79 = com.google.javascript.jscomp.DiagnosticType.make("", var77, "hi!");
//     java.lang.String[] var81 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var79, var81);
//     com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("", var69, var72, var81);
//     com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("", 0, 1, var44, var47, var81);
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, (-3), var12, var81);
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", var1, var2, var81);
// 
//   }

  public void test193() {}
//   public void test193() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test193"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", ".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!. hi! at hi! line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var25, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.make("", var32, "hi!");
//     java.lang.String[] var36 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var34, var36);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var47 = null;
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.make("", var47, "hi!");
//     java.lang.String[] var51 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var49, var51);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var51);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make(var34, var51);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("", 0, 1, var23, var27, var51);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var16, var19, var51);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make(": ", 100, (-1), var12, var51);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("", 3, (-64), var3, var6, var51);
//     com.google.javascript.jscomp.CheckLevel var59 = null;
//     com.google.javascript.jscomp.MessageFormatter var60 = null;
//     java.lang.String var61 = var58.format(var59, var60);
// 
//   }

  public void test194() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test194"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var1, "");
    boolean var5 = var3.equals((java.lang.Object)"hi!: : ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);

  }

  public void test195() {}
//   public void test195() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test195"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
//     java.lang.String[] var18 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var16, var18);
//     com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var18);
//     com.google.javascript.rhino.Node var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.make("", var30, "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var32, var34);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var22, var25, var34);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var4, var9, var34);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var47 = null;
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.make("", var47, "hi!");
//     java.lang.String[] var51 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var49, var51);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var51);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make(var9, var51);
//     boolean var55 = var2.equals((java.lang.Object)var54);
//     com.google.javascript.jscomp.CheckLevel var56 = null;
//     com.google.javascript.jscomp.MessageFormatter var57 = null;
//     java.lang.String var58 = var54.format(var56, var57);
// 
//   }

  public void test196() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test196"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make(": : hi!", var1, "hi!: . hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3 at (unknown source) line (unknown line) : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test197() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test197"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("", ".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test198() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test198"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
    com.google.javascript.jscomp.CheckLevel var8 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.disabled("", "");
    com.google.javascript.rhino.Node var13 = null;
    com.google.javascript.rhino.Node var15 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var23 = null;
    com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("", var23, "hi!");
    java.lang.String[] var27 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var25, var27);
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var27);
    com.google.javascript.rhino.Node var31 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var39 = null;
    com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.make("", var39, "hi!");
    java.lang.String[] var43 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var41, var43);
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var31, var34, var43);
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var13, var18, var43);
    com.google.javascript.rhino.Node var48 = null;
    com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var56 = null;
    com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.make("", var56, "hi!");
    java.lang.String[] var60 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var58, var60);
    com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!", var48, var51, var60);
    com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make(var18, var60);
    com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("", 0, 100, var8, var11, var60);
    com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column): : hi!", var1, var4, var60);
    com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!: hi!", "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
    int var69 = var4.compareTo(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == (-12));

  }

  public void test199() {}
//   public void test199() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test199"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!");
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var17 = var13.compareTo(var16);
//     com.google.javascript.rhino.Node var19 = null;
//     com.google.javascript.rhino.Node var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("", var29, "hi!");
//     java.lang.String[] var33 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var31, var33);
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", var21, var24, var33);
//     com.google.javascript.rhino.Node var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.make("", var45, "hi!");
//     java.lang.String[] var49 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var47, var49);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", var37, var40, var49);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var19, var24, var49);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("", 100, 1, var10, var16, var49);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("", 0, (-1), var3, var6, var49);
//     com.google.javascript.jscomp.CheckLevel var55 = null;
//     com.google.javascript.jscomp.MessageFormatter var56 = null;
//     java.lang.String var57 = var54.format(var55, var56);
// 
//   }

  public void test200() {}
//   public void test200() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test200"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ".  at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
// 
//   }

  public void test201() {}
//   public void test201() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test201"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     java.lang.String[] var13 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
//     com.google.javascript.jscomp.DiagnosticType var16 = var15.getType();
//     int var17 = var15.getCharno();
//     boolean var19 = var15.equals((java.lang.Object)(short)1);
//     java.lang.String var20 = var15.toString();
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     boolean var24 = var15.equals((java.lang.Object)"hi!");
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.MessageFormatter var26 = null;
//     java.lang.String var27 = var15.format(var25, var26);
// 
//   }

  public void test202() {}
//   public void test202() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test202"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("", var5, "hi!");
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var21, var23);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var11, var14, var23);
//     com.google.javascript.rhino.Node var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.make("", var35, "hi!");
//     java.lang.String[] var39 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var37, var39);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", var27, var30, var39);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var9, var14, var39);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var3, var7, var39);
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.MessageFormatter var45 = null;
//     java.lang.String var46 = var43.format(var44, var45);
// 
//   }

  public void test203() {}
//   public void test203() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test203"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!. hi! at hi! line (unknown line) : (unknown column)");
//     java.lang.String[] var6 = null;
//     com.google.javascript.jscomp.JSError var7 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10: : hi!", var1, var2, var5, var6);
// 
//   }

  public void test204() {}
//   public void test204() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test204"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: : : hi!: ", "");
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.rhino.Node var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("", var20, "hi!");
//     java.lang.String[] var24 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var22, var24);
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", var12, var15, var24);
//     com.google.javascript.rhino.Node var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.make("", var36, "hi!");
//     java.lang.String[] var40 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var38, var40);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", var28, var31, var40);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var10, var15, var40);
//     com.google.javascript.jscomp.CheckLevel var47 = null;
//     com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var54 = var50.compareTo(var53);
//     com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var61 = var57.compareTo(var60);
//     com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var68 = var64.compareTo(var67);
//     int var69 = var57.compareTo(var64);
//     boolean var70 = var50.equals((java.lang.Object)var64);
//     com.google.javascript.rhino.Node var72 = null;
//     com.google.javascript.jscomp.DiagnosticType var75 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var80 = null;
//     com.google.javascript.jscomp.DiagnosticType var82 = com.google.javascript.jscomp.DiagnosticType.make("", var80, "hi!");
//     java.lang.String[] var84 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var82, var84);
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("", var72, var75, var84);
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("", 0, 1, var47, var50, var84);
//     com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, (-3), var15, var84);
//     com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column). hi!: hi! at (unknown source) line (unknown line) : (unknown column)", var1, var2, var5, var84);
// 
//   }

  public void test205() {}
//   public void test205() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test205"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var5, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("", var12, "hi!");
//     java.lang.String[] var16 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var14, var16);
//     com.google.javascript.rhino.Node var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.make("", var27, "hi!");
//     java.lang.String[] var31 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var29, var31);
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", var19, var22, var31);
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make(var14, var31);
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("", 0, 1, var3, var7, var31);
//     com.google.javascript.rhino.Node var37 = null;
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var47 = null;
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.make("", var47, "hi!");
//     java.lang.String[] var51 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var49, var51);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var51);
//     com.google.javascript.rhino.Node var55 = null;
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var63 = null;
//     com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.make("", var63, "hi!");
//     java.lang.String[] var67 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var65, var67);
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!", var55, var58, var67);
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var37, var42, var67);
//     com.google.javascript.rhino.Node var72 = null;
//     com.google.javascript.jscomp.DiagnosticType var75 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var80 = null;
//     com.google.javascript.jscomp.DiagnosticType var82 = com.google.javascript.jscomp.DiagnosticType.make("", var80, "hi!");
//     java.lang.String[] var84 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var82, var84);
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!", var72, var75, var84);
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make(var42, var84);
//     boolean var88 = var7.equals((java.lang.Object)var87);
//     com.google.javascript.jscomp.CheckLevel var89 = null;
//     com.google.javascript.jscomp.MessageFormatter var90 = null;
//     java.lang.String var91 = var87.format(var89, var90);
// 
//   }

  public void test206() {}
//   public void test206() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test206"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : hi!");
// 
//   }

  public void test207() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test207"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!. hi!.  at hi!: hi! line (unknown line) : 10 at .  at (unknown source) line 1 : 10 line -12 : 100");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test208() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test208"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", ". hi! at (unknown source) line (unknown line) : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test209() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test209"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
    com.google.javascript.rhino.Node var7 = null;
    com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var12 = null;
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var20 = null;
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("", var20, "hi!");
    java.lang.String[] var24 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var22, var24);
    com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", var12, var15, var24);
    com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var7, var10, var24);
    com.google.javascript.jscomp.DiagnosticType var28 = var27.getType();
    int var29 = var5.compareTo(var28);
    com.google.javascript.rhino.Node var31 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
    java.lang.String[] var36 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var31, var34, var36);
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-39), 10, var28, var36);
    java.lang.Object var39 = null;
    boolean var40 = var38.equals(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);

  }

  public void test210() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test210"); }


    com.google.javascript.jscomp.CheckLevel var4 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!");
    java.lang.String[] var8 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var6, var8);
    com.google.javascript.rhino.Node var11 = null;
    com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var19 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
    java.lang.String[] var23 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var21, var23);
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var11, var14, var23);
    com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make(var6, var23);
    int var27 = var26.getCharno();
    com.google.javascript.jscomp.CheckLevel var31 = null;
    com.google.javascript.jscomp.CheckLevel var35 = null;
    com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var42 = var38.compareTo(var41);
    com.google.javascript.rhino.Node var44 = null;
    com.google.javascript.rhino.Node var46 = null;
    com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var54 = null;
    com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.make("", var54, "hi!");
    java.lang.String[] var58 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var56, var58);
    com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", var46, var49, var58);
    com.google.javascript.rhino.Node var62 = null;
    com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var70 = null;
    com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.make("", var70, "hi!");
    java.lang.String[] var74 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var72, var74);
    com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!", var62, var65, var74);
    com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var44, var49, var74);
    com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("", 100, 1, var35, var41, var74);
    com.google.javascript.rhino.Node var80 = null;
    com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var88 = null;
    com.google.javascript.jscomp.DiagnosticType var90 = com.google.javascript.jscomp.DiagnosticType.make("", var88, "hi!");
    java.lang.String[] var92 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var90, var92);
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("", var80, var83, var92);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("", 1, 10, var31, var41, var92);
    boolean var96 = var26.equals((java.lang.Object)"");
    com.google.javascript.jscomp.DiagnosticType var97 = var26.getType();
    java.lang.String var98 = var26.toString();
    com.google.javascript.jscomp.DiagnosticType var99 = var26.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var98 + "' != '" + ". hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var98.equals(". hi! at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var99);

  }

  public void test211() {}
//   public void test211() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test211"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi!.  at hi!: hi! line (unknown line) : 10 at .  at (unknown source) line 1 : 10 line -12 : 100", "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("", var20, "hi!");
//     java.lang.String[] var24 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var22, var24);
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-8), (-64), var12, var15, var24);
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make(var8, var24);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column). hi!: hi! at (unknown source) line (unknown line) : (unknown column)", var1, var2, var5, var24);
// 
//   }

  public void test212() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test212"); }


    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("", var13, "hi!");
    java.lang.String[] var17 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var15, var17);
    com.google.javascript.rhino.Node var20 = null;
    com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var28 = null;
    com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("", var28, "hi!");
    java.lang.String[] var32 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var30, var32);
    com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", var20, var23, var32);
    com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make(var15, var32);
    com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", (-1), (-3), var8, var32);
    java.lang.String var37 = var36.toString();
    java.lang.String var38 = var36.toString();
    int var39 = var36.getCharno();
    com.google.javascript.jscomp.DiagnosticType var40 = var36.getType();
    com.google.javascript.rhino.Node var42 = null;
    com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var49 = var45.compareTo(var48);
    com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var56 = var52.compareTo(var55);
    int var57 = var45.compareTo(var52);
    com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", ": hi!");
    int var61 = var52.compareTo(var60);
    java.lang.String[] var62 = null;
    com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("", var42, var60, var62);
    int var64 = var40.compareTo(var60);
    com.google.javascript.rhino.Node var66 = null;
    com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var74 = null;
    com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.make("", var74, "hi!");
    java.lang.String[] var78 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var76, var78);
    com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("hi!", var66, var69, var78);
    com.google.javascript.jscomp.DiagnosticType var81 = var80.getType();
    com.google.javascript.rhino.Node var83 = null;
    com.google.javascript.jscomp.DiagnosticType var86 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var91 = null;
    com.google.javascript.jscomp.DiagnosticType var93 = com.google.javascript.jscomp.DiagnosticType.make("", var91, "hi!");
    java.lang.String[] var95 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var93, var95);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!", var83, var86, var95);
    com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make(var81, var95);
    com.google.javascript.jscomp.JSError var99 = com.google.javascript.jscomp.JSError.make(": hi!. hi! at hi! line (unknown line) : (unknown column)", 2, 51, var40, var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3"+ "'", var37.equals("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3"+ "'", var38.equals("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == (-3));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == (-8));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var99);

  }

  public void test213() {}
//   public void test213() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test213"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, ": hi!");
//     java.lang.String var7 = var6.toString();
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var9, "");
//     com.google.javascript.rhino.Node var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error(".  at (unknown source) line 1 : 10", "hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!");
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var34 = var30.compareTo(var33);
//     com.google.javascript.rhino.Node var36 = null;
//     com.google.javascript.rhino.Node var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var46 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.make("", var46, "hi!");
//     java.lang.String[] var50 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var48, var50);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", var38, var41, var50);
//     com.google.javascript.rhino.Node var54 = null;
//     com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var62 = null;
//     com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.make("", var62, "hi!");
//     java.lang.String[] var66 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var64, var66);
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!", var54, var57, var66);
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var36, var41, var66);
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("", 100, 1, var27, var33, var66);
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("", 0, (-1), var20, var23, var66);
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!", var13, var16, var66);
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make(var11, var66);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : hi!", var1, var2, var6, var66);
// 
//   }

  public void test214() {}
//   public void test214() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test214"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var14 = var10.compareTo(var13);
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var21 = var17.compareTo(var20);
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var28 = var24.compareTo(var27);
//     int var29 = var17.compareTo(var24);
//     boolean var30 = var10.equals((java.lang.Object)var24);
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.rhino.Node var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.make("", var43, "hi!");
//     java.lang.String[] var47 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var45, var47);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", var35, var38, var47);
//     com.google.javascript.jscomp.DiagnosticType var50 = var49.getType();
//     com.google.javascript.rhino.Node var52 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var60 = null;
//     com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.make("", var60, "hi!");
//     java.lang.String[] var64 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var62, var64);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!", var52, var55, var64);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make(var50, var64);
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make(var33, var64);
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-3), 3, var24, var64);
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at hi!.  at hi!: hi! line (unknown line) : 10 line 54 : -3", (-67), 0, var3, var4, var64);
// 
//   }

  public void test215() {}
//   public void test215() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test215"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.rhino.Node var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", "hi!");
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.rhino.Node var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("", var20, "hi!");
//     java.lang.String[] var24 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var22, var24);
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", var12, var15, var24);
//     com.google.javascript.rhino.Node var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.make("", var36, "hi!");
//     java.lang.String[] var40 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var38, var40);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", var28, var31, var40);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var10, var15, var40);
//     com.google.javascript.rhino.Node var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.make("", var53, "hi!");
//     java.lang.String[] var57 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var55, var57);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", var45, var48, var57);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make(var15, var57);
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make(": hi!", var5, var8, var57);
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 4, 8, var3, var57);
// 
//   }

  public void test216() {}
//   public void test216() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test216"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("", ": ");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var23 = var19.compareTo(var22);
//     com.google.javascript.rhino.Node var25 = null;
//     com.google.javascript.rhino.Node var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.make("", var35, "hi!");
//     java.lang.String[] var39 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var37, var39);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", var27, var30, var39);
//     com.google.javascript.rhino.Node var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
//     java.lang.String[] var55 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var53, var55);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var55);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var25, var30, var55);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("", 100, 1, var16, var22, var55);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make(": hi!", 0, 10, var9, var12, var55);
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!: . hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3 at (unknown source) line (unknown line) : (unknown column)", var1, var2, var5, var55);
// 
//   }

  public void test217() {}
//   public void test217() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test217"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ": : hi!. hi! at hi! line (unknown line) : (unknown column)");
// 
//   }

  public void test218() {}
//   public void test218() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test218"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.make("", var7, "hi!");
//     java.lang.String[] var11 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var12 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var9, var11);
//     com.google.javascript.jscomp.DiagnosticType var13 = var12.getType();
//     int var14 = var2.compareTo(var13);
//     com.google.javascript.jscomp.DiagnosticType var15 = null;
//     int var16 = var13.compareTo(var15);
// 
//   }

  public void test219() {}
//   public void test219() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test219"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", "hi!");
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
//     java.lang.String[] var21 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var19, var21);
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var21);
//     com.google.javascript.rhino.Node var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
//     java.lang.String[] var37 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var35, var37);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", var25, var28, var37);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var7, var12, var37);
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var51 = var47.compareTo(var50);
//     com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var58 = var54.compareTo(var57);
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var65 = var61.compareTo(var64);
//     int var66 = var54.compareTo(var61);
//     boolean var67 = var47.equals((java.lang.Object)var61);
//     com.google.javascript.rhino.Node var69 = null;
//     com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var77 = null;
//     com.google.javascript.jscomp.DiagnosticType var79 = com.google.javascript.jscomp.DiagnosticType.make("", var77, "hi!");
//     java.lang.String[] var81 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var79, var81);
//     com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("", var69, var72, var81);
//     com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("", 0, 1, var44, var47, var81);
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, (-3), var12, var81);
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make(var2, var81);
//     com.google.javascript.jscomp.CheckLevel var87 = null;
//     com.google.javascript.jscomp.MessageFormatter var88 = null;
//     java.lang.String var89 = var86.format(var87, var88);
// 
//   }

  public void test220() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test220"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled(". hi! at (unknown source) line (unknown line) : (unknown column)", "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test221() {}
//   public void test221() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test221"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     java.lang.String[] var4 = new java.lang.String[] { ".  at (unknown source) line (unknown line) : (unknown column)"};
//     com.google.javascript.jscomp.JSError var5 = com.google.javascript.jscomp.JSError.make(": : hi!", var1, var2, var4);
// 
//   }

  public void test222() {}
//   public void test222() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test222"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!. hi! at hi! line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var21, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("", var28, "hi!");
//     java.lang.String[] var32 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var30, var32);
//     com.google.javascript.rhino.Node var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.make("", var43, "hi!");
//     java.lang.String[] var47 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var45, var47);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", var35, var38, var47);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make(var30, var47);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("", 0, 1, var19, var23, var47);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var12, var15, var47);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make(": ", 100, (-1), var8, var47);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("", var1, var2, var47);
// 
//   }

  public void test223() {}
//   public void test223() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test223"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var15, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("", var22, "hi!");
//     java.lang.String[] var26 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var24, var26);
//     com.google.javascript.rhino.Node var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.make("", var37, "hi!");
//     java.lang.String[] var41 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var39, var41);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var41);
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make(var24, var41);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("", 0, 1, var13, var17, var41);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var6, var9, var41);
//     int var47 = var2.compareTo(var9);
//     com.google.javascript.jscomp.DiagnosticType var48 = null;
//     int var49 = var2.compareTo(var48);
// 
//   }

  public void test224() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test224"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!: ", "hi!: . hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3 at (unknown source) line (unknown line) : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test225() {}
//   public void test225() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test225"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var10 = var6.compareTo(var9);
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var17 = var13.compareTo(var16);
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var24 = var20.compareTo(var23);
//     int var25 = var13.compareTo(var20);
//     boolean var26 = var6.equals((java.lang.Object)var20);
//     com.google.javascript.rhino.Node var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.make("", var36, "hi!");
//     java.lang.String[] var40 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var38, var40);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("", var28, var31, var40);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("", 0, 1, var3, var6, var40);
//     com.google.javascript.jscomp.DiagnosticType var44 = var43.getType();
//     com.google.javascript.jscomp.DiagnosticType var45 = var43.getType();
//     com.google.javascript.jscomp.CheckLevel var46 = null;
//     com.google.javascript.jscomp.MessageFormatter var47 = null;
//     java.lang.String var48 = var43.format(var46, var47);
// 
//   }

  public void test226() {}
//   public void test226() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test226"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!: : ", var4, "hi!. hi! at hi! line (unknown line) : (unknown column): : hi!");
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", "hi!");
//     com.google.javascript.rhino.Node var13 = null;
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("", var23, "hi!");
//     java.lang.String[] var27 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var25, var27);
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var27);
//     com.google.javascript.rhino.Node var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.make("", var39, "hi!");
//     java.lang.String[] var43 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var41, var43);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var31, var34, var43);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var13, var18, var43);
//     com.google.javascript.rhino.Node var48 = null;
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var56 = null;
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.make("", var56, "hi!");
//     java.lang.String[] var60 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var58, var60);
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!", var48, var51, var60);
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make(var18, var60);
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make(": hi!", var8, var11, var60);
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var1, var2, var6, var60);
// 
//   }

  public void test227() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test227"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.disabled("", "");
    com.google.javascript.rhino.Node var8 = null;
    com.google.javascript.rhino.Node var10 = null;
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
    java.lang.String[] var22 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var20, var22);
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var22);
    com.google.javascript.rhino.Node var26 = null;
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var34 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
    java.lang.String[] var38 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var38);
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var8, var13, var38);
    com.google.javascript.rhino.Node var43 = null;
    com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var51 = null;
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
    java.lang.String[] var55 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var53, var55);
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var55);
    com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make(var13, var55);
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("", 0, 100, var3, var6, var55);
    boolean var61 = var6.equals((java.lang.Object)".  at (unknown source) line 1 : 10: hi!: hi!: ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);

  }

  public void test228() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test228"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", "hi!. hi! at hi!: hi! line 0 : -3");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test229() {}
//   public void test229() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test229"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", ": ");
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
//     java.lang.String[] var11 = null;
//     com.google.javascript.jscomp.JSError var12 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at hi!.  at hi!: hi! line (unknown line) : 10 line 54 : -3", var7, var10, var11);
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
//     com.google.javascript.rhino.Node var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     java.lang.String[] var38 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var38);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var21, var24, var38);
//     com.google.javascript.jscomp.DiagnosticType var42 = var41.getType();
//     int var43 = var19.compareTo(var42);
//     com.google.javascript.jscomp.CheckLevel var47 = null;
//     com.google.javascript.jscomp.CheckLevel var49 = null;
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var49, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var56 = null;
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.make("", var56, "hi!");
//     java.lang.String[] var60 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var58, var60);
//     com.google.javascript.rhino.Node var63 = null;
//     com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var71 = null;
//     com.google.javascript.jscomp.DiagnosticType var73 = com.google.javascript.jscomp.DiagnosticType.make("", var71, "hi!");
//     java.lang.String[] var75 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var73, var75);
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!", var63, var66, var75);
//     com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make(var58, var75);
//     com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("", 0, 1, var47, var51, var75);
//     com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("", (-39), 1, var16, var42, var75);
//     com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make(var10, var75);
//     com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("hi!: . hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3 at (unknown source) line (unknown line) : (unknown column)", var1, var2, var5, var75);
// 
//   }

  public void test230() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test230"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10: : hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!");
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var20 = var16.compareTo(var19);
    com.google.javascript.rhino.Node var22 = null;
    com.google.javascript.rhino.Node var24 = null;
    com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var32 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.make("", var32, "hi!");
    java.lang.String[] var36 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var34, var36);
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", var24, var27, var36);
    com.google.javascript.rhino.Node var40 = null;
    com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var48 = null;
    com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("", var48, "hi!");
    java.lang.String[] var52 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var50, var52);
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", var40, var43, var52);
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var22, var27, var52);
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("", 100, 1, var13, var19, var52);
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("", 0, (-1), var6, var9, var52);
    com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!: hi!: ");
    boolean var61 = var57.equals((java.lang.Object)"");
    int var62 = var57.getCharno();
    boolean var63 = var2.equals((java.lang.Object)var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);

  }

  public void test231() {}
//   public void test231() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test231"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("", ".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ");
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ".  at (unknown source) line 1 : 10");
//     com.google.javascript.rhino.Node var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", "hi!");
//     com.google.javascript.rhino.Node var17 = null;
//     com.google.javascript.rhino.Node var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.make("", var27, "hi!");
//     java.lang.String[] var31 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var29, var31);
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", var19, var22, var31);
//     com.google.javascript.rhino.Node var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.make("", var43, "hi!");
//     java.lang.String[] var47 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var45, var47);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", var35, var38, var47);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var17, var22, var47);
//     com.google.javascript.rhino.Node var52 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var60 = null;
//     com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.make("", var60, "hi!");
//     java.lang.String[] var64 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var62, var64);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!", var52, var55, var64);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make(var22, var64);
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make(": hi!", var12, var15, var64);
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var7, var10, var64);
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line -67 : 0", var1, var2, var5, var64);
// 
//   }

  public void test232() {}
//   public void test232() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test232"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     java.lang.String[] var3 = null;
//     com.google.javascript.jscomp.JSError var4 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line (unknown line) : (unknown column)", var1, var2, var3);
// 
//   }

  public void test233() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test233"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error(".  at (unknown source) line 1 : 10", "hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at hi!.  at hi!: hi! line (unknown line) : 10 line 54 : -3");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test234() {}
//   public void test234() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test234"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at hi! line (unknown line) : (unknown column)", "");
//     boolean var10 = var8.equals((java.lang.Object)10L);
//     boolean var11 = var5.equals((java.lang.Object)var8);
//     com.google.javascript.rhino.Node var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", "hi!");
//     com.google.javascript.rhino.Node var18 = null;
//     com.google.javascript.rhino.Node var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("", var28, "hi!");
//     java.lang.String[] var32 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var30, var32);
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", var20, var23, var32);
//     com.google.javascript.rhino.Node var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.make("", var44, "hi!");
//     java.lang.String[] var48 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var46, var48);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", var36, var39, var48);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var18, var23, var48);
//     com.google.javascript.rhino.Node var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var61 = null;
//     com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.make("", var61, "hi!");
//     java.lang.String[] var65 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var63, var65);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!", var53, var56, var65);
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make(var23, var65);
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make(": hi!", var13, var16, var65);
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!.  at (unknown source) line (unknown line) : (unknown column)", var1, var2, var5, var65);
// 
//   }

  public void test235() {}
//   public void test235() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test235"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!: ", "hi!. hi! at hi! line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("", var8, "hi!");
//     com.google.javascript.rhino.Node var12 = null;
//     com.google.javascript.rhino.Node var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("", var22, "hi!");
//     java.lang.String[] var26 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var24, var26);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var14, var17, var26);
//     com.google.javascript.rhino.Node var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.make("", var38, "hi!");
//     java.lang.String[] var42 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var40, var42);
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", var30, var33, var42);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var12, var17, var42);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var6, var10, var42);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make(var2, var42);
//     com.google.javascript.jscomp.CheckLevel var48 = null;
//     com.google.javascript.jscomp.MessageFormatter var49 = null;
//     java.lang.String var50 = var47.format(var48, var49);
// 
//   }

  public void test236() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test236"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi!.  at hi!: hi! line (unknown line) : 10 at .  at (unknown source) line 1 : 10 line -12 : 100");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test237() {}
//   public void test237() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test237"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     java.lang.String[] var4 = null;
//     com.google.javascript.jscomp.JSError var5 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var1, var2, var3, var4);
// 
//   }

  public void test238() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test238"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : : hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test239() {}
//   public void test239() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test239"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!");
//     java.lang.String[] var8 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var6, var8);
//     java.lang.Object var10 = null;
//     boolean var11 = var9.equals(var10);
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.MessageFormatter var13 = null;
//     java.lang.String var14 = var9.format(var12, var13);
// 
//   }

  public void test240() {}
//   public void test240() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test240"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!", "");
//     java.lang.String[] var6 = null;
//     com.google.javascript.jscomp.JSError var7 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column): : hi!", var1, var2, var5, var6);
// 
//   }

  public void test241() {}
//   public void test241() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test241"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     com.google.javascript.rhino.Node var14 = null;
//     com.google.javascript.rhino.Node var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
//     java.lang.String[] var28 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var26, var28);
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", var16, var19, var28);
//     com.google.javascript.rhino.Node var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("", var40, "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var44);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var14, var19, var44);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var8, var12, var44);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("", var1, var4, var44);
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     int var53 = var4.compareTo(var52);
//     com.google.javascript.jscomp.CheckLevel var57 = null;
//     com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var65 = null;
//     com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.make("", var65, "hi!");
//     java.lang.String[] var69 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var67, var69);
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-8), (-64), var57, var60, var69);
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make(var52, var69);
//     com.google.javascript.jscomp.CheckLevel var73 = null;
//     com.google.javascript.jscomp.MessageFormatter var74 = null;
//     java.lang.String var75 = var72.format(var73, var74);
// 
//   }

  public void test242() {}
//   public void test242() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test242"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ".  at (unknown source) line 1 : 10");
// 
//   }

  public void test243() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test243"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error(". hi! at (unknown source) line (unknown line) : (unknown column)", "hi!. hi! at hi! line (unknown line) : (unknown column): : hi!");
    com.google.javascript.jscomp.CheckLevel var8 = null;
    com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var18 = var14.compareTo(var17);
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var25 = var21.compareTo(var24);
    int var26 = var14.compareTo(var21);
    java.lang.String[] var27 = null;
    com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 10, 1, var14, var27);
    com.google.javascript.jscomp.DiagnosticType var29 = var28.getType();
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!: ", "hi!. hi! at hi! line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var36 = null;
    com.google.javascript.jscomp.CheckLevel var38 = null;
    com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.make("", var38, "hi!");
    com.google.javascript.rhino.Node var42 = null;
    com.google.javascript.rhino.Node var44 = null;
    com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var52 = null;
    com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.make("", var52, "hi!");
    java.lang.String[] var56 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var54, var56);
    com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!", var44, var47, var56);
    com.google.javascript.rhino.Node var60 = null;
    com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var68 = null;
    com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.make("", var68, "hi!");
    java.lang.String[] var72 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var70, var72);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!", var60, var63, var72);
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var42, var47, var72);
    com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var36, var40, var72);
    com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make(var32, var72);
    com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at hi!.  at hi!: hi! line (unknown line) : 10 line 54 : -3", (-67), 0, var8, var29, var72);
    com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!: . hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3 at (unknown source) line (unknown line) : (unknown column)", var1, var4, var72);
    com.google.javascript.jscomp.DiagnosticType var82 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    java.lang.String var83 = var82.toString();
    int var84 = var4.compareTo(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + ": "+ "'", var83.equals(": "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 64);

  }

  public void test244() {}
//   public void test244() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test244"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
//     java.lang.String[] var22 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var20, var22);
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-8), (-64), var10, var13, var22);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make(var6, var22);
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10", var1, var2, var3, var22);
// 
//   }

  public void test245() {}
//   public void test245() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test245"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var14 = var10.compareTo(var13);
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var21 = var17.compareTo(var20);
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var28 = var24.compareTo(var27);
//     int var29 = var17.compareTo(var24);
//     boolean var30 = var10.equals((java.lang.Object)var24);
//     com.google.javascript.rhino.Node var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("", var40, "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("", var32, var35, var44);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("", 0, 1, var7, var10, var44);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at (unknown source) line (unknown line) : (unknown column)", var1, var2, var3, var44);
// 
//   }

  public void test246() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test246"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
    com.google.javascript.rhino.Node var8 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var13 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var21 = null;
    com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.make("", var21, "hi!");
    java.lang.String[] var25 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var23, var25);
    com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", var13, var16, var25);
    com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var8, var11, var25);
    com.google.javascript.jscomp.DiagnosticType var29 = var28.getType();
    int var30 = var6.compareTo(var29);
    com.google.javascript.jscomp.CheckLevel var34 = null;
    com.google.javascript.jscomp.CheckLevel var36 = null;
    com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var36, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var43 = null;
    com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.make("", var43, "hi!");
    java.lang.String[] var47 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var45, var47);
    com.google.javascript.rhino.Node var50 = null;
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var58 = null;
    com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.make("", var58, "hi!");
    java.lang.String[] var62 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var60, var62);
    com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("hi!", var50, var53, var62);
    com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make(var45, var62);
    com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("", 0, 1, var34, var38, var62);
    com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("", (-39), 1, var3, var29, var62);
    com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", ": hi!");
    int var71 = var29.compareTo(var70);
    java.lang.String var72 = var29.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == (-67));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ": hi!. hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var72.equals(": hi!. hi! at (unknown source) line (unknown line) : (unknown column)"));

  }

  public void test247() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test247"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error(": : hi!", ".  at hi!. hi! at hi! line (unknown line) : (unknown column) line 10 : 1");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test248() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test248"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(": : hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test249() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test249"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : hi!", ". hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
    java.lang.String var3 = var2.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : hi!: . hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): "+ "'", var3.equals("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : hi!: . hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): "));

  }

  public void test250() {}
//   public void test250() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test250"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!. hi! at hi! line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var18, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
//     java.lang.String[] var29 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var27, var29);
//     com.google.javascript.rhino.Node var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("", var40, "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var44);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make(var27, var44);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("", 0, 1, var16, var20, var44);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var9, var12, var44);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make(": ", 100, (-1), var5, var44);
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.MessageFormatter var52 = null;
//     java.lang.String var53 = var50.format(var51, var52);
// 
//   }

  public void test251() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test251"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var6 = var2.compareTo(var5);
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var13 = var9.compareTo(var12);
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var20 = var16.compareTo(var19);
    int var21 = var9.compareTo(var16);
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", ": hi!");
    int var25 = var16.compareTo(var24);
    boolean var26 = var5.equals((java.lang.Object)var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == (-8));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);

  }

  public void test252() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test252"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var8 = var4.compareTo(var7);
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var15 = var11.compareTo(var14);
    int var16 = var4.compareTo(var11);
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", ": hi!");
    int var20 = var11.compareTo(var19);
    java.lang.String[] var21 = null;
    com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("", var1, var19, var21);
    java.lang.String[] var23 = null;
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make(var19, var23);
    com.google.javascript.jscomp.CheckLevel var28 = null;
    com.google.javascript.jscomp.CheckLevel var30 = null;
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var30, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var37 = null;
    com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.make("", var37, "hi!");
    java.lang.String[] var41 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var39, var41);
    com.google.javascript.rhino.Node var44 = null;
    com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var52 = null;
    com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.make("", var52, "hi!");
    java.lang.String[] var56 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var54, var56);
    com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!", var44, var47, var56);
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make(var39, var56);
    com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("", 0, 1, var28, var32, var56);
    com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make(var19, var56);
    int var62 = var61.getCharno();
    java.lang.Object var63 = null;
    boolean var64 = var61.equals(var63);
    com.google.javascript.jscomp.DiagnosticType var65 = var61.getType();
    int var66 = var61.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == (-8));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == (-1));

  }

  public void test253() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test253"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: : : hi!: ");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test254() {}
//   public void test254() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test254"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : -3", ". hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     int var4 = var2.compareTo(var3);
// 
//   }

  public void test255() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test255"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var14 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
    java.lang.String[] var18 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var16, var18);
    com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-8), (-64), var6, var9, var18);
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make(var2, var18);
    com.google.javascript.jscomp.CheckLevel var25 = null;
    com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!");
    com.google.javascript.jscomp.CheckLevel var32 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var39 = var35.compareTo(var38);
    com.google.javascript.rhino.Node var41 = null;
    com.google.javascript.rhino.Node var43 = null;
    com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var51 = null;
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
    java.lang.String[] var55 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var53, var55);
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var55);
    com.google.javascript.rhino.Node var59 = null;
    com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var67 = null;
    com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.make("", var67, "hi!");
    java.lang.String[] var71 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var69, var71);
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", var59, var62, var71);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var41, var46, var71);
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("", 100, 1, var32, var38, var71);
    com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("", 0, (-1), var25, var28, var71);
    int var77 = var76.getCharno();
    boolean var78 = var21.equals((java.lang.Object)var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == false);

  }

  public void test256() {}
//   public void test256() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test256"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
//     java.lang.String var6 = var5.toString();
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var20 = var16.compareTo(var19);
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var27 = var23.compareTo(var26);
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var34 = var30.compareTo(var33);
//     int var35 = var23.compareTo(var30);
//     boolean var36 = var16.equals((java.lang.Object)var30);
//     com.google.javascript.rhino.Node var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var46 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.make("", var46, "hi!");
//     java.lang.String[] var50 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var48, var50);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("", var38, var41, var50);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("", 0, 1, var13, var16, var50);
//     com.google.javascript.rhino.Node var55 = null;
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
//     com.google.javascript.rhino.Node var60 = null;
//     com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var68 = null;
//     com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.make("", var68, "hi!");
//     java.lang.String[] var72 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var70, var72);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("", var60, var63, var72);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var55, var58, var72);
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make(": ", (-12), 46, var16, var72);
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 54, (-3), var5, var72);
//     com.google.javascript.jscomp.DiagnosticType var78 = var77.getType();
//     com.google.javascript.jscomp.CheckLevel var79 = null;
//     com.google.javascript.jscomp.MessageFormatter var80 = null;
//     java.lang.String var81 = var77.format(var79, var80);
// 
//   }

  public void test257() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test257"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: hi!: hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test258() {}
//   public void test258() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test258"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     java.lang.String[] var13 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
//     int var16 = var15.getCharno();
//     com.google.javascript.jscomp.DiagnosticType var17 = var15.getType();
//     java.lang.String var18 = var15.toString();
//     int var19 = var15.getCharno();
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.MessageFormatter var21 = null;
//     java.lang.String var22 = var15.format(var20, var21);
// 
//   }

  public void test259() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test259"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", var1, ".  at :  line -12 : 46");
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", ".  at (unknown source) line 1 : 10");
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.rhino.Node var12 = null;
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var20 = null;
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("", var20, "hi!");
    java.lang.String[] var24 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var22, var24);
    com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", var12, var15, var24);
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var30 = var15.compareTo(var29);
    java.lang.String[] var32 = new java.lang.String[] { "hi!: hi!: "};
    com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 46, (-3), var10, var29, var32);
    com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make(var6, var32);
    com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make(var3, var32);
    int var36 = var35.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == (-1));

  }

  public void test260() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test260"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: hi!", ".  at (unknown source) line 1 : 10: hi!: hi!: ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test261() {}
//   public void test261() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test261"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("", var12, "hi!");
//     java.lang.String[] var16 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var14, var16);
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!", var4, var7, var16);
//     int var19 = var18.getCharno();
//     com.google.javascript.jscomp.DiagnosticType var20 = var18.getType();
//     boolean var22 = var18.equals((java.lang.Object)' ');
//     com.google.javascript.jscomp.DiagnosticType var23 = var18.getType();
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("", var28, "hi!");
//     com.google.javascript.rhino.Node var32 = null;
//     com.google.javascript.rhino.Node var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var42 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.make("", var42, "hi!");
//     java.lang.String[] var46 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var44, var46);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", var34, var37, var46);
//     com.google.javascript.rhino.Node var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var58 = null;
//     com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.make("", var58, "hi!");
//     java.lang.String[] var62 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var60, var62);
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("hi!", var50, var53, var62);
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var32, var37, var62);
//     com.google.javascript.rhino.Node var67 = null;
//     com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var75 = null;
//     com.google.javascript.jscomp.DiagnosticType var77 = com.google.javascript.jscomp.DiagnosticType.make("", var75, "hi!");
//     java.lang.String[] var79 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var77, var79);
//     com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("hi!", var67, var70, var79);
//     com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make(var37, var79);
//     com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("", 0, 0, var30, var79);
//     com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("hi!: . hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3 at (unknown source) line (unknown line) : (unknown column)", var1, var2, var23, var79);
// 
//   }

  public void test262() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test262"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.CheckLevel var12 = null;
    com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var12, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var19 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
    java.lang.String[] var23 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var21, var23);
    com.google.javascript.rhino.Node var26 = null;
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var34 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
    java.lang.String[] var38 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var38);
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make(var21, var38);
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("", 0, 1, var10, var14, var38);
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var3, var6, var38);
    int var44 = var43.getCharno();
    com.google.javascript.jscomp.DiagnosticType var45 = var43.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);

  }

  public void test263() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test263"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : hi!: . hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", ".  at hi!. hi! at hi! line (unknown line) : (unknown column) line 10 : 1");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test264() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test264"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
    java.lang.String[] var13 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
    com.google.javascript.jscomp.DiagnosticType var16 = var15.getType();
    int var17 = var15.getCharno();
    boolean var19 = var15.equals((java.lang.Object)(short)1);
    java.lang.String var20 = var15.toString();
    com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    boolean var24 = var15.equals((java.lang.Object)"hi!");
    int var25 = var15.getCharno();
    com.google.javascript.jscomp.CheckLevel var29 = null;
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var36 = null;
    com.google.javascript.jscomp.CheckLevel var38 = null;
    com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var38, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var45 = null;
    com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.make("", var45, "hi!");
    java.lang.String[] var49 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var47, var49);
    com.google.javascript.rhino.Node var52 = null;
    com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var60 = null;
    com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.make("", var60, "hi!");
    java.lang.String[] var64 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var62, var64);
    com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!", var52, var55, var64);
    com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make(var47, var64);
    com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("", 0, 1, var36, var40, var64);
    com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var29, var32, var64);
    boolean var70 = var15.equals((java.lang.Object)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "hi!. hi! at hi! line (unknown line) : (unknown column)"+ "'", var20.equals("hi!. hi! at hi! line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);

  }

  public void test265() {}
//   public void test265() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test265"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!: ", "hi!. hi! at hi! line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.CheckLevel var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.make("", var11, "hi!");
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.rhino.Node var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
//     java.lang.String[] var29 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var27, var29);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", var17, var20, var29);
//     com.google.javascript.rhino.Node var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.make("", var41, "hi!");
//     java.lang.String[] var45 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var43, var45);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!", var33, var36, var45);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var15, var20, var45);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var9, var13, var45);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make(var5, var45);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make(". hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", var1, var2, var45);
// 
//   }

  public void test266() {}
//   public void test266() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test266"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", ": hi!");
//     int var9 = var5.compareTo(var8);
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.rhino.Node var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.make("", var21, "hi!");
//     java.lang.String[] var25 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var23, var25);
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", var13, var16, var25);
//     com.google.javascript.rhino.Node var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.make("", var37, "hi!");
//     java.lang.String[] var41 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var39, var41);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var41);
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var11, var16, var41);
//     com.google.javascript.jscomp.CheckLevel var49 = null;
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.make("", var49, "hi!");
//     java.lang.String[] var53 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var51, var53);
//     com.google.javascript.rhino.Node var56 = null;
//     com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var64 = null;
//     com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.make("", var64, "hi!");
//     java.lang.String[] var68 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var66, var68);
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!", var56, var59, var68);
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make(var51, var68);
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make(var16, var68);
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make(": : hi!", var1, var2, var5, var68);
// 
//   }

  public void test267() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test267"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(".  at (unknown source) line -3 : (unknown column)");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test268() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test268"); }


    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var20 = var16.compareTo(var19);
    com.google.javascript.rhino.Node var22 = null;
    com.google.javascript.rhino.Node var24 = null;
    com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var32 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.make("", var32, "hi!");
    java.lang.String[] var36 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var34, var36);
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", var24, var27, var36);
    com.google.javascript.rhino.Node var40 = null;
    com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var48 = null;
    com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("", var48, "hi!");
    java.lang.String[] var52 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var50, var52);
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", var40, var43, var52);
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var22, var27, var52);
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("", 100, 1, var13, var19, var52);
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make(": hi!", 0, 10, var6, var9, var52);
    java.lang.String[] var58 = null;
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", (-3), 0, var9, var58);
    com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var66 = var62.compareTo(var65);
    com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var73 = var69.compareTo(var72);
    int var74 = var62.compareTo(var69);
    int var75 = var9.compareTo(var69);
    java.lang.String var76 = var69.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ": "+ "'", var76.equals(": "));

  }

  public void test269() {}
//   public void test269() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test269"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var8 = var4.compareTo(var7);
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var15 = var11.compareTo(var14);
//     int var16 = var4.compareTo(var11);
//     com.google.javascript.rhino.Node var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", "hi!");
//     com.google.javascript.rhino.Node var23 = null;
//     com.google.javascript.rhino.Node var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
//     java.lang.String[] var37 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var35, var37);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", var25, var28, var37);
//     com.google.javascript.rhino.Node var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var49 = null;
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.make("", var49, "hi!");
//     java.lang.String[] var53 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var51, var53);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", var41, var44, var53);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var23, var28, var53);
//     com.google.javascript.rhino.Node var58 = null;
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var66 = null;
//     com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.make("", var66, "hi!");
//     java.lang.String[] var70 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var68, var70);
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!", var58, var61, var70);
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make(var28, var70);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make(": hi!", var18, var21, var70);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, var11, var70);
//     com.google.javascript.jscomp.CheckLevel var76 = null;
//     com.google.javascript.jscomp.MessageFormatter var77 = null;
//     java.lang.String var78 = var75.format(var76, var77);
// 
//   }

  public void test270() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test270"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning(". hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", ". hi! at (unknown source) line (unknown line) : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test271() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test271"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var5 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", var5, ".  at :  line -12 : 46");
    com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", ".  at (unknown source) line 1 : 10");
    com.google.javascript.jscomp.CheckLevel var14 = null;
    com.google.javascript.rhino.Node var16 = null;
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var24 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
    java.lang.String[] var28 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var26, var28);
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", var16, var19, var28);
    com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var34 = var19.compareTo(var33);
    java.lang.String[] var36 = new java.lang.String[] { "hi!: hi!: "};
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 46, (-3), var14, var33, var36);
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make(var10, var36);
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make(var7, var36);
    java.lang.String[] var40 = null;
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!: : ", 0, (-64), var3, var7, var40);
    int var42 = var41.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == (-64));

  }

  public void test272() {}
//   public void test272() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test272"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", ": hi!. hi! at hi! line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.rhino.Node var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.make("", var27, "hi!");
//     java.lang.String[] var31 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var29, var31);
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("", var19, var22, var31);
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     int var37 = var22.compareTo(var36);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var47 = null;
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.make("", var47, "hi!");
//     java.lang.String[] var51 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var49, var51);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("", var39, var42, var51);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", 1, 46, var17, var36, var51);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-12), 100, var10, var13, var51);
//     com.google.javascript.jscomp.DiagnosticType var56 = var55.getType();
//     com.google.javascript.jscomp.CheckLevel var61 = null;
//     com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.make("", var61, "hi!");
//     java.lang.String[] var65 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var63, var65);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make(": ", 46, (-3), var6, var56, var65);
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line -67 : 0", var1, var2, var65);
// 
//   }

  public void test273() {}
//   public void test273() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test273"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", ": ");
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.rhino.Node var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.make("", var21, "hi!");
//     java.lang.String[] var25 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var23, var25);
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", var13, var16, var25);
//     com.google.javascript.rhino.Node var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.make("", var37, "hi!");
//     java.lang.String[] var41 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var39, var41);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var41);
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var11, var16, var41);
//     com.google.javascript.rhino.Node var46 = null;
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var54 = null;
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.make("", var54, "hi!");
//     java.lang.String[] var58 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var56, var58);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", var46, var49, var58);
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make(var16, var58);
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", 10, 149, var9, var58);
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", (-12), 0, var3, var58);
// 
//   }

  public void test274() {}
//   public void test274() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test274"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!");
//     java.lang.String[] var8 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var6, var8);
//     boolean var11 = var9.equals((java.lang.Object)": ");
//     com.google.javascript.jscomp.DiagnosticType var12 = var9.getType();
//     int var13 = var9.getCharno();
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.MessageFormatter var15 = null;
//     java.lang.String var16 = var9.format(var14, var15);
// 
//   }

  public void test275() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test275"); }


    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var20 = var16.compareTo(var19);
    com.google.javascript.rhino.Node var22 = null;
    com.google.javascript.rhino.Node var24 = null;
    com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var32 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.make("", var32, "hi!");
    java.lang.String[] var36 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var34, var36);
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", var24, var27, var36);
    com.google.javascript.rhino.Node var40 = null;
    com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var48 = null;
    com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("", var48, "hi!");
    java.lang.String[] var52 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var50, var52);
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", var40, var43, var52);
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var22, var27, var52);
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("", 100, 1, var13, var19, var52);
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make(": hi!", 0, 10, var6, var9, var52);
    java.lang.String[] var58 = null;
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", (-3), 0, var9, var58);
    java.lang.String var60 = var9.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ": "+ "'", var60.equals(": "));

  }

  public void test276() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test276"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : hi!", var1, ".  at (unknown source) line -3 : (unknown column): .  at (unknown source) line 1 : 10: hi!: hi!: ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test277() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test277"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!. hi! at (unknown source) line -67 : 0");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test278() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test278"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning(": hi!. hi! at (unknown source) line (unknown line) : (unknown column)", ".  at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test279() {}
//   public void test279() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test279"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: ");
// 
//   }

  public void test280() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test280"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning(".  at (unknown source) line -3 : (unknown column): : : hi!. hi! at hi! line (unknown line) : (unknown column)", ". hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test281() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test281"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    boolean var4 = var2.equals((java.lang.Object)": ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);

  }

  public void test282() {}
//   public void test282() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test282"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var8 = var4.compareTo(var7);
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var15 = var11.compareTo(var14);
//     int var16 = var4.compareTo(var11);
//     com.google.javascript.rhino.Node var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", "hi!");
//     com.google.javascript.rhino.Node var23 = null;
//     com.google.javascript.rhino.Node var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
//     java.lang.String[] var37 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var35, var37);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", var25, var28, var37);
//     com.google.javascript.rhino.Node var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var49 = null;
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.make("", var49, "hi!");
//     java.lang.String[] var53 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var51, var53);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", var41, var44, var53);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var23, var28, var53);
//     com.google.javascript.rhino.Node var58 = null;
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var66 = null;
//     com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.make("", var66, "hi!");
//     java.lang.String[] var70 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var68, var70);
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!", var58, var61, var70);
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make(var28, var70);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make(": hi!", var18, var21, var70);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, var11, var70);
//     int var76 = var75.getCharno();
//     com.google.javascript.jscomp.CheckLevel var77 = null;
//     com.google.javascript.jscomp.MessageFormatter var78 = null;
//     java.lang.String var79 = var75.format(var77, var78);
// 
//   }

  public void test283() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test283"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.CheckLevel var12 = null;
    com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var12, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var19 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
    java.lang.String[] var23 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var21, var23);
    com.google.javascript.rhino.Node var26 = null;
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var34 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
    java.lang.String[] var38 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var38);
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make(var21, var38);
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("", 0, 1, var10, var14, var38);
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var3, var6, var38);
    int var44 = var43.getCharno();
    int var45 = var43.getCharno();
    com.google.javascript.jscomp.DiagnosticType var46 = var43.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);

  }

  public void test284() {}
//   public void test284() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test284"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     java.lang.String[] var13 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
//     com.google.javascript.jscomp.DiagnosticType var16 = var15.getType();
//     int var17 = var15.getCharno();
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
//     java.lang.String var25 = var24.toString();
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
//     com.google.javascript.rhino.Node var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var46 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.make("", var46, "hi!");
//     java.lang.String[] var50 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var48, var50);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", var38, var41, var50);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var33, var36, var50);
//     com.google.javascript.jscomp.DiagnosticType var54 = var53.getType();
//     int var55 = var31.compareTo(var54);
//     com.google.javascript.rhino.Node var57 = null;
//     com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     java.lang.String[] var62 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var57, var60, var62);
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-39), 10, var54, var62);
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column): : hi!", 2, (-1), var21, var24, var62);
//     boolean var66 = var15.equals((java.lang.Object)var62);
//     com.google.javascript.jscomp.CheckLevel var67 = null;
//     com.google.javascript.jscomp.MessageFormatter var68 = null;
//     java.lang.String var69 = var15.format(var67, var68);
// 
//   }

  public void test285() {}
//   public void test285() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test285"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var3, "hi!.  at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!.  at hi!: hi! line (unknown line) : 10");
//     com.google.javascript.rhino.Node var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("", var22, "hi!");
//     java.lang.String[] var26 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var24, var26);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var14, var17, var26);
//     com.google.javascript.jscomp.DiagnosticType var29 = var28.getType();
//     com.google.javascript.rhino.Node var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.make("", var39, "hi!");
//     java.lang.String[] var43 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var41, var43);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var31, var34, var43);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make(var29, var43);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10", (-12), 100, var9, var12, var43);
//     com.google.javascript.rhino.Node var49 = null;
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var54 = null;
//     com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var62 = null;
//     com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.make("", var62, "hi!");
//     java.lang.String[] var66 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var64, var66);
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!", var54, var57, var66);
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var49, var52, var66);
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make(var12, var66);
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", var1, var5, var66);
//     com.google.javascript.jscomp.CheckLevel var72 = null;
//     com.google.javascript.jscomp.MessageFormatter var73 = null;
//     java.lang.String var74 = var71.format(var72, var73);
// 
//   }

  public void test286() {}
//   public void test286() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test286"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.error(".  at (unknown source) line 1 : 10", "hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
//     com.google.javascript.jscomp.CheckLevel var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!");
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var25 = var21.compareTo(var24);
//     com.google.javascript.rhino.Node var27 = null;
//     com.google.javascript.rhino.Node var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.make("", var37, "hi!");
//     java.lang.String[] var41 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var39, var41);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var41);
//     com.google.javascript.rhino.Node var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.make("", var53, "hi!");
//     java.lang.String[] var57 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var55, var57);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", var45, var48, var57);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var27, var32, var57);
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("", 100, 1, var18, var24, var57);
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("", 0, (-1), var11, var14, var57);
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!", var4, var7, var57);
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var1, var2, var57);
// 
//   }

  public void test287() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test287"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", var1, ": hi!. hi! at hi! line (unknown line) : (unknown column): hi!. hi! at hi!: hi! line 0 : -3");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test288() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test288"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : hi!", ". hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
    com.google.javascript.rhino.Node var8 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ".  at (unknown source) line 1 : 10");
    com.google.javascript.rhino.Node var13 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var21 = null;
    com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.make("", var21, "hi!");
    java.lang.String[] var25 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var23, var25);
    com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", var13, var16, var25);
    int var28 = var27.getCharno();
    com.google.javascript.jscomp.DiagnosticType var29 = var27.getType();
    boolean var30 = var11.equals((java.lang.Object)var29);
    com.google.javascript.jscomp.CheckLevel var35 = null;
    com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.make("", var35, "hi!");
    java.lang.String[] var39 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var37, var39);
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("", var8, var29, var39);
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make(". hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", 4, 10, var3, var6, var39);
    com.google.javascript.jscomp.DiagnosticType var43 = var42.getType();
    com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.error("hi!.  at hi!: hi! line (unknown line) : 10", "");
    com.google.javascript.jscomp.CheckLevel var53 = null;
    com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
    java.lang.String var57 = var56.toString();
    com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
    com.google.javascript.rhino.Node var65 = null;
    com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var70 = null;
    com.google.javascript.jscomp.DiagnosticType var73 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var78 = null;
    com.google.javascript.jscomp.DiagnosticType var80 = com.google.javascript.jscomp.DiagnosticType.make("", var78, "hi!");
    java.lang.String[] var82 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var80, var82);
    com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("hi!", var70, var73, var82);
    com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var65, var68, var82);
    com.google.javascript.jscomp.DiagnosticType var86 = var85.getType();
    int var87 = var63.compareTo(var86);
    com.google.javascript.rhino.Node var89 = null;
    com.google.javascript.jscomp.DiagnosticType var92 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
    java.lang.String[] var94 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var89, var92, var94);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-39), 10, var86, var94);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column): : hi!", 2, (-1), var53, var56, var94);
    com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : -3", 0, (-61), var49, var94);
    com.google.javascript.jscomp.JSError var99 = com.google.javascript.jscomp.JSError.make(var43, var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "hi!. hi! at (unknown source) line (unknown line) : (unknown column): "+ "'", var57.equals("hi!. hi! at (unknown source) line (unknown line) : (unknown column): "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var99);

  }

  public void test289() {}
//   public void test289() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test289"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var10 = var6.compareTo(var9);
//     com.google.javascript.rhino.Node var12 = null;
//     com.google.javascript.rhino.Node var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("", var22, "hi!");
//     java.lang.String[] var26 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var24, var26);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var14, var17, var26);
//     com.google.javascript.rhino.Node var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var38 = null;
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.make("", var38, "hi!");
//     java.lang.String[] var42 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var40, var42);
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", var30, var33, var42);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var12, var17, var42);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("", 100, 1, var3, var9, var42);
//     java.lang.String var47 = var46.toString();
//     com.google.javascript.jscomp.CheckLevel var48 = null;
//     com.google.javascript.jscomp.MessageFormatter var49 = null;
//     java.lang.String var50 = var46.format(var48, var49);
// 
//   }

  public void test290() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test290"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error(".  at (unknown source) line -3 : (unknown column): : : hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!. hi!.  at hi!: hi! line (unknown line) : 10 at .  at (unknown source) line 1 : 10 line -12 : 100");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test291() {}
//   public void test291() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test291"); }
// 
// 
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
//     java.lang.String[] var18 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var16, var18);
//     com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var18);
//     com.google.javascript.rhino.Node var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.make("", var30, "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var32, var34);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var22, var25, var34);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var4, var9, var34);
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var48 = var44.compareTo(var47);
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var55 = var51.compareTo(var54);
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var62 = var58.compareTo(var61);
//     int var63 = var51.compareTo(var58);
//     boolean var64 = var44.equals((java.lang.Object)var58);
//     com.google.javascript.rhino.Node var66 = null;
//     com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var74 = null;
//     com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.make("", var74, "hi!");
//     java.lang.String[] var78 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var76, var78);
//     com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("", var66, var69, var78);
//     com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("", 0, 1, var41, var44, var78);
//     com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, (-3), var9, var78);
//     int var83 = var82.getCharno();
//     java.lang.String var84 = var82.toString();
//     int var85 = var82.getCharno();
//     com.google.javascript.jscomp.CheckLevel var86 = null;
//     com.google.javascript.jscomp.MessageFormatter var87 = null;
//     java.lang.String var88 = var82.format(var86, var87);
// 
//   }

  public void test292() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test292"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var8 = null;
    com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("", var8, "hi!");
    java.lang.String[] var12 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var13 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var10, var12);
    boolean var15 = var10.equals((java.lang.Object)100.0d);
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var25 = null;
    com.google.javascript.jscomp.CheckLevel var27 = null;
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.make("", var27, "hi!");
    com.google.javascript.rhino.Node var31 = null;
    com.google.javascript.rhino.Node var33 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var41 = null;
    com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.make("", var41, "hi!");
    java.lang.String[] var45 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var43, var45);
    com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!", var33, var36, var45);
    com.google.javascript.rhino.Node var49 = null;
    com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var57 = null;
    com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.make("", var57, "hi!");
    java.lang.String[] var61 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var59, var61);
    com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!", var49, var52, var61);
    com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var31, var36, var61);
    com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var25, var29, var61);
    com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make(var21, var61);
    com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make(var18, var61);
    boolean var68 = var10.equals((java.lang.Object)var18);
    com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", "hi!: hi!: ");
    com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.warning(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", "hi!: hi!");
    com.google.javascript.jscomp.DiagnosticType var77 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
    com.google.javascript.jscomp.CheckLevel var81 = null;
    com.google.javascript.jscomp.DiagnosticType var84 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var89 = null;
    com.google.javascript.jscomp.DiagnosticType var91 = com.google.javascript.jscomp.DiagnosticType.make("", var89, "hi!");
    java.lang.String[] var93 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var91, var93);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-8), (-64), var81, var84, var93);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make(var77, var93);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make(var74, var93);
    com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make(var71, var93);
    com.google.javascript.jscomp.JSError var99 = com.google.javascript.jscomp.JSError.make(". hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", 0, 4, var3, var10, var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var99);

  }

  public void test293() {}
//   public void test293() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test293"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : hi!: . hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
// 
//   }

  public void test294() {}
//   public void test294() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test294"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     java.lang.String[] var13 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
//     int var16 = var15.getCharno();
//     com.google.javascript.jscomp.DiagnosticType var17 = var15.getType();
//     java.lang.String var18 = var15.toString();
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("", var29, "hi!");
//     java.lang.String[] var33 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var31, var33);
//     com.google.javascript.rhino.Node var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.make("", var44, "hi!");
//     java.lang.String[] var48 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var46, var48);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", var36, var39, var48);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make(var31, var48);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", (-1), (-3), var24, var48);
//     boolean var53 = var15.equals((java.lang.Object)var52);
//     com.google.javascript.jscomp.CheckLevel var54 = null;
//     com.google.javascript.jscomp.MessageFormatter var55 = null;
//     java.lang.String var56 = var15.format(var54, var55);
// 
//   }

  public void test295() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test295"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error(": hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.rhino.Node var7 = null;
    com.google.javascript.rhino.Node var9 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var17 = null;
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
    java.lang.String[] var21 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var19, var21);
    com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var21);
    com.google.javascript.rhino.Node var25 = null;
    com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var33 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
    java.lang.String[] var37 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var35, var37);
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", var25, var28, var37);
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var7, var12, var37);
    com.google.javascript.rhino.Node var42 = null;
    com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var50 = null;
    com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.make("", var50, "hi!");
    java.lang.String[] var54 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var52, var54);
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", var42, var45, var54);
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make(var12, var54);
    java.lang.String var58 = var12.toString();
    int var59 = var5.compareTo(var12);
    boolean var60 = var2.equals((java.lang.Object)var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "hi!: hi!"+ "'", var58.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);

  }

  public void test296() {}
//   public void test296() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test296"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at hi!.  at hi!: hi! line (unknown line) : 10 line 54 : -3");
// 
//   }

  public void test297() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test297"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("", var1, ".  at (unknown source) line 100 : 1");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test298() {}
//   public void test298() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test298"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!: hi!");
// 
//   }

  public void test299() {}
//   public void test299() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test299"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ".  at (unknown source) line 100 : 1");
// 
//   }

  public void test300() {}
//   public void test300() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test300"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     java.lang.String[] var4 = new java.lang.String[] { "hi!: hi!: "};
//     com.google.javascript.jscomp.JSError var5 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column): : hi!", var1, var2, var4);
// 
//   }

  public void test301() {}
//   public void test301() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test301"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi!.  at hi!: hi! line (unknown line) : 10 at .  at (unknown source) line 1 : 10 line -12 : 100: ");
// 
//   }

  public void test302() {}
//   public void test302() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test302"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var12, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var21, var23);
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     java.lang.String[] var38 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var38);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make(var21, var38);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("", 0, 1, var10, var14, var38);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var3, var6, var38);
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.MessageFormatter var45 = null;
//     java.lang.String var46 = var43.format(var44, var45);
// 
//   }

  public void test303() {}
//   public void test303() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test303"); }
// 
// 
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
//     java.lang.String[] var21 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var19, var21);
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var21);
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var4, var7, var21);
//     java.lang.String[] var25 = null;
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make(".  at :  line -12 : 46", 3, (-39), var7, var25);
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.MessageFormatter var28 = null;
//     java.lang.String var29 = var26.format(var27, var28);
// 
//   }

  public void test304() {}
//   public void test304() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test304"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!");
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
//     java.lang.String[] var22 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var20, var22);
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var22);
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     java.lang.String[] var38 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var38);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var8, var13, var38);
//     com.google.javascript.rhino.Node var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
//     java.lang.String[] var55 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var53, var55);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var55);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make(var13, var55);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("", 0, 0, var6, var55);
//     com.google.javascript.jscomp.CheckLevel var60 = null;
//     com.google.javascript.jscomp.MessageFormatter var61 = null;
//     java.lang.String var62 = var59.format(var60, var61);
// 
//   }

  public void test305() {}
//   public void test305() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test305"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ".  at :  line -12 : 46");
// 
//   }

  public void test306() {}
//   public void test306() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test306"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.rhino.Node var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error(". hi! at (unknown source) line (unknown line) : (unknown column)", "hi!. hi! at hi! line (unknown line) : (unknown column): : hi!");
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var21, var23);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var11, var14, var23);
//     com.google.javascript.jscomp.DiagnosticType var26 = var25.getType();
//     com.google.javascript.rhino.Node var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.make("", var36, "hi!");
//     java.lang.String[] var40 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var38, var40);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", var28, var31, var40);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make(var26, var40);
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make(var9, var40);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line (unknown line) : (unknown column)", var3, var6, var40);
//     com.google.javascript.jscomp.DiagnosticType var46 = var45.getType();
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
//     com.google.javascript.jscomp.CheckLevel var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var61 = null;
//     com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.make("", var61, "hi!");
//     java.lang.String[] var65 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var63, var65);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-8), (-64), var53, var56, var65);
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make(var49, var65);
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!", var1, var46, var65);
//     com.google.javascript.jscomp.CheckLevel var70 = null;
//     com.google.javascript.jscomp.MessageFormatter var71 = null;
//     java.lang.String var72 = var69.format(var70, var71);
// 
//   }

  public void test307() {}
//   public void test307() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test307"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!.  at (unknown source) line (unknown line) : (unknown column)", var4, "");
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make(": hi!. hi! at hi! line (unknown line) : (unknown column)", var8, ": hi!. hi! at hi! line (unknown line) : (unknown column)");
//     int var11 = var6.compareTo(var10);
//     java.lang.String[] var12 = null;
//     com.google.javascript.jscomp.JSError var13 = com.google.javascript.jscomp.JSError.make("", var1, var2, var10, var12);
// 
//   }

  public void test308() {}
//   public void test308() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test308"); }
// 
// 
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
//     java.lang.String[] var18 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var16, var18);
//     com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var18);
//     com.google.javascript.rhino.Node var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.make("", var30, "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var32, var34);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var22, var25, var34);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var4, var9, var34);
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var48 = var44.compareTo(var47);
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var55 = var51.compareTo(var54);
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var62 = var58.compareTo(var61);
//     int var63 = var51.compareTo(var58);
//     boolean var64 = var44.equals((java.lang.Object)var58);
//     com.google.javascript.rhino.Node var66 = null;
//     com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var74 = null;
//     com.google.javascript.jscomp.DiagnosticType var76 = com.google.javascript.jscomp.DiagnosticType.make("", var74, "hi!");
//     java.lang.String[] var78 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var76, var78);
//     com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("", var66, var69, var78);
//     com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("", 0, 1, var41, var44, var78);
//     com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 0, (-3), var9, var78);
//     int var83 = var82.getCharno();
//     java.lang.String var84 = var82.toString();
//     com.google.javascript.jscomp.CheckLevel var85 = null;
//     com.google.javascript.jscomp.MessageFormatter var86 = null;
//     java.lang.String var87 = var82.format(var85, var86);
// 
//   }

  public void test309() {}
//   public void test309() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test309"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var0 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
//     java.lang.String[] var18 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var16, var18);
//     com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("", var6, var9, var18);
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     int var24 = var9.compareTo(var23);
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     java.lang.String[] var38 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("", var26, var29, var38);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", 1, 46, var4, var23, var38);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make(var0, var38);
// 
//   }

  public void test310() {}
//   public void test310() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test310"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ". hi! at hi! line 1 : (unknown column)");
// 
//   }

  public void test311() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test311"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : hi!: . hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test312() {}
//   public void test312() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test312"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var4, ": hi!");
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
//     java.lang.String[] var22 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var20, var22);
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var22);
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     java.lang.String[] var38 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var38);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var8, var13, var38);
//     com.google.javascript.rhino.Node var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
//     java.lang.String[] var55 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var53, var55);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var55);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make(var13, var55);
//     int var59 = var6.compareTo(var13);
//     java.lang.String[] var60 = null;
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("", var1, var2, var6, var60);
// 
//   }

  public void test313() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test313"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var10 = var6.compareTo(var9);
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var17 = var13.compareTo(var16);
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var24 = var20.compareTo(var23);
    int var25 = var13.compareTo(var20);
    boolean var26 = var6.equals((java.lang.Object)var20);
    com.google.javascript.rhino.Node var28 = null;
    com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var36 = null;
    com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.make("", var36, "hi!");
    java.lang.String[] var40 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var38, var40);
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("", var28, var31, var40);
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("", 0, 1, var3, var6, var40);
    com.google.javascript.jscomp.DiagnosticType var44 = var43.getType();
    com.google.javascript.jscomp.CheckLevel var48 = null;
    com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var55 = null;
    com.google.javascript.jscomp.CheckLevel var57 = null;
    com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var57, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var64 = null;
    com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.make("", var64, "hi!");
    java.lang.String[] var68 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var66, var68);
    com.google.javascript.rhino.Node var71 = null;
    com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var79 = null;
    com.google.javascript.jscomp.DiagnosticType var81 = com.google.javascript.jscomp.DiagnosticType.make("", var79, "hi!");
    java.lang.String[] var83 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var81, var83);
    com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!", var71, var74, var83);
    com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make(var66, var83);
    com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("", 0, 1, var55, var59, var83);
    com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!.  at (unknown source) line (unknown line) : (unknown column)", 54, 46, var48, var51, var83);
    boolean var89 = var44.equals((java.lang.Object)var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == false);

  }

  public void test314() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test314"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at (unknown source) line (unknown line) : (unknown column)");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test315() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test315"); }


    com.google.javascript.rhino.Node var4 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", "hi!");
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
    com.google.javascript.rhino.Node var22 = null;
    com.google.javascript.rhino.Node var24 = null;
    com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var32 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.make("", var32, "hi!");
    java.lang.String[] var36 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var34, var36);
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", var24, var27, var36);
    com.google.javascript.rhino.Node var40 = null;
    com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var48 = null;
    com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("", var48, "hi!");
    java.lang.String[] var52 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var50, var52);
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", var40, var43, var52);
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var22, var27, var52);
    com.google.javascript.rhino.Node var57 = null;
    com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var65 = null;
    com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.make("", var65, "hi!");
    java.lang.String[] var69 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var67, var69);
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", var57, var60, var69);
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make(var27, var69);
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("", 0, 0, var20, var69);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("", (-64), (-8), var13, var69);
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line -67 : 0", var4, var7, var69);
    java.lang.String[] var76 = null;
    com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!: ", 0, (-149), var7, var76);
    java.lang.Object var78 = null;
    boolean var79 = var7.equals(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);

  }

  public void test316() {}
//   public void test316() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test316"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var13 = var9.compareTo(var12);
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.rhino.Node var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
//     java.lang.String[] var29 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var27, var29);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", var17, var20, var29);
//     com.google.javascript.rhino.Node var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.make("", var41, "hi!");
//     java.lang.String[] var45 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var43, var45);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!", var33, var36, var45);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var15, var20, var45);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("", 100, 1, var6, var12, var45);
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", "hi!: hi!: ");
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.warning(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
//     com.google.javascript.jscomp.CheckLevel var62 = null;
//     com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var70 = null;
//     com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.make("", var70, "hi!");
//     java.lang.String[] var74 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var72, var74);
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-8), (-64), var62, var65, var74);
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make(var58, var74);
//     com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make(var55, var74);
//     com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make(var52, var74);
//     com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make(". hi! at hi! line 1 : (unknown column)", var1, var2, var12, var74);
// 
//   }

  public void test317() {}
//   public void test317() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test317"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     java.lang.String[] var14 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var12, var14);
//     com.google.javascript.rhino.Node var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
//     java.lang.String[] var29 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var27, var29);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", var17, var20, var29);
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make(var12, var29);
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", (-1), (-3), var5, var29);
//     java.lang.String var34 = var33.toString();
//     java.lang.String var35 = var33.toString();
//     int var36 = var33.getCharno();
//     com.google.javascript.jscomp.DiagnosticType var37 = var33.getType();
//     com.google.javascript.jscomp.DiagnosticType var38 = var33.getType();
//     com.google.javascript.jscomp.CheckLevel var39 = null;
//     com.google.javascript.jscomp.MessageFormatter var40 = null;
//     java.lang.String var41 = var33.format(var39, var40);
// 
//   }

  public void test318() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test318"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var16 = null;
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var18, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var25 = null;
    com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
    java.lang.String[] var29 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var27, var29);
    com.google.javascript.rhino.Node var32 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var40 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("", var40, "hi!");
    java.lang.String[] var44 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var42, var44);
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var44);
    com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make(var27, var44);
    com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("", 0, 1, var16, var20, var44);
    com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var9, var12, var44);
    com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("", (-3), (-12), var5, var44);
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: ", "hi!: hi!");
    boolean var54 = var50.equals((java.lang.Object)"hi!: hi!");
    com.google.javascript.jscomp.DiagnosticType var55 = var50.getType();
    com.google.javascript.rhino.Node var57 = null;
    com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.disabled(": ", "hi!: hi!: ");
    java.lang.String[] var61 = null;
    com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", var57, var60, var61);
    java.lang.Object var63 = null;
    boolean var64 = var62.equals(var63);
    boolean var65 = var50.equals((java.lang.Object)var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);

  }

  public void test319() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test319"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column): : hi!", ".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
    com.google.javascript.jscomp.CheckLevel var8 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", ": hi!. hi! at hi! line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.rhino.Node var17 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var25 = null;
    com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
    java.lang.String[] var29 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var27, var29);
    com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("", var17, var20, var29);
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    int var35 = var20.compareTo(var34);
    com.google.javascript.rhino.Node var37 = null;
    com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var45 = null;
    com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.make("", var45, "hi!");
    java.lang.String[] var49 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var47, var49);
    com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("", var37, var40, var49);
    com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", 1, 46, var15, var34, var49);
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-12), 100, var8, var11, var49);
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : -3: ", var1, var4, var49);
    int var55 = var54.getCharno();
    int var56 = var54.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == (-1));

  }

  public void test320() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test320"); }


    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var20 = var16.compareTo(var19);
    com.google.javascript.rhino.Node var22 = null;
    com.google.javascript.rhino.Node var24 = null;
    com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var32 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.make("", var32, "hi!");
    java.lang.String[] var36 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var34, var36);
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", var24, var27, var36);
    com.google.javascript.rhino.Node var40 = null;
    com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var48 = null;
    com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("", var48, "hi!");
    java.lang.String[] var52 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var50, var52);
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", var40, var43, var52);
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var22, var27, var52);
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("", 100, 1, var13, var19, var52);
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make(": hi!", 0, 10, var6, var9, var52);
    java.lang.String[] var58 = null;
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", (-3), 0, var9, var58);
    int var60 = var59.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 0);

  }

  public void test321() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test321"); }


    com.google.javascript.jscomp.CheckLevel var4 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!");
    java.lang.String[] var8 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var6, var8);
    boolean var11 = var9.equals((java.lang.Object)(byte)(-1));
    com.google.javascript.jscomp.DiagnosticType var12 = var9.getType();
    java.lang.String var13 = var9.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ". hi! at hi! line 1 : (unknown column)"+ "'", var13.equals(". hi! at hi! line 1 : (unknown column)"));

  }

  public void test322() {}
//   public void test322() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test322"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     java.lang.String[] var13 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
//     com.google.javascript.jscomp.DiagnosticType var16 = var15.getType();
//     int var17 = var15.getCharno();
//     boolean var19 = var15.equals((java.lang.Object)(short)1);
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.MessageFormatter var21 = null;
//     java.lang.String var22 = var15.format(var20, var21);
// 
//   }

  public void test323() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test323"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!. hi!.  at hi!: hi! line (unknown line) : 10 at .  at (unknown source) line 1 : 10 line -12 : 100: ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test324() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test324"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
    java.lang.String var3 = var2.toString();
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.rhino.Node var8 = null;
    com.google.javascript.rhino.Node var10 = null;
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
    java.lang.String[] var22 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var20, var22);
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var22);
    com.google.javascript.rhino.Node var26 = null;
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var34 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
    java.lang.String[] var38 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var38);
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var8, var13, var38);
    com.google.javascript.rhino.Node var43 = null;
    com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var51 = null;
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
    java.lang.String[] var55 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var53, var55);
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var55);
    com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make(var13, var55);
    java.lang.String var59 = var13.toString();
    int var60 = var6.compareTo(var13);
    int var61 = var2.compareTo(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "hi!. hi! at (unknown source) line (unknown line) : (unknown column): "+ "'", var3.equals("hi!. hi! at (unknown source) line (unknown line) : (unknown column): "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "hi!: hi!"+ "'", var59.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 64);

  }

  public void test325() {}
//   public void test325() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test325"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.warning(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("", var23, "hi!");
//     java.lang.String[] var27 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var25, var27);
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-8), (-64), var15, var18, var27);
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make(var11, var27);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make(var8, var27);
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make(var5, var27);
//     com.google.javascript.jscomp.CheckLevel var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.make("", var37, "");
//     com.google.javascript.rhino.Node var41 = null;
//     com.google.javascript.rhino.Node var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
//     java.lang.String[] var55 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var53, var55);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var55);
//     com.google.javascript.rhino.Node var59 = null;
//     com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var67 = null;
//     com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.make("", var67, "hi!");
//     java.lang.String[] var71 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var69, var71);
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", var59, var62, var71);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var41, var46, var71);
//     com.google.javascript.rhino.Node var76 = null;
//     com.google.javascript.jscomp.DiagnosticType var79 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var84 = null;
//     com.google.javascript.jscomp.DiagnosticType var86 = com.google.javascript.jscomp.DiagnosticType.make("", var84, "hi!");
//     java.lang.String[] var88 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var86, var88);
//     com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!", var76, var79, var88);
//     com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make(var46, var88);
//     com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("", (-3), (-1), var39, var88);
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("", var1, var2, var5, var88);
// 
//   }

  public void test326() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test326"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning(". hi! at (unknown source) line (unknown line) : (unknown column)", "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test327() {}
//   public void test327() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test327"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!: : ", "hi!: ");
//     java.lang.String var6 = var5.toString();
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!.  at hi!: hi! line (unknown line) : 10", "");
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
//     java.lang.String var20 = var19.toString();
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
//     com.google.javascript.rhino.Node var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.make("", var41, "hi!");
//     java.lang.String[] var45 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var43, var45);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!", var33, var36, var45);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var28, var31, var45);
//     com.google.javascript.jscomp.DiagnosticType var49 = var48.getType();
//     int var50 = var26.compareTo(var49);
//     com.google.javascript.rhino.Node var52 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     java.lang.String[] var57 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var52, var55, var57);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-39), 10, var49, var57);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column): : hi!", 2, (-1), var16, var19, var57);
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : -3", 0, (-61), var12, var57);
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var1, var2, var5, var57);
// 
//   }

  public void test328() {}
//   public void test328() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test328"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", "hi!");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.disabled("", ": ");
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
//     com.google.javascript.rhino.Node var23 = null;
//     com.google.javascript.rhino.Node var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
//     java.lang.String[] var37 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var35, var37);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", var25, var28, var37);
//     com.google.javascript.rhino.Node var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var49 = null;
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.make("", var49, "hi!");
//     java.lang.String[] var53 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var51, var53);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", var41, var44, var53);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var23, var28, var53);
//     com.google.javascript.rhino.Node var58 = null;
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var66 = null;
//     com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.make("", var66, "hi!");
//     java.lang.String[] var70 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var68, var70);
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!", var58, var61, var70);
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make(var28, var70);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("", 0, 0, var21, var70);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("", (-64), (-8), var14, var70);
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make(var8, var70);
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", var1, var2, var5, var70);
// 
//   }

  public void test329() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test329"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var7 = null;
    com.google.javascript.rhino.Node var9 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var17 = null;
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
    java.lang.String[] var21 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var19, var21);
    com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var21);
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var27 = var12.compareTo(var26);
    java.lang.String[] var29 = new java.lang.String[] { "hi!: hi!: "};
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 46, (-3), var7, var26, var29);
    com.google.javascript.jscomp.CheckLevel var35 = null;
    com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.make("", var35, "hi!");
    com.google.javascript.rhino.Node var39 = null;
    com.google.javascript.rhino.Node var41 = null;
    com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var49 = null;
    com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.make("", var49, "hi!");
    java.lang.String[] var53 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var51, var53);
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", var41, var44, var53);
    com.google.javascript.rhino.Node var57 = null;
    com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var65 = null;
    com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.make("", var65, "hi!");
    java.lang.String[] var69 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var67, var69);
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", var57, var60, var69);
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var39, var44, var69);
    com.google.javascript.rhino.Node var74 = null;
    com.google.javascript.jscomp.DiagnosticType var77 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var82 = null;
    com.google.javascript.jscomp.DiagnosticType var84 = com.google.javascript.jscomp.DiagnosticType.make("", var82, "hi!");
    java.lang.String[] var86 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var84, var86);
    com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!", var74, var77, var86);
    com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make(var44, var86);
    com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("", 0, 0, var37, var86);
    com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 3, 0, var3, var26, var86);
    int var92 = var91.getCharno();
    java.lang.String var93 = var91.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + ".  at hi!.  at hi!: hi! line (unknown line) : 10 line 3 : 0"+ "'", var93.equals(".  at hi!.  at hi!: hi! line (unknown line) : 10 line 3 : 0"));

  }

  public void test330() {}
//   public void test330() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test330"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
//     java.lang.String[] var21 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var19, var21);
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var21);
//     com.google.javascript.jscomp.DiagnosticType var24 = var23.getType();
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     java.lang.String[] var38 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var38);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make(var24, var38);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make(var7, var38);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("", 39, (-1), var3, var4, var38);
// 
//   }

  public void test331() {}
//   public void test331() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test331"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ".  at (unknown source) line (unknown line) : (unknown column)");
// 
//   }

  public void test332() {}
//   public void test332() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test332"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     java.lang.String[] var13 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
//     com.google.javascript.jscomp.DiagnosticType var16 = var15.getType();
//     int var17 = var15.getCharno();
//     boolean var19 = var15.equals((java.lang.Object)(short)1);
//     java.lang.String var20 = var15.toString();
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     boolean var24 = var15.equals((java.lang.Object)"hi!");
//     boolean var26 = var15.equals((java.lang.Object)(byte)100);
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var33 = var29.compareTo(var32);
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var40 = var36.compareTo(var39);
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var47 = var43.compareTo(var46);
//     int var48 = var36.compareTo(var43);
//     boolean var49 = var29.equals((java.lang.Object)var43);
//     boolean var50 = var15.equals((java.lang.Object)var43);
//     int var51 = var15.getCharno();
//     com.google.javascript.jscomp.CheckLevel var52 = null;
//     com.google.javascript.jscomp.MessageFormatter var53 = null;
//     java.lang.String var54 = var15.format(var52, var53);
// 
//   }

  public void test333() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test333"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(".  at (unknown source) line -3 : (unknown column): : : hi!. hi! at hi! line (unknown line) : (unknown column)");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test334() {}
//   public void test334() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test334"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ".  at (unknown source) line -3 : (unknown column): : : hi!. hi! at hi! line (unknown line) : (unknown column)");
// 
//   }

  public void test335() {}
//   public void test335() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test335"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ". hi! at hi! line 0 : (unknown column)");
// 
//   }

  public void test336() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test336"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled(": ", "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : hi!: . hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.warning("hi!.  at hi!: hi! line (unknown line) : 10", "hi!. hi! at hi! line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var10 = null;
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
    java.lang.String[] var22 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var20, var22);
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var22);
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", (-1), 2, var8, var22);
    com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make(var2, var22);
    java.lang.String var27 = var2.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ": : hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : hi!: . hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): "+ "'", var27.equals(": : hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : hi!: . hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): "));

  }

  public void test337() {}
//   public void test337() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test337"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : hi!", ". hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
//     com.google.javascript.rhino.Node var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ".  at (unknown source) line 1 : 10");
//     com.google.javascript.rhino.Node var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
//     java.lang.String[] var29 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var27, var29);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", var17, var20, var29);
//     int var32 = var31.getCharno();
//     com.google.javascript.jscomp.DiagnosticType var33 = var31.getType();
//     boolean var34 = var15.equals((java.lang.Object)var33);
//     com.google.javascript.jscomp.CheckLevel var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.make("", var39, "hi!");
//     java.lang.String[] var43 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var41, var43);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("", var12, var33, var43);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make(". hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", 4, 10, var7, var10, var43);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("", 109, 3, var3, var43);
// 
//   }

  public void test338() {}
//   public void test338() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test338"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
// 
//   }

  public void test339() {}
//   public void test339() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test339"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ": hi!. hi! at hi! line (unknown line) : (unknown column): hi!. hi! at hi!: hi! line 0 : -3");
// 
//   }

  public void test340() {}
//   public void test340() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test340"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : hi!", ". hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
//     com.google.javascript.rhino.Node var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ".  at (unknown source) line 1 : 10");
//     com.google.javascript.rhino.Node var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
//     java.lang.String[] var29 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var27, var29);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", var17, var20, var29);
//     int var32 = var31.getCharno();
//     com.google.javascript.jscomp.DiagnosticType var33 = var31.getType();
//     boolean var34 = var15.equals((java.lang.Object)var33);
//     com.google.javascript.jscomp.CheckLevel var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.make("", var39, "hi!");
//     java.lang.String[] var43 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var41, var43);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("", var12, var33, var43);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make(". hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", 4, 10, var7, var10, var43);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("", var1, var2, var3, var43);
// 
//   }

  public void test341() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test341"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var8 = null;
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
    com.google.javascript.rhino.Node var14 = null;
    com.google.javascript.rhino.Node var16 = null;
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var24 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
    java.lang.String[] var28 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var26, var28);
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", var16, var19, var28);
    com.google.javascript.rhino.Node var32 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var40 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("", var40, "hi!");
    java.lang.String[] var44 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var42, var44);
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var44);
    com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var14, var19, var44);
    com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var8, var12, var44);
    com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("", var1, var4, var44);
    java.lang.String var50 = var49.toString();
    int var51 = var49.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "hi!. hi! at hi! line (unknown line) : (unknown column). hi!: hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var50.equals("hi!. hi! at hi! line (unknown line) : (unknown column). hi!: hi! at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == (-1));

  }

  public void test342() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test342"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled(".  at hi!.  at hi!: hi! line (unknown line) : 10 line 3 : 0", ". hi! at hi! line 1 : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test343() {}
//   public void test343() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test343"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: : : hi!: ", "hi!: : : hi!: ");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: : ", "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
//     int var16 = var12.compareTo(var15);
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!.  at hi!: hi! line (unknown line) : 10");
//     com.google.javascript.rhino.Node var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
//     java.lang.String[] var37 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var35, var37);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", var25, var28, var37);
//     com.google.javascript.jscomp.DiagnosticType var40 = var39.getType();
//     com.google.javascript.rhino.Node var42 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.make("", var50, "hi!");
//     java.lang.String[] var54 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var52, var54);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", var42, var45, var54);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make(var40, var54);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10", (-12), 100, var20, var23, var54);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("", (-64), (-67), var9, var12, var54);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column). hi!: hi! at hi!.  at hi!: hi! line (unknown line) : 10 line -8 : -64", var1, var2, var5, var54);
// 
//   }

  public void test344() {}
//   public void test344() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test344"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var21, var23);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("", var11, var14, var23);
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     int var29 = var14.compareTo(var28);
//     com.google.javascript.rhino.Node var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.make("", var39, "hi!");
//     java.lang.String[] var43 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var41, var43);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("", var31, var34, var43);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", 1, 46, var9, var28, var43);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line -3 : (unknown column)", var1, var2, var5, var43);
// 
//   }

  public void test345() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test345"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning(".  at hi!.  at hi!: hi! line (unknown line) : 10 line 3 : 0", "");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test346() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test346"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "hi!. hi! at hi! line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var7 = null;
    com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("", var15, "hi!");
    java.lang.String[] var19 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var17, var19);
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var7, var10, var19);
    com.google.javascript.jscomp.DiagnosticType var22 = var21.getType();
    int var23 = var21.getCharno();
    boolean var25 = var21.equals((java.lang.Object)(short)1);
    java.lang.String var26 = var21.toString();
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    boolean var30 = var21.equals((java.lang.Object)"hi!");
    boolean var32 = var21.equals((java.lang.Object)(byte)100);
    boolean var33 = var5.equals((java.lang.Object)var21);
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", "hi!: hi!: ");
    com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.warning(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", "hi!: hi!");
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
    com.google.javascript.jscomp.CheckLevel var46 = null;
    com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var54 = null;
    com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.make("", var54, "hi!");
    java.lang.String[] var58 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var56, var58);
    com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-8), (-64), var46, var49, var58);
    com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make(var42, var58);
    com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make(var39, var58);
    com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make(var36, var58);
    com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make(var5, var58);
    com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var75 = null;
    com.google.javascript.jscomp.DiagnosticType var77 = com.google.javascript.jscomp.DiagnosticType.make("", var75, "hi!");
    java.lang.String[] var79 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var77, var79);
    com.google.javascript.rhino.Node var82 = null;
    com.google.javascript.jscomp.DiagnosticType var85 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var90 = null;
    com.google.javascript.jscomp.DiagnosticType var92 = com.google.javascript.jscomp.DiagnosticType.make("", var90, "hi!");
    java.lang.String[] var94 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var92, var94);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("hi!", var82, var85, var94);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make(var77, var94);
    com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", (-1), (-3), var70, var94);
    com.google.javascript.jscomp.JSError var99 = com.google.javascript.jscomp.JSError.make("hi!: : ", 64, 5, var5, var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "hi!. hi! at hi! line (unknown line) : (unknown column)"+ "'", var26.equals("hi!. hi! at hi! line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var99);

  }

  public void test347() {}
//   public void test347() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test347"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ": hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
// 
//   }

  public void test348() {}
//   public void test348() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test348"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", "hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var21, var23);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var11, var14, var23);
//     java.lang.String var26 = var14.toString();
//     com.google.javascript.jscomp.CheckLevel var33 = null;
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.make("", var35, "hi!");
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.rhino.Node var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var49 = null;
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.make("", var49, "hi!");
//     java.lang.String[] var53 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var51, var53);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", var41, var44, var53);
//     com.google.javascript.rhino.Node var57 = null;
//     com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var65 = null;
//     com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.make("", var65, "hi!");
//     java.lang.String[] var69 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var67, var69);
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", var57, var60, var69);
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var39, var44, var69);
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var33, var37, var69);
//     com.google.javascript.jscomp.CheckLevel var78 = null;
//     com.google.javascript.jscomp.DiagnosticType var80 = com.google.javascript.jscomp.DiagnosticType.make("", var78, "hi!");
//     java.lang.String[] var82 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var80, var82);
//     com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column): : hi!", 3, 3, var37, var82);
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make(var14, var82);
//     com.google.javascript.rhino.Node var87 = null;
//     com.google.javascript.jscomp.DiagnosticType var90 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     java.lang.String[] var92 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var87, var90, var92);
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!. hi!.  at hi!: hi! line (unknown line) : 10 at .  at (unknown source) line 1 : 10 line -12 : 100", 0, 0, var9, var14, var92);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column). hi!: hi! at hi!.  at hi!: hi! line (unknown line) : 10 line -8 : -64", var1, var2, var5, var92);
// 
//   }

  public void test349() {}
//   public void test349() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test349"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
//     java.lang.String var11 = var10.toString();
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
//     com.google.javascript.rhino.Node var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.make("", var32, "hi!");
//     java.lang.String[] var36 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var34, var36);
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", var24, var27, var36);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var19, var22, var36);
//     com.google.javascript.jscomp.DiagnosticType var40 = var39.getType();
//     int var41 = var17.compareTo(var40);
//     com.google.javascript.rhino.Node var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     java.lang.String[] var48 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var43, var46, var48);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-39), 10, var40, var48);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column): : hi!", 2, (-1), var7, var10, var48);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line -3 : (unknown column): .  at (unknown source) line 1 : 10: hi!: hi!: ", var1, var2, var3, var48);
// 
//   }

  public void test350() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test350"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!. hi! at hi!: hi! line 0 : -3: ");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test351() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test351"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning(". hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", "hi!. hi! at hi! line (unknown line) : (unknown column). hi!: hi! at (unknown source) line (unknown line) : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test352() {}
//   public void test352() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test352"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     java.lang.String[] var13 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("", var1, var4, var13);
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.MessageFormatter var17 = null;
//     java.lang.String var18 = var15.format(var16, var17);
// 
//   }

  public void test353() {}
//   public void test353() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test353"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!: ", "hi!");
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", var8, ".  at :  line -12 : 46");
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", ".  at (unknown source) line 1 : 10");
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.rhino.Node var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.make("", var27, "hi!");
//     java.lang.String[] var31 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var29, var31);
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", var19, var22, var31);
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var37 = var22.compareTo(var36);
//     java.lang.String[] var39 = new java.lang.String[] { "hi!: hi!: "};
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 46, (-3), var17, var36, var39);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make(var13, var39);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make(var10, var39);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make(": hi!", 10, (-67), var3, var6, var39);
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.MessageFormatter var45 = null;
//     java.lang.String var46 = var43.format(var44, var45);
// 
//   }

  public void test354() {}
//   public void test354() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test354"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", ".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ");
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("", var15, "hi!");
//     java.lang.String[] var19 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var17, var19);
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", var7, var10, var19);
//     com.google.javascript.jscomp.DiagnosticType var22 = var21.getType();
//     com.google.javascript.rhino.Node var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.make("", var32, "hi!");
//     java.lang.String[] var36 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var34, var36);
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", var24, var27, var36);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make(var22, var36);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var1, var2, var5, var36);
// 
//   }

  public void test355() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test355"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled(".  at (unknown source) line 1 : 10: hi!: hi!: ", "hi!. hi! at hi! line (unknown line) : (unknown column): : hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test356() {}
//   public void test356() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test356"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled(": hi!", ".  at (unknown source) line -3 : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "");
//     com.google.javascript.rhino.Node var14 = null;
//     com.google.javascript.rhino.Node var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
//     java.lang.String[] var28 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var26, var28);
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", var16, var19, var28);
//     com.google.javascript.rhino.Node var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("", var40, "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var44);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var14, var19, var44);
//     com.google.javascript.rhino.Node var49 = null;
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var57 = null;
//     com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.make("", var57, "hi!");
//     java.lang.String[] var61 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var59, var61);
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!", var49, var52, var61);
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make(var19, var61);
//     java.lang.String var65 = var19.toString();
//     int var66 = var12.compareTo(var19);
//     java.lang.String[] var68 = new java.lang.String[] { "hi!. hi! at (unknown source) line (unknown line) : (unknown column)"};
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", 0, 1, var12, var68);
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 0 : 1", var1, var2, var5, var68);
// 
//   }

  public void test357() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test357"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.CheckLevel var8 = null;
    com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var8, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("", var15, "hi!");
    java.lang.String[] var19 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var17, var19);
    com.google.javascript.rhino.Node var22 = null;
    com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var30 = null;
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.make("", var30, "hi!");
    java.lang.String[] var34 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var32, var34);
    com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var22, var25, var34);
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make(var17, var34);
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("", 0, 1, var6, var10, var34);
    com.google.javascript.rhino.Node var40 = null;
    com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
    com.google.javascript.rhino.Node var45 = null;
    com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var53 = null;
    com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.make("", var53, "hi!");
    java.lang.String[] var57 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var55, var57);
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("", var45, var48, var57);
    com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var40, var43, var57);
    boolean var61 = var10.equals((java.lang.Object)var60);
    java.lang.String[] var62 = null;
    com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make(var10, var62);
    com.google.javascript.jscomp.DiagnosticType var64 = var63.getType();
    java.lang.String var65 = var64.toString();
    boolean var66 = var2.equals((java.lang.Object)var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + "hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var65.equals("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);

  }

  public void test358() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test358"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", "hi!: hi!: ");
    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", ": hi!");
    com.google.javascript.jscomp.CheckLevel var7 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var7, "hi!: hi!: ");
    int var10 = var5.compareTo(var9);
    int var11 = var2.compareTo(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 12);

  }

  public void test359() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test359"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var10 = var6.compareTo(var9);
    com.google.javascript.rhino.Node var12 = null;
    com.google.javascript.rhino.Node var14 = null;
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var22 = null;
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("", var22, "hi!");
    java.lang.String[] var26 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var24, var26);
    com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var14, var17, var26);
    com.google.javascript.rhino.Node var30 = null;
    com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var38 = null;
    com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.make("", var38, "hi!");
    java.lang.String[] var42 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var40, var42);
    com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", var30, var33, var42);
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var12, var17, var42);
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("", 100, 1, var3, var9, var42);
    java.lang.String var47 = var46.toString();
    com.google.javascript.jscomp.DiagnosticType var48 = var46.getType();
    java.lang.String var49 = var48.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ".  at (unknown source) line 100 : 1"+ "'", var47.equals(".  at (unknown source) line 100 : 1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ": "+ "'", var49.equals(": "));

  }

  public void test360() {}
//   public void test360() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test360"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: : : hi!: ", "");
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.make(".  at :  line -12 : 46", var7, "hi!");
//     int var10 = var5.compareTo(var9);
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var23 = var19.compareTo(var22);
//     boolean var24 = var16.equals((java.lang.Object)var23);
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", ".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!. hi! at hi! line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var48 = null;
//     com.google.javascript.jscomp.CheckLevel var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var50, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var57 = null;
//     com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.make("", var57, "hi!");
//     java.lang.String[] var61 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var59, var61);
//     com.google.javascript.rhino.Node var64 = null;
//     com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var72 = null;
//     com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.make("", var72, "hi!");
//     java.lang.String[] var76 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var74, var76);
//     com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("hi!", var64, var67, var76);
//     com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make(var59, var76);
//     com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("", 0, 1, var48, var52, var76);
//     com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var41, var44, var76);
//     com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make(": ", 100, (-1), var37, var76);
//     com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("", 3, (-64), var28, var31, var76);
//     com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line -67 : 0", 2, 54, var16, var76);
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : -3: ", var1, var2, var9, var76);
// 
//   }

  public void test361() {}
//   public void test361() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test361"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "hi!. hi! at hi! line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     com.google.javascript.rhino.Node var14 = null;
//     com.google.javascript.rhino.Node var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
//     java.lang.String[] var28 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var26, var28);
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", var16, var19, var28);
//     com.google.javascript.rhino.Node var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("", var40, "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var44);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var14, var19, var44);
//     com.google.javascript.rhino.Node var49 = null;
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var57 = null;
//     com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.make("", var57, "hi!");
//     java.lang.String[] var61 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var59, var61);
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!", var49, var52, var61);
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make(var19, var61);
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("", 0, 0, var12, var61);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", var1, var2, var5, var61);
// 
//   }

  public void test362() {}
//   public void test362() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test362"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!.  at (unknown source) line (unknown line) : (unknown column)");
// 
//   }

  public void test363() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test363"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", ": ");
    com.google.javascript.rhino.Node var11 = null;
    com.google.javascript.rhino.Node var13 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var21 = null;
    com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.make("", var21, "hi!");
    java.lang.String[] var25 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var23, var25);
    com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", var13, var16, var25);
    com.google.javascript.rhino.Node var29 = null;
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var37 = null;
    com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.make("", var37, "hi!");
    java.lang.String[] var41 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var39, var41);
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var41);
    com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var11, var16, var41);
    com.google.javascript.rhino.Node var46 = null;
    com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var54 = null;
    com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.make("", var54, "hi!");
    java.lang.String[] var58 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var56, var58);
    com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", var46, var49, var58);
    com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make(var16, var58);
    com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", 10, 149, var9, var58);
    com.google.javascript.jscomp.DiagnosticType var63 = var62.getType();
    com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
    com.google.javascript.jscomp.CheckLevel var70 = null;
    com.google.javascript.jscomp.DiagnosticType var73 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var78 = null;
    com.google.javascript.jscomp.DiagnosticType var80 = com.google.javascript.jscomp.DiagnosticType.make("", var78, "hi!");
    java.lang.String[] var82 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var80, var82);
    com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-8), (-64), var70, var73, var82);
    com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make(var66, var82);
    com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 100 : 1", (-8), 67, var3, var63, var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);

  }

  public void test364() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test364"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var3, "hi!.  at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!.  at hi!: hi! line (unknown line) : 10");
    com.google.javascript.rhino.Node var14 = null;
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var22 = null;
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("", var22, "hi!");
    java.lang.String[] var26 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var24, var26);
    com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var14, var17, var26);
    com.google.javascript.jscomp.DiagnosticType var29 = var28.getType();
    com.google.javascript.rhino.Node var31 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var39 = null;
    com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.make("", var39, "hi!");
    java.lang.String[] var43 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var41, var43);
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", var31, var34, var43);
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make(var29, var43);
    com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10", (-12), 100, var9, var12, var43);
    com.google.javascript.rhino.Node var49 = null;
    com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var54 = null;
    com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var62 = null;
    com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.make("", var62, "hi!");
    java.lang.String[] var66 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var64, var66);
    com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!", var54, var57, var66);
    com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var49, var52, var66);
    com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make(var12, var66);
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", var1, var5, var66);
    java.lang.Object var72 = null;
    boolean var73 = var5.equals(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);

  }

  public void test365() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test365"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error(".  at (unknown source) line 1 : 10", "hi!. hi! at (unknown source) line -67 : 0");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test366() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test366"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column). hi!: hi! at (unknown source) line (unknown line) : (unknown column)", "hi!: hi!: ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test367() {}
//   public void test367() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test367"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!: ", var4, "");
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!.  at hi!: hi! line (unknown line) : 10");
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("", var23, "hi!");
//     java.lang.String[] var27 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var25, var27);
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var27);
//     com.google.javascript.jscomp.DiagnosticType var30 = var29.getType();
//     com.google.javascript.rhino.Node var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("", var40, "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var44);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make(var30, var44);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10", (-12), 100, var10, var13, var44);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi!: hi! line 0 : -3: ", var1, var2, var6, var44);
// 
//   }

  public void test368() {}
//   public void test368() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test368"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.CheckLevel var11 = null;
//     com.google.javascript.rhino.Node var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.make("", var21, "hi!");
//     java.lang.String[] var25 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var23, var25);
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", var13, var16, var25);
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var31 = var16.compareTo(var30);
//     java.lang.String[] var33 = new java.lang.String[] { "hi!: hi!: "};
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 46, (-3), var11, var30, var33);
//     com.google.javascript.jscomp.CheckLevel var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.make("", var39, "hi!");
//     com.google.javascript.rhino.Node var43 = null;
//     com.google.javascript.rhino.Node var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.make("", var53, "hi!");
//     java.lang.String[] var57 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var55, var57);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", var45, var48, var57);
//     com.google.javascript.rhino.Node var61 = null;
//     com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var69 = null;
//     com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.make("", var69, "hi!");
//     java.lang.String[] var73 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var71, var73);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!", var61, var64, var73);
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var43, var48, var73);
//     com.google.javascript.rhino.Node var78 = null;
//     com.google.javascript.jscomp.DiagnosticType var81 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var86 = null;
//     com.google.javascript.jscomp.DiagnosticType var88 = com.google.javascript.jscomp.DiagnosticType.make("", var86, "hi!");
//     java.lang.String[] var90 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var88, var90);
//     com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!", var78, var81, var90);
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make(var48, var90);
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("", 0, 0, var41, var90);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 3, 0, var7, var30, var90);
//     com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("", var1, var2, var3, var90);
// 
//   }

  public void test369() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test369"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, ".  at (unknown source) line 100 : 1");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test370() {}
//   public void test370() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test370"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     java.lang.String[] var13 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("", var1, var4, var13);
//     com.google.javascript.jscomp.DiagnosticType var16 = var15.getType();
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.MessageFormatter var18 = null;
//     java.lang.String var19 = var15.format(var17, var18);
// 
//   }

  public void test371() {}
//   public void test371() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test371"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     java.lang.String[] var3 = null;
//     com.google.javascript.jscomp.JSError var4 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at (unknown source) line (unknown line) : (unknown column): hi!.  at hi!: hi! line (unknown line) : 10: : hi!", var1, var2, var3);
// 
//   }

  public void test372() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test372"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var10 = var6.compareTo(var9);
    com.google.javascript.rhino.Node var12 = null;
    com.google.javascript.rhino.Node var14 = null;
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var22 = null;
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("", var22, "hi!");
    java.lang.String[] var26 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var24, var26);
    com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var14, var17, var26);
    com.google.javascript.rhino.Node var30 = null;
    com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var38 = null;
    com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.make("", var38, "hi!");
    java.lang.String[] var42 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var40, var42);
    com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", var30, var33, var42);
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var12, var17, var42);
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("", 100, 1, var3, var9, var42);
    java.lang.String var47 = var46.toString();
    java.lang.String var48 = var46.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ".  at (unknown source) line 100 : 1"+ "'", var47.equals(".  at (unknown source) line 100 : 1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ".  at (unknown source) line 100 : 1"+ "'", var48.equals(".  at (unknown source) line 100 : 1"));

  }

  public void test373() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test373"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at (unknown source) line (unknown line) : (unknown column): hi!.  at hi!: hi! line (unknown line) : 10: : hi!", "hi!. hi! at hi! line (unknown line) : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test374() {}
//   public void test374() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test374"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error(".  at (unknown source) line -3 : (unknown column)", ": : hi!. hi! at hi! line (unknown line) : (unknown column)");
//     java.lang.String var6 = var5.toString();
//     java.lang.String[] var7 = null;
//     com.google.javascript.jscomp.JSError var8 = com.google.javascript.jscomp.JSError.make(". hi! at (unknown source) line (unknown line) : (unknown column): hi!", var1, var2, var5, var7);
// 
//   }

  public void test375() {}
//   public void test375() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test375"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!");
//     java.lang.String[] var8 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var6, var8);
//     boolean var11 = var9.equals((java.lang.Object)(byte)(-1));
//     com.google.javascript.jscomp.DiagnosticType var12 = var9.getType();
//     int var13 = var9.getCharno();
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.MessageFormatter var15 = null;
//     java.lang.String var16 = var9.format(var14, var15);
// 
//   }

  public void test376() {}
//   public void test376() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test376"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.make("", var16, "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", var8, var11, var20);
//     com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
//     int var24 = var22.getCharno();
//     boolean var26 = var22.equals((java.lang.Object)(short)1);
//     java.lang.String var27 = var22.toString();
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
//     boolean var31 = var22.equals((java.lang.Object)var30);
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var42 = var38.compareTo(var41);
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var49 = var45.compareTo(var48);
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var56 = var52.compareTo(var55);
//     int var57 = var45.compareTo(var52);
//     boolean var58 = var38.equals((java.lang.Object)var52);
//     com.google.javascript.rhino.Node var60 = null;
//     com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var68 = null;
//     com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.make("", var68, "hi!");
//     java.lang.String[] var72 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var70, var72);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("", var60, var63, var72);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("", 0, 1, var35, var38, var72);
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("", var6, var30, var72);
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line -3 : (unknown column): .  at (unknown source) line 1 : 10: hi!: hi!: ", 8, 46, var3, var4, var72);
// 
//   }

  public void test377() {}
//   public void test377() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test377"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var0 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", ".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
//     com.google.javascript.rhino.Node var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("", var22, "hi!");
//     java.lang.String[] var26 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var24, var26);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("", var14, var17, var26);
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var9, var12, var26);
//     com.google.javascript.rhino.Node var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ".  at (unknown source) line 1 : 10");
//     com.google.javascript.rhino.Node var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.make("", var44, "hi!");
//     java.lang.String[] var48 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var46, var48);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", var36, var39, var48);
//     int var51 = var50.getCharno();
//     com.google.javascript.jscomp.DiagnosticType var52 = var50.getType();
//     boolean var53 = var34.equals((java.lang.Object)var52);
//     com.google.javascript.jscomp.CheckLevel var58 = null;
//     com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.make("", var58, "hi!");
//     java.lang.String[] var62 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var60, var62);
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("", var31, var52, var62);
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make(var12, var62);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line (unknown line) : (unknown column)", (-46), 4, var4, var7, var62);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make(var0, var62);
// 
//   }

  public void test378() {}
//   public void test378() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test378"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ".  at hi!. hi! at hi! line (unknown line) : (unknown column) line 10 : 1");
// 
//   }

  public void test379() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test379"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(".  at hi!. hi! at hi! line (unknown line) : (unknown column) line 10 : 1");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test380() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test380"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column): : hi!", "hi!: hi!: ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test381() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test381"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at (unknown source) line (unknown line) : (unknown column)", "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test382() {}
//   public void test382() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test382"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.warning(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var24 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
//     java.lang.String[] var28 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var26, var28);
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-8), (-64), var16, var19, var28);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make(var12, var28);
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make(var9, var28);
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make(var6, var28);
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!.  at (unknown source) line (unknown line) : (unknown column)", var1, var2, var3, var28);
// 
//   }

  public void test383() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test383"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
    java.lang.String[] var13 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
    com.google.javascript.jscomp.DiagnosticType var16 = var15.getType();
    int var17 = var15.getCharno();
    boolean var19 = var15.equals((java.lang.Object)(short)1);
    java.lang.String var20 = var15.toString();
    com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    boolean var24 = var15.equals((java.lang.Object)"hi!");
    boolean var26 = var15.equals((java.lang.Object)(byte)100);
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var33 = var29.compareTo(var32);
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var40 = var36.compareTo(var39);
    com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var47 = var43.compareTo(var46);
    int var48 = var36.compareTo(var43);
    boolean var49 = var29.equals((java.lang.Object)var43);
    boolean var50 = var15.equals((java.lang.Object)var43);
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error(".  at (unknown source) line 1 : 10", "hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
    com.google.javascript.jscomp.CheckLevel var55 = null;
    com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.make(": hi!", var55, ": hi!");
    int var58 = var53.compareTo(var57);
    int var59 = var43.compareTo(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "hi!. hi! at hi! line (unknown line) : (unknown column)"+ "'", var20.equals("hi!. hi! at hi! line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == (-12));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == (-34));

  }

  public void test384() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test384"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: : . hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test385() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test385"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make(". hi! at (unknown source) line 0 : 0", var1, "hi!. hi! at hi!: hi! line 0 : -3");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test386() {}
//   public void test386() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test386"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.make("", var7, "");
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.rhino.Node var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.make("", var21, "hi!");
//     java.lang.String[] var25 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var23, var25);
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", var13, var16, var25);
//     com.google.javascript.rhino.Node var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.make("", var37, "hi!");
//     java.lang.String[] var41 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var39, var41);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var41);
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var11, var16, var41);
//     com.google.javascript.rhino.Node var46 = null;
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var54 = null;
//     com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.make("", var54, "hi!");
//     java.lang.String[] var58 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var56, var58);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", var46, var49, var58);
//     com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make(var16, var58);
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("", (-3), (-1), var9, var58);
//     com.google.javascript.rhino.Node var64 = null;
//     com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var72 = null;
//     com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.make("", var72, "hi!");
//     java.lang.String[] var76 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var74, var76);
//     com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("hi!", var64, var67, var76);
//     com.google.javascript.jscomp.DiagnosticType var79 = var78.getType();
//     com.google.javascript.rhino.Node var81 = null;
//     com.google.javascript.jscomp.DiagnosticType var84 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var89 = null;
//     com.google.javascript.jscomp.DiagnosticType var91 = com.google.javascript.jscomp.DiagnosticType.make("", var89, "hi!");
//     java.lang.String[] var93 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var91, var93);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!", var81, var84, var93);
//     com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make(var79, var93);
//     int var97 = var9.compareTo(var79);
//     java.lang.String[] var98 = null;
//     com.google.javascript.jscomp.JSError var99 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line (unknown line) : (unknown column)", var1, var2, var79, var98);
// 
//   }

  public void test387() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test387"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!.  at hi!: hi! line (unknown line) : 10: : hi!", "hi!. hi! at (unknown source) line -67 : 0");
    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    java.lang.String[] var6 = null;
    com.google.javascript.jscomp.JSError var7 = com.google.javascript.jscomp.JSError.make(var5, var6);
    com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    int var11 = var5.compareTo(var10);
    java.lang.String var12 = var10.toString();
    int var13 = var2.compareTo(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ": "+ "'", var12.equals(": "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 49);

  }

  public void test388() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test388"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!: hi!");
    com.google.javascript.rhino.Node var8 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var16 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.make("", var16, "hi!");
    java.lang.String[] var20 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var18, var20);
    com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", var8, var11, var20);
    com.google.javascript.jscomp.DiagnosticType var23 = var22.getType();
    com.google.javascript.rhino.Node var25 = null;
    com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var33 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
    java.lang.String[] var37 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var35, var37);
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", var25, var28, var37);
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make(var23, var37);
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 2, 0, var3, var6, var37);
    java.lang.String var42 = var6.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ": hi!: hi!"+ "'", var42.equals(": hi!: hi!"));

  }

  public void test389() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test389"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
    java.lang.String[] var5 = null;
    com.google.javascript.jscomp.JSError var6 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at hi!.  at hi!: hi! line (unknown line) : 10 line 54 : -3", var1, var4, var5);
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
    com.google.javascript.rhino.Node var15 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var20 = null;
    com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var28 = null;
    com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("", var28, "hi!");
    java.lang.String[] var32 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var30, var32);
    com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", var20, var23, var32);
    com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var15, var18, var32);
    com.google.javascript.jscomp.DiagnosticType var36 = var35.getType();
    int var37 = var13.compareTo(var36);
    com.google.javascript.jscomp.CheckLevel var41 = null;
    com.google.javascript.jscomp.CheckLevel var43 = null;
    com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var43, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var50 = null;
    com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.make("", var50, "hi!");
    java.lang.String[] var54 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var52, var54);
    com.google.javascript.rhino.Node var57 = null;
    com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var65 = null;
    com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.make("", var65, "hi!");
    java.lang.String[] var69 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var67, var69);
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", var57, var60, var69);
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make(var52, var69);
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("", 0, 1, var41, var45, var69);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("", (-39), 1, var10, var36, var69);
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make(var4, var69);
    com.google.javascript.jscomp.DiagnosticType var76 = var75.getType();
    com.google.javascript.jscomp.DiagnosticType var79 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi!.  at hi!: hi! line (unknown line) : 10 at .  at (unknown source) line 1 : 10 line -12 : 100", "");
    boolean var80 = var76.equals((java.lang.Object)var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);

  }

  public void test390() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test390"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var16 = null;
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var18, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var25 = null;
    com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
    java.lang.String[] var29 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var27, var29);
    com.google.javascript.rhino.Node var32 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var40 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("", var40, "hi!");
    java.lang.String[] var44 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var42, var44);
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var44);
    com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make(var27, var44);
    com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("", 0, 1, var16, var20, var44);
    com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var9, var12, var44);
    com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("", (-3), (-12), var5, var44);
    java.lang.Object var51 = null;
    boolean var52 = var50.equals(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);

  }

  public void test391() {}
//   public void test391() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test391"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
//     java.lang.String[] var14 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var12, var14);
//     com.google.javascript.rhino.Node var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
//     java.lang.String[] var29 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var27, var29);
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", var17, var20, var29);
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make(var12, var29);
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", (-1), (-3), var5, var29);
//     java.lang.String var34 = var33.toString();
//     java.lang.String var35 = var33.toString();
//     java.lang.String var36 = var33.toString();
//     com.google.javascript.jscomp.CheckLevel var37 = null;
//     com.google.javascript.jscomp.MessageFormatter var38 = null;
//     java.lang.String var39 = var33.format(var37, var38);
// 
//   }

  public void test392() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test392"); }


    com.google.javascript.jscomp.CheckLevel var4 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var4, ". hi! at hi! line 1 : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.CheckLevel var14 = null;
    com.google.javascript.rhino.Node var16 = null;
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var24 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
    java.lang.String[] var28 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var26, var28);
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", var16, var19, var28);
    com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var34 = var19.compareTo(var33);
    java.lang.String[] var36 = new java.lang.String[] { "hi!: hi!: "};
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 46, (-3), var14, var33, var36);
    com.google.javascript.jscomp.CheckLevel var42 = null;
    com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.make("", var42, "hi!");
    com.google.javascript.rhino.Node var46 = null;
    com.google.javascript.rhino.Node var48 = null;
    com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var56 = null;
    com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.make("", var56, "hi!");
    java.lang.String[] var60 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var58, var60);
    com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!", var48, var51, var60);
    com.google.javascript.rhino.Node var64 = null;
    com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var72 = null;
    com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.make("", var72, "hi!");
    java.lang.String[] var76 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var74, var76);
    com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("hi!", var64, var67, var76);
    com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var46, var51, var76);
    com.google.javascript.rhino.Node var81 = null;
    com.google.javascript.jscomp.DiagnosticType var84 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var89 = null;
    com.google.javascript.jscomp.DiagnosticType var91 = com.google.javascript.jscomp.DiagnosticType.make("", var89, "hi!");
    java.lang.String[] var93 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var91, var93);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!", var81, var84, var93);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make(var51, var93);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("", 0, 0, var44, var93);
    com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 3, 0, var10, var33, var93);
    com.google.javascript.jscomp.JSError var99 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column): : hi!", 1, 5, var6, var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var99);

  }

  public void test393() {}
//   public void test393() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test393"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", "hi!");
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var15 = var11.compareTo(var14);
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var22 = var18.compareTo(var21);
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var29 = var25.compareTo(var28);
//     int var30 = var18.compareTo(var25);
//     boolean var31 = var11.equals((java.lang.Object)var25);
//     com.google.javascript.rhino.Node var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.make("", var41, "hi!");
//     java.lang.String[] var45 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var43, var45);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("", var33, var36, var45);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("", 0, 1, var8, var11, var45);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10: : hi!", var1, var4, var45);
//     com.google.javascript.jscomp.CheckLevel var50 = null;
//     com.google.javascript.jscomp.MessageFormatter var51 = null;
//     java.lang.String var52 = var49.format(var50, var51);
// 
//   }

  public void test394() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test394"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
    com.google.javascript.rhino.Node var7 = null;
    com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.make("", var15, "hi!");
    java.lang.String[] var19 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var17, var19);
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("", var7, var10, var19);
    com.google.javascript.rhino.Node var23 = null;
    com.google.javascript.rhino.Node var25 = null;
    com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var33 = null;
    com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
    java.lang.String[] var37 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var35, var37);
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", var25, var28, var37);
    com.google.javascript.rhino.Node var41 = null;
    com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var49 = null;
    com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.make("", var49, "hi!");
    java.lang.String[] var53 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var51, var53);
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", var41, var44, var53);
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var23, var28, var53);
    com.google.javascript.rhino.Node var58 = null;
    com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var66 = null;
    com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.make("", var66, "hi!");
    java.lang.String[] var70 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var68, var70);
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!", var58, var61, var70);
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make(var28, var70);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-1), 10, var10, var70);
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make(var2, var70);
    com.google.javascript.jscomp.CheckLevel var77 = null;
    com.google.javascript.jscomp.DiagnosticType var79 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var77, ": hi!");
    int var80 = var2.compareTo(var79);
    java.lang.Object var81 = null;
    boolean var82 = var79.equals(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == (-64));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == false);

  }

  public void test395() {}
//   public void test395() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test395"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     java.lang.String[] var4 = null;
//     com.google.javascript.jscomp.JSError var5 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at hi!.  at hi!: hi! line (unknown line) : 10 line 54 : -3. . hi! at hi! line 1 : (unknown column) at .  at (unknown source) line -3 : (unknown column) line 51 : -3", var1, var2, var3, var4);
// 
//   }

  public void test396() {}
//   public void test396() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test396"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", ": hi!");
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", var7, ".  at :  line -12 : 46");
//     boolean var10 = var5.equals((java.lang.Object)var7);
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.warning(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", ": : hi!");
//     int var14 = var5.compareTo(var13);
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
//     java.lang.String[] var29 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var27, var29);
//     com.google.javascript.rhino.Node var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("", var40, "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var44);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make(var27, var44);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", (-1), (-3), var20, var44);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make(".  at hi!. hi! at hi! line (unknown line) : (unknown column) line 10 : 1", var1, var2, var13, var44);
// 
//   }

  public void test397() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test397"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at hi! line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var12 = var8.compareTo(var11);
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var19 = var15.compareTo(var18);
    int var20 = var8.compareTo(var15);
    java.lang.String[] var21 = null;
    com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 10, 1, var8, var21);
    int var23 = var2.compareTo(var8);
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!. hi! at hi! line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var33 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var40 = null;
    com.google.javascript.jscomp.CheckLevel var42 = null;
    com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var42, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var49 = null;
    com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.make("", var49, "hi!");
    java.lang.String[] var53 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var51, var53);
    com.google.javascript.rhino.Node var56 = null;
    com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var64 = null;
    com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.make("", var64, "hi!");
    java.lang.String[] var68 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var66, var68);
    com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!", var56, var59, var68);
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make(var51, var68);
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("", 0, 1, var40, var44, var68);
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var33, var36, var68);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make(": ", 100, (-1), var29, var68);
    int var75 = var8.compareTo(var29);
    java.lang.String var76 = var8.toString();
    java.lang.String var77 = var8.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ": "+ "'", var76.equals(": "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ": "+ "'", var77.equals(": "));

  }

  public void test398() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test398"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : hi!: . hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", ": : hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : hi!: . hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test399() {}
//   public void test399() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test399"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ": hi!: hi!");
// 
//   }

  public void test400() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test400"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!.  at hi!: hi! line (unknown line) : 10: : hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test401() {}
//   public void test401() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test401"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", ": hi!");
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.rhino.Node var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var14 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
//     java.lang.String[] var18 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var16, var18);
//     com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var18);
//     com.google.javascript.rhino.Node var22 = null;
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.make("", var30, "hi!");
//     java.lang.String[] var34 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var32, var34);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", var22, var25, var34);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var4, var9, var34);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var47 = null;
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.make("", var47, "hi!");
//     java.lang.String[] var51 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var49, var51);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var51);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make(var9, var51);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make(var2, var51);
//     com.google.javascript.jscomp.CheckLevel var56 = null;
//     com.google.javascript.jscomp.MessageFormatter var57 = null;
//     java.lang.String var58 = var55.format(var56, var57);
// 
//   }

  public void test402() {}
//   public void test402() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test402"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", ": ");
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
//     java.lang.String[] var21 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var19, var21);
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var21);
//     com.google.javascript.rhino.Node var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.make("", var33, "hi!");
//     java.lang.String[] var37 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var35, var37);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", var25, var28, var37);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var7, var12, var37);
//     com.google.javascript.rhino.Node var42 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.make("", var50, "hi!");
//     java.lang.String[] var54 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var52, var54);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", var42, var45, var54);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make(var12, var54);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", 10, 149, var5, var54);
//     com.google.javascript.jscomp.CheckLevel var59 = null;
//     com.google.javascript.jscomp.MessageFormatter var60 = null;
//     java.lang.String var61 = var58.format(var59, var60);
// 
//   }

  public void test403() {}
//   public void test403() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test403"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("", var1, ": hi!");
//     java.lang.String var4 = var3.toString();
//     com.google.javascript.jscomp.DiagnosticType var5 = null;
//     int var6 = var3.compareTo(var5);
// 
//   }

  public void test404() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test404"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled(".  at (unknown source) line -3 : (unknown column)", "hi!: ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test405() {}
//   public void test405() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test405"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", "hi!: hi!: ");
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("", var20, "hi!");
//     java.lang.String[] var24 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var22, var24);
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-8), (-64), var12, var15, var24);
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make(var8, var24);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make(var5, var24);
//     com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make(var2, var24);
//     com.google.javascript.jscomp.CheckLevel var30 = null;
//     com.google.javascript.jscomp.MessageFormatter var31 = null;
//     java.lang.String var32 = var29.format(var30, var31);
// 
//   }

  public void test406() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test406"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!. hi! at hi! line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var15 = null;
    com.google.javascript.jscomp.CheckLevel var17 = null;
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
    com.google.javascript.rhino.Node var21 = null;
    com.google.javascript.rhino.Node var23 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var31 = null;
    com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.make("", var31, "hi!");
    java.lang.String[] var35 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var33, var35);
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", var23, var26, var35);
    com.google.javascript.rhino.Node var39 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var47 = null;
    com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.make("", var47, "hi!");
    java.lang.String[] var51 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var49, var51);
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", var39, var42, var51);
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var21, var26, var51);
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var15, var19, var51);
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make(var11, var51);
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make(var8, var51);
    com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make(": hi!. hi! at hi! line (unknown line) : (unknown column): hi!. hi! at hi!: hi! line 0 : -3", 0, 54, var5, var51);
    java.lang.String var59 = var5.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ": hi!. hi! at hi! line (unknown line) : (unknown column)"+ "'", var59.equals(": hi!. hi! at hi! line (unknown line) : (unknown column)"));

  }

  public void test407() {}
//   public void test407() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test407"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ".  at (unknown source) line 0 : 1");
// 
//   }

  public void test408() {}
//   public void test408() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test408"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "");
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
//     java.lang.String[] var22 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var20, var22);
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var22);
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     java.lang.String[] var38 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var38);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var8, var13, var38);
//     com.google.javascript.rhino.Node var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
//     java.lang.String[] var55 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var53, var55);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var55);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make(var13, var55);
//     java.lang.String var59 = var13.toString();
//     int var60 = var6.compareTo(var13);
//     com.google.javascript.rhino.Node var62 = null;
//     com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var70 = null;
//     com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.make("", var70, "hi!");
//     java.lang.String[] var74 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var72, var74);
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!", var62, var65, var74);
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!: hi!", var1, var2, var6, var74);
// 
//   }

  public void test409() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test409"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(". hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test410() {}
//   public void test410() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test410"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
//     java.lang.String[] var21 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var19, var21);
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-8), (-64), var9, var12, var21);
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make(var5, var21);
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", "hi!");
//     com.google.javascript.jscomp.CheckLevel var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var40 = var36.compareTo(var39);
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var47 = var43.compareTo(var46);
//     com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var54 = var50.compareTo(var53);
//     int var55 = var43.compareTo(var50);
//     boolean var56 = var36.equals((java.lang.Object)var50);
//     com.google.javascript.rhino.Node var58 = null;
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var66 = null;
//     com.google.javascript.jscomp.DiagnosticType var68 = com.google.javascript.jscomp.DiagnosticType.make("", var66, "hi!");
//     java.lang.String[] var70 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var68, var70);
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("", var58, var61, var70);
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("", 0, 1, var33, var36, var70);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10: : hi!", var26, var29, var70);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make(". hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", var1, var2, var5, var70);
// 
//   }

  public void test411() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test411"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test412() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test412"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line -67 : 0", var1, "hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at hi!.  at hi!: hi! line (unknown line) : 10 line 54 : -3. . hi! at hi! line 1 : (unknown column) at .  at (unknown source) line -3 : (unknown column) line 51 : -3");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test413() {}
//   public void test413() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test413"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ": : hi!.  at (unknown source) line (unknown line) : (unknown column)");
// 
//   }

  public void test414() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test414"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : : hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", ".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : : hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test415() {}
//   public void test415() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test415"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!.  at hi!: hi! line (unknown line) : 10. : hi! at hi!. hi! at (unknown source) line -67 : 0 line 2 : 54");
// 
//   }

  public void test416() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test416"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
    java.lang.String[] var13 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
    com.google.javascript.jscomp.DiagnosticType var16 = var15.getType();
    com.google.javascript.rhino.Node var18 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var26 = null;
    com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.make("", var26, "hi!");
    java.lang.String[] var30 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var28, var30);
    com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", var18, var21, var30);
    com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make(var16, var30);
    com.google.javascript.jscomp.CheckLevel var37 = null;
    com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!.  at hi!: hi! line (unknown line) : 10");
    com.google.javascript.rhino.Node var42 = null;
    com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var50 = null;
    com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.make("", var50, "hi!");
    java.lang.String[] var54 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var52, var54);
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", var42, var45, var54);
    com.google.javascript.jscomp.DiagnosticType var57 = var56.getType();
    com.google.javascript.rhino.Node var59 = null;
    com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var67 = null;
    com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.make("", var67, "hi!");
    java.lang.String[] var71 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var69, var71);
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", var59, var62, var71);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make(var57, var71);
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10", (-12), 100, var37, var40, var71);
    com.google.javascript.rhino.Node var77 = null;
    com.google.javascript.jscomp.DiagnosticType var80 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var82 = null;
    com.google.javascript.jscomp.DiagnosticType var85 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var90 = null;
    com.google.javascript.jscomp.DiagnosticType var92 = com.google.javascript.jscomp.DiagnosticType.make("", var90, "hi!");
    java.lang.String[] var94 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var92, var94);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make("hi!", var82, var85, var94);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var77, var80, var94);
    com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make(var40, var94);
    boolean var99 = var33.equals((java.lang.Object)var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var99 == false);

  }

  public void test417() {}
//   public void test417() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test417"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at (unknown source) line -67 : 0");
// 
//   }

  public void test418() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test418"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at (unknown source) line (unknown line) : (unknown column)", ": hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test419() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test419"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test420() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test420"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error(": ", "hi!: . hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3 at (unknown source) line (unknown line) : (unknown column)");
    java.lang.Object var3 = null;
    boolean var4 = var2.equals(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);

  }

  public void test421() {}
//   public void test421() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test421"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi!: hi! line 0 : -3", "");
//     java.lang.String var6 = var5.toString();
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var21, var23);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var11, var14, var23);
//     com.google.javascript.jscomp.DiagnosticType var26 = var25.getType();
//     com.google.javascript.jscomp.CheckLevel var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var37 = var33.compareTo(var36);
//     com.google.javascript.rhino.Node var39 = null;
//     com.google.javascript.rhino.Node var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var49 = null;
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.make("", var49, "hi!");
//     java.lang.String[] var53 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var51, var53);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", var41, var44, var53);
//     com.google.javascript.rhino.Node var57 = null;
//     com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var65 = null;
//     com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.make("", var65, "hi!");
//     java.lang.String[] var69 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var67, var69);
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", var57, var60, var69);
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var39, var44, var69);
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("", 100, 1, var30, var36, var69);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!: . hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3 at (unknown source) line (unknown line) : (unknown column)", 8, 2, var26, var69);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("", var1, var2, var5, var69);
// 
//   }

  public void test422() {}
//   public void test422() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test422"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
//     java.lang.String[] var21 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var19, var21);
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("", var9, var12, var21);
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var4, var7, var21);
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error(". hi! at (unknown source) line (unknown line) : (unknown column)", "hi!. hi! at hi! line (unknown line) : (unknown column): : hi!");
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var42 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.make("", var42, "hi!");
//     java.lang.String[] var46 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var44, var46);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", var34, var37, var46);
//     com.google.javascript.jscomp.DiagnosticType var49 = var48.getType();
//     com.google.javascript.rhino.Node var51 = null;
//     com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var59 = null;
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.make("", var59, "hi!");
//     java.lang.String[] var63 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var61, var63);
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!", var51, var54, var63);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make(var49, var63);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make(var32, var63);
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line (unknown line) : (unknown column)", var26, var29, var63);
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line -3 : (unknown column): .  at (unknown source) line 1 : 10: hi!: hi!: ", var1, var2, var7, var63);
// 
//   }

  public void test423() {}
//   public void test423() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test423"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.make("", var21, "hi!");
//     java.lang.String[] var25 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var23, var25);
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", var13, var16, var25);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var8, var11, var25);
//     com.google.javascript.jscomp.DiagnosticType var29 = var28.getType();
//     int var30 = var6.compareTo(var29);
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.CheckLevel var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var36, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.make("", var43, "hi!");
//     java.lang.String[] var47 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var45, var47);
//     com.google.javascript.rhino.Node var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var58 = null;
//     com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.make("", var58, "hi!");
//     java.lang.String[] var62 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var60, var62);
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("hi!", var50, var53, var62);
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make(var45, var62);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("", 0, 1, var34, var38, var62);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("", (-39), 1, var3, var29, var62);
//     com.google.javascript.jscomp.DiagnosticType var68 = var67.getType();
//     com.google.javascript.jscomp.CheckLevel var69 = null;
//     com.google.javascript.jscomp.MessageFormatter var70 = null;
//     java.lang.String var71 = var67.format(var69, var70);
// 
//   }

  public void test424() {}
//   public void test424() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test424"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.make("", var8, "hi!");
//     java.lang.String[] var12 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var13 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var10, var12);
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column). hi!: hi! at (unknown source) line (unknown line) : (unknown column)", 46, (-64), var3, var12);
// 
//   }

  public void test425() {}
//   public void test425() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test425"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!: hi!: hi!");
//     java.lang.String[] var8 = null;
//     com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("", 0, (-8), var7, var8);
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("", var20, "hi!");
//     com.google.javascript.rhino.Node var24 = null;
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     java.lang.String[] var38 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var38);
//     com.google.javascript.rhino.Node var42 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.make("", var50, "hi!");
//     java.lang.String[] var54 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var52, var54);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", var42, var45, var54);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var24, var29, var54);
//     com.google.javascript.rhino.Node var59 = null;
//     com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var67 = null;
//     com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.make("", var67, "hi!");
//     java.lang.String[] var71 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var69, var71);
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", var59, var62, var71);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make(var29, var71);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("", 0, 0, var22, var71);
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("", (-64), (-8), var15, var71);
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", var1, var7, var71);
//     com.google.javascript.jscomp.CheckLevel var78 = null;
//     com.google.javascript.jscomp.MessageFormatter var79 = null;
//     java.lang.String var80 = var77.format(var78, var79);
// 
//   }

  public void test426() {}
//   public void test426() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test426"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled(".  at (unknown source) line -3 : (unknown column)", "hi!: . hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3 at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var7 = null;
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("hi!", ": ");
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.rhino.Node var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     java.lang.String[] var20 = new java.lang.String[] { "hi!: hi!"};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var15, var18, var20);
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make(var13, var20);
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!: ", var7, var10, var20);
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column). hi!: hi! at (unknown source) line (unknown line) : (unknown column): .  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : : hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var1, var2, var5, var20);
// 
//   }

  public void test427() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test427"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
    java.lang.String var6 = var5.toString();
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var20 = var16.compareTo(var19);
    com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var27 = var23.compareTo(var26);
    com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var34 = var30.compareTo(var33);
    int var35 = var23.compareTo(var30);
    boolean var36 = var16.equals((java.lang.Object)var30);
    com.google.javascript.rhino.Node var38 = null;
    com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var46 = null;
    com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.make("", var46, "hi!");
    java.lang.String[] var50 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var48, var50);
    com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("", var38, var41, var50);
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("", 0, 1, var13, var16, var50);
    com.google.javascript.rhino.Node var55 = null;
    com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
    com.google.javascript.rhino.Node var60 = null;
    com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var68 = null;
    com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.make("", var68, "hi!");
    java.lang.String[] var72 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var70, var72);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("", var60, var63, var72);
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var55, var58, var72);
    com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make(": ", (-12), 46, var16, var72);
    com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 54, (-3), var5, var72);
    com.google.javascript.jscomp.DiagnosticType var78 = var77.getType();
    java.lang.String var79 = var77.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "hi!. hi! at (unknown source) line (unknown line) : (unknown column): "+ "'", var6.equals("hi!. hi! at (unknown source) line (unknown line) : (unknown column): "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at hi!.  at hi!: hi! line (unknown line) : 10 line 54 : -3"+ "'", var79.equals("hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at hi!.  at hi!: hi! line (unknown line) : 10 line 54 : -3"));

  }

  public void test428() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test428"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!.  at (unknown source) line (unknown line) : (unknown column)", var1, "");
    com.google.javascript.jscomp.CheckLevel var5 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make(": hi!. hi! at hi! line (unknown line) : (unknown column)", var5, ": hi!. hi! at hi! line (unknown line) : (unknown column)");
    int var8 = var3.compareTo(var7);
    com.google.javascript.jscomp.CheckLevel var12 = null;
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!.  at hi!: hi! line (unknown line) : 10");
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!.  at (unknown source) line (unknown line) : (unknown column)", ": hi!. hi! at hi! line (unknown line) : (unknown column): hi!. hi! at hi!: hi! line 0 : -3");
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at hi! line (unknown line) : (unknown column)", "");
    boolean var23 = var21.equals((java.lang.Object)10L);
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", ": hi!");
    int var33 = var29.compareTo(var32);
    com.google.javascript.jscomp.CheckLevel var38 = null;
    com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.make("", var38, "hi!");
    com.google.javascript.rhino.Node var42 = null;
    com.google.javascript.rhino.Node var44 = null;
    com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var52 = null;
    com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.make("", var52, "hi!");
    java.lang.String[] var56 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var54, var56);
    com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!", var44, var47, var56);
    com.google.javascript.rhino.Node var60 = null;
    com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var68 = null;
    com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.make("", var68, "hi!");
    java.lang.String[] var72 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var70, var72);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!", var60, var63, var72);
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var42, var47, var72);
    com.google.javascript.rhino.Node var77 = null;
    com.google.javascript.jscomp.DiagnosticType var80 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var85 = null;
    com.google.javascript.jscomp.DiagnosticType var87 = com.google.javascript.jscomp.DiagnosticType.make("", var85, "hi!");
    java.lang.String[] var89 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var87, var89);
    com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!", var77, var80, var89);
    com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make(var47, var89);
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("", 0, 0, var40, var89);
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", 12, 4, var32, var89);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make(var21, var89);
    boolean var96 = var18.equals((java.lang.Object)var89);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make(". hi! at (unknown source) line 0 : 0", 54, (-1), var12, var15, var89);
    com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make(var7, var89);
    int var99 = var98.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == (-12));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var99 == (-1));

  }

  public void test429() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test429"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var9 = var5.compareTo(var8);
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var16 = var12.compareTo(var15);
    int var17 = var5.compareTo(var12);
    java.lang.String[] var18 = null;
    com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 10, 1, var5, var18);
    com.google.javascript.jscomp.CheckLevel var23 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", ".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!. hi! at hi! line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var36 = null;
    com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var43 = null;
    com.google.javascript.jscomp.CheckLevel var45 = null;
    com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var45, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var52 = null;
    com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.make("", var52, "hi!");
    java.lang.String[] var56 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var54, var56);
    com.google.javascript.rhino.Node var59 = null;
    com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var67 = null;
    com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.make("", var67, "hi!");
    java.lang.String[] var71 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var69, var71);
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", var59, var62, var71);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make(var54, var71);
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("", 0, 1, var43, var47, var71);
    com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var36, var39, var71);
    com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make(": ", 100, (-1), var32, var71);
    com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("", 3, (-64), var23, var26, var71);
    boolean var79 = var5.equals((java.lang.Object)3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);

  }

  public void test430() {}
//   public void test430() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test430"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!. hi! at hi! line (unknown line) : (unknown column). hi!: hi! at (unknown source) line (unknown line) : (unknown column)");
// 
//   }

  public void test431() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test431"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(". hi! at hi! line 1 : (unknown column)");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test432() {}
//   public void test432() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test432"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
// 
//   }

  public void test433() {}
//   public void test433() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test433"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("", ": ");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("", var13, "hi!");
//     com.google.javascript.rhino.Node var17 = null;
//     com.google.javascript.rhino.Node var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.make("", var27, "hi!");
//     java.lang.String[] var31 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var29, var31);
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", var19, var22, var31);
//     com.google.javascript.rhino.Node var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.make("", var43, "hi!");
//     java.lang.String[] var47 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var45, var47);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", var35, var38, var47);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var17, var22, var47);
//     com.google.javascript.rhino.Node var52 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var60 = null;
//     com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.make("", var60, "hi!");
//     java.lang.String[] var64 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var62, var64);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!", var52, var55, var64);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make(var22, var64);
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("", 0, 0, var15, var64);
//     com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("", (-64), (-8), var8, var64);
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make(var2, var64);
//     com.google.javascript.jscomp.DiagnosticType var71 = var70.getType();
//     com.google.javascript.jscomp.CheckLevel var72 = null;
//     com.google.javascript.jscomp.MessageFormatter var73 = null;
//     java.lang.String var74 = var70.format(var72, var73);
// 
//   }

  public void test434() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test434"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error(": hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.make("", var10, "hi!");
    java.lang.String[] var14 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var12, var14);
    com.google.javascript.jscomp.DiagnosticType var16 = var15.getType();
    int var17 = var5.compareTo(var16);
    com.google.javascript.rhino.Node var19 = null;
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
    java.lang.String[] var23 = null;
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at hi!.  at hi!: hi! line (unknown line) : 10 line 54 : -3", var19, var22, var23);
    com.google.javascript.jscomp.CheckLevel var28 = null;
    com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
    com.google.javascript.rhino.Node var33 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var38 = null;
    com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var46 = null;
    com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.make("", var46, "hi!");
    java.lang.String[] var50 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var48, var50);
    com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", var38, var41, var50);
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var33, var36, var50);
    com.google.javascript.jscomp.DiagnosticType var54 = var53.getType();
    int var55 = var31.compareTo(var54);
    com.google.javascript.jscomp.CheckLevel var59 = null;
    com.google.javascript.jscomp.CheckLevel var61 = null;
    com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var61, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var68 = null;
    com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.make("", var68, "hi!");
    java.lang.String[] var72 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var70, var72);
    com.google.javascript.rhino.Node var75 = null;
    com.google.javascript.jscomp.DiagnosticType var78 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var83 = null;
    com.google.javascript.jscomp.DiagnosticType var85 = com.google.javascript.jscomp.DiagnosticType.make("", var83, "hi!");
    java.lang.String[] var87 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var85, var87);
    com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make("hi!", var75, var78, var87);
    com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make(var70, var87);
    com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("", 0, 1, var59, var63, var87);
    com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("", (-39), 1, var28, var54, var87);
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make(var22, var87);
    int var94 = var16.compareTo(var22);
    boolean var95 = var2.equals((java.lang.Object)var16);
    java.lang.String var96 = var16.toString();
    java.lang.String var97 = var16.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == (-149));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + ": hi!"+ "'", var96.equals(": hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var97 + "' != '" + ": hi!"+ "'", var97.equals(": hi!"));

  }

  public void test435() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test435"); }


    com.google.javascript.jscomp.CheckLevel var4 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "");
    com.google.javascript.rhino.Node var8 = null;
    com.google.javascript.rhino.Node var10 = null;
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
    java.lang.String[] var22 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var20, var22);
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var22);
    com.google.javascript.rhino.Node var26 = null;
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var34 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
    java.lang.String[] var38 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var38);
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var8, var13, var38);
    com.google.javascript.rhino.Node var43 = null;
    com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var51 = null;
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
    java.lang.String[] var55 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var53, var55);
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var55);
    com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make(var13, var55);
    java.lang.String var59 = var13.toString();
    int var60 = var6.compareTo(var13);
    java.lang.String[] var62 = new java.lang.String[] { "hi!. hi! at (unknown source) line (unknown line) : (unknown column)"};
    com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", 0, 1, var6, var62);
    com.google.javascript.jscomp.DiagnosticType var64 = var63.getType();
    java.lang.String var65 = var64.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "hi!: hi!"+ "'", var59.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == (-3));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ": "+ "'", var65.equals(": "));

  }

  public void test436() {}
//   public void test436() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test436"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!. hi! at hi! line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var18, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var25 = null;
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.make("", var25, "hi!");
//     java.lang.String[] var29 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var27, var29);
//     com.google.javascript.rhino.Node var32 = null;
//     com.google.javascript.jscomp.DiagnosticType var35 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var40 = null;
//     com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("", var40, "hi!");
//     java.lang.String[] var44 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var42, var44);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", var32, var35, var44);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make(var27, var44);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("", 0, 1, var16, var20, var44);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var9, var12, var44);
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make(": ", 100, (-1), var5, var44);
//     java.lang.Object var51 = null;
//     boolean var52 = var50.equals(var51);
//     com.google.javascript.jscomp.CheckLevel var53 = null;
//     com.google.javascript.jscomp.MessageFormatter var54 = null;
//     java.lang.String var55 = var50.format(var53, var54);
// 
//   }

  public void test437() {}
//   public void test437() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test437"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var9, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var16 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.make("", var16, "hi!");
//     java.lang.String[] var20 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var18, var20);
//     com.google.javascript.rhino.Node var23 = null;
//     com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.make("", var31, "hi!");
//     java.lang.String[] var35 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var33, var35);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", var23, var26, var35);
//     com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make(var18, var35);
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("", 0, 1, var7, var11, var35);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("", 39, 0, var3, var35);
// 
//   }

  public void test438() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test438"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning(". hi! at (unknown source) line (unknown line) : (unknown column)", "hi!: hi!: ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test439() {}
//   public void test439() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test439"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", "hi!");
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var21, var23);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var11, var14, var23);
//     com.google.javascript.rhino.Node var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.make("", var35, "hi!");
//     java.lang.String[] var39 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var37, var39);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", var27, var30, var39);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var9, var14, var39);
//     com.google.javascript.rhino.Node var44 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var52 = null;
//     com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.make("", var52, "hi!");
//     java.lang.String[] var56 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var54, var56);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!", var44, var47, var56);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make(var14, var56);
//     com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make(": hi!", var4, var7, var56);
//     java.lang.String[] var61 = null;
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make(": : hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : hi!: . hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", var1, var2, var7, var61);
// 
//   }

  public void test440() {}
//   public void test440() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test440"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("hi!: ", var9, "");
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ".  at (unknown source) line 1 : 10");
//     com.google.javascript.rhino.Node var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("", var28, "hi!");
//     java.lang.String[] var32 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var30, var32);
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", var20, var23, var32);
//     int var35 = var34.getCharno();
//     com.google.javascript.jscomp.DiagnosticType var36 = var34.getType();
//     boolean var37 = var18.equals((java.lang.Object)var36);
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.CheckLevel var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.make("", var43, "");
//     com.google.javascript.jscomp.CheckLevel var50 = null;
//     com.google.javascript.jscomp.DiagnosticType var52 = com.google.javascript.jscomp.DiagnosticType.make("", var50, "hi!");
//     java.lang.String[] var54 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var52, var54);
//     com.google.javascript.rhino.Node var57 = null;
//     com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var65 = null;
//     com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.make("", var65, "hi!");
//     java.lang.String[] var69 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var67, var69);
//     com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("hi!", var57, var60, var69);
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make(var52, var69);
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make(": ", 0, (-64), var41, var45, var69);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("", (-67), 0, var15, var36, var69);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column). hi!: hi! at (unknown source) line (unknown line) : (unknown column)", 51, (-67), var7, var11, var69);
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line -67 : 0", 10, 3, var3, var69);
// 
//   }

  public void test441() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test441"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(". hi! at (unknown source) line (unknown line) : (unknown column): hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test442() {}
//   public void test442() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test442"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var9 = var5.compareTo(var8);
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var16 = var12.compareTo(var15);
//     int var17 = var5.compareTo(var12);
//     java.lang.String[] var18 = null;
//     com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 10, 1, var5, var18);
//     com.google.javascript.jscomp.DiagnosticType var20 = var19.getType();
//     int var21 = var19.getCharno();
//     com.google.javascript.jscomp.CheckLevel var22 = null;
//     com.google.javascript.jscomp.MessageFormatter var23 = null;
//     java.lang.String var24 = var19.format(var22, var23);
// 
//   }

  public void test443() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test443"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning(".  at (unknown source) line 1 : 10", "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
    com.google.javascript.rhino.Node var4 = null;
    com.google.javascript.rhino.Node var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var14 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
    java.lang.String[] var18 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var16, var18);
    com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("", var6, var9, var18);
    com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    int var24 = var9.compareTo(var23);
    com.google.javascript.jscomp.CheckLevel var28 = null;
    com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!");
    com.google.javascript.jscomp.CheckLevel var35 = null;
    com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var42 = var38.compareTo(var41);
    com.google.javascript.rhino.Node var44 = null;
    com.google.javascript.rhino.Node var46 = null;
    com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var54 = null;
    com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.make("", var54, "hi!");
    java.lang.String[] var58 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var56, var58);
    com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", var46, var49, var58);
    com.google.javascript.rhino.Node var62 = null;
    com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var70 = null;
    com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.make("", var70, "hi!");
    java.lang.String[] var74 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var72, var74);
    com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!", var62, var65, var74);
    com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var44, var49, var74);
    com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("", 100, 1, var35, var41, var74);
    com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("", 0, (-1), var28, var31, var74);
    com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("", var4, var23, var74);
    java.lang.String var81 = var80.toString();
    boolean var82 = var2.equals((java.lang.Object)var80);
    com.google.javascript.jscomp.DiagnosticType var85 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at (unknown source) line (unknown line) : (unknown column)", ": : hi!");
    int var86 = var2.compareTo(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "hi!.  at (unknown source) line (unknown line) : (unknown column)"+ "'", var81.equals("hi!.  at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == (-58));

  }

  public void test444() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test444"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(": : hi!.  at (unknown source) line (unknown line) : (unknown column)");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test445() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test445"); }


    com.google.javascript.jscomp.CheckLevel var4 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!");
    java.lang.String[] var8 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var9 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var6, var8);
    java.lang.Object var10 = null;
    boolean var11 = var9.equals(var10);
    int var12 = var9.getCharno();
    int var13 = var9.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == (-1));

  }

  public void test446() {}
//   public void test446() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test446"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "");
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
//     java.lang.String[] var22 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var20, var22);
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var22);
//     com.google.javascript.rhino.Node var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var34 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
//     java.lang.String[] var38 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
//     com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var38);
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var8, var13, var38);
//     com.google.javascript.rhino.Node var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
//     java.lang.String[] var55 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var53, var55);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var55);
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make(var13, var55);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("", (-3), (-1), var6, var55);
//     int var60 = var59.getCharno();
//     java.lang.String var61 = var59.toString();
//     com.google.javascript.jscomp.CheckLevel var62 = null;
//     com.google.javascript.jscomp.MessageFormatter var63 = null;
//     java.lang.String var64 = var59.format(var62, var63);
// 
//   }

  public void test447() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test447"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled(".  at hi!.  at hi!: hi! line (unknown line) : 10 line 3 : 0", "hi!: hi!: : hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test448() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test448"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var7 = null;
    com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", ": hi!. hi! at hi! line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var14 = null;
    com.google.javascript.rhino.Node var16 = null;
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var24 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
    java.lang.String[] var28 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var26, var28);
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("", var16, var19, var28);
    com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    int var34 = var19.compareTo(var33);
    com.google.javascript.rhino.Node var36 = null;
    com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var44 = null;
    com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.make("", var44, "hi!");
    java.lang.String[] var48 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var46, var48);
    com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("", var36, var39, var48);
    com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", 1, 46, var14, var33, var48);
    com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-12), 100, var7, var10, var48);
    com.google.javascript.jscomp.DiagnosticType var53 = var52.getType();
    com.google.javascript.jscomp.CheckLevel var58 = null;
    com.google.javascript.jscomp.DiagnosticType var60 = com.google.javascript.jscomp.DiagnosticType.make("", var58, "hi!");
    java.lang.String[] var62 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var60, var62);
    com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make(": ", 46, (-3), var3, var53, var62);
    boolean var66 = var64.equals((java.lang.Object)": : hi!.  at (unknown source) line (unknown line) : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);

  }

  public void test449() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test449"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var5 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("", var5, "hi!");
    com.google.javascript.rhino.Node var9 = null;
    com.google.javascript.rhino.Node var11 = null;
    com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var19 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
    java.lang.String[] var23 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var21, var23);
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var11, var14, var23);
    com.google.javascript.rhino.Node var27 = null;
    com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var35 = null;
    com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.make("", var35, "hi!");
    java.lang.String[] var39 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var37, var39);
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", var27, var30, var39);
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var9, var14, var39);
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var3, var7, var39);
    int var44 = var43.getCharno();
    java.lang.Object var45 = null;
    boolean var46 = var43.equals(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);

  }

  public void test450() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test450"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var7 = null;
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", var9, "hi!: hi!: ");
    java.lang.String[] var12 = null;
    com.google.javascript.jscomp.JSError var13 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", (-1), (-39), var7, var11, var12);
    com.google.javascript.jscomp.DiagnosticType var14 = var13.getType();
    com.google.javascript.rhino.Node var16 = null;
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var24 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
    java.lang.String[] var28 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var26, var28);
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", var16, var19, var28);
    java.lang.String var31 = var19.toString();
    com.google.javascript.jscomp.CheckLevel var38 = null;
    com.google.javascript.jscomp.CheckLevel var40 = null;
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.make("", var40, "hi!");
    com.google.javascript.rhino.Node var44 = null;
    com.google.javascript.rhino.Node var46 = null;
    com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var54 = null;
    com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.make("", var54, "hi!");
    java.lang.String[] var58 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var56, var58);
    com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", var46, var49, var58);
    com.google.javascript.rhino.Node var62 = null;
    com.google.javascript.jscomp.DiagnosticType var65 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var70 = null;
    com.google.javascript.jscomp.DiagnosticType var72 = com.google.javascript.jscomp.DiagnosticType.make("", var70, "hi!");
    java.lang.String[] var74 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var72, var74);
    com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!", var62, var65, var74);
    com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var44, var49, var74);
    com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var38, var42, var74);
    com.google.javascript.jscomp.CheckLevel var83 = null;
    com.google.javascript.jscomp.DiagnosticType var85 = com.google.javascript.jscomp.DiagnosticType.make("", var83, "hi!");
    java.lang.String[] var87 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var85, var87);
    com.google.javascript.jscomp.JSError var89 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column): : hi!", 3, 3, var42, var87);
    com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make(var19, var87);
    com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make(": hi!. hi! at hi! line (unknown line) : (unknown column)", (-38), 2, var3, var14, var87);
    java.lang.String var92 = var91.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "hi!: hi!"+ "'", var31.equals("hi!: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + "hi!. hi! at (unknown source) line (unknown line) : (unknown column): . hi!: hi!:  at : hi!. hi! at hi! line (unknown line) : (unknown column) line -38 : 2"+ "'", var92.equals("hi!. hi! at (unknown source) line (unknown line) : (unknown column): . hi!: hi!:  at : hi!. hi! at hi! line (unknown line) : (unknown column) line -38 : 2"));

  }

  public void test451() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test451"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf("hi!: : ");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test452() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test452"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var5 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make("", var5, "hi!");
    com.google.javascript.rhino.Node var9 = null;
    com.google.javascript.rhino.Node var11 = null;
    com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var19 = null;
    com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
    java.lang.String[] var23 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var21, var23);
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var11, var14, var23);
    com.google.javascript.rhino.Node var27 = null;
    com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var35 = null;
    com.google.javascript.jscomp.DiagnosticType var37 = com.google.javascript.jscomp.DiagnosticType.make("", var35, "hi!");
    java.lang.String[] var39 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var37, var39);
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", var27, var30, var39);
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var9, var14, var39);
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var3, var7, var39);
    int var44 = var43.getCharno();
    java.lang.String var45 = var43.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ". hi! at hi! line 0 : (unknown column)"+ "'", var45.equals(". hi! at hi! line 0 : (unknown column)"));

  }

  public void test453() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test453"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
    java.lang.String[] var13 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
    com.google.javascript.jscomp.DiagnosticType var16 = var15.getType();
    int var17 = var15.getCharno();
    boolean var19 = var15.equals((java.lang.Object)(short)1);
    com.google.javascript.jscomp.CheckLevel var23 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var30 = null;
    com.google.javascript.jscomp.CheckLevel var32 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var32, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var39 = null;
    com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.make("", var39, "hi!");
    java.lang.String[] var43 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var41, var43);
    com.google.javascript.rhino.Node var46 = null;
    com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var54 = null;
    com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.make("", var54, "hi!");
    java.lang.String[] var58 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var56, var58);
    com.google.javascript.jscomp.JSError var60 = com.google.javascript.jscomp.JSError.make("hi!", var46, var49, var58);
    com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make(var41, var58);
    com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("", 0, 1, var30, var34, var58);
    com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 1, (-1), var23, var26, var58);
    boolean var64 = var15.equals((java.lang.Object)var23);
    int var65 = var15.getCharno();
    int var66 = var15.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == (-1));

  }

  public void test454() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test454"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(".  at (unknown source) line (unknown line) : (unknown column)");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test455() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test455"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error(".  at (unknown source) line -3 : (unknown column)", "hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at hi!.  at hi!: hi! line (unknown line) : 10 line 54 : -3");
    com.google.javascript.jscomp.CheckLevel var10 = null;
    com.google.javascript.jscomp.CheckLevel var14 = null;
    com.google.javascript.rhino.Node var16 = null;
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var24 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.make("", var24, "hi!");
    java.lang.String[] var28 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var26, var28);
    com.google.javascript.jscomp.JSError var30 = com.google.javascript.jscomp.JSError.make("hi!", var16, var19, var28);
    com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var34 = var19.compareTo(var33);
    java.lang.String[] var36 = new java.lang.String[] { "hi!: hi!: "};
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 46, (-3), var14, var33, var36);
    com.google.javascript.jscomp.CheckLevel var42 = null;
    com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.make("", var42, "hi!");
    com.google.javascript.rhino.Node var46 = null;
    com.google.javascript.rhino.Node var48 = null;
    com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var56 = null;
    com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.make("", var56, "hi!");
    java.lang.String[] var60 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var58, var60);
    com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!", var48, var51, var60);
    com.google.javascript.rhino.Node var64 = null;
    com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var72 = null;
    com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.make("", var72, "hi!");
    java.lang.String[] var76 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var74, var76);
    com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("hi!", var64, var67, var76);
    com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var46, var51, var76);
    com.google.javascript.rhino.Node var81 = null;
    com.google.javascript.jscomp.DiagnosticType var84 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var89 = null;
    com.google.javascript.jscomp.DiagnosticType var91 = com.google.javascript.jscomp.DiagnosticType.make("", var89, "hi!");
    java.lang.String[] var93 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var91, var93);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!", var81, var84, var93);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make(var51, var93);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make("", 0, 0, var44, var93);
    com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", 3, 0, var10, var33, var93);
    com.google.javascript.jscomp.JSError var99 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10", 0, 51, var3, var6, var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var99);

  }

  public void test456() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test456"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!: hi!: : hi!", ".  at (unknown source) line 100 : 1");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test457() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test457"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var9 = null;
    com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
    java.lang.String[] var13 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
    com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("", var1, var4, var13);
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    int var19 = var4.compareTo(var18);
    com.google.javascript.rhino.Node var21 = null;
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var29 = null;
    com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("", var29, "hi!");
    java.lang.String[] var33 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var31, var33);
    com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", var21, var24, var33);
    com.google.javascript.jscomp.DiagnosticType var36 = var35.getType();
    int var37 = var35.getCharno();
    boolean var39 = var35.equals((java.lang.Object)(short)1);
    com.google.javascript.jscomp.DiagnosticType var40 = var35.getType();
    boolean var41 = var4.equals((java.lang.Object)var35);
    java.lang.String var42 = var35.toString();
    com.google.javascript.jscomp.DiagnosticType var43 = var35.getType();
    com.google.javascript.jscomp.CheckLevel var45 = null;
    com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.make(".  at (unknown source) line -3 : (unknown column)", var45, ": hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    boolean var48 = var43.equals((java.lang.Object)var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "hi!. hi! at hi! line (unknown line) : (unknown column)"+ "'", var42.equals("hi!. hi! at hi! line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);

  }

  public void test458() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test458"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make(".  at (unknown source) line 1 : 10", var1, "hi!. hi! at (unknown source) line -67 : 0");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test459() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test459"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!. hi! at (unknown source) line (unknown line) : (unknown column): . hi!: hi!:  at : hi!. hi! at hi! line (unknown line) : (unknown column) line -38 : 2", ": hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test460() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test460"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!.  at hi!: hi! line (unknown line) : 10", "hi!. hi! at hi! line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var4 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", var4, ".  at :  line -12 : 46");
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", ".  at (unknown source) line 1 : 10");
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.rhino.Node var15 = null;
    com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var23 = null;
    com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.make("", var23, "hi!");
    java.lang.String[] var27 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var25, var27);
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make("hi!", var15, var18, var27);
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var33 = var18.compareTo(var32);
    java.lang.String[] var35 = new java.lang.String[] { "hi!: hi!: "};
    com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 46, (-3), var13, var32, var35);
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make(var9, var35);
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make(var6, var35);
    boolean var39 = var2.equals((java.lang.Object)var38);
    com.google.javascript.jscomp.DiagnosticType var42 = com.google.javascript.jscomp.DiagnosticType.disabled("", ": : hi!");
    int var43 = var2.compareTo(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 42);

  }

  public void test461() {}
//   public void test461() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test461"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ": : hi!. hi! at hi! line (unknown line) : (unknown column): hi!. hi! at hi!: hi! line 0 : -3");
// 
//   }

  public void test462() {}
//   public void test462() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test462"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10: : hi!", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     java.lang.String[] var6 = null;
//     com.google.javascript.jscomp.JSError var7 = com.google.javascript.jscomp.JSError.make("", 149, (-253), var5, var6);
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.MessageFormatter var9 = null;
//     java.lang.String var10 = var7.format(var8, var9);
// 
//   }

  public void test463() {}
//   public void test463() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test463"); }
// 
// 
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     java.lang.String[] var4 = null;
//     com.google.javascript.jscomp.JSError var5 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 0 : 1", (-39), 0, var3, var4);
// 
//   }

  public void test464() {}
//   public void test464() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test464"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi!.  at hi!: hi! line (unknown line) : 10 at .  at (unknown source) line 1 : 10 line -12 : 100: ", "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : hi!: . hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: hi!", ".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ");
//     com.google.javascript.jscomp.CheckLevel var15 = null;
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!: hi!");
//     com.google.javascript.rhino.Node var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var30 = com.google.javascript.jscomp.DiagnosticType.make("", var28, "hi!");
//     java.lang.String[] var32 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var30, var32);
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", var20, var23, var32);
//     com.google.javascript.jscomp.DiagnosticType var35 = var34.getType();
//     com.google.javascript.rhino.Node var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.make("", var45, "hi!");
//     java.lang.String[] var49 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var47, var49);
//     com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", var37, var40, var49);
//     com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make(var35, var49);
//     com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!: hi!", 2, 0, var15, var18, var49);
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line -3 : (unknown column)", 0, 54, var11, var49);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!: : . hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3 at .  at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3 line (unknown line) : (unknown column)", var1, var2, var5, var49);
// 
//   }

  public void test465() {}
//   public void test465() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test465"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("hi!", var4, ".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
//     java.lang.String[] var7 = null;
//     com.google.javascript.jscomp.JSError var8 = com.google.javascript.jscomp.JSError.make("hi!.  at (unknown source) line (unknown line) : (unknown column)", var1, var2, var6, var7);
// 
//   }

  public void test466() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test466"); }


    com.google.javascript.jscomp.CheckLevel var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var20 = var16.compareTo(var19);
    com.google.javascript.rhino.Node var22 = null;
    com.google.javascript.rhino.Node var24 = null;
    com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var32 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.make("", var32, "hi!");
    java.lang.String[] var36 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var34, var36);
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!", var24, var27, var36);
    com.google.javascript.rhino.Node var40 = null;
    com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var48 = null;
    com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.make("", var48, "hi!");
    java.lang.String[] var52 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var53 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var50, var52);
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", var40, var43, var52);
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var22, var27, var52);
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("", 100, 1, var13, var19, var52);
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make(": hi!", 0, 10, var6, var9, var52);
    java.lang.String[] var58 = null;
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", (-3), 0, var9, var58);
    java.lang.String var60 = var59.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ".  at hi!. hi! at hi! line (unknown line) : (unknown column) line -3 : 0"+ "'", var60.equals(".  at hi!. hi! at hi! line (unknown line) : (unknown column) line -3 : 0"));

  }

  public void test467() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test467"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled(".  at (unknown source) line (unknown line) : (unknown column)", "hi!: : . hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3 at .  at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3 line (unknown line) : (unknown column)");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test468() {}
//   public void test468() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test468"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.warning(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", "hi!: hi!");
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ": hi!");
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.make("", var26, "hi!");
//     java.lang.String[] var30 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var28, var30);
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!.  at hi!: hi! line (unknown line) : 10", (-8), (-64), var18, var21, var30);
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make(var14, var30);
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make(var11, var30);
//     com.google.javascript.jscomp.DiagnosticType var35 = var34.getType();
//     com.google.javascript.rhino.Node var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
//     com.google.javascript.jscomp.CheckLevel var44 = null;
//     com.google.javascript.jscomp.CheckLevel var46 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.make("", var46, "hi!");
//     com.google.javascript.rhino.Node var50 = null;
//     com.google.javascript.rhino.Node var52 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var60 = null;
//     com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.make("", var60, "hi!");
//     java.lang.String[] var64 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var62, var64);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!", var52, var55, var64);
//     com.google.javascript.rhino.Node var68 = null;
//     com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var76 = null;
//     com.google.javascript.jscomp.DiagnosticType var78 = com.google.javascript.jscomp.DiagnosticType.make("", var76, "hi!");
//     java.lang.String[] var80 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var81 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var78, var80);
//     com.google.javascript.jscomp.JSError var82 = com.google.javascript.jscomp.JSError.make("hi!", var68, var71, var80);
//     com.google.javascript.jscomp.JSError var83 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var50, var55, var80);
//     com.google.javascript.jscomp.JSError var84 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var44, var48, var80);
//     com.google.javascript.jscomp.JSError var85 = com.google.javascript.jscomp.JSError.make("", var37, var40, var80);
//     com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!.  at (unknown source) line (unknown line) : (unknown column)", 64, (-149), var8, var35, var80);
//     com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!: ", 54, 0, var3, var4, var80);
// 
//   }

  public void test469() {}
//   public void test469() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test469"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("", var1, ".  at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     int var5 = var3.compareTo(var4);
// 
//   }

  public void test470() {}
//   public void test470() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test470"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.disabled(".  at (unknown source) line 1 : 10", "");
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var15 = var11.compareTo(var14);
//     com.google.javascript.jscomp.DiagnosticType var18 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var22 = var18.compareTo(var21);
//     com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error("", "");
//     com.google.javascript.jscomp.DiagnosticType var28 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var29 = var25.compareTo(var28);
//     int var30 = var18.compareTo(var25);
//     boolean var31 = var11.equals((java.lang.Object)var25);
//     com.google.javascript.rhino.Node var33 = null;
//     com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.make("", var41, "hi!");
//     java.lang.String[] var45 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var43, var45);
//     com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("", var33, var36, var45);
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("", 0, 1, var8, var11, var45);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make(": : hi!. hi! at hi! line (unknown line) : (unknown column)", var1, var4, var45);
//     com.google.javascript.jscomp.CheckLevel var50 = null;
//     com.google.javascript.jscomp.MessageFormatter var51 = null;
//     java.lang.String var52 = var49.format(var50, var51);
// 
//   }

  public void test471() {}
//   public void test471() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test471"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ".  at (unknown source) line -3 : (unknown column): .  at (unknown source) line 1 : 10: hi!: hi!: ");
// 
//   }

  public void test472() {}
//   public void test472() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test472"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     java.lang.String[] var4 = null;
//     com.google.javascript.jscomp.JSError var5 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var1, var2, var3, var4);
// 
//   }

  public void test473() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test473"); }


    com.google.javascript.jscomp.CheckLevel var1 = null;
    com.google.javascript.jscomp.DiagnosticType var3 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!: hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, "hi!. hi!.  at hi!: hi! line (unknown line) : 10 at .  at (unknown source) line 1 : 10 line -12 : 100");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test474() {}
//   public void test474() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test474"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.DiagnosticType var3 = null;
//     com.google.javascript.jscomp.CheckLevel var7 = null;
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
//     java.lang.String[] var21 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var19, var21);
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", var9, var12, var21);
//     com.google.javascript.jscomp.DiagnosticType var24 = var23.getType();
//     int var25 = var23.getCharno();
//     boolean var27 = var23.equals((java.lang.Object)(short)1);
//     com.google.javascript.jscomp.DiagnosticType var28 = var23.getType();
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var35 = null;
//     com.google.javascript.jscomp.CheckLevel var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.make("", var37, "hi!");
//     com.google.javascript.rhino.Node var41 = null;
//     com.google.javascript.rhino.Node var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var51 = null;
//     com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
//     java.lang.String[] var55 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var53, var55);
//     com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var55);
//     com.google.javascript.rhino.Node var59 = null;
//     com.google.javascript.jscomp.DiagnosticType var62 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var67 = null;
//     com.google.javascript.jscomp.DiagnosticType var69 = com.google.javascript.jscomp.DiagnosticType.make("", var67, "hi!");
//     java.lang.String[] var71 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var69, var71);
//     com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", var59, var62, var71);
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var41, var46, var71);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var35, var39, var71);
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make(var31, var71);
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column). hi!: hi! at (unknown source) line (unknown line) : (unknown column)", 0, 12, var7, var28, var71);
//     com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("", var1, var2, var3, var71);
// 
//   }

  public void test475() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test475"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.rhino.Node var3 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var11 = null;
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.make("", var11, "hi!");
    java.lang.String[] var15 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var16 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var13, var15);
    com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!", var3, var6, var15);
    com.google.javascript.rhino.Node var19 = null;
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var27 = null;
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.make("", var27, "hi!");
    java.lang.String[] var31 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var29, var31);
    com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", var19, var22, var31);
    com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var1, var6, var31);
    com.google.javascript.rhino.Node var36 = null;
    com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var44 = null;
    com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.make("", var44, "hi!");
    java.lang.String[] var48 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var46, var48);
    com.google.javascript.jscomp.JSError var50 = com.google.javascript.jscomp.JSError.make("hi!", var36, var39, var48);
    com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make(var6, var48);
    java.lang.String var52 = var51.toString();
    java.lang.String var53 = var51.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "hi!. hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var52.equals("hi!. hi! at (unknown source) line (unknown line) : (unknown column)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "hi!. hi! at (unknown source) line (unknown line) : (unknown column)"+ "'", var53.equals("hi!. hi! at (unknown source) line (unknown line) : (unknown column)"));

  }

  public void test476() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test476"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(": : hi!. hi! at hi! line (unknown line) : (unknown column): hi!. hi! at hi!: hi! line 0 : -3");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test477() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test477"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!: hi!: hi!");
    java.lang.String[] var6 = null;
    com.google.javascript.jscomp.JSError var7 = com.google.javascript.jscomp.JSError.make("", 0, (-8), var5, var6);
    java.lang.String var8 = var5.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ": hi!: hi!: hi!"+ "'", var8.equals(": hi!: hi!: hi!"));

  }

  public void test478() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test478"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!: hi!", "hi!.  at hi!: hi! line (unknown line) : 10: : hi!");
    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.error(": hi!. hi! at (unknown source) line (unknown line) : (unknown column)", "");
    com.google.javascript.jscomp.DiagnosticType var8 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var13 = null;
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.make("", var13, "hi!");
    java.lang.String[] var17 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var15, var17);
    com.google.javascript.jscomp.DiagnosticType var19 = var18.getType();
    int var20 = var8.compareTo(var19);
    com.google.javascript.rhino.Node var22 = null;
    com.google.javascript.jscomp.DiagnosticType var25 = com.google.javascript.jscomp.DiagnosticType.error(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
    java.lang.String[] var26 = null;
    com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column).  at hi!.  at hi!: hi! line (unknown line) : 10 line 54 : -3", var22, var25, var26);
    com.google.javascript.jscomp.CheckLevel var31 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
    com.google.javascript.rhino.Node var36 = null;
    com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var41 = null;
    com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var49 = null;
    com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.make("", var49, "hi!");
    java.lang.String[] var53 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var51, var53);
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", var41, var44, var53);
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var36, var39, var53);
    com.google.javascript.jscomp.DiagnosticType var57 = var56.getType();
    int var58 = var34.compareTo(var57);
    com.google.javascript.jscomp.CheckLevel var62 = null;
    com.google.javascript.jscomp.CheckLevel var64 = null;
    com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var64, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var71 = null;
    com.google.javascript.jscomp.DiagnosticType var73 = com.google.javascript.jscomp.DiagnosticType.make("", var71, "hi!");
    java.lang.String[] var75 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var73, var75);
    com.google.javascript.rhino.Node var78 = null;
    com.google.javascript.jscomp.DiagnosticType var81 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var86 = null;
    com.google.javascript.jscomp.DiagnosticType var88 = com.google.javascript.jscomp.DiagnosticType.make("", var86, "hi!");
    java.lang.String[] var90 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var88, var90);
    com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!", var78, var81, var90);
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make(var73, var90);
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("", 0, 1, var62, var66, var90);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("", (-39), 1, var31, var57, var90);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make(var25, var90);
    int var97 = var19.compareTo(var25);
    boolean var98 = var5.equals((java.lang.Object)var19);
    boolean var99 = var2.equals((java.lang.Object)var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == (-149));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var99 == false);

  }

  public void test479() {}
//   public void test479() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test479"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = null;
//     com.google.javascript.jscomp.CheckLevel var8 = null;
//     com.google.javascript.rhino.Node var10 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var18 = null;
//     com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
//     java.lang.String[] var22 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var20, var22);
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var22);
//     com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var28 = var13.compareTo(var27);
//     java.lang.String[] var30 = new java.lang.String[] { "hi!: hi!: "};
//     com.google.javascript.jscomp.JSError var31 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 46, (-3), var8, var27, var30);
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make(". hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", 10, 0, var3, var4, var30);
// 
//   }

  public void test480() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test480"); }


    com.google.javascript.jscomp.CheckLevel var7 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.make("", var7, "hi!");
    java.lang.String[] var11 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var12 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var9, var11);
    com.google.javascript.rhino.Node var14 = null;
    com.google.javascript.jscomp.DiagnosticType var17 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var22 = null;
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("", var22, "hi!");
    java.lang.String[] var26 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var24, var26);
    com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!", var14, var17, var26);
    com.google.javascript.jscomp.JSError var29 = com.google.javascript.jscomp.JSError.make(var9, var26);
    com.google.javascript.jscomp.CheckLevel var36 = null;
    com.google.javascript.jscomp.CheckLevel var38 = null;
    com.google.javascript.jscomp.DiagnosticType var40 = com.google.javascript.jscomp.DiagnosticType.make("", var38, "hi!");
    com.google.javascript.rhino.Node var42 = null;
    com.google.javascript.rhino.Node var44 = null;
    com.google.javascript.jscomp.DiagnosticType var47 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var52 = null;
    com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.make("", var52, "hi!");
    java.lang.String[] var56 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var54, var56);
    com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!", var44, var47, var56);
    com.google.javascript.rhino.Node var60 = null;
    com.google.javascript.jscomp.DiagnosticType var63 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var68 = null;
    com.google.javascript.jscomp.DiagnosticType var70 = com.google.javascript.jscomp.DiagnosticType.make("", var68, "hi!");
    java.lang.String[] var72 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var73 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var70, var72);
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!", var60, var63, var72);
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var42, var47, var72);
    com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var36, var40, var72);
    com.google.javascript.jscomp.CheckLevel var81 = null;
    com.google.javascript.jscomp.DiagnosticType var83 = com.google.javascript.jscomp.DiagnosticType.make("", var81, "hi!");
    java.lang.String[] var85 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var86 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var83, var85);
    com.google.javascript.jscomp.JSError var87 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column): : hi!", 3, 3, var40, var85);
    com.google.javascript.jscomp.JSError var88 = com.google.javascript.jscomp.JSError.make("hi!", 0, 0, var9, var85);
    java.lang.String var89 = var9.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + ": hi!"+ "'", var89.equals(": hi!"));

  }

  public void test481() {}
//   public void test481() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test481"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.rhino.Node var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.make("", var11, "hi!");
//     java.lang.String[] var15 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var16 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var13, var15);
//     com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!", var3, var6, var15);
//     com.google.javascript.rhino.Node var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var27 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.make("", var27, "hi!");
//     java.lang.String[] var31 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var32 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var29, var31);
//     com.google.javascript.jscomp.JSError var33 = com.google.javascript.jscomp.JSError.make("hi!", var19, var22, var31);
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var1, var6, var31);
//     java.lang.String var35 = var6.toString();
//     com.google.javascript.jscomp.DiagnosticType var36 = null;
//     int var37 = var6.compareTo(var36);
// 
//   }

  public void test482() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test482"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column): : hi!", ".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : : hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test483() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test483"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.warning(".  at (unknown source) line -3 : (unknown column): .  at (unknown source) line 1 : 10: hi!: hi!: ", ".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test484() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test484"); }


    com.google.javascript.jscomp.CheckLevel var4 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, "hi!");
    com.google.javascript.rhino.Node var8 = null;
    com.google.javascript.rhino.Node var10 = null;
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var18 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.make("", var18, "hi!");
    java.lang.String[] var22 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var20, var22);
    com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", var10, var13, var22);
    com.google.javascript.rhino.Node var26 = null;
    com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var34 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.make("", var34, "hi!");
    java.lang.String[] var38 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var36, var38);
    com.google.javascript.jscomp.JSError var40 = com.google.javascript.jscomp.JSError.make("hi!", var26, var29, var38);
    com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var8, var13, var38);
    com.google.javascript.rhino.Node var43 = null;
    com.google.javascript.jscomp.DiagnosticType var46 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var51 = null;
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.make("", var51, "hi!");
    java.lang.String[] var55 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var53, var55);
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make("hi!", var43, var46, var55);
    com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make(var13, var55);
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("", 0, 0, var6, var55);
    boolean var61 = var59.equals((java.lang.Object)10);
    int var62 = var59.getCharno();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 0);

  }

  public void test485() {}
//   public void test485() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test485"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.make("", var9, "hi!");
//     java.lang.String[] var13 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var14 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var11, var13);
//     com.google.javascript.jscomp.JSError var15 = com.google.javascript.jscomp.JSError.make("hi!", var1, var4, var13);
//     int var16 = var15.getCharno();
//     com.google.javascript.jscomp.DiagnosticType var17 = var15.getType();
//     boolean var19 = var15.equals((java.lang.Object)' ');
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.MessageFormatter var21 = null;
//     java.lang.String var22 = var15.format(var20, var21);
// 
//   }

  public void test486() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test486"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
    com.google.javascript.rhino.Node var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
    com.google.javascript.jscomp.CheckLevel var14 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
    java.lang.String[] var18 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var16, var18);
    com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("", var6, var9, var18);
    com.google.javascript.jscomp.JSError var21 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var1, var4, var18);
    com.google.javascript.rhino.Node var23 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
    com.google.javascript.jscomp.CheckLevel var30 = null;
    com.google.javascript.jscomp.CheckLevel var32 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.make("", var32, "hi!");
    com.google.javascript.rhino.Node var36 = null;
    com.google.javascript.rhino.Node var38 = null;
    com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var46 = null;
    com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.make("", var46, "hi!");
    java.lang.String[] var50 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var51 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var48, var50);
    com.google.javascript.jscomp.JSError var52 = com.google.javascript.jscomp.JSError.make("hi!", var38, var41, var50);
    com.google.javascript.rhino.Node var54 = null;
    com.google.javascript.jscomp.DiagnosticType var57 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var62 = null;
    com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.make("", var62, "hi!");
    java.lang.String[] var66 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var64, var66);
    com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!", var54, var57, var66);
    com.google.javascript.jscomp.JSError var69 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var36, var41, var66);
    com.google.javascript.jscomp.JSError var70 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var30, var34, var66);
    com.google.javascript.jscomp.JSError var71 = com.google.javascript.jscomp.JSError.make("", var23, var26, var66);
    com.google.javascript.jscomp.JSError var72 = com.google.javascript.jscomp.JSError.make(var4, var66);
    java.lang.String var73 = var72.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "hi!.  at (unknown source) line (unknown line) : (unknown column)"+ "'", var73.equals("hi!.  at (unknown source) line (unknown line) : (unknown column)"));

  }

  public void test487() {}
//   public void test487() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test487"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, ".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : : hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
// 
//   }

  public void test488() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test488"); }


    com.google.javascript.jscomp.DiagnosticType var5 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
    com.google.javascript.rhino.Node var7 = null;
    com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var12 = null;
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var20 = null;
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("", var20, "hi!");
    java.lang.String[] var24 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var22, var24);
    com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", var12, var15, var24);
    com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var7, var10, var24);
    com.google.javascript.jscomp.DiagnosticType var28 = var27.getType();
    int var29 = var5.compareTo(var28);
    com.google.javascript.rhino.Node var31 = null;
    com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!. hi! at hi! line (unknown line) : (unknown column)", "hi!: hi!");
    java.lang.String[] var36 = new java.lang.String[] { "hi!: hi!"};
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3", var31, var34, var36);
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make("hi!: hi!", (-39), 10, var28, var36);
    java.lang.String var39 = var38.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ". hi!. hi! at (unknown source) line (unknown line) : (unknown column) at hi!: hi! line -39 : 10"+ "'", var39.equals(". hi!. hi! at (unknown source) line (unknown line) : (unknown column) at hi!: hi! line -39 : 10"));

  }

  public void test489() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test489"); }


    com.google.javascript.jscomp.CheckLevel var3 = null;
    com.google.javascript.jscomp.CheckLevel var5 = null;
    com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make(".  at (unknown source) line 1 : 10", var5, ": ");
    com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.rhino.Node var12 = null;
    com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var20 = null;
    com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("", var20, "hi!");
    java.lang.String[] var24 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var22, var24);
    com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", var12, var15, var24);
    com.google.javascript.jscomp.DiagnosticType var27 = var26.getType();
    com.google.javascript.rhino.Node var29 = null;
    com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var37 = null;
    com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.make("", var37, "hi!");
    java.lang.String[] var41 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var39, var41);
    com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var41);
    com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make(var27, var41);
    com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make(var10, var41);
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make(". hi! at hi! line 1 : (unknown column)", (-8), 5, var3, var7, var41);
    com.google.javascript.jscomp.CheckLevel var50 = null;
    com.google.javascript.jscomp.DiagnosticType var53 = com.google.javascript.jscomp.DiagnosticType.error("", "");
    com.google.javascript.jscomp.DiagnosticType var56 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var57 = var53.compareTo(var56);
    com.google.javascript.rhino.Node var59 = null;
    com.google.javascript.rhino.Node var61 = null;
    com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var69 = null;
    com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.make("", var69, "hi!");
    java.lang.String[] var73 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var71, var73);
    com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!", var61, var64, var73);
    com.google.javascript.rhino.Node var77 = null;
    com.google.javascript.jscomp.DiagnosticType var80 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var85 = null;
    com.google.javascript.jscomp.DiagnosticType var87 = com.google.javascript.jscomp.DiagnosticType.make("", var85, "hi!");
    java.lang.String[] var89 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var90 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var87, var89);
    com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!", var77, var80, var89);
    com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var59, var64, var89);
    com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make("", 100, 1, var50, var56, var89);
    java.lang.String var94 = var56.toString();
    int var95 = var7.compareTo(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + ": "+ "'", var94.equals(": "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == 34);

  }

  public void test490() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test490"); }


    com.google.javascript.rhino.Node var1 = null;
    com.google.javascript.jscomp.DiagnosticType var4 = com.google.javascript.jscomp.DiagnosticType.error("hi!: hi!", "hi!");
    com.google.javascript.rhino.Node var6 = null;
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var14 = null;
    com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.make("", var14, "hi!");
    java.lang.String[] var18 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var19 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var16, var18);
    com.google.javascript.jscomp.JSError var20 = com.google.javascript.jscomp.JSError.make("hi!", var6, var9, var18);
    com.google.javascript.jscomp.DiagnosticType var21 = var20.getType();
    com.google.javascript.rhino.Node var23 = null;
    com.google.javascript.jscomp.DiagnosticType var26 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var31 = null;
    com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.make("", var31, "hi!");
    java.lang.String[] var35 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var33, var35);
    com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!", var23, var26, var35);
    com.google.javascript.jscomp.JSError var38 = com.google.javascript.jscomp.JSError.make(var21, var35);
    com.google.javascript.jscomp.JSError var39 = com.google.javascript.jscomp.JSError.make(var4, var35);
    com.google.javascript.rhino.Node var41 = null;
    com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", "hi!");
    com.google.javascript.rhino.Node var46 = null;
    com.google.javascript.rhino.Node var48 = null;
    com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var56 = null;
    com.google.javascript.jscomp.DiagnosticType var58 = com.google.javascript.jscomp.DiagnosticType.make("", var56, "hi!");
    java.lang.String[] var60 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var61 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var58, var60);
    com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!", var48, var51, var60);
    com.google.javascript.rhino.Node var64 = null;
    com.google.javascript.jscomp.DiagnosticType var67 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var72 = null;
    com.google.javascript.jscomp.DiagnosticType var74 = com.google.javascript.jscomp.DiagnosticType.make("", var72, "hi!");
    java.lang.String[] var76 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var74, var76);
    com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make("hi!", var64, var67, var76);
    com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var46, var51, var76);
    com.google.javascript.rhino.Node var81 = null;
    com.google.javascript.jscomp.DiagnosticType var84 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var89 = null;
    com.google.javascript.jscomp.DiagnosticType var91 = com.google.javascript.jscomp.DiagnosticType.make("", var89, "hi!");
    java.lang.String[] var93 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var91, var93);
    com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("hi!", var81, var84, var93);
    com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make(var51, var93);
    com.google.javascript.jscomp.JSError var97 = com.google.javascript.jscomp.JSError.make(": hi!", var41, var44, var93);
    com.google.javascript.jscomp.JSError var98 = com.google.javascript.jscomp.JSError.make("hi!: ", var1, var4, var93);
    java.lang.String var99 = var4.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var99 + "' != '" + "hi!: hi!: hi!"+ "'", var99.equals("hi!: hi!: hi!"));

  }

  public void test491() {}
//   public void test491() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test491"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.CheckLevel var5 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.make(".  at (unknown source) line 1 : 10", var5, ": ");
//     com.google.javascript.jscomp.DiagnosticType var10 = com.google.javascript.jscomp.DiagnosticType.error("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var15 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var20 = null;
//     com.google.javascript.jscomp.DiagnosticType var22 = com.google.javascript.jscomp.DiagnosticType.make("", var20, "hi!");
//     java.lang.String[] var24 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var22, var24);
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", var12, var15, var24);
//     com.google.javascript.jscomp.DiagnosticType var27 = var26.getType();
//     com.google.javascript.rhino.Node var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var32 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var37 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.make("", var37, "hi!");
//     java.lang.String[] var41 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var39, var41);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make("hi!", var29, var32, var41);
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make(var27, var41);
//     com.google.javascript.jscomp.JSError var45 = com.google.javascript.jscomp.JSError.make(var10, var41);
//     com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make(". hi! at hi! line 1 : (unknown column)", (-8), 5, var3, var7, var41);
//     com.google.javascript.jscomp.CheckLevel var47 = null;
//     com.google.javascript.jscomp.MessageFormatter var48 = null;
//     java.lang.String var49 = var46.format(var47, var48);
// 
//   }

  public void test492() {}
//   public void test492() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test492"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("", var12, "hi!");
//     java.lang.String[] var16 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var14, var16);
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!", var4, var7, var16);
//     com.google.javascript.jscomp.DiagnosticType var19 = var18.getType();
//     com.google.javascript.rhino.Node var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var29 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.make("", var29, "hi!");
//     java.lang.String[] var33 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var34 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var31, var33);
//     com.google.javascript.jscomp.JSError var35 = com.google.javascript.jscomp.JSError.make("hi!", var21, var24, var33);
//     com.google.javascript.jscomp.JSError var36 = com.google.javascript.jscomp.JSError.make(var19, var33);
//     com.google.javascript.jscomp.JSError var37 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column): : hi!.  at hi!: hi! line (unknown line) : 10", var1, var2, var33);
// 
//   }

  public void test493() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test493"); }


    com.google.javascript.jscomp.DiagnosticType var2 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: : . hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3 at .  at (unknown source) line (unknown line) : (unknown column): hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3 line (unknown line) : (unknown column)", ".  at (unknown source) line 0 : 1");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test494() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test494"); }


    com.google.javascript.jscomp.CheckLevel var4 = null;
    com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make(".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : ", var4, ".  at :  line -12 : 46");
    com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("", ".  at :  line -12 : 46");
    boolean var10 = var6.equals((java.lang.Object)".  at :  line -12 : 46");
    com.google.javascript.jscomp.DiagnosticType var13 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
    com.google.javascript.jscomp.CheckLevel var17 = null;
    com.google.javascript.jscomp.DiagnosticType var20 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!: hi!: ", "hi!");
    com.google.javascript.jscomp.CheckLevel var22 = null;
    com.google.javascript.jscomp.DiagnosticType var24 = com.google.javascript.jscomp.DiagnosticType.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column): ", var22, ".  at :  line -12 : 46");
    com.google.javascript.jscomp.DiagnosticType var27 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", ".  at (unknown source) line 1 : 10");
    com.google.javascript.jscomp.CheckLevel var31 = null;
    com.google.javascript.rhino.Node var33 = null;
    com.google.javascript.jscomp.DiagnosticType var36 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
    com.google.javascript.jscomp.CheckLevel var41 = null;
    com.google.javascript.jscomp.DiagnosticType var43 = com.google.javascript.jscomp.DiagnosticType.make("", var41, "hi!");
    java.lang.String[] var45 = new java.lang.String[] { "hi!"};
    com.google.javascript.jscomp.JSError var46 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var43, var45);
    com.google.javascript.jscomp.JSError var47 = com.google.javascript.jscomp.JSError.make("hi!", var33, var36, var45);
    com.google.javascript.jscomp.DiagnosticType var50 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
    int var51 = var36.compareTo(var50);
    java.lang.String[] var53 = new java.lang.String[] { "hi!: hi!: "};
    com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", 46, (-3), var31, var50, var53);
    com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make(var27, var53);
    com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make(var24, var53);
    com.google.javascript.jscomp.JSError var57 = com.google.javascript.jscomp.JSError.make(": hi!", 10, (-67), var17, var20, var53);
    com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make(var13, var53);
    com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!: : : hi!: ", 1, 34, var6, var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);

  }

  public void test495() {}
//   public void test495() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test495"); }
// 
// 
//     com.google.javascript.jscomp.CheckLevel var3 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", ".  at (unknown source) line 1 : 10: hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3");
//     com.google.javascript.rhino.Node var8 = null;
//     com.google.javascript.jscomp.DiagnosticType var11 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
//     com.google.javascript.rhino.Node var13 = null;
//     com.google.javascript.jscomp.DiagnosticType var16 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var21 = null;
//     com.google.javascript.jscomp.DiagnosticType var23 = com.google.javascript.jscomp.DiagnosticType.make("", var21, "hi!");
//     java.lang.String[] var25 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var26 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var23, var25);
//     com.google.javascript.jscomp.JSError var27 = com.google.javascript.jscomp.JSError.make("", var13, var16, var25);
//     com.google.javascript.jscomp.JSError var28 = com.google.javascript.jscomp.JSError.make("hi!. hi! at (unknown source) line (unknown line) : (unknown column)", var8, var11, var25);
//     com.google.javascript.rhino.Node var30 = null;
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!.  at hi!: hi! line (unknown line) : 10", ".  at (unknown source) line 1 : 10");
//     com.google.javascript.rhino.Node var35 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var43 = null;
//     com.google.javascript.jscomp.DiagnosticType var45 = com.google.javascript.jscomp.DiagnosticType.make("", var43, "hi!");
//     java.lang.String[] var47 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var48 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var45, var47);
//     com.google.javascript.jscomp.JSError var49 = com.google.javascript.jscomp.JSError.make("hi!", var35, var38, var47);
//     int var50 = var49.getCharno();
//     com.google.javascript.jscomp.DiagnosticType var51 = var49.getType();
//     boolean var52 = var33.equals((java.lang.Object)var51);
//     com.google.javascript.jscomp.CheckLevel var57 = null;
//     com.google.javascript.jscomp.DiagnosticType var59 = com.google.javascript.jscomp.DiagnosticType.make("", var57, "hi!");
//     java.lang.String[] var61 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var62 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var59, var61);
//     com.google.javascript.jscomp.JSError var63 = com.google.javascript.jscomp.JSError.make("", var30, var51, var61);
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make(var11, var61);
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line (unknown line) : (unknown column)", (-46), 4, var3, var6, var61);
//     com.google.javascript.jscomp.CheckLevel var66 = null;
//     com.google.javascript.jscomp.MessageFormatter var67 = null;
//     java.lang.String var68 = var65.format(var66, var67);
// 
//   }

  public void test496() {}
//   public void test496() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test496"); }
// 
// 
//     java.lang.Class var0 = null;
//     java.lang.Enum var2 = java.lang.Enum.<java.lang.Enum>valueOf(var0, "hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: ");
// 
//   }

  public void test497() {}
//   public void test497() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test497"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.jscomp.CheckLevel var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var6 = com.google.javascript.jscomp.DiagnosticType.make("", var4, ": hi!");
//     java.lang.String var7 = var6.toString();
//     com.google.javascript.rhino.Node var9 = null;
//     com.google.javascript.jscomp.DiagnosticType var12 = com.google.javascript.jscomp.DiagnosticType.disabled("hi!", "");
//     com.google.javascript.jscomp.CheckLevel var17 = null;
//     com.google.javascript.jscomp.DiagnosticType var19 = com.google.javascript.jscomp.DiagnosticType.make("", var17, "hi!");
//     java.lang.String[] var21 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var22 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var19, var21);
//     com.google.javascript.jscomp.JSError var23 = com.google.javascript.jscomp.JSError.make("", var9, var12, var21);
//     java.lang.String var24 = var12.toString();
//     int var25 = var6.compareTo(var12);
//     java.lang.Object var26 = null;
//     boolean var27 = var6.equals(var26);
//     com.google.javascript.jscomp.CheckLevel var31 = null;
//     com.google.javascript.jscomp.DiagnosticType var34 = com.google.javascript.jscomp.DiagnosticType.warning(": ", "");
//     com.google.javascript.rhino.Node var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var39 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var41 = null;
//     com.google.javascript.jscomp.DiagnosticType var44 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var49 = null;
//     com.google.javascript.jscomp.DiagnosticType var51 = com.google.javascript.jscomp.DiagnosticType.make("", var49, "hi!");
//     java.lang.String[] var53 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var54 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var51, var53);
//     com.google.javascript.jscomp.JSError var55 = com.google.javascript.jscomp.JSError.make("hi!", var41, var44, var53);
//     com.google.javascript.jscomp.JSError var56 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var36, var39, var53);
//     com.google.javascript.jscomp.DiagnosticType var57 = var56.getType();
//     int var58 = var34.compareTo(var57);
//     com.google.javascript.jscomp.CheckLevel var62 = null;
//     com.google.javascript.jscomp.CheckLevel var64 = null;
//     com.google.javascript.jscomp.DiagnosticType var66 = com.google.javascript.jscomp.DiagnosticType.make("hi!: hi!", var64, "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.jscomp.CheckLevel var71 = null;
//     com.google.javascript.jscomp.DiagnosticType var73 = com.google.javascript.jscomp.DiagnosticType.make("", var71, "hi!");
//     java.lang.String[] var75 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var73, var75);
//     com.google.javascript.rhino.Node var78 = null;
//     com.google.javascript.jscomp.DiagnosticType var81 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var86 = null;
//     com.google.javascript.jscomp.DiagnosticType var88 = com.google.javascript.jscomp.DiagnosticType.make("", var86, "hi!");
//     java.lang.String[] var90 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var91 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var88, var90);
//     com.google.javascript.jscomp.JSError var92 = com.google.javascript.jscomp.JSError.make("hi!", var78, var81, var90);
//     com.google.javascript.jscomp.JSError var93 = com.google.javascript.jscomp.JSError.make(var73, var90);
//     com.google.javascript.jscomp.JSError var94 = com.google.javascript.jscomp.JSError.make("", 0, 1, var62, var66, var90);
//     com.google.javascript.jscomp.JSError var95 = com.google.javascript.jscomp.JSError.make("", (-39), 1, var31, var57, var90);
//     com.google.javascript.jscomp.JSError var96 = com.google.javascript.jscomp.JSError.make(".  at hi!. hi! at hi! line (unknown line) : (unknown column) line -3 : 0", var1, var2, var6, var90);
// 
//   }

  public void test498() {}
//   public void test498() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test498"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.CheckLevel var2 = null;
//     com.google.javascript.rhino.Node var4 = null;
//     com.google.javascript.jscomp.DiagnosticType var7 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var12 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.make("", var12, "hi!");
//     java.lang.String[] var16 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var17 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var14, var16);
//     com.google.javascript.jscomp.JSError var18 = com.google.javascript.jscomp.JSError.make("hi!", var4, var7, var16);
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.warning("", "");
//     int var22 = var7.compareTo(var21);
//     com.google.javascript.jscomp.CheckLevel var26 = null;
//     com.google.javascript.jscomp.DiagnosticType var29 = com.google.javascript.jscomp.DiagnosticType.warning("hi!", "");
//     java.lang.String var30 = var29.toString();
//     com.google.javascript.jscomp.DiagnosticType var33 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var37 = null;
//     com.google.javascript.jscomp.CheckLevel var39 = null;
//     com.google.javascript.jscomp.DiagnosticType var41 = com.google.javascript.jscomp.DiagnosticType.make("", var39, "hi!");
//     com.google.javascript.rhino.Node var43 = null;
//     com.google.javascript.rhino.Node var45 = null;
//     com.google.javascript.jscomp.DiagnosticType var48 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var53 = null;
//     com.google.javascript.jscomp.DiagnosticType var55 = com.google.javascript.jscomp.DiagnosticType.make("", var53, "hi!");
//     java.lang.String[] var57 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var58 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var55, var57);
//     com.google.javascript.jscomp.JSError var59 = com.google.javascript.jscomp.JSError.make("hi!", var45, var48, var57);
//     com.google.javascript.rhino.Node var61 = null;
//     com.google.javascript.jscomp.DiagnosticType var64 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var69 = null;
//     com.google.javascript.jscomp.DiagnosticType var71 = com.google.javascript.jscomp.DiagnosticType.make("", var69, "hi!");
//     java.lang.String[] var73 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var74 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var71, var73);
//     com.google.javascript.jscomp.JSError var75 = com.google.javascript.jscomp.JSError.make("hi!", var61, var64, var73);
//     com.google.javascript.jscomp.JSError var76 = com.google.javascript.jscomp.JSError.make("hi!. hi! at hi! line (unknown line) : (unknown column)", var43, var48, var73);
//     com.google.javascript.jscomp.JSError var77 = com.google.javascript.jscomp.JSError.make("hi!", 0, (-1), var37, var41, var73);
//     com.google.javascript.jscomp.JSError var78 = com.google.javascript.jscomp.JSError.make(var33, var73);
//     com.google.javascript.jscomp.JSError var79 = com.google.javascript.jscomp.JSError.make(".  at :  line -12 : 46", 4, (-8), var26, var29, var73);
//     com.google.javascript.jscomp.JSError var80 = com.google.javascript.jscomp.JSError.make("", var1, var2, var7, var73);
// 
//   }

  public void test499() throws Throwable {

    if (debug) { System.out.println(); System.out.print("RandoopTest0.test499"); }


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.javascript.jscomp.CheckLevel var1 = com.google.javascript.jscomp.CheckLevel.valueOf(": : hi!: hi!. hi! at hi!. hi! at (unknown source) line (unknown line) : (unknown column) line (unknown line) : -3: : hi!: . hi! at (unknown source) line (unknown line) : (unknown column): hi!. hi! at (unknown source) line (unknown line) : (unknown column): ");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test500() {}
//   public void test500() throws Throwable {
// 
//     if (debug) { System.out.println(); System.out.print("RandoopTest0.test500"); }
// 
// 
//     com.google.javascript.rhino.Node var1 = null;
//     com.google.javascript.jscomp.DiagnosticType var2 = null;
//     com.google.javascript.jscomp.CheckLevel var6 = null;
//     com.google.javascript.jscomp.DiagnosticType var9 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!.  at hi!: hi! line (unknown line) : 10");
//     com.google.javascript.rhino.Node var11 = null;
//     com.google.javascript.jscomp.DiagnosticType var14 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var19 = null;
//     com.google.javascript.jscomp.DiagnosticType var21 = com.google.javascript.jscomp.DiagnosticType.make("", var19, "hi!");
//     java.lang.String[] var23 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var24 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var21, var23);
//     com.google.javascript.jscomp.JSError var25 = com.google.javascript.jscomp.JSError.make("hi!", var11, var14, var23);
//     com.google.javascript.jscomp.DiagnosticType var26 = var25.getType();
//     com.google.javascript.rhino.Node var28 = null;
//     com.google.javascript.jscomp.DiagnosticType var31 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var36 = null;
//     com.google.javascript.jscomp.DiagnosticType var38 = com.google.javascript.jscomp.DiagnosticType.make("", var36, "hi!");
//     java.lang.String[] var40 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var41 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var38, var40);
//     com.google.javascript.jscomp.JSError var42 = com.google.javascript.jscomp.JSError.make("hi!", var28, var31, var40);
//     com.google.javascript.jscomp.JSError var43 = com.google.javascript.jscomp.JSError.make(var26, var40);
//     com.google.javascript.jscomp.JSError var44 = com.google.javascript.jscomp.JSError.make(".  at (unknown source) line 1 : 10", (-12), 100, var6, var9, var40);
//     com.google.javascript.rhino.Node var46 = null;
//     com.google.javascript.jscomp.DiagnosticType var49 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!. hi! at (unknown source) line (unknown line) : (unknown column)");
//     com.google.javascript.rhino.Node var51 = null;
//     com.google.javascript.jscomp.DiagnosticType var54 = com.google.javascript.jscomp.DiagnosticType.error("hi!", "hi!");
//     com.google.javascript.jscomp.CheckLevel var59 = null;
//     com.google.javascript.jscomp.DiagnosticType var61 = com.google.javascript.jscomp.DiagnosticType.make("", var59, "hi!");
//     java.lang.String[] var63 = new java.lang.String[] { "hi!"};
//     com.google.javascript.jscomp.JSError var64 = com.google.javascript.jscomp.JSError.make("hi!", 1, (-1), var61, var63);
//     com.google.javascript.jscomp.JSError var65 = com.google.javascript.jscomp.JSError.make("hi!", var51, var54, var63);
//     com.google.javascript.jscomp.JSError var66 = com.google.javascript.jscomp.JSError.make("hi!: hi!: ", var46, var49, var63);
//     com.google.javascript.jscomp.JSError var67 = com.google.javascript.jscomp.JSError.make(var9, var63);
//     com.google.javascript.jscomp.JSError var68 = com.google.javascript.jscomp.JSError.make("hi!. hi!.  at hi!: hi! line (unknown line) : 10 at .  at (unknown source) line 1 : 10 line -12 : 100: ", var1, var2, var63);
// 
//   }

}
