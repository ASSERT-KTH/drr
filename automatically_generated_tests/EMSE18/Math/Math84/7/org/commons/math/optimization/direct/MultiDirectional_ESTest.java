/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 22 11:27:54 GMT 2017
 */

package org.apache.commons.math.optimization.direct;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Comparator;
import org.apache.commons.math.optimization.RealPointValuePair;
import org.apache.commons.math.optimization.direct.MultiDirectional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

public class MultiDirectional_ESTest  {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MultiDirectional multiDirectional0 = new MultiDirectional((-407.0), (-407.0));
      RealPointValuePair[] realPointValuePairArray0 = new RealPointValuePair[5];
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-407.0);
      RealPointValuePair realPointValuePair0 = new RealPointValuePair(doubleArray0, (-407.0), false);
      realPointValuePairArray0[0] = realPointValuePair0;
      realPointValuePairArray0[1] = realPointValuePair0;
      realPointValuePairArray0[2] = realPointValuePairArray0[0];
      double[] doubleArray1 = new double[1];
      RealPointValuePair realPointValuePair1 = new RealPointValuePair(doubleArray1, 0.0);
      realPointValuePairArray0[3] = realPointValuePair1;
      multiDirectional0.simplex = realPointValuePairArray0;
      // Undeclared exception!
      try { 
        multiDirectional0.iterateSimplex((Comparator<RealPointValuePair>) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.math.optimization.direct.MultiDirectional", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MultiDirectional multiDirectional0 = new MultiDirectional((-407.0), (-407.0));
      RealPointValuePair[] realPointValuePairArray0 = new RealPointValuePair[5];
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-407.0);
      RealPointValuePair realPointValuePair0 = new RealPointValuePair(doubleArray0, (-407.0), false);
      realPointValuePairArray0[0] = realPointValuePair0;
      realPointValuePairArray0[1] = realPointValuePair0;
      multiDirectional0.simplex = realPointValuePairArray0;
      // Undeclared exception!
      try { 
        multiDirectional0.iterateSimplex((Comparator<RealPointValuePair>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.optimization.direct.MultiDirectional", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MultiDirectional multiDirectional0 = new MultiDirectional(1.543080634815244, 1.718281828459045);
      RealPointValuePair[] realPointValuePairArray0 = new RealPointValuePair[6];
      double[] doubleArray0 = new double[4];
      RealPointValuePair realPointValuePair0 = new RealPointValuePair(doubleArray0, 1.543080634815244);
      realPointValuePairArray0[0] = realPointValuePair0;
      realPointValuePairArray0[1] = realPointValuePairArray0[0];
      realPointValuePairArray0[2] = realPointValuePair0;
      multiDirectional0.setMaxEvaluations((-1));
      realPointValuePairArray0[3] = realPointValuePairArray0[0];
      realPointValuePairArray0[4] = realPointValuePairArray0[0];
      multiDirectional0.simplex = realPointValuePairArray0;
      try { 
        multiDirectional0.iterateSimplex((Comparator<RealPointValuePair>) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Maximal number of evaluations (-1) exceeded
         //
         verifyException("org.apache.commons.math.optimization.direct.DirectSearchOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MultiDirectional multiDirectional0 = new MultiDirectional();
      multiDirectional0.setMaxIterations(0);
      try { 
        multiDirectional0.iterateSimplex((Comparator<RealPointValuePair>) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Maximal number of iterations (0) exceeded
         //
         verifyException("org.apache.commons.math.optimization.direct.DirectSearchOptimizer", e);
      }
  }
}
