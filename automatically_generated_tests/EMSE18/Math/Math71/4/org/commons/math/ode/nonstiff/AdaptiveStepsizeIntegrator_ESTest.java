/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 10 09:24:22 GMT 2017
 */

package org.apache.commons.math.ode.nonstiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math.ode.TestProblem5;
import org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator;
import org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator;
import org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator;
import org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math.ode.nonstiff.HighamHall54Integrator;
import org.apache.commons.math.ode.nonstiff.StepProblem;
import org.apache.commons.math.ode.sampling.FixedStepHandler;
import org.apache.commons.math.ode.sampling.StepNormalizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

public class AdaptiveStepsizeIntegrator_ESTest  {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 2;
      AdamsMoultonIntegrator adamsMoultonIntegrator0 = new AdamsMoultonIntegrator(2, 3.0, 3.0, doubleArray0, doubleArray0);
      TestProblem5 testProblem5_0 = new TestProblem5();
      adamsMoultonIntegrator0.integrate(testProblem5_0, 1412.46515, doubleArray0, 542.60618429, doubleArray0);
      assertArrayEquals(new double[] {2.1487625576997494E302, 2.1487625576997494E302}, doubleArray0, 0.01);
      assertEquals(604, adamsMoultonIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(100.0, 1805.8, 0.0, 1805.8);
      highamHall54Integrator0.setInitialStepSize(1318.34341307385);
      assertEquals(424.9470555257443, highamHall54Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, highamHall54Integrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      StepProblem stepProblem0 = new StepProblem(1435.0, 1435.0, 569.632143498);
      AdamsMoultonIntegrator adamsMoultonIntegrator0 = new AdamsMoultonIntegrator(2, (-3638.89554993), 0.01, (-0.5), (-483.645691));
      adamsMoultonIntegrator0.sanityChecks(stepProblem0, (-0.5), doubleArray0, 2062.8, doubleArray0);
      assertEquals(6.032325878075554, adamsMoultonIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, adamsMoultonIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-3026.3976969004325), (-3026.3976969004325), doubleArray0, doubleArray0);
      dormandPrince54Integrator0.resetInternalState();
      assertEquals(3026.3976969004325, dormandPrince54Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, dormandPrince54Integrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3128.73304713, 3128.73304713, 3128.73304713, 3128.73304713);
      StepProblem stepProblem0 = new StepProblem(3128.73304713, 3128.73304713, 3128.73304713);
      double[] doubleArray0 = new double[1];
      graggBulirschStoerIntegrator0.integrate(stepProblem0, 1.0E-15, doubleArray0, (-3508.129), doubleArray0);
      assertEquals(29, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(0.0, 1077.7302, 0.0, 1077.7302);
      double double0 = dormandPrince54Integrator0.getMinStep();
      assertEquals(Double.NaN, dormandPrince54Integrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.0, dormandPrince54Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(1077.7302, dormandPrince54Integrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1950.45), 0.0, doubleArray0, doubleArray0);
      double double0 = graggBulirschStoerIntegrator0.getMinStep();
      assertEquals(-0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals((-1950.45), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1950.45), 0.0, doubleArray0, doubleArray0);
      double double0 = graggBulirschStoerIntegrator0.getMaxStep();
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(-0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator((-1062.95699247309), (-1062.95699247309), doubleArray0, doubleArray0);
      double double0 = dormandPrince853Integrator0.getMaxStep();
      assertEquals((-1062.95699247309), double0, 0.01);
      assertEquals(Double.NaN, dormandPrince853Integrator0.getCurrentStepStart(), 0.01);
      assertEquals(1062.95699247309, dormandPrince853Integrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3128.73304713, 3128.73304713, 3128.73304713, 3128.73304713);
      StepProblem stepProblem0 = new StepProblem(3128.73304713, 3128.73304713, 3128.73304713);
      double[] doubleArray0 = new double[1];
      graggBulirschStoerIntegrator0.integrate(stepProblem0, 3128.73304713, doubleArray0, 0, doubleArray0);
      graggBulirschStoerIntegrator0.getCurrentStepStart();
      assertEquals(22, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((double) 5, 0.0, (double) 5, 0.0);
      double double0 = graggBulirschStoerIntegrator0.filterStep(1805.8, false, false);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(5.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(0.003333333333333336, 0.003333333333333336, doubleArray0, doubleArray0);
      double double0 = highamHall54Integrator0.filterStep(0.003333333333333336, false, false);
      assertEquals(Double.NaN, highamHall54Integrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.003333333333333336, double0, 0.01);
      assertEquals(0.003333333333333336, highamHall54Integrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(2.2752000299540592E-4, 2.2752000299540592E-4, 2.2752000299540592E-4, 2.2752000299540592E-4);
      double double0 = highamHall54Integrator0.filterStep((-0.871391583777973), true, true);
      assertEquals(Double.NaN, highamHall54Integrator0.getCurrentStepStart(), 0.01);
      assertEquals((-2.2752000299540592E-4), double0, 0.01);
      assertEquals(2.2752000299540592E-4, highamHall54Integrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(0.0, 0.0, doubleArray0, doubleArray0);
      TestProblem5 testProblem5_0 = new TestProblem5();
      try { 
        dormandPrince54Integrator0.sanityChecks(testProblem5_0, (-2908.1783), doubleArray0, (-2908.1783), doubleArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // dimensions mismatch: ODE problem has dimension 2, initial state vector has dimension 1
         //
         verifyException("org.apache.commons.math.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-1435.9940262796), (-2.778205752353508), (-2.778205752353508), 0.6666666666666666);
      double[] doubleArray0 = new double[4];
      // Undeclared exception!
      try { 
        dormandPrince54Integrator0.sanityChecks((FirstOrderDifferentialEquations) null, (-2.778205752353508), doubleArray0, 0.0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 2796.08414551;
      doubleArray0[1] = 2796.08414551;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2796.08414551, 2796.08414551, doubleArray0, doubleArray0);
      TestProblem5 testProblem5_0 = new TestProblem5();
      try { 
        graggBulirschStoerIntegrator0.integrate(testProblem5_0, 2796.08414551, doubleArray0, (-1.0), doubleArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // minimal step size (2.80E03) reached, integration needs 1.40E03
         //
         verifyException("org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 2796.08414551, 0.0, 2796.08414551);
      StepNormalizer stepNormalizer0 = new StepNormalizer(0.0, (FixedStepHandler) null);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      TestProblem5 testProblem5_0 = new TestProblem5();
      graggBulirschStoerIntegrator0.setInitialStepSize(2796.08414551);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(testProblem5_0, (-2796.08414551), doubleArray0, 2132.93812, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.sampling.StepNormalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3128.73304713, 3128.73304713, 3128.73304713, 3128.73304713);
      StepProblem stepProblem0 = new StepProblem(3128.73304713, 3128.73304713, 3128.73304713);
      double[] doubleArray0 = new double[1];
      graggBulirschStoerIntegrator0.setMaxEvaluations(0);
      try { 
        graggBulirschStoerIntegrator0.initializeStep(stepProblem0, true, 0, doubleArray0, 100.0, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // 
         //
         verifyException("org.apache.commons.math.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(870.356663, 870.356663, doubleArray0, doubleArray0);
      StepProblem stepProblem0 = new StepProblem((-4720.954315), (-4720.954315), (-4720.954315));
      double[] doubleArray1 = new double[7];
      // Undeclared exception!
      try { 
        dormandPrince54Integrator0.initializeStep(stepProblem0, true, (-2733), doubleArray1, 0.0, doubleArray1, doubleArray1, doubleArray0, doubleArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(1468.755238, 1468.755238, 0.01, 2454.724482152);
      try { 
        dormandPrince853Integrator0.filterStep(100.0, false, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // minimal step size (1.47E03) reached, integration needs 1.00E02
         //
         verifyException("org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3128.73304713, 3128.73304713, 3128.73304713, 3128.73304713);
      StepProblem stepProblem0 = new StepProblem(3128.73304713, 3128.73304713, 3128.73304713);
      double[] doubleArray0 = new double[1];
      graggBulirschStoerIntegrator0.integrate(stepProblem0, 3128.73304713, doubleArray0, 100.0, doubleArray0);
      double double0 = graggBulirschStoerIntegrator0.initializeStep(stepProblem0, false, 0, doubleArray0, 100.0, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      assertEquals(23, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals((-3128.73304713), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3128.73304713, 3128.73304713, 3128.73304713, 3128.73304713);
      StepProblem stepProblem0 = new StepProblem(3128.73304713, 3128.73304713, 3128.73304713);
      double[] doubleArray0 = new double[1];
      graggBulirschStoerIntegrator0.integrate(stepProblem0, 3128.73304713, doubleArray0, 100.0, doubleArray0);
      double[] doubleArray1 = new double[13];
      double double0 = graggBulirschStoerIntegrator0.initializeStep(stepProblem0, true, 0, doubleArray1, 100.0, doubleArray0, doubleArray0, doubleArray1, doubleArray1);
      assertEquals(23, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3128.73304713, 3128.73304713, 3128.73304713, 3128.73304713);
      StepProblem stepProblem0 = new StepProblem(3128.73304713, 3128.73304713, 3128.73304713);
      double[] doubleArray0 = new double[1];
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.initializeStep(stepProblem0, false, 0, doubleArray0, 100.0, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(100.53260771254283, 100.53260771254283, 100.53260771254283, 100.53260771254283);
      dormandPrince853Integrator0.setInitialStepSize(100.53260771254283);
      double double0 = dormandPrince853Integrator0.initializeStep((FirstOrderDifferentialEquations) null, false, 1495, doubleArray0, 0.3111643669578199, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      assertEquals((-100.53260771254283), double0, 0.01);
      assertEquals(100.53260771254283, dormandPrince853Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, dormandPrince853Integrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(0.003333333333333336, 0.003333333333333336, doubleArray0, doubleArray0);
      highamHall54Integrator0.setInitialStepSize(0.003333333333333336);
      double double0 = highamHall54Integrator0.initializeStep((FirstOrderDifferentialEquations) null, true, (-2143422016), doubleArray0, 0.003333333333333336, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      assertEquals(Double.NaN, highamHall54Integrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.003333333333333336, double0, 0.01);
      assertEquals(0.003333333333333336, highamHall54Integrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0, 1676.96659135, 9.822892851699436, 354216.0);
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.initializeStep((FirstOrderDifferentialEquations) null, true, 2, doubleArray0, 1.0, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-1435.9940262796), (-2.778205752353508), (-2.778205752353508), 0.6666666666666666);
      double double0 = dormandPrince54Integrator0.getMinStep();
      assertEquals(1435.9940262796, double0, 0.01);
      assertEquals(63.16238488337231, dormandPrince54Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, dormandPrince54Integrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(0.8888888888888888, 2565.5531, 0.8888888888888888, 2.9475147891527724);
      double double0 = dormandPrince853Integrator0.getMaxStep();
      assertEquals(Double.NaN, dormandPrince853Integrator0.getCurrentStepStart(), 0.01);
      assertEquals(2565.5531, double0, 0.01);
      assertEquals(47.75449344767929, dormandPrince853Integrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      StepProblem stepProblem0 = new StepProblem(1435.0, 1435.0, 569.632143498);
      AdamsMoultonIntegrator adamsMoultonIntegrator0 = new AdamsMoultonIntegrator(2, (-3638.89554993), 0.01, (-0.5), (-483.645691));
      try { 
        adamsMoultonIntegrator0.integrate(stepProblem0, (-0.3125), doubleArray0, 3622.59, doubleArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // minimal step size (3.64E03) reached, integration needs 1.26E-02
         //
         verifyException("org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3128.73304713, 0.0, 0.2222222222222222, 3128.73304713);
      StepProblem stepProblem0 = new StepProblem(0.0, 3128.73304713, (-2659.7433545044314));
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 11157.9479466;
      try { 
        graggBulirschStoerIntegrator0.integrate(stepProblem0, 3128.73304713, doubleArray0, 100.0, doubleArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // minimal step size (3.13E03) reached, integration needs 0.00E00
         //
         verifyException("org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(0.003333333333333336, 0.003333333333333336, doubleArray0, doubleArray0);
      highamHall54Integrator0.setInitialStepSize(1468.755238);
      assertEquals(0.003333333333333336, highamHall54Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, highamHall54Integrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-3026.3976969004325), (-3026.3976969004325), (-3026.3976969004325), (-3026.3976969004325));
      graggBulirschStoerIntegrator0.setInitialStepSize((-3026.3976969004325));
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(3026.3976969004325, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3128.73304713, 3128.73304713, 3128.73304713, 3128.73304713);
      double double0 = graggBulirschStoerIntegrator0.getCurrentStepStart();
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(3128.73304713, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }
}
