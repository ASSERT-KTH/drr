/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 10 08:00:24 GMT 2017
 */

package org.apache.commons.math.ode.nonstiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math.ode.TestProblem5;
import org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator;
import org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator;
import org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator;
import org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math.ode.nonstiff.StepProblem;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

public class AdaptiveStepsizeIntegrator_ESTest  {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInitialStepSize(0.0);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1752.32303, 1752.32303, (-4154.302412), (-2397.7701));
      TestProblem5 testProblem5_0 = new TestProblem5();
      double[] doubleArray0 = new double[2];
      graggBulirschStoerIntegrator0.sanityChecks(testProblem5_0, (-4154.302412), doubleArray0, 1752.32303, doubleArray0);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1752.32303, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-34.3), 730.085304, 1886.96871, (-34.3));
      graggBulirschStoerIntegrator0.resetInternalState();
      assertEquals(158.24640889195558, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1374.94, 1374.94, 1374.94, 1374.94);
      TestProblem5 testProblem5_0 = new TestProblem5();
      double[] doubleArray0 = new double[2];
      graggBulirschStoerIntegrator0.integrate(testProblem5_0, 1190.1729, doubleArray0, 3677.84072131618, doubleArray0);
      assertEquals(1112.7278213161799, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(656.77, 656.77, (-2462.52169981), 112847.0);
      TestProblem5 testProblem5_0 = new TestProblem5();
      double[] doubleArray0 = new double[2];
      dormandPrince853Integrator0.integrate(testProblem5_0, (-651.41798352803), doubleArray0, (-2462.52169981), doubleArray0);
      assertEquals(50, testProblem5_0.getCalls());
      assertEquals(656.77, dormandPrince853Integrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(2407.82805, (-1172.97022138355), doubleArray0, doubleArray0);
      double double0 = dormandPrince853Integrator0.getMinStep();
      assertEquals((-1172.97022138355), dormandPrince853Integrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, dormandPrince853Integrator0.getCurrentStepStart(), 0.01);
      assertEquals(Double.NaN, dormandPrince853Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(2407.82805, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator((-1407.8), (-1407.8), doubleArray0, doubleArray0);
      double double0 = dormandPrince853Integrator0.getMinStep();
      assertEquals((-1407.8), double0, 0.01);
      assertEquals(1407.8, dormandPrince853Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, dormandPrince853Integrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      double double0 = graggBulirschStoerIntegrator0.getMaxStep();
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator((-1407.8), (-1407.8), doubleArray0, doubleArray0);
      double double0 = dormandPrince853Integrator0.getMaxStep();
      assertEquals((-1407.8), double0, 0.01);
      assertEquals(Double.NaN, dormandPrince853Integrator0.getCurrentStepStart(), 0.01);
      assertEquals(1407.8, dormandPrince853Integrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1374.94, 1374.94, 1374.94, 1374.94);
      TestProblem5 testProblem5_0 = new TestProblem5();
      double[] doubleArray0 = new double[2];
      graggBulirschStoerIntegrator0.integrate(testProblem5_0, 1374.94, doubleArray0, (-455.3), doubleArray0);
      graggBulirschStoerIntegrator0.getCurrentStepStart();
      assertEquals(29, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(573.59492232, 0.0, doubleArray0, doubleArray0);
      double double0 = graggBulirschStoerIntegrator0.filterStep(0.0, true, true);
      assertEquals(573.59492232, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(600.3106981036, 600.3106981036, 600.3106981036, 600.3106981036);
      double double0 = graggBulirschStoerIntegrator0.filterStep((-189.17813819516758), true, true);
      assertEquals(600.3106981036, double0, 0.01);
      assertEquals(600.3106981036, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  ////@Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(3622.0, 3622.0, 3622.0, 1.570796326794897);
      TestProblem5 testProblem5_0 = new TestProblem5();
      double[] doubleArray0 = new double[4];
      try { 
        dormandPrince853Integrator0.sanityChecks(testProblem5_0, 1.570796326794897, doubleArray0, 3622.0, doubleArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // dimensions mismatch: ODE problem has dimension 2, initial state vector has dimension 4
         //
         verifyException("org.apache.commons.math.ode.AbstractIntegrator", e);
      }
  }

  ////@Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator((-1305.2351150178), (-1305.2351150178), 0.0, 2939.081734);
      double[] doubleArray0 = new double[6];
      // Undeclared exception!
      try { 
        dormandPrince853Integrator0.sanityChecks((FirstOrderDifferentialEquations) null, 2939.081734, doubleArray0, 0.0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.AbstractIntegrator", e);
      }
  }

  ////@Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(324.23485616411, 1.0E-10, 1.0E-10, 1.0E-10);
      double[] doubleArray0 = new double[6];
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) null, 1.0E-10, doubleArray0, 0.0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.AbstractIntegrator", e);
      }
  }

  ////@Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(0.125, 1.1, doubleArray0, doubleArray0);
      StepProblem stepProblem0 = new StepProblem(1.0E-10, 1.0E-10, (-1748.1699107));
      double[] doubleArray1 = new double[2];
      // Undeclared exception!
      try { 
        dormandPrince853Integrator0.initializeStep(stepProblem0, false, 1627, doubleArray0, 0.125, doubleArray0, doubleArray0, doubleArray1, doubleArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  ////@Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-989.528241570152), (-989.528241570152), (-9.35292435884448), (-9.35292435884448));
      try { 
        dormandPrince54Integrator0.filterStep(0.0, true, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // minimal step size (9.90E02) reached, integration needs 0.00E00
         //
         verifyException("org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1374.94, 1374.94, 1374.94, 1374.94);
      assertEquals(1374.94, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      TestProblem5 testProblem5_0 = new TestProblem5();
      double[] doubleArray0 = new double[2];
      graggBulirschStoerIntegrator0.integrate(testProblem5_0, 1374.94, doubleArray0, (-455.3), doubleArray0);
      graggBulirschStoerIntegrator0.initializeStep(testProblem5_0, true, (-2280), doubleArray0, 4.444444444444449E-16, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1374.94, 1374.94, 1374.94, 1374.94);
      TestProblem5 testProblem5_0 = new TestProblem5();
      double[] doubleArray0 = new double[8];
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.initializeStep(testProblem5_0, false, (-2280), doubleArray0, 4.444444444444449E-16, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(1791.854, 1791.854, doubleArray0, doubleArray0);
      TestProblem5 testProblem5_0 = new TestProblem5();
      // Undeclared exception!
      try { 
        dormandPrince853Integrator0.initializeStep(testProblem5_0, true, (-1), doubleArray0, 1791.854, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      double double0 = graggBulirschStoerIntegrator0.getMinStep();
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(324.23485616411, 1.0E-10, 1.0E-10, 1.0E-10);
      double double0 = graggBulirschStoerIntegrator0.getMaxStep();
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1.800652260054978E-4, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1.0E-10, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-34.3), 730.085304, 1886.96871, (-34.3));
      double double0 = graggBulirschStoerIntegrator0.filterStep(0.0, false, true);
      assertEquals((-34.3), double0, 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(158.24640889195558, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  ////@Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TestProblem5 testProblem5_0 = new TestProblem5();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 1752.32303;
      doubleArray0[1] = 1752.32303;
      AdamsBashforthIntegrator adamsBashforthIntegrator0 = new AdamsBashforthIntegrator(8, 1752.32303, 1.0E-15, doubleArray0, doubleArray0);
      try { 
        adamsBashforthIntegrator0.integrate(testProblem5_0, 8.151147050708198E-16, doubleArray0, 1752.32303, doubleArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // minimal step size (1.75E03) reached, integration needs 1.09E-15
         //
         verifyException("org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1752.32303, 1752.32303, (-4154.302412), (-2397.7701));
      TestProblem5 testProblem5_0 = new TestProblem5();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 1752.32303;
      doubleArray0[1] = (-2397.7701);
      double[] doubleArray1 = new double[2];
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.initializeStep(testProblem5_0, false, 783, doubleArray0, 8, doubleArray0, doubleArray1, doubleArray0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1556.40862932252), Double.NaN, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInitialStepSize(1);
      TestProblem5 testProblem5_0 = new TestProblem5();
      double double0 = graggBulirschStoerIntegrator0.initializeStep(testProblem5_0, false, 1, doubleArray0, (-452.7998137187708), doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      assertEquals((-1.0), double0, 0.01);
      assertEquals((-1556.40862932252), graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  ////@Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double[] doubleArray1 = new double[8];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-444.09082666), 112847.0, doubleArray1, doubleArray0);
      StepProblem stepProblem0 = new StepProblem(2747.0, (-444.09082666), 1151.817);
      try { 
        graggBulirschStoerIntegrator0.integrate(stepProblem0, 112847.0, doubleArray0, 0.01, doubleArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // dimensions mismatch: state vector has dimension 1, absolute tolerance vector has dimension 8
         //
         verifyException("org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1556.40862932252), Double.NaN, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInitialStepSize(1);
      TestProblem5 testProblem5_0 = new TestProblem5();
      double double0 = graggBulirschStoerIntegrator0.initializeStep(testProblem5_0, true, 5, doubleArray0, (-70.91415071771), doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals((-1556.40862932252), graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-34.3), (-1164.19775021), 1886.96871, (-1164.19775021));
      dormandPrince54Integrator0.setInitialStepSize(1886.96871);
      assertEquals(Double.NaN, dormandPrince54Integrator0.getCurrentStepStart(), 0.01);
      assertEquals(199.8298847324969, dormandPrince54Integrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-34.3), (-1164.19775021), 1886.96871, (-1164.19775021));
      dormandPrince54Integrator0.setInitialStepSize((-34.3));
      assertEquals(199.8298847324969, dormandPrince54Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, dormandPrince54Integrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(2553.46, 483.594150645844, 1023.2311203524248, 1023.2311203524248);
      double double0 = dormandPrince853Integrator0.getCurrentStepStart();
      assertEquals(1111.2327928513166, dormandPrince853Integrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1374.94, 1374.94, 1374.94, 1374.94);
      TestProblem5 testProblem5_0 = new TestProblem5();
      double[] doubleArray0 = new double[2];
      graggBulirschStoerIntegrator0.integrate(testProblem5_0, 1374.94, doubleArray0, (-455.3), doubleArray0);
      graggBulirschStoerIntegrator0.initializeStep(testProblem5_0, false, (-2280), doubleArray0, 4.444444444444449E-16, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      assertEquals((-455.3), graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }
}
