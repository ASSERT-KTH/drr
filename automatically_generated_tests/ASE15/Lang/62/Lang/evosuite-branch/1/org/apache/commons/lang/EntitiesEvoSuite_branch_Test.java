/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 17:45:33 GMT 2014
 */

package org.apache.commons.lang;

import static org.junit.Assert.*;
import org.junit.Test;
import java.io.CharArrayWriter;
import java.io.File;
import java.io.Writer;
import org.apache.commons.lang.Entities;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
 import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.junit.runner.RunWith;

 
public class EntitiesEvoSuite_branch_Test   {

  @Test
  public void test00()  throws Throwable  {
      Entities entities0 = new Entities();
      assertNotNull(entities0);
      
      String string0 = "^&";
      MockFileWriter mockFileWriter0 = new MockFileWriter(string0);
      assertNotNull(mockFileWriter0);
      
      entities0.unescape((Writer) mockFileWriter0, string0);
  }

  @Test
  public void test01()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      assertNotNull(entities0);
      
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      assertEquals(0, charArrayWriter0.size());
      assertEquals("", charArrayWriter0.toString());
      assertNotNull(charArrayWriter0);
      
      String string0 = "sum";
      entities0.unescape((Writer) charArrayWriter0, string0);
      assertEquals("sum", charArrayWriter0.toString());
      assertEquals(3, charArrayWriter0.size());
  }

  @Test
  public void test02()  throws Throwable  {
      Entities entities0 = new Entities();
      assertNotNull(entities0);
      
      String string0 = "gt1?&(&!u;fh[VI";
      String string1 = entities0.unescape(string0);
      assertTrue(string1.equals((Object)string0));
      assertTrue(string0.equals((Object)string1));
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
      assertEquals("gt1?&(&!u;fh[VI", string1);
      assertNotNull(string1);
  }

  @Test
  public void test03()  throws Throwable  {
      Entities entities0 = new Entities();
      assertNotNull(entities0);
      
      String string0 = "^&";
      String string1 = entities0.unescape(string0);
      assertTrue(string1.equals((Object)string0));
      assertTrue(string0.equals((Object)string1));
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
      assertEquals("^&", string1);
      assertNotNull(string1);
  }

  @Test
  public void test04()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      assertNotNull(entities0);
      
      String string0 = "sum";
      String string1 = entities0.unescape(string0);
      assertSame(string1, string0);
      assertSame(string0, string1);
      assertEquals("sum", string1);
      assertNotNull(string1);
  }

  @Test
  public void test05()  throws Throwable  {
      Entities entities0 = new Entities();
      assertNotNull(entities0);
      
      String string0 = "1?&&;phzVI";
      String string1 = entities0.unescape(string0);
      assertTrue(string1.equals((Object)string0));
      assertTrue(string0.equals((Object)string1));
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
      assertEquals("1?&&;phzVI", string1);
      assertNotNull(string1);
  }

  @Test
  public void test06()  throws Throwable  {
      String string0 = "Illegal Load: ";
      int int0 = 2437;
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(int0);
      assertNotNull(entities_BinaryEntityMap0);
      
      entities_BinaryEntityMap0.add(string0, int0);
  }

  @Test
  public void test07()  throws Throwable  {
      Entities entities0 = Entities.XML;
      assertNotNull(entities0);
      
      String string0 = "0\\,JR5~|Bmn(Dgxv&p";
      String string1 = entities0.escape(string0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
      assertEquals("0\\,JR5~|Bmn(Dgxv&amp;p", string1);
      assertNotNull(string1);
      
      int int0 = entities0.entityValue(string1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
      assertEquals((-1), int0);
  }

  @Test
  public void test08()  throws Throwable  {
      String string0 = "r0>,!E|dFGvhwY";
      int int0 = (-2161);
      int int1 = 0;
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap(int1);
      assertFalse(int1 == int0);
      assertNotNull(entities_ArrayEntityMap0);
      
      entities_ArrayEntityMap0.add(string0, int0);
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
  }

  @Test
  public void test09()  throws Throwable  {
      Entities entities0 = new Entities();
      assertNotNull(entities0);
      
      String string0 = "zwj";
      String string1 = entities0.escape(string0);
      assertTrue(string0.equals((Object)string1));
      assertTrue(string1.equals((Object)string0));
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertEquals("zwj", string1);
      assertNotNull(string1);
  }

  @Test
  public void test10()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      assertNotNull(entities0);
      
      String string0 = "Illegal Load: ";
      MockFile mockFile0 = new MockFile(string0);
      assertNotNull(mockFile0);
      
      MockFileWriter mockFileWriter0 = new MockFileWriter((File) mockFile0);
      assertNotNull(mockFileWriter0);
      
      entities0.escape((Writer) mockFileWriter0, string0);
  }

  @Test
  public void test11()  throws Throwable  {
      Entities entities0 = new Entities();
      assertNotNull(entities0);
      
      int int0 = 1394;
      String string0 = entities0.entityName(int0);
      assertNull(string0);
  }

  @Test
  public void test12()  throws Throwable  {
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
      assertNotNull(entities_HashEntityMap0);
      
      String string0 = null;
      int int0 = entities_HashEntityMap0.value(string0);
      assertEquals((-1), int0);
  }

  @Test
  public void test13()  throws Throwable  {
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
      assertNotNull(entities_HashEntityMap0);
      
      String string0 = "d(AakgeZ";
      int int0 = (-30);
      entities_HashEntityMap0.add(string0, int0);
      int int1 = entities_HashEntityMap0.value(string0);
      assertTrue(int1 == int0);
      assertEquals((-30), int1);
  }

  @Test
  public void test14()  throws Throwable  {
      Entities entities0 = new Entities();
      assertNotNull(entities0);
      
      String string0 = "66c";
      MockFileWriter mockFileWriter0 = new MockFileWriter(string0);
      assertNotNull(mockFileWriter0);
      
      String string1 = "gt1?&(&!u;fh[VI";
      assertNotSame(string1, string0);
      
      entities0.unescape((Writer) mockFileWriter0, string1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
  }

  @Test
  public void test15()  throws Throwable  {
      Entities entities0 = new Entities();
      assertNotNull(entities0);
      
      Entities.fillWithHtml40Entities(entities0);
      String string0 = "zwj";
      int int0 = entities0.entityValue(string0);
      assertEquals(8205, int0);
  }

  @Test
  public void test16()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      assertNotNull(entities0);
      
      String string0 = "r0>,!E|dFGvhwY";
      MockFile mockFile0 = new MockFile(string0);
      assertNotNull(mockFile0);
      
      MockFileWriter mockFileWriter0 = new MockFileWriter((File) mockFile0);
      assertNotNull(mockFileWriter0);
      
      entities0.escape((Writer) mockFileWriter0, string0);
  }

  @Test
  public void test17()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      assertNotNull(entities_BinaryEntityMap0);
  }

  @Test
  public void test18()  throws Throwable  {
      Entities entities0 = Entities.XML;
      //  // Unstable assertion: assertNotNull(entities0);
      
      String string0 = "";
      int int0 = entities0.entityValue(string0);
      //  // Unstable assertion: assertEquals(1909, int0);
  }

  @Test
  public void test19()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      assertNotNull(entities_TreeEntityMap0);
  }
}
