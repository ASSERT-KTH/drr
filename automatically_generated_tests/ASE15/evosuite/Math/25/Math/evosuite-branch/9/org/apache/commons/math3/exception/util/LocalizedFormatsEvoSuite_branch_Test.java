/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 19:05:33 GMT 2014
 */

package org.apache.commons.math3.exception.util;

import static org.junit.Assert.*;
import org.junit.Test;
import java.util.Locale;
import org.apache.commons.math3.exception.util.LocalizedFormats;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
 import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;

 
public class LocalizedFormatsEvoSuite_branch_Test   {

  //@Test
  public void test0()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC;
      assertEquals(LocalizedFormats.VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC, localizedFormats0);
      assertEquals("VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC", localizedFormats0.name());
      assertEquals("{0} values have been added before statistic is configured", localizedFormats0.getSourceString());
      assertEquals("VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC", localizedFormats0.toString());
      assertEquals(296, localizedFormats0.ordinal());
      
      Locale locale0 = Locale.FRENCH;
      assertNotNull(locale0);
      assertEquals("fr", locale0.toString());
      assertEquals("", locale0.getISO3Country());
      assertEquals("", locale0.getCountry());
      assertEquals("fra", locale0.getISO3Language());
      assertEquals("", locale0.getVariant());
      assertEquals("fr", locale0.getLanguage());
      
      String string0 = localizedFormats0.getLocalizedString(locale0);
      assertNotNull(string0);
      assertEquals("{0} valeurs ont \u00E9t\u00E9 ajout\u00E9es ", string0);
      assertEquals("VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC", localizedFormats0.name());
      assertEquals("{0} values have been added before statistic is configured", localizedFormats0.getSourceString());
      assertEquals("VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC", localizedFormats0.toString());
      assertEquals(296, localizedFormats0.ordinal());
      assertEquals("fr", locale0.toString());
      assertEquals("", locale0.getISO3Country());
      assertEquals("", locale0.getCountry());
      assertEquals("fra", locale0.getISO3Language());
      assertEquals("", locale0.getVariant());
      assertEquals("fr", locale0.getLanguage());
  }

  @Test
  public void test1()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.UNABLE_TO_COMPUTE_COVARIANCE_SINGULAR_PROBLEM;
      assertEquals(LocalizedFormats.UNABLE_TO_COMPUTE_COVARIANCE_SINGULAR_PROBLEM, localizedFormats0);
      assertEquals("UNABLE_TO_COMPUTE_COVARIANCE_SINGULAR_PROBLEM", localizedFormats0.name());
      assertEquals("UNABLE_TO_COMPUTE_COVARIANCE_SINGULAR_PROBLEM", localizedFormats0.toString());
      assertEquals(276, localizedFormats0.ordinal());
      assertEquals("unable to compute covariances: singular problem", localizedFormats0.getSourceString());
      
      Locale locale0 = Locale.ROOT;
      assertNotNull(locale0);
      assertEquals("", locale0.getVariant());
      assertEquals("", locale0.toString());
      assertEquals("", locale0.getISO3Country());
      assertEquals("", locale0.getISO3Language());
      assertEquals("", locale0.getCountry());
      assertEquals("", locale0.getLanguage());
      
      String string0 = localizedFormats0.getLocalizedString(locale0);
      assertNotNull(string0);
      assertEquals("unable to compute covariances: singular problem", string0);
      assertEquals("", locale0.getVariant());
      assertEquals("", locale0.toString());
      assertEquals("", locale0.getISO3Country());
      assertEquals("", locale0.getISO3Language());
      assertEquals("", locale0.getCountry());
      assertEquals("", locale0.getLanguage());
      assertEquals("UNABLE_TO_COMPUTE_COVARIANCE_SINGULAR_PROBLEM", localizedFormats0.name());
      assertEquals("UNABLE_TO_COMPUTE_COVARIANCE_SINGULAR_PROBLEM", localizedFormats0.toString());
      assertEquals(276, localizedFormats0.ordinal());
      assertEquals("unable to compute covariances: singular problem", localizedFormats0.getSourceString());
  }

  @Test
  public void test2()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC;
      assertEquals(LocalizedFormats.VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC, localizedFormats0);
      assertEquals("VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC", localizedFormats0.toString());
      assertEquals(296, localizedFormats0.ordinal());
      assertEquals("{0} values have been added before statistic is configured", localizedFormats0.getSourceString());
      assertEquals("VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC", localizedFormats0.name());
      
      String string0 = localizedFormats0.getSourceString();
      assertNotNull(string0);
      assertEquals("{0} values have been added before statistic is configured", string0);
      assertEquals("VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC", localizedFormats0.toString());
      assertEquals(296, localizedFormats0.ordinal());
      assertEquals("{0} values have been added before statistic is configured", localizedFormats0.getSourceString());
      assertEquals("VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC", localizedFormats0.name());
  }
}
