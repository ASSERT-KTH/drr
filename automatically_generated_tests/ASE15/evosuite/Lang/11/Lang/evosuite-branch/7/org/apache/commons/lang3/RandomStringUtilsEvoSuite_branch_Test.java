/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 17:04:46 GMT 2014
 */

package org.apache.commons.lang3;

import static org.junit.Assert.*;
import org.junit.Test;
import java.util.Random;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
 import org.evosuite.runtime.testdata.EvoSuiteFile;

import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

 
public class RandomStringUtilsEvoSuite_branch_Test   {

  @Test
  public void test00()  throws Throwable  {
      int int0 = 0;
      String string0 = "(a\\J";
      String string1 = RandomStringUtils.random(int0, string0);
      assertEquals("", string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotNull(string1);
  }

  @Test
  public void test01()  throws Throwable  {
      int int0 = 56191;
      boolean boolean0 = true;
      char char0 = 'P';
      int int1 = (-800);
      String string0 = RandomStringUtils.random(int0, int1, (int) char0, boolean0, boolean0);
  }

  @Test
  public void test02() {}
//   @Test
//   public void test02()  throws Throwable  {
//       int int0 = 0;
//       char[] charArray0 = new char[4];
//       char char0 = 'Z';
//       boolean boolean0 = true;
//       MockRandom mockRandom0 = new MockRandom();
//       assertNotNull(mockRandom0);
//       
//       // Undeclared exception!
//       try {
//         String string0 = RandomStringUtils.random((int) char0, int0, int0, boolean0, boolean0, charArray0, (Random) mockRandom0);
//         fail("Expecting exception: ArrayIndexOutOfBoundsException");
//       
//       } catch(ArrayIndexOutOfBoundsException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//       }
//   }

  @Test
  public void test03()  throws Throwable  {
      int int0 = 56191;
      char[] charArray0 = new char[2];
      String string0 = RandomStringUtils.random(int0, charArray0);
  }

  @Test
  public void test04()  throws Throwable  {
      char[] charArray0 = new char[5];
      char char0 = '\u001B';
      charArray0[0] = char0;
      String string0 = null;
      String string1 = RandomStringUtils.random((int) charArray0[0], string0);
      assertArrayEquals(new char[] {'\u001B', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string1);
      assertNotNull(string1);
  }

  @Test
  public void test05()  throws Throwable  {
      int int0 = (-1775);
      boolean boolean0 = false;
      char[] charArray0 = new char[5];
      // Undeclared exception!
      try {
        String string0 = RandomStringUtils.random(int0, int0, int0, boolean0, boolean0, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1775 is less than 0.
         //
      }
  }

  @Test
  public void test06()  throws Throwable  {
      int int0 = 0;
      String string0 = RandomStringUtils.randomAscii(int0);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test
  public void test07()  throws Throwable  {
      int int0 = 0;
      String string0 = RandomStringUtils.randomAlphabetic(int0);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test
  public void test08()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      assertNotNull(randomStringUtils0);
  }

  @Test
  public void test09()  throws Throwable  {
      int int0 = 0;
      String string0 = RandomStringUtils.random(int0);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test
  public void test10()  throws Throwable  {
      int int0 = (-2783);
      // Undeclared exception!
      try {
        String string0 = RandomStringUtils.randomAlphanumeric(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2783 is less than 0.
         //
      }
  }
}
