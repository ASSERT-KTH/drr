/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 18:54:37 GMT 2014
 */

package org.apache.commons.lang.time;

import static org.junit.Assert.*;
import org.junit.Test;
import java.util.TimeZone;
import org.apache.commons.lang.time.DurationFormatUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
 import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

 
public class DurationFormatUtilsEvoSuite_branch_Test   {

  @Test
  public void test00()  throws Throwable  {
      long long0 = 2L;
      boolean boolean0 = true;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertEquals("0 seconds", string0);
      assertNotNull(string0);
      
      String string1 = DurationFormatUtils.formatDurationISO(long0);
      assertNotSame(string1, string0);
      assertEquals("P0Y0M0DT0H0M0.002S", string1);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0);
      assertNotSame(string0, string1);
      assertNotNull(durationFormatUtils_Token0);
      assertFalse(string0.equals((Object)string1));
      
      int int0 = durationFormatUtils_Token0.getCount();
      assertNotSame(string0, string1);
      assertEquals(1, int0);
      assertFalse(string0.equals((Object)string1));
      
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(string1, int0);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotNull(durationFormatUtils_Token1);
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      
      boolean boolean1 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertFalse(boolean1);
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean0 == boolean1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
  }

  @Test
  public void test01()  throws Throwable  {
      int int0 = 22;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(int0);
      assertNotNull(durationFormatUtils_Token0);
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token0);
      assertTrue(boolean0);
  }

  @Test
  public void test02()  throws Throwable  {
      String string0 = "5";
      int int0 = 848;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0, int0);
      assertNotNull(durationFormatUtils_Token0);
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token0);
      assertTrue(boolean0);
  }

  @Test
  public void test03()  throws Throwable  {
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[14];
      String string0 = (String)DurationFormatUtils.M;
      assertEquals("M", string0);
      assertNotNull(string0);
      
      int int0 = 5;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0, int0);
      assertNotNull(durationFormatUtils_Token0);
      
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token0;
      assertNotNull(durationFormatUtils_TokenArray0[1]);
      
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_TokenArray0[1]);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotNull(durationFormatUtils_Token1);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_TokenArray0[1];
      assertNotNull(durationFormatUtils_TokenArray0[0]);
      
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token1;
      assertNotNull(durationFormatUtils_TokenArray0[2]);
      
      DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_TokenArray0[0], int0);
      assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token0);
      assertNotNull(durationFormatUtils_Token2);
      assertFalse(durationFormatUtils_Token2.equals((Object)durationFormatUtils_Token1));
      assertFalse(durationFormatUtils_Token2.equals((Object)durationFormatUtils_Token0));
      
      boolean boolean0 = durationFormatUtils_TokenArray0[2].equals((Object) durationFormatUtils_Token2);
      assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token0);
      assertFalse(boolean0);
      assertFalse(durationFormatUtils_Token2.equals((Object)durationFormatUtils_Token1));
      assertFalse(durationFormatUtils_Token2.equals((Object)durationFormatUtils_Token0));
  }

  @Test
  public void test04()  throws Throwable  {
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[14];
      String string0 = (String)DurationFormatUtils.M;
      assertEquals("M", string0);
      assertNotNull(string0);
      
      int int0 = 5;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0, int0);
      assertNotNull(durationFormatUtils_Token0);
      
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token0;
      assertNotNull(durationFormatUtils_TokenArray0[1]);
      
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_TokenArray0[1]);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotNull(durationFormatUtils_Token1);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertFalse(boolean0);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
  }

  @Test
  public void test05()  throws Throwable  {
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      assertNotNull(stringBuffer0);
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0, int0);
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      assertNotNull(durationFormatUtils_Token0);
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) stringBuffer0);
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.capacity());
      assertEquals(0, stringBuffer0.length());
      assertFalse(boolean0);
  }

  @Test
  public void test06()  throws Throwable  {
      long long0 = 0L;
      String string0 = DurationFormatUtils.formatDurationISO(long0);
      assertEquals("P0Y0M0DT0H0M0.000S", string0);
      assertNotNull(string0);
      
      String string1 = DurationFormatUtils.formatPeriod(long0, long0, string0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertEquals("P0Y000DT00000.0000", string1);
      assertNotNull(string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
  }

  @Test
  public void test07()  throws Throwable  {
      String string0 = "yM-xe";
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.capacity());
      assertNotNull(stringBuffer0);
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0, int0);
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.capacity());
      assertNotNull(durationFormatUtils_Token0);
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token0);
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.capacity());
      assertTrue(boolean0);
      
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(string0, int0);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotNull(durationFormatUtils_Token1);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
      assertNotNull(durationFormatUtils_TokenArray0[0]);
      
      // Undeclared exception!
      try {
        String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, int0, int0, int0, int0, int0, int0, int0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test08()  throws Throwable  {
      String string0 = "yM-xe";
      int int0 = 0;
      String string1 = DurationFormatUtils.formatPeriod((long) int0, (long) int0, string0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertEquals("00-xe", string1);
      assertNotNull(string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
  }

  @Test
  public void test09()  throws Throwable  {
      long long0 = 1L;
      String string0 = DurationFormatUtils.formatDurationISO(long0);
      assertEquals("P0Y0M0DT0H0M0.001S", string0);
      assertNotNull(string0);
      
      long long1 = 2419200022L;
      boolean boolean0 = false;
      ZoneInfo zoneInfo0 = (ZoneInfo)TimeZone.getTimeZone(string0);
      assertEquals("GMT", zoneInfo0.getID());
      assertNotNull(zoneInfo0);
      assertFalse(long0 == long1);
      
      String string1 = DurationFormatUtils.formatPeriod(long0, long1, string0, boolean0, (TimeZone) zoneInfo0);
      assertEquals("GMT", zoneInfo0.getID());
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertEquals("P0Y000DT0672000.00121", string1);
      assertNotNull(string1);
      assertFalse(long1 == long0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(long0 == long1);
      assertFalse(string1.equals((Object)string0));
  }

  @Test
  public void test10()  throws Throwable  {
      long long0 = 2419200004L;
      long long1 = (-1174L);
      String string0 = DurationFormatUtils.formatPeriodISO(long1, long0);
      assertEquals("P0Y0M28DT0H0M1.178S", string0);
      assertNotNull(string0);
      assertFalse(long0 == long1);
      assertFalse(long1 == long0);
  }

  @Test
  public void test11()  throws Throwable  {
      long long0 = 2419200004L;
      long long1 = (-1174L);
      String string0 = "c@D8Bew";
      String string1 = DurationFormatUtils.formatPeriod(long1, long0, string0);
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
      assertEquals("c@D8Bew", string1);
      assertNotNull(string1);
      assertFalse(long0 == long1);
      assertTrue(string1.equals((Object)string0));
      assertFalse(long1 == long0);
      assertTrue(string0.equals((Object)string1));
  }

  @Test
  public void test12()  throws Throwable  {
      long long0 = 60128L;
      boolean boolean0 = true;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertEquals("1 minute", string0);
      assertNotNull(string0);
  }

  @Test
  public void test13()  throws Throwable  {
      boolean boolean0 = true;
      long long0 = 3600030L;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertEquals("1 hour", string0);
      assertNotNull(string0);
  }

  @Test
  public void test14()  throws Throwable  {
      long long0 = 2419200004L;
      boolean boolean0 = true;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertEquals("28 days", string0);
      assertNotNull(string0);
  }

  @Test
  public void test15()  throws Throwable  {
      long long0 = (-11L);
      boolean boolean0 = false;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertEquals("0 days 0 hours 0 minutes 0 seconds", string0);
      assertNotNull(string0);
  }

  @Test
  public void test16()  throws Throwable  {
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[14];
      String string0 = (String)DurationFormatUtils.M;
      assertEquals("M", string0);
      assertNotNull(string0);
      
      int int0 = 5;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0, int0);
      assertNotNull(durationFormatUtils_Token0);
      
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token0;
      assertNotNull(durationFormatUtils_TokenArray0[1]);
      
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_TokenArray0[1];
      assertNotNull(durationFormatUtils_TokenArray0[0]);
      
      String string1 = durationFormatUtils_TokenArray0[0].toString();
      assertNotSame(string1, string0);
      assertEquals("MMMMM", string1);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
  }

  @Test
  public void test17()  throws Throwable  {
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      assertNotNull(durationFormatUtils0);
  }

  @Test
  public void test18()  throws Throwable  {
      int int0 = 5;
      String string0 = DurationFormatUtils.formatDurationHMS((long) int0);
      assertEquals("0:00:00.005", string0);
      assertNotNull(string0);
  }
}
