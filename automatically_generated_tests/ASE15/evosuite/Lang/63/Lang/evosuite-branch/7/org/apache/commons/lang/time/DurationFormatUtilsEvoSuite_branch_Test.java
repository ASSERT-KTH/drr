/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 18:34:02 GMT 2014
 */

package org.apache.commons.lang.time;

import static org.junit.Assert.*;
import org.junit.Test;
import org.apache.commons.lang.time.DurationFormatUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
 import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;

 
public class DurationFormatUtilsEvoSuite_branch_Test   {

  @Test
  public void test00()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.y;
      assertNotNull(string0);
      assertEquals("y", string0);
      
      int int0 = 518;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0, int0);
      assertNotNull(durationFormatUtils_Token0);
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token0);
      assertTrue(boolean0);
  }

  @Test
  public void test01()  throws Throwable  {
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      assertNotNull(durationFormatUtils0);
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0);
      assertNotNull(durationFormatUtils_Token0);
      
      int int0 = 60;
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, int0);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotNull(durationFormatUtils_Token1);
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      
      DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1, int0);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token2);
      assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token0);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token2);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotNull(durationFormatUtils_Token2);
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token2));
      assertFalse(durationFormatUtils_Token2.equals((Object)durationFormatUtils_Token1));
      assertFalse(durationFormatUtils_Token2.equals((Object)durationFormatUtils_Token0));
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token2));
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      
      boolean boolean0 = durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token2);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token2);
      assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token0);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token2);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertFalse(boolean0);
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token2));
      assertFalse(durationFormatUtils_Token2.equals((Object)durationFormatUtils_Token1));
      assertFalse(durationFormatUtils_Token2.equals((Object)durationFormatUtils_Token0));
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token2));
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
  }

  @Test
  public void test02()  throws Throwable  {
      int int0 = 94;
      StringBuffer stringBuffer0 = new StringBuffer(int0);
      assertEquals(0, stringBuffer0.length());
      assertEquals(94, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertNotNull(stringBuffer0);
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0, int0);
      assertEquals(0, stringBuffer0.length());
      assertEquals(94, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertNotNull(durationFormatUtils_Token0);
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token0);
      assertEquals(0, stringBuffer0.length());
      assertEquals(94, stringBuffer0.capacity());
      assertEquals("", stringBuffer0.toString());
      assertTrue(boolean0);
  }

  @Test
  public void test03()  throws Throwable  {
      int int0 = 1279;
      Integer integer0 = new Integer(int0);
      assertEquals(1279, (int)integer0);
      assertTrue(integer0.equals((Object)int0));
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(integer0, (int) integer0);
      assertNotNull(durationFormatUtils_Token0);
      assertTrue(integer0.equals((Object)int0));
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token0);
      assertTrue(boolean0);
      assertTrue(integer0.equals((Object)int0));
  }

  @Test
  public void test04()  throws Throwable  {
      int int0 = 29;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(int0, int0);
      assertNotNull(durationFormatUtils_Token0);
      
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, int0);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotNull(durationFormatUtils_Token1);
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      
      boolean boolean0 = durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token0);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertFalse(boolean0);
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
  }

  @Test
  public void test05()  throws Throwable  {
      int int0 = (-2033);
      Integer integer0 = new Integer(int0);
      assertEquals((-2033), (int)integer0);
      assertTrue(integer0.equals((Object)int0));
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(integer0, int0);
      assertNotNull(durationFormatUtils_Token0);
      assertTrue(integer0.equals((Object)int0));
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) integer0);
      assertFalse(boolean0);
      assertTrue(integer0.equals((Object)int0));
  }

  @Test
  public void test06()  throws Throwable  {
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[26];
      Object object0 = new Object();
      assertNotNull(object0);
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0);
      assertNotNull(durationFormatUtils_Token0);
      
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      assertNotNull(durationFormatUtils_TokenArray0[0]);
      
      int int0 = 31;
      boolean boolean0 = false;
      // Undeclared exception!
      try {
        String string0 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, int0, int0, int0, int0, int0, int0, int0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test07()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.y;
      assertNotNull(string0);
      assertEquals("y", string0);
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0);
      assertNotNull(durationFormatUtils_Token0);
      
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[20];
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      assertNotNull(durationFormatUtils_TokenArray0[0]);
      
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_TokenArray0[0];
      assertNotNull(durationFormatUtils_TokenArray0[2]);
      
      int int0 = durationFormatUtils_TokenArray0[2].getCount();
      assertEquals(1, int0);
      
      boolean boolean0 = true;
      // Undeclared exception!
      try {
        String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, int0, int0, int0, int0, int0, int0, int0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test08()  throws Throwable  {
      int int0 = (-2033);
      long long0 = 2419199945L;
      String string0 = "<J%Xu|!kU\\XQSX%";
      String string1 = DurationFormatUtils.formatPeriod((long) int0, long0, string0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotNull(string1);
      assertEquals("<J%Xu|!kU\\XQ-927794246X%", string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
  }

  @Test
  public void test09()  throws Throwable  {
      int int0 = (-2033);
      Integer integer0 = new Integer(int0);
      assertEquals((-2033), (int)integer0);
      assertTrue(integer0.equals((Object)int0));
      
      long long0 = 2419199945L;
      String string0 = DurationFormatUtils.formatDurationISO((long) integer0);
      assertNotNull(string0);
      assertEquals("P0Y0M0DT0H0M-2.67S", string0);
      assertTrue(integer0.equals((Object)int0));
      
      String string1 = DurationFormatUtils.formatPeriod((long) int0, long0, string0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotNull(string1);
      assertEquals("P0Y000DT067200-2.671978", string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertTrue(integer0.equals((Object)int0));
  }

  @Test
  public void test10()  throws Throwable  {
      long long0 = (-457L);
      long long1 = 2419200003L;
      String string0 = DurationFormatUtils.formatPeriodISO(long0, long1);
      assertNotNull(string0);
      assertEquals("P0Y0M28DT0H0M0.460S", string0);
      assertFalse(long1 == long0);
      assertFalse(long0 == long1);
  }

  @Test
  public void test11()  throws Throwable  {
      boolean boolean0 = true;
      long long0 = 60057L;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertNotNull(string0);
      assertEquals("1 minute", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      long long0 = 3600015L;
      boolean boolean0 = true;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertNotNull(string0);
      assertEquals("1 hour", string0);
  }

  @Test
  public void test13()  throws Throwable  {
      long long0 = 86400007L;
      boolean boolean0 = true;
      String string0 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertNotNull(string0);
      assertEquals("1 day", string0);
  }

  @Test
  public void test14()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.y;
      assertNotNull(string0);
      assertEquals("y", string0);
      
      long long0 = 5L;
      int int0 = 518;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0, int0);
      assertNotNull(durationFormatUtils_Token0);
      
      String string1 = durationFormatUtils_Token0.toString();
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotNull(string1);
      assertEquals("yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy", string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(string1);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotSame(string0, string1);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertNotSame(string1, string0);
      assertNotNull(durationFormatUtils_Token1);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertFalse(string0.equals((Object)string1));
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertFalse(string1.equals((Object)string0));
      
      boolean boolean0 = durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token1);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotSame(string0, string1);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertNotSame(string1, string0);
      assertFalse(boolean0);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertFalse(string0.equals((Object)string1));
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertFalse(string1.equals((Object)string0));
      
      String string2 = DurationFormatUtils.formatDurationWords(long0, boolean0, boolean0);
      assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotNull(string2);
      assertEquals("0 days 0 hours 0 minutes 0 seconds", string2);
      assertFalse(durationFormatUtils_Token1.equals((Object)durationFormatUtils_Token0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(durationFormatUtils_Token0.equals((Object)durationFormatUtils_Token1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
  }

  @Test
  public void test15()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.y;
      assertNotNull(string0);
      assertEquals("y", string0);
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(string0);
      assertNotNull(durationFormatUtils_Token0);
      
      int int0 = durationFormatUtils_Token0.getCount();
      assertEquals(1, int0);
      
      boolean boolean0 = true;
      String string1 = DurationFormatUtils.formatDurationWords((long) int0, boolean0, boolean0);
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
      assertNotNull(string1);
      assertEquals("0 seconds", string1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
  }

  @Test
  public void test16()  throws Throwable  {
      long long0 = (-15L);
      String string0 = "S";
      boolean boolean0 = false;
      String string1 = DurationFormatUtils.formatDuration(long0, string0, boolean0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotNull(string1);
      assertEquals("-15", string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
  }

  @Test
  public void test17()  throws Throwable  {
      int int0 = 31;
      String string0 = DurationFormatUtils.formatDurationHMS((long) int0);
      assertNotNull(string0);
      assertEquals("0:00:00.031", string0);
  }

  @Test
  public void test18()  throws Throwable  {
      int int0 = (-2033);
      Integer integer0 = new Integer(int0);
      assertEquals((-2033), (int)integer0);
      assertTrue(integer0.equals((Object)int0));
      
      String string0 = DurationFormatUtils.formatDurationISO((long) integer0);
      assertNotNull(string0);
      assertEquals("P0Y0M0DT0H0M-2.67S", string0);
      assertTrue(integer0.equals((Object)int0));
      
      String string1 = DurationFormatUtils.formatPeriod((long) int0, (long) integer0, string0);
      assertNotSame(string1, string0);
      assertNotSame(string0, string1);
      assertNotNull(string1);
      assertEquals("P0Y000DT0000-2.670", string1);
      assertFalse(string1.equals((Object)string0));
      assertTrue(integer0.equals((Object)int0));
      assertFalse(string0.equals((Object)string1));
  }
}
