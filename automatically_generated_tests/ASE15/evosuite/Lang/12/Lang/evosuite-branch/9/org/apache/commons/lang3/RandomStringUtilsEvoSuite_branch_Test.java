/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 17:24:32 GMT 2014
 */

package org.apache.commons.lang3;

import static org.junit.Assert.*;
import org.junit.Test;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
 import org.evosuite.runtime.testdata.EvoSuiteFile;

import org.junit.runner.RunWith;

 
public class RandomStringUtilsEvoSuite_branch_Test   {

  //@Test
  public void test0()  throws Throwable  {
      int int0 = (-378);
      boolean boolean0 = true;
      char[] charArray0 = new char[6];
      char char0 = '1';
      charArray0[0] = char0;
      String string0 = RandomStringUtils.random((int) charArray0[0], int0, (int) charArray0[0], boolean0, boolean0);
      assertEquals("\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86\uFE86", string0);
      assertNotNull(string0);
      assertArrayEquals(new char[] {'1', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  //@Test
  public void test1()  throws Throwable  {
      boolean boolean0 = true;
      char[] charArray0 = new char[6];
      char char0 = '1';
      charArray0[0] = char0;
      char char1 = 'm';
      String string0 = RandomStringUtils.random((int) charArray0[0], (int) char1, (int) charArray0[0], boolean0, boolean0);
      assertEquals("mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm", string0);
      assertFalse(char1 == char0);
      assertNotNull(string0);
      assertArrayEquals(new char[] {'1', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test
  public void test2() {}
//   @Test
//   public void test2()  throws Throwable  {
//       int int0 = 1358;
//       int int1 = 0;
//       boolean boolean0 = false;
//       boolean boolean1 = true;
//       char[] charArray0 = new char[8];
//       // Undeclared exception!
//       try {
//         String string0 = RandomStringUtils.random(int0, int1, int1, boolean0, boolean1, charArray0);
//         fail("Expecting exception: ArrayIndexOutOfBoundsException");
//       
//       } catch(ArrayIndexOutOfBoundsException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//       }
//   }

  //@Test
  public void test3()  throws Throwable  {
      int int0 = 123;
      String string0 = " is less than 0.";
      String string1 = RandomStringUtils.random(int0, string0);
      assertEquals("                                                                                                                           ", string1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
  }

  @Test
  public void test4() {}
//   @Test
//   public void test4()  throws Throwable  {
//       int int0 = (-378);
//       boolean boolean0 = true;
//       char[] charArray0 = new char[6];
//       char char0 = '1';
//       charArray0[0] = char0;
//       String string0 = RandomStringUtils.random((int) charArray0[0], (int) char0, int0, boolean0, boolean0);
//       assertEquals("1111111111111111111111111111111111111111111111111", string0);
//       assertNotNull(string0);
//       assertArrayEquals(new char[] {'1', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
//   }

  //@Test
  public void test5()  throws Throwable  {
      int int0 = 1;
      String string0 = RandomStringUtils.random(int0);
      assertEquals("\u0000", string0);
      assertNotNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      int int0 = (-378);
      int int1 = 0;
      boolean boolean0 = true;
      char[] charArray0 = new char[6];
      String string0 = RandomStringUtils.random(int1, int0, int0, boolean0, boolean0, charArray0);
      assertEquals("", string0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertNotNull(string0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test
  public void test7()  throws Throwable  {
      int int0 = (-378);
      boolean boolean0 = true;
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try {
        String string0 = RandomStringUtils.random(int0, int0, int0, boolean0, boolean0, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -378 is less than 0.
         //
      }
  }
}
