/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 16:33:47 GMT 2014
 */

package org.jfree.data.statistics;

import static org.junit.Assert.*;
import org.junit.Test;
import java.awt.Event;
import java.awt.geom.AffineTransform;
import java.util.List;
import javax.swing.SwingConstants;
import javax.swing.text.View;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
 import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.jfree.data.KeyedObjects2D;
import org.jfree.data.Range;
import org.jfree.data.UnknownKeyException;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.statistics.BoxAndWhiskerItem;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.time.Quarter;
import org.junit.runner.RunWith;

 
public class DefaultBoxAndWhiskerCategoryDatasetEvoSuite_branch_Test   {

  @Test
  public void test00()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset1 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset1.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset1.getColumnCount());
      assertNotSame(defaultBoxAndWhiskerCategoryDataset1, defaultBoxAndWhiskerCategoryDataset0);
      assertNotNull(defaultBoxAndWhiskerCategoryDataset1);
      assertTrue(defaultBoxAndWhiskerCategoryDataset1.equals((Object)defaultBoxAndWhiskerCategoryDataset0));
      
      boolean boolean0 = defaultBoxAndWhiskerCategoryDataset0.equals((Object) defaultBoxAndWhiskerCategoryDataset1);
      assertTrue(boolean0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset1.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset1.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotSame(defaultBoxAndWhiskerCategoryDataset1, defaultBoxAndWhiskerCategoryDataset0);
      assertNotSame(defaultBoxAndWhiskerCategoryDataset0, defaultBoxAndWhiskerCategoryDataset1);
      assertTrue(defaultBoxAndWhiskerCategoryDataset1.equals((Object)defaultBoxAndWhiskerCategoryDataset0));
      assertTrue(defaultBoxAndWhiskerCategoryDataset0.equals((Object)defaultBoxAndWhiskerCategoryDataset1));
  }

  @Test
  public void test01()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      double[][] doubleArray0 = new double[3][3];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      assertEquals(3, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getColumnCount());
      assertNotNull(defaultIntervalCategoryDataset0);
      
      int int0 = defaultIntervalCategoryDataset0.getCategoryCount();
      assertEquals(3, int0);
      assertEquals(3, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getColumnCount());
      
      boolean boolean0 = defaultBoxAndWhiskerCategoryDataset0.equals((Object) int0);
      assertFalse(boolean0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getColumnCount());
  }

  @Test
  public void test02()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = SwingConstants.PREVIOUS;
      assertEquals(13, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      boolean boolean0 = true;
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      assertEquals(0, taskSeriesCollection0.getSeriesCount());
      assertEquals(0, taskSeriesCollection0.getColumnCount());
      assertEquals(0, taskSeriesCollection0.getRowCount());
      assertNotNull(taskSeriesCollection0);
      
      List list1 = taskSeriesCollection0.getColumnKeys();
      assertEquals(0, taskSeriesCollection0.getSeriesCount());
      assertEquals(0, taskSeriesCollection0.getColumnCount());
      assertEquals(0, taskSeriesCollection0.getRowCount());
      assertEquals(0, list1.size());
      assertEquals(true, list1.isEmpty());
      assertNotNull(list1);
      
      defaultBoxAndWhiskerCategoryDataset0.add((List) list1, (Comparable) int0, (Comparable) int0);
      assertEquals(0, taskSeriesCollection0.getSeriesCount());
      assertEquals(0, taskSeriesCollection0.getColumnCount());
      assertEquals(0, taskSeriesCollection0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, list1.size());
      assertEquals(true, list1.isEmpty());
  }

  @Test
  public void test03()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = SwingConstants.PREVIOUS;
      assertEquals(13, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = true;
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test04()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = Event.SCROLL_PAGE_UP;
      assertEquals(603, int0);
      
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getRowKeys();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertNotNull(list0);
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(false, list0.isEmpty());
      assertEquals(1, list0.size());
      
      List list1 = defaultBoxAndWhiskerCategoryDataset0.getOutliers((Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(false, list1.isEmpty());
      assertEquals(1, list1.size());
      assertNotSame(list1, list0);
      assertNotNull(list1);
      assertTrue(list1.equals((Object)list0));
  }

  @Test
  public void test05()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getColumnCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      boolean boolean0 = true;
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      List list1 = defaultBoxAndWhiskerCategoryDataset0.getOutliers((Comparable) boolean0, (Comparable) int0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNull(list1);
  }

  @Test
  public void test06()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = SwingConstants.PREVIOUS;
      assertEquals(13, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int1 = defaultBoxAndWhiskerCategoryDataset0.getRowIndex((Comparable) int0);
      assertEquals(0, int1);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
      
      List list1 = defaultBoxAndWhiskerCategoryDataset0.getOutliers(int1, int1);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNull(list1);
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
  }

  @Test
  public void test07()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      double double0 = (-0.8970482615792639);
      double[][] doubleArray0 = new double[3][3];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getCategoryCount());
      assertNotNull(defaultIntervalCategoryDataset0);
      
      List list0 = defaultIntervalCategoryDataset0.getRowKeys();
      assertEquals(false, list0.isEmpty());
      assertEquals(3, list0.size());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getCategoryCount());
      assertNotNull(list0);
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(double0, double0, double0, double0, double0, double0, double0, double0, (List) list0);
      assertEquals(false, list0.isEmpty());
      assertEquals(3, list0.size());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getCategoryCount());
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) double0, (Comparable) double0);
      assertEquals(false, list0.isEmpty());
      assertEquals(3, list0.size());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Double double1 = (Double)defaultBoxAndWhiskerCategoryDataset0.getMaxOutlier((Comparable) double0, (Comparable) double0);
      assertEquals((-0.8970482615792639), (double)double1, 0.01D);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertTrue(double1.equals((Object)double0));
  }

  @Test
  public void test08()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getColumnCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = true;
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMaxOutlier((Comparable) boolean0, (Comparable) int0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNull(number0);
  }

  @Test
  public void test09()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = SwingConstants.PREVIOUS;
      assertEquals(13, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int1 = 0;
      assertFalse(int1 == int0);
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getMaxOutlier(int1, int1);
      assertEquals(13, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertFalse(int1 == int0);
      assertFalse(integer0.equals((Object)int1));
  }

  @Test
  public void test10()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = SwingConstants.WEST;
      assertEquals(7, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      boolean boolean0 = false;
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int1 = 1;
      assertFalse(int1 == int0);
      
      int int2 = 0;
      assertFalse(int2 == int0);
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMaxOutlier(int1, int2);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNull(number0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
  }

  @Test
  public void test11()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = SwingConstants.PREVIOUS;
      assertEquals(13, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getMinOutlier((Comparable) int0, (Comparable) int0);
      assertEquals(13, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test12()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getColumnCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem1 = null;
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem1, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMinOutlier((Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNull(number0);
  }

  @Test
  public void test13()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      double double0 = 0.359589074119;
      double[][] doubleArray0 = new double[3][3];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getColumnCount());
      assertNotNull(defaultIntervalCategoryDataset0);
      
      List list0 = defaultIntervalCategoryDataset0.getRowKeys();
      assertEquals(3, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getColumnCount());
      assertNotNull(list0);
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(double0, double0, double0, double0, double0, double0, double0, double0, (List) list0);
      assertEquals(3, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getColumnCount());
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) double0, (Comparable) double0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(3, list0.size());
      assertEquals(false, list0.isEmpty());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getColumnCount());
      
      int int0 = 0;
      Double double1 = (Double)defaultBoxAndWhiskerCategoryDataset0.getMinOutlier(int0, int0);
      assertEquals(0.359589074119, (double)double1, 0.01D);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertTrue(double1.equals((Object)double0));
  }

  @Test
  public void test14()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = SwingConstants.PREVIOUS;
      assertEquals(13, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      boolean boolean0 = false;
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) boolean0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getMaxRegularValue((Comparable) int0, (Comparable) boolean0);
      assertEquals(13, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test15()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getColumnCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      boolean boolean0 = true;
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMaxRegularValue((Comparable) int0, (Comparable) boolean0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNull(number0);
  }

  @Test
  public void test16()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = SwingConstants.PREVIOUS;
      assertEquals(13, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int1 = 0;
      assertFalse(int1 == int0);
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getMaxRegularValue(int1, int1);
      assertEquals(13, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertFalse(integer0.equals((Object)int1));
      assertFalse(int1 == int0);
  }

  @Test
  public void test17()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getColumnCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem1 = null;
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem1, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMaxRegularValue(int0, int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNull(number0);
  }

  @Test
  public void test18()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = SwingConstants.PREVIOUS;
      assertEquals(13, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getMinRegularValue((Comparable) int0, (Comparable) int0);
      assertEquals(13, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test19()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = SwingConstants.PREVIOUS;
      assertEquals(13, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      boolean boolean0 = true;
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) boolean0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) int0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMinRegularValue((Comparable) boolean0, (Comparable) boolean0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNull(number0);
  }

  @Test
  public void test20()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = SwingConstants.PREVIOUS;
      assertEquals(13, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int1 = defaultBoxAndWhiskerCategoryDataset0.getRowIndex((Comparable) int0);
      assertEquals(0, int1);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getMinRegularValue(int1, int1);
      assertEquals(13, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertFalse(integer0.equals((Object)int1));
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
  }

  @Test
  public void test21()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getColumnCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem1 = null;
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem1, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMinRegularValue(int0, int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNull(number0);
  }

  @Test
  public void test22()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = Event.SCROLL_PAGE_UP;
      assertEquals(603, int0);
      
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getRowKeys();
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(list0);
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(false, list0.isEmpty());
      assertEquals(1, list0.size());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getQ3Value((Comparable) int0, (Comparable) int0);
      assertEquals(603, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test23()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = SwingConstants.WEST;
      assertEquals(7, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      boolean boolean0 = false;
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getQ3Value((Comparable) int0, (Comparable) boolean0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNull(number0);
  }

  @Test
  public void test24()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = SwingConstants.PREVIOUS;
      assertEquals(13, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int1 = defaultBoxAndWhiskerCategoryDataset0.getRowIndex((Comparable) int0);
      assertEquals(0, int1);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getQ3Value(int1, int1);
      assertEquals(13, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertFalse(int1 == int0);
      assertFalse(integer0.equals((Object)int1));
      assertFalse(int0 == int1);
  }

  @Test
  public void test25()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      double double0 = (-2436.532218553475);
      List<String> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(double0, double0, double0, double0, double0, double0, double0, double0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) double0, (Comparable) double0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      int int0 = SwingConstants.PREVIOUS;
      assertEquals(13, int0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int1 = defaultBoxAndWhiskerCategoryDataset0.getRowIndex((Comparable) int0);
      assertEquals(1, int1);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
      
      int int2 = 0;
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getQ3Value(int1, int2);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNull(number0);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
  }

  @Test
  public void test26()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = SwingConstants.PREVIOUS;
      assertEquals(13, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getQ1Value((Comparable) int0, (Comparable) int0);
      assertEquals(13, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test27()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getColumnCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      boolean boolean0 = true;
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getQ1Value((Comparable) boolean0, (Comparable) int0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNull(number0);
  }

  @Test
  public void test28()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = SwingConstants.PREVIOUS;
      assertEquals(13, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int1 = 0;
      assertFalse(int1 == int0);
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getQ1Value(int1, int1);
      assertEquals(13, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertFalse(integer0.equals((Object)int1));
      assertFalse(int1 == int0);
  }

  @Test
  public void test29()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getColumnCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      BoxAndWhiskerItem boxAndWhiskerItem1 = null;
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem1, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getQ1Value(int0, int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNull(number0);
  }

  @Test
  public void test30()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = SwingConstants.PREVIOUS;
      assertEquals(13, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getMedianValue((Comparable) int0, (Comparable) int0);
      assertEquals(13, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test31()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = SwingConstants.PREVIOUS;
      assertEquals(13, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = false;
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMedianValue((Comparable) boolean0, (Comparable) int0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNull(number0);
  }

  @Test
  public void test32()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      double double0 = (-0.8970482615792639);
      double[][] doubleArray0 = new double[3][3];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      assertEquals(3, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getCategoryCount());
      assertNotNull(defaultIntervalCategoryDataset0);
      
      List list0 = defaultIntervalCategoryDataset0.getRowKeys();
      assertEquals(3, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(3, list0.size());
      assertEquals(false, list0.isEmpty());
      assertNotNull(list0);
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(double0, double0, double0, double0, double0, double0, double0, double0, (List) list0);
      assertEquals(3, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(3, list0.size());
      assertEquals(false, list0.isEmpty());
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) double0, (Comparable) double0);
      assertEquals(3, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(3, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(3, list0.size());
      assertEquals(false, list0.isEmpty());
      
      int int0 = 0;
      Double double1 = (Double)defaultBoxAndWhiskerCategoryDataset0.getMedianValue(int0, int0);
      assertEquals((-0.8970482615792639), (double)double1, 0.01D);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertTrue(double1.equals((Object)double0));
  }

  @Test
  public void test33()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getColumnCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = true;
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getMeanValue((Comparable) boolean0, (Comparable) boolean0);
      assertEquals(0, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test34()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getColumnCount();
      assertEquals(0, int0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      boolean boolean0 = true;
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) boolean0, (Comparable) boolean0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMeanValue((Comparable) boolean0, (Comparable) int0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNull(number0);
  }

  @Test
  public void test35()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = Event.SCROLL_PAGE_UP;
      assertEquals(603, int0);
      
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getRowKeys();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertNotNull(list0);
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, list0.size());
      assertEquals(false, list0.isEmpty());
      
      int int1 = 0;
      assertFalse(int1 == int0);
      
      Integer integer0 = (Integer)defaultBoxAndWhiskerCategoryDataset0.getMeanValue(int1, int1);
      assertEquals(603, (int)integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertFalse(integer0.equals((Object)int1));
      assertFalse(int1 == int0);
  }

  @Test
  public void test36()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = Event.SCROLL_PAGE_UP;
      assertEquals(603, int0);
      
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getRowKeys();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertNotNull(list0);
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, list0.size());
      assertEquals(false, list0.isEmpty());
      
      int int1 = 93;
      assertFalse(int1 == int0);
      
      BoxAndWhiskerItem boxAndWhiskerItem1 = new BoxAndWhiskerItem((double) int0, (double) int0, (double) int0, (double) int0, (double) int1, (double) int0, (double) int1, (double) int1, (List) list0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, list0.size());
      assertEquals(false, list0.isEmpty());
      assertNotSame(boxAndWhiskerItem1, boxAndWhiskerItem0);
      assertNotNull(boxAndWhiskerItem1);
      assertFalse(int0 == int1);
      assertFalse(boxAndWhiskerItem1.equals((Object)boxAndWhiskerItem0));
      assertFalse(int1 == int0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem1, (Comparable) int1, (Comparable) int0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(2, list0.size());
      assertEquals(false, list0.isEmpty());
      assertNotSame(boxAndWhiskerItem1, boxAndWhiskerItem0);
      assertFalse(int0 == int1);
      assertFalse(boxAndWhiskerItem1.equals((Object)boxAndWhiskerItem0));
      assertFalse(int1 == int0);
  }

  @Test
  public void test37()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      double double0 = (-2436.532218553475);
      List<String> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(double0, double0, double0, double0, double0, double0, double0, double0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) double0, (Comparable) double0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      int int0 = SwingConstants.PREVIOUS;
      assertEquals(13, int0);
      
      List<Integer> list1 = null;
      BoxAndWhiskerItem boxAndWhiskerItem1 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list1);
      assertNotSame(boxAndWhiskerItem1, boxAndWhiskerItem0);
      assertNotNull(boxAndWhiskerItem1);
      assertFalse(boxAndWhiskerItem1.equals((Object)boxAndWhiskerItem0));
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem1, (Comparable) int0, (Comparable) int0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotSame(boxAndWhiskerItem1, boxAndWhiskerItem0);
      assertFalse(boxAndWhiskerItem1.equals((Object)boxAndWhiskerItem0));
  }

  @Test
  public void test38()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = AffineTransform.TYPE_TRANSLATION;
      assertEquals(1, int0);
      
      Number number0 = null;
      double[][] doubleArray0 = new double[9][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      assertEquals(9, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(5, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(5, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(9, defaultIntervalCategoryDataset0.getSeriesCount());
      assertNotNull(defaultIntervalCategoryDataset0);
      
      List list0 = defaultIntervalCategoryDataset0.getColumnKeys();
      assertEquals(9, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(5, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(5, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(9, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(5, list0.size());
      assertEquals(false, list0.isEmpty());
      assertNotNull(list0);
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, number0, (Number) int0, number0, (Number) int0, (Number) int0, number0, (List) list0);
      assertEquals(9, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(5, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(5, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(9, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(5, list0.size());
      assertEquals(false, list0.isEmpty());
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(9, defaultIntervalCategoryDataset0.getRowCount());
      assertEquals(5, defaultIntervalCategoryDataset0.getColumnCount());
      assertEquals(5, defaultIntervalCategoryDataset0.getCategoryCount());
      assertEquals(9, defaultIntervalCategoryDataset0.getSeriesCount());
      assertEquals(5, list0.size());
      assertEquals(false, list0.isEmpty());
  }

  @Test
  public void test39()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      Number number0 = null;
      int int0 = View.ExcellentBreakWeight;
      assertEquals(2000, int0);
      
      KeyedObjects2D keyedObjects2D0 = new KeyedObjects2D();
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertNotNull(keyedObjects2D0);
      
      List list0 = keyedObjects2D0.getColumnKeys();
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertNotNull(list0);
      
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, (Number) int0, (List) list0);
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(0, keyedObjects2D0.getRowCount());
      assertEquals(0, keyedObjects2D0.getColumnCount());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, list0.size());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test40()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = SwingConstants.PREVIOUS;
      assertEquals(13, int0);
      
      List<Integer> list0 = null;
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (Number) int0, (List) list0);
      assertNotNull(boxAndWhiskerItem0);
      
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) int0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      boolean boolean0 = false;
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) int0, (Comparable) boolean0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  //@Test
  public void test41()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      Quarter quarter0 = new Quarter();
      assertEquals(8057L, quarter0.getSerialIndex());
      assertEquals(1, quarter0.getQuarter());
      assertEquals(2014, quarter0.getYearValue());
      assertEquals(1396310399999L, quarter0.getLastMillisecond());
      assertEquals(1388534400000L, quarter0.getFirstMillisecond());
      assertNotNull(quarter0);
      
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getColumnIndex((Comparable) quarter0);
      assertEquals((-1), int0);
      assertEquals(8057L, quarter0.getSerialIndex());
      assertEquals(1, quarter0.getQuarter());
      assertEquals(2014, quarter0.getYearValue());
      assertEquals(1396310399999L, quarter0.getLastMillisecond());
      assertEquals(1388534400000L, quarter0.getFirstMillisecond());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      
      // Undeclared exception!
      try {
        Number number0 = defaultBoxAndWhiskerCategoryDataset0.getValue((Comparable) int0, (Comparable) int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Row key (-1) not recognised.
         //
      }
  }

  @Test
  public void test42()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset1 = (DefaultBoxAndWhiskerCategoryDataset)defaultBoxAndWhiskerCategoryDataset0.clone();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset1.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset1.getRowCount());
      assertNotSame(defaultBoxAndWhiskerCategoryDataset0, defaultBoxAndWhiskerCategoryDataset1);
      assertNotSame(defaultBoxAndWhiskerCategoryDataset1, defaultBoxAndWhiskerCategoryDataset0);
      assertNotNull(defaultBoxAndWhiskerCategoryDataset1);
      assertTrue(defaultBoxAndWhiskerCategoryDataset0.equals((Object)defaultBoxAndWhiskerCategoryDataset1));
      assertTrue(defaultBoxAndWhiskerCategoryDataset1.equals((Object)defaultBoxAndWhiskerCategoryDataset0));
  }

  @Test
  public void test43()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      boolean boolean0 = defaultBoxAndWhiskerCategoryDataset0.equals((Object) defaultBoxAndWhiskerCategoryDataset0);
      assertTrue(boolean0);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      
      double double0 = defaultBoxAndWhiskerCategoryDataset0.getRangeUpperBound(boolean0);
      assertEquals(Double.NaN, double0, 0.01D);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test
  public void test44()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = 0;
      // Undeclared exception!
      try {
        Number number0 = defaultBoxAndWhiskerCategoryDataset0.getValue(int0, int0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
      }
  }

  @Test
  public void test45()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getColumnKeys();
      assertEquals(0, list0.size());
      assertEquals(true, list0.isEmpty());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(list0);
  }

  @Test
  public void test46()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      boolean boolean0 = true;
      double double0 = defaultBoxAndWhiskerCategoryDataset0.getRangeLowerBound(boolean0);
      assertEquals(Double.NaN, double0, 0.01D);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test
  public void test47()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      boolean boolean0 = true;
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(boolean0);
      assertEquals(0.0, range0.getUpperBound(), 0.01D);
      assertEquals(0.0, range0.getLength(), 0.01D);
      assertEquals(0.0, range0.getLowerBound(), 0.01D);
      assertEquals(0.0, range0.getCentralValue(), 0.01D);
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertNotNull(range0);
  }

  @Test
  public void test48()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      int int0 = Event.SCROLL_PAGE_UP;
      assertEquals(603, int0);
      
      // Undeclared exception!
      try {
        Comparable comparable0 = defaultBoxAndWhiskerCategoryDataset0.getColumnKey(int0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 603, Size: 0
         //
      }
  }

  @Test
  public void test49()  throws Throwable  {
      int int0 = 12;
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
      assertEquals(0, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
      assertNotNull(defaultBoxAndWhiskerCategoryDataset0);
      
      // Undeclared exception!
      try {
        Comparable comparable0 = defaultBoxAndWhiskerCategoryDataset0.getRowKey(int0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 12, Size: 0
         //
      }
  }
}
