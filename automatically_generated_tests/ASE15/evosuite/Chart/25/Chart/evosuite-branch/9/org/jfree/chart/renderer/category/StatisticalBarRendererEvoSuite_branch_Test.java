/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 17:14:51 GMT 2014
 */

package org.jfree.chart.renderer.category;

import static org.junit.Assert.*;
import org.junit.Test;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.Stroke;
import java.awt.geom.Rectangle2D;
import java.util.Vector;
import javax.swing.JList;
import javax.swing.JTextPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
 import org.evosuite.runtime.testdata.EvoSuiteFile;

import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.junit.runner.RunWith;
import sun.swing.PrintColorUIResource;

 
public class StatisticalBarRendererEvoSuite_branch_Test   {

  @Test
  public void test0()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertNotNull(statisticalBarRenderer0);
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      
      Vector<Object> vector0 = new Vector<Object>();
      assertNotNull(vector0);
      assertEquals("[]", vector0.toString());
      assertEquals(10, vector0.capacity());
      assertEquals(0, vector0.size());
      assertEquals(true, vector0.isEmpty());
      
      JList<Object> jList0 = new JList<Object>(vector0);
      assertNotNull(jList0);
      assertEquals(true, jList0.isEnabled());
      assertEquals(false, jList0.isFocusTraversalPolicySet());
      assertEquals(true, jList0.isFontSet());
      assertEquals(true, jList0.getFocusTraversalKeysEnabled());
      assertEquals(false, jList0.isPreferredSizeSet());
      assertEquals(1, jList0.getComponentCount());
      assertEquals(true, jList0.isVisible());
      assertEquals(false, jList0.isCursorSet());
      assertEquals(false, jList0.isValid());
      assertEquals(true, jList0.isForegroundSet());
      assertEquals(false, jList0.isShowing());
      assertEquals(true, jList0.isBackgroundSet());
      assertEquals(false, jList0.isMaximumSizeSet());
      assertEquals(false, jList0.isFocusTraversalPolicyProvider());
      assertEquals(false, jList0.isFocusCycleRoot());
      assertEquals(false, jList0.isMinimumSizeSet());
      assertEquals(false, jList0.isLightweight());
      assertEquals(false, jList0.getIgnoreRepaint());
      assertEquals(false, jList0.isDisplayable());
      assertEquals(1, jList0.countComponents());
      assertEquals("[]", vector0.toString());
      assertEquals(10, vector0.capacity());
      assertEquals(0, vector0.size());
      assertEquals(true, vector0.isEmpty());
      
      PrintColorUIResource printColorUIResource0 = (PrintColorUIResource)jList0.getForeground();
      assertNotNull(printColorUIResource0);
      assertEquals(true, jList0.isEnabled());
      assertEquals(false, jList0.isFocusTraversalPolicySet());
      assertEquals(true, jList0.isFontSet());
      assertEquals(true, jList0.getFocusTraversalKeysEnabled());
      assertEquals(false, jList0.isPreferredSizeSet());
      assertEquals(1, jList0.getComponentCount());
      assertEquals(true, jList0.isVisible());
      assertEquals(false, jList0.isCursorSet());
      assertEquals(false, jList0.isValid());
      assertEquals(true, jList0.isForegroundSet());
      assertEquals(false, jList0.isShowing());
      assertEquals(true, jList0.isBackgroundSet());
      assertEquals(false, jList0.isMaximumSizeSet());
      assertEquals(false, jList0.isFocusTraversalPolicyProvider());
      assertEquals(false, jList0.isFocusCycleRoot());
      assertEquals(false, jList0.isMinimumSizeSet());
      assertEquals(false, jList0.isLightweight());
      assertEquals(false, jList0.getIgnoreRepaint());
      assertEquals(false, jList0.isDisplayable());
      assertEquals(1, jList0.countComponents());
      assertEquals(1, printColorUIResource0.getTransparency());
      assertEquals("sun.swing.PrintColorUIResource[r=51,g=51,b=51]", printColorUIResource0.toString());
      assertEquals(51, printColorUIResource0.getRed());
      assertEquals(51, printColorUIResource0.getBlue());
      assertEquals(51, printColorUIResource0.getGreen());
      assertEquals(255, printColorUIResource0.getAlpha());
      assertEquals(-13421773, printColorUIResource0.getRGB());
      assertEquals("[]", vector0.toString());
      assertEquals(10, vector0.capacity());
      assertEquals(0, vector0.size());
      assertEquals(true, vector0.isEmpty());
      
      statisticalBarRenderer0.setErrorIndicatorPaint((Paint) printColorUIResource0);
      assertEquals(true, jList0.isEnabled());
      assertEquals(false, jList0.isFocusTraversalPolicySet());
      assertEquals(true, jList0.isFontSet());
      assertEquals(true, jList0.getFocusTraversalKeysEnabled());
      assertEquals(false, jList0.isPreferredSizeSet());
      assertEquals(1, jList0.getComponentCount());
      assertEquals(true, jList0.isVisible());
      assertEquals(false, jList0.isCursorSet());
      assertEquals(false, jList0.isValid());
      assertEquals(true, jList0.isForegroundSet());
      assertEquals(false, jList0.isShowing());
      assertEquals(true, jList0.isBackgroundSet());
      assertEquals(false, jList0.isMaximumSizeSet());
      assertEquals(false, jList0.isFocusTraversalPolicyProvider());
      assertEquals(false, jList0.isFocusCycleRoot());
      assertEquals(false, jList0.isMinimumSizeSet());
      assertEquals(false, jList0.isLightweight());
      assertEquals(false, jList0.getIgnoreRepaint());
      assertEquals(false, jList0.isDisplayable());
      assertEquals(1, jList0.countComponents());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(1, printColorUIResource0.getTransparency());
      assertEquals("sun.swing.PrintColorUIResource[r=51,g=51,b=51]", printColorUIResource0.toString());
      assertEquals(51, printColorUIResource0.getRed());
      assertEquals(51, printColorUIResource0.getBlue());
      assertEquals(51, printColorUIResource0.getGreen());
      assertEquals(255, printColorUIResource0.getAlpha());
      assertEquals(-13421773, printColorUIResource0.getRGB());
      assertEquals("[]", vector0.toString());
      assertEquals(10, vector0.capacity());
      assertEquals(0, vector0.size());
      assertEquals(true, vector0.isEmpty());
      
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      assertNotSame(statisticalBarRenderer1, statisticalBarRenderer0);
      assertNotNull(statisticalBarRenderer1);
      assertEquals(0, statisticalBarRenderer1.getRowCount());
      assertEquals(false, statisticalBarRenderer1.isDrawBarOutline());
      assertEquals(true, statisticalBarRenderer1.getBaseCreateEntities());
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer1.getUpperClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getBaseItemLabelsVisible());
      assertEquals(1, statisticalBarRenderer1.getPassCount());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesShape());
      assertEquals(2.0, statisticalBarRenderer1.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer1.getMinimumBarLength(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer1.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisible());
      assertEquals(0.0, statisticalBarRenderer1.getLowerClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(1.0, statisticalBarRenderer1.getMaximumBarWidth(), 0.01D);
      assertEquals(0.2, statisticalBarRenderer1.getItemMargin(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getIncludeBaseInRange());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0, statisticalBarRenderer1.getColumnCount());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(statisticalBarRenderer1.equals((Object)statisticalBarRenderer0));
      
      boolean boolean0 = statisticalBarRenderer1.equals((Object) statisticalBarRenderer0);
      assertNotSame(statisticalBarRenderer0, statisticalBarRenderer1);
      assertNotSame(statisticalBarRenderer1, statisticalBarRenderer0);
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(0, statisticalBarRenderer1.getRowCount());
      assertEquals(false, statisticalBarRenderer1.isDrawBarOutline());
      assertEquals(true, statisticalBarRenderer1.getBaseCreateEntities());
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer1.getUpperClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getBaseItemLabelsVisible());
      assertEquals(1, statisticalBarRenderer1.getPassCount());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesShape());
      assertEquals(2.0, statisticalBarRenderer1.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer1.getMinimumBarLength(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer1.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisible());
      assertEquals(0.0, statisticalBarRenderer1.getLowerClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(1.0, statisticalBarRenderer1.getMaximumBarWidth(), 0.01D);
      assertEquals(0.2, statisticalBarRenderer1.getItemMargin(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getIncludeBaseInRange());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0, statisticalBarRenderer1.getColumnCount());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(statisticalBarRenderer0.equals((Object)statisticalBarRenderer1));
      assertFalse(statisticalBarRenderer1.equals((Object)statisticalBarRenderer0));
      assertFalse(boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertNotNull(statisticalBarRenderer0);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      
      boolean boolean0 = true;
      statisticalBarRenderer0.setBaseItemLabelsVisible(boolean0);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(true, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      assertNotSame(statisticalBarRenderer1, statisticalBarRenderer0);
      assertNotNull(statisticalBarRenderer1);
      assertEquals(0, statisticalBarRenderer1.getRowCount());
      assertEquals(0.0, statisticalBarRenderer1.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisible());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(1.0, statisticalBarRenderer1.getMaximumBarWidth(), 0.01D);
      assertEquals(2.0, statisticalBarRenderer1.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesShape());
      assertEquals(0, statisticalBarRenderer1.getColumnCount());
      assertEquals(1, statisticalBarRenderer1.getPassCount());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(0.0, statisticalBarRenderer1.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalBarRenderer1.getBaseItemLabelsVisible());
      assertEquals(0.0, statisticalBarRenderer1.getLowerClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(0.0, statisticalBarRenderer1.getBase(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.isDrawBarOutline());
      assertEquals(true, statisticalBarRenderer1.getIncludeBaseInRange());
      assertEquals(0.2, statisticalBarRenderer1.getItemMargin(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(true, statisticalBarRenderer1.getBaseCreateEntities());
      assertFalse(statisticalBarRenderer1.equals((Object)statisticalBarRenderer0));
      
      boolean boolean1 = statisticalBarRenderer1.equals((Object) statisticalBarRenderer0);
      assertNotSame(statisticalBarRenderer1, statisticalBarRenderer0);
      assertNotSame(statisticalBarRenderer0, statisticalBarRenderer1);
      assertEquals(0, statisticalBarRenderer1.getRowCount());
      assertEquals(0.0, statisticalBarRenderer1.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisible());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(1.0, statisticalBarRenderer1.getMaximumBarWidth(), 0.01D);
      assertEquals(2.0, statisticalBarRenderer1.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesShape());
      assertEquals(0, statisticalBarRenderer1.getColumnCount());
      assertEquals(1, statisticalBarRenderer1.getPassCount());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(0.0, statisticalBarRenderer1.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalBarRenderer1.getBaseItemLabelsVisible());
      assertEquals(0.0, statisticalBarRenderer1.getLowerClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(0.0, statisticalBarRenderer1.getBase(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.isDrawBarOutline());
      assertEquals(true, statisticalBarRenderer1.getIncludeBaseInRange());
      assertEquals(0.2, statisticalBarRenderer1.getItemMargin(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(true, statisticalBarRenderer1.getBaseCreateEntities());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(true, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertFalse(boolean1 == boolean0);
      assertFalse(statisticalBarRenderer1.equals((Object)statisticalBarRenderer0));
      assertFalse(statisticalBarRenderer0.equals((Object)statisticalBarRenderer1));
      assertFalse(boolean1);
  }

  @Test
  public void test2()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertNotNull(statisticalBarRenderer0);
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      assertNotSame(statisticalBarRenderer1, statisticalBarRenderer0);
      assertNotNull(statisticalBarRenderer1);
      assertEquals(true, statisticalBarRenderer1.getIncludeBaseInRange());
      assertEquals(true, statisticalBarRenderer1.getBaseCreateEntities());
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisible());
      assertEquals(0.0, statisticalBarRenderer1.getUpperClip(), 0.01D);
      assertEquals(1.0, statisticalBarRenderer1.getMaximumBarWidth(), 0.01D);
      assertEquals(0, statisticalBarRenderer1.getColumnCount());
      assertEquals(false, statisticalBarRenderer1.isDrawBarOutline());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(0.0, statisticalBarRenderer1.getLowerClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getBaseItemLabelsVisible());
      assertEquals(0.2, statisticalBarRenderer1.getItemMargin(), 0.01D);
      assertEquals(0, statisticalBarRenderer1.getRowCount());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(0.0, statisticalBarRenderer1.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisibleInLegend());
      assertEquals(0.0, statisticalBarRenderer1.getBase(), 0.01D);
      assertEquals(2.0, statisticalBarRenderer1.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesShape());
      assertEquals(1, statisticalBarRenderer1.getPassCount());
      assertTrue(statisticalBarRenderer1.equals((Object)statisticalBarRenderer0));
      
      boolean boolean0 = statisticalBarRenderer1.equals((Object) statisticalBarRenderer0);
      assertNotSame(statisticalBarRenderer1, statisticalBarRenderer0);
      assertNotSame(statisticalBarRenderer0, statisticalBarRenderer1);
      assertEquals(true, statisticalBarRenderer1.getIncludeBaseInRange());
      assertEquals(true, statisticalBarRenderer1.getBaseCreateEntities());
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisible());
      assertEquals(0.0, statisticalBarRenderer1.getUpperClip(), 0.01D);
      assertEquals(1.0, statisticalBarRenderer1.getMaximumBarWidth(), 0.01D);
      assertEquals(0, statisticalBarRenderer1.getColumnCount());
      assertEquals(false, statisticalBarRenderer1.isDrawBarOutline());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(0.0, statisticalBarRenderer1.getLowerClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer1.getBaseItemLabelsVisible());
      assertEquals(0.2, statisticalBarRenderer1.getItemMargin(), 0.01D);
      assertEquals(0, statisticalBarRenderer1.getRowCount());
      assertEquals(false, statisticalBarRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(0.0, statisticalBarRenderer1.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getBaseSeriesVisibleInLegend());
      assertEquals(0.0, statisticalBarRenderer1.getBase(), 0.01D);
      assertEquals(2.0, statisticalBarRenderer1.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer1.getAutoPopulateSeriesShape());
      assertEquals(1, statisticalBarRenderer1.getPassCount());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertTrue(statisticalBarRenderer1.equals((Object)statisticalBarRenderer0));
      assertTrue(statisticalBarRenderer0.equals((Object)statisticalBarRenderer1));
      assertTrue(boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertNotNull(statisticalBarRenderer0);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      
      BasicStroke basicStroke0 = (BasicStroke)AbstractRenderer.DEFAULT_STROKE;
      assertNotNull(basicStroke0);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      
      boolean boolean0 = statisticalBarRenderer0.equals((Object) basicStroke0);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertFalse(boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertNotNull(statisticalBarRenderer0);
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      
      Graphics2D graphics2D0 = null;
      JTextPane jTextPane0 = new JTextPane();
      assertNotNull(jTextPane0);
      assertEquals(false, jTextPane0.isPreferredSizeSet());
      assertEquals(false, jTextPane0.getIgnoreRepaint());
      assertEquals(true, jTextPane0.isForegroundSet());
      assertEquals(true, jTextPane0.isCursorSet());
      assertEquals(true, jTextPane0.isFocusCycleRoot());
      assertEquals(0, jTextPane0.getComponentCount());
      assertEquals(false, jTextPane0.isDisplayable());
      assertEquals(true, jTextPane0.isVisible());
      assertEquals(true, jTextPane0.getFocusTraversalKeysEnabled());
      assertEquals(true, jTextPane0.isBackgroundSet());
      assertEquals(true, jTextPane0.isEnabled());
      assertEquals(true, jTextPane0.isFocusTraversalPolicySet());
      assertEquals(0, jTextPane0.countComponents());
      assertEquals(false, jTextPane0.isMinimumSizeSet());
      assertEquals(true, jTextPane0.isFontSet());
      assertEquals(false, jTextPane0.isLightweight());
      assertEquals(false, jTextPane0.isShowing());
      assertEquals(false, jTextPane0.isFocusTraversalPolicyProvider());
      assertEquals(false, jTextPane0.isMaximumSizeSet());
      assertEquals(false, jTextPane0.isValid());
      
      Rectangle rectangle0 = jTextPane0.bounds();
      assertEquals(0, rectangle0.width);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.y);
      assertNotNull(rectangle0);
      assertEquals(0.0, rectangle0.getY(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01D);
      assertEquals(true, rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getCenterY(), 0.01D);
      assertEquals(0.0, rectangle0.getHeight(), 0.01D);
      assertEquals(0.0, rectangle0.getMinX(), 0.01D);
      assertEquals("java.awt.Rectangle[x=0,y=0,width=0,height=0]", rectangle0.toString());
      assertEquals(0.0, rectangle0.getWidth(), 0.01D);
      assertEquals(0.0, rectangle0.getMaxY(), 0.01D);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01D);
      assertEquals(0.0, rectangle0.getX(), 0.01D);
      assertEquals(0.0, rectangle0.getMinY(), 0.01D);
      assertEquals(false, jTextPane0.isPreferredSizeSet());
      assertEquals(false, jTextPane0.getIgnoreRepaint());
      assertEquals(true, jTextPane0.isForegroundSet());
      assertEquals(true, jTextPane0.isCursorSet());
      assertEquals(true, jTextPane0.isFocusCycleRoot());
      assertEquals(0, jTextPane0.getComponentCount());
      assertEquals(false, jTextPane0.isDisplayable());
      assertEquals(true, jTextPane0.isVisible());
      assertEquals(true, jTextPane0.getFocusTraversalKeysEnabled());
      assertEquals(true, jTextPane0.isBackgroundSet());
      assertEquals(true, jTextPane0.isEnabled());
      assertEquals(true, jTextPane0.isFocusTraversalPolicySet());
      assertEquals(0, jTextPane0.countComponents());
      assertEquals(false, jTextPane0.isMinimumSizeSet());
      assertEquals(true, jTextPane0.isFontSet());
      assertEquals(false, jTextPane0.isLightweight());
      assertEquals(false, jTextPane0.isShowing());
      assertEquals(false, jTextPane0.isFocusTraversalPolicyProvider());
      assertEquals(false, jTextPane0.isMaximumSizeSet());
      assertEquals(false, jTextPane0.isValid());
      
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      assertNotNull(combinedDomainXYPlot0);
      assertEquals(true, combinedDomainXYPlot0.isDomainZoomable());
      assertEquals(true, combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertEquals(false, combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01D);
      assertEquals(true, combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(false, combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(true, combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(true, combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01D);
      assertEquals(false, combinedDomainXYPlot0.isSubplot());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(false, combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertEquals(false, combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(true, combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(true, combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01D);
      
      NumberAxis numberAxis0 = (NumberAxis)combinedDomainXYPlot0.getDomainAxis(rectangle0.height);
      assertEquals(0, rectangle0.width);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.y);
      assertNotNull(numberAxis0);
      assertEquals(true, numberAxis0.getAutoRangeStickyZero());
      assertEquals(true, numberAxis0.isAxisLineVisible());
      assertEquals(false, numberAxis0.isInverted());
      assertEquals(false, numberAxis0.isPositiveArrowVisible());
      assertEquals(true, numberAxis0.getAutoRangeIncludesZero());
      assertEquals(true, numberAxis0.isTickMarksVisible());
      assertEquals(0.0F, numberAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(1.05, numberAxis0.getUpperBound(), 0.01D);
      assertEquals(0.0, numberAxis0.getLowerBound(), 0.01D);
      assertEquals(true, numberAxis0.isAutoRange());
      assertEquals(0.0, numberAxis0.getFixedDimension(), 0.01D);
      assertEquals(true, numberAxis0.isTickLabelsVisible());
      assertEquals(0.0, numberAxis0.getFixedAutoRange(), 0.01D);
      assertNull(numberAxis0.getLabel());
      assertEquals(true, numberAxis0.isAutoTickUnitSelection());
      assertEquals(0.0, numberAxis0.getLabelAngle(), 0.01D);
      assertEquals(1.0E-8, numberAxis0.getAutoRangeMinimumSize(), 0.01D);
      assertNull(numberAxis0.getLabelToolTip());
      assertEquals(false, numberAxis0.isNegativeArrowVisible());
      assertEquals(0.05, numberAxis0.getLowerMargin(), 0.01D);
      assertEquals(0.05, numberAxis0.getUpperMargin(), 0.01D);
      assertNull(numberAxis0.getLabelURL());
      assertEquals(false, numberAxis0.isVerticalTickLabels());
      assertEquals(true, numberAxis0.isVisible());
      assertEquals(2.0F, numberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(true, combinedDomainXYPlot0.isDomainZoomable());
      assertEquals(true, combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertEquals(false, combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01D);
      assertEquals(true, combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(false, combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(true, combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(true, combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01D);
      assertEquals(false, combinedDomainXYPlot0.isSubplot());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(false, combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertEquals(false, combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(true, combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(true, combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01D);
      assertEquals(0.0, rectangle0.getY(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01D);
      assertEquals(true, rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getCenterY(), 0.01D);
      assertEquals(0.0, rectangle0.getHeight(), 0.01D);
      assertEquals(0.0, rectangle0.getMinX(), 0.01D);
      assertEquals("java.awt.Rectangle[x=0,y=0,width=0,height=0]", rectangle0.toString());
      assertEquals(0.0, rectangle0.getWidth(), 0.01D);
      assertEquals(0.0, rectangle0.getMaxY(), 0.01D);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01D);
      assertEquals(0.0, rectangle0.getX(), 0.01D);
      assertEquals(0.0, rectangle0.getMinY(), 0.01D);
      assertEquals(false, jTextPane0.isPreferredSizeSet());
      assertEquals(false, jTextPane0.getIgnoreRepaint());
      assertEquals(true, jTextPane0.isForegroundSet());
      assertEquals(true, jTextPane0.isCursorSet());
      assertEquals(true, jTextPane0.isFocusCycleRoot());
      assertEquals(0, jTextPane0.getComponentCount());
      assertEquals(false, jTextPane0.isDisplayable());
      assertEquals(true, jTextPane0.isVisible());
      assertEquals(true, jTextPane0.getFocusTraversalKeysEnabled());
      assertEquals(true, jTextPane0.isBackgroundSet());
      assertEquals(true, jTextPane0.isEnabled());
      assertEquals(true, jTextPane0.isFocusTraversalPolicySet());
      assertEquals(0, jTextPane0.countComponents());
      assertEquals(false, jTextPane0.isMinimumSizeSet());
      assertEquals(true, jTextPane0.isFontSet());
      assertEquals(false, jTextPane0.isLightweight());
      assertEquals(false, jTextPane0.isShowing());
      assertEquals(false, jTextPane0.isFocusTraversalPolicyProvider());
      assertEquals(false, jTextPane0.isMaximumSizeSet());
      assertEquals(false, jTextPane0.isValid());
      
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis0);
      assertEquals(0, rectangle0.width);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.y);
      assertNotNull(combinedRangeCategoryPlot0);
      assertEquals(true, numberAxis0.getAutoRangeStickyZero());
      assertEquals(true, numberAxis0.isAxisLineVisible());
      assertEquals(false, numberAxis0.isInverted());
      assertEquals(false, numberAxis0.isPositiveArrowVisible());
      assertEquals(true, numberAxis0.getAutoRangeIncludesZero());
      assertEquals(true, numberAxis0.isTickMarksVisible());
      assertEquals(0.0F, numberAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(1.05, numberAxis0.getUpperBound(), 0.01D);
      assertEquals(0.0, numberAxis0.getLowerBound(), 0.01D);
      assertEquals(true, numberAxis0.isAutoRange());
      assertEquals(0.0, numberAxis0.getFixedDimension(), 0.01D);
      assertEquals(true, numberAxis0.isTickLabelsVisible());
      assertEquals(0.0, numberAxis0.getFixedAutoRange(), 0.01D);
      assertNull(numberAxis0.getLabel());
      assertEquals(true, numberAxis0.isAutoTickUnitSelection());
      assertEquals(0.0, numberAxis0.getLabelAngle(), 0.01D);
      assertEquals(1.0E-8, numberAxis0.getAutoRangeMinimumSize(), 0.01D);
      assertNull(numberAxis0.getLabelToolTip());
      assertEquals(false, numberAxis0.isNegativeArrowVisible());
      assertEquals(0.05, numberAxis0.getLowerMargin(), 0.01D);
      assertEquals(0.05, numberAxis0.getUpperMargin(), 0.01D);
      assertNull(numberAxis0.getLabelURL());
      assertEquals(false, numberAxis0.isVerticalTickLabels());
      assertEquals(true, numberAxis0.isVisible());
      assertEquals(2.0F, numberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(true, combinedDomainXYPlot0.isDomainZoomable());
      assertEquals(true, combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertEquals(false, combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01D);
      assertEquals(true, combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(false, combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(true, combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(true, combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01D);
      assertEquals(false, combinedDomainXYPlot0.isSubplot());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(false, combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertEquals(false, combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(true, combinedDomainXYPlot0.isRangeZoomable());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(true, combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01D);
      assertEquals(0.0, rectangle0.getY(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01D);
      assertEquals(true, rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getCenterY(), 0.01D);
      assertEquals(0.0, rectangle0.getHeight(), 0.01D);
      assertEquals(0.0, rectangle0.getMinX(), 0.01D);
      assertEquals("java.awt.Rectangle[x=0,y=0,width=0,height=0]", rectangle0.toString());
      assertEquals(0.0, rectangle0.getWidth(), 0.01D);
      assertEquals(0.0, rectangle0.getMaxY(), 0.01D);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01D);
      assertEquals(0.0, rectangle0.getX(), 0.01D);
      assertEquals(0.0, rectangle0.getMinY(), 0.01D);
      assertEquals(false, combinedRangeCategoryPlot0.isSubplot());
      assertEquals(true, combinedRangeCategoryPlot0.isOutlineVisible());
      assertEquals(15, combinedRangeCategoryPlot0.getBackgroundImageAlignment());
      assertEquals(false, combinedRangeCategoryPlot0.isRangeCrosshairVisible());
      assertEquals(1.0F, combinedRangeCategoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.5F, combinedRangeCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(5.0, combinedRangeCategoryPlot0.getGap(), 0.01D);
      assertEquals(0.0, combinedRangeCategoryPlot0.getRangeCrosshairValue(), 0.01D);
      assertEquals(0, combinedRangeCategoryPlot0.getWeight());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeGridlinesVisible());
      assertEquals(0.0, combinedRangeCategoryPlot0.getAnchorValue(), 0.01D);
      assertEquals(true, combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(false, combinedRangeCategoryPlot0.isDomainGridlinesVisible());
      assertEquals(1.0F, combinedRangeCategoryPlot0.getForegroundAlpha(), 0.01F);
      assertNull(combinedRangeCategoryPlot0.getNoDataMessage());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeZoomable());
      assertEquals(false, combinedRangeCategoryPlot0.isDomainZoomable());
      assertEquals(false, combinedRangeCategoryPlot0.getDrawSharedDomainAxis());
      assertEquals(false, jTextPane0.isPreferredSizeSet());
      assertEquals(false, jTextPane0.getIgnoreRepaint());
      assertEquals(true, jTextPane0.isForegroundSet());
      assertEquals(true, jTextPane0.isCursorSet());
      assertEquals(true, jTextPane0.isFocusCycleRoot());
      assertEquals(0, jTextPane0.getComponentCount());
      assertEquals(false, jTextPane0.isDisplayable());
      assertEquals(true, jTextPane0.isVisible());
      assertEquals(true, jTextPane0.getFocusTraversalKeysEnabled());
      assertEquals(true, jTextPane0.isBackgroundSet());
      assertEquals(true, jTextPane0.isEnabled());
      assertEquals(true, jTextPane0.isFocusTraversalPolicySet());
      assertEquals(0, jTextPane0.countComponents());
      assertEquals(false, jTextPane0.isMinimumSizeSet());
      assertEquals(true, jTextPane0.isFontSet());
      assertEquals(false, jTextPane0.isLightweight());
      assertEquals(false, jTextPane0.isShowing());
      assertEquals(false, jTextPane0.isFocusTraversalPolicyProvider());
      assertEquals(false, jTextPane0.isMaximumSizeSet());
      assertEquals(false, jTextPane0.isValid());
      
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertNotNull(plotRenderingInfo0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      assertNotNull(categoryStepRenderer_State0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryStepRenderer_State0.getSeriesRunningTotal(), 0.01D);
      assertEquals(0.0, categoryStepRenderer_State0.getBarWidth(), 0.01D);
      
      String string0 = "76d\"";
      CategoryAxis categoryAxis0 = new CategoryAxis(string0);
      assertNotNull(categoryAxis0);
      assertEquals(true, categoryAxis0.isAxisLineVisible());
      assertNull(categoryAxis0.getLabelURL());
      assertEquals(0.05, categoryAxis0.getLowerMargin(), 0.01D);
      assertEquals(false, categoryAxis0.isTickMarksVisible());
      assertEquals("76d\"", categoryAxis0.getLabel());
      assertEquals(true, categoryAxis0.isTickLabelsVisible());
      assertEquals(0.0F, categoryAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(0.0, categoryAxis0.getFixedDimension(), 0.01D);
      assertEquals(2.0F, categoryAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(0.2, categoryAxis0.getCategoryMargin(), 0.01D);
      assertNull(categoryAxis0.getLabelToolTip());
      assertEquals(true, categoryAxis0.isVisible());
      assertEquals(4, categoryAxis0.getCategoryLabelPositionOffset());
      assertEquals(0.05, categoryAxis0.getUpperMargin(), 0.01D);
      assertEquals(0.0F, categoryAxis0.getMaximumCategoryLabelWidthRatio(), 0.01F);
      assertEquals(1, categoryAxis0.getMaximumCategoryLabelLines());
      assertEquals(0.0, categoryAxis0.getLabelAngle(), 0.01D);
      
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      assertNotNull(defaultStatisticalCategoryDataset0);
      assertEquals(0, defaultStatisticalCategoryDataset0.getRowCount());
      assertEquals(0, defaultStatisticalCategoryDataset0.getColumnCount());
      
      // Undeclared exception!
      try {
        statisticalBarRenderer0.drawHorizontalItem(graphics2D0, categoryStepRenderer_State0, rectangle0, combinedRangeCategoryPlot0, categoryAxis0, numberAxis0, defaultStatisticalCategoryDataset0, rectangle0.y, rectangle0.x);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
      }
  }

  @Test
  public void test5()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertNotNull(statisticalBarRenderer0);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      
      Graphics2D graphics2D0 = null;
      JTextPane jTextPane0 = new JTextPane();
      assertNotNull(jTextPane0);
      assertEquals(false, jTextPane0.isDisplayable());
      assertEquals(true, jTextPane0.isForegroundSet());
      assertEquals(true, jTextPane0.isEnabled());
      assertEquals(true, jTextPane0.isVisible());
      assertEquals(false, jTextPane0.isFocusTraversalPolicyProvider());
      assertEquals(true, jTextPane0.isBackgroundSet());
      assertEquals(false, jTextPane0.isPreferredSizeSet());
      assertEquals(false, jTextPane0.isMaximumSizeSet());
      assertEquals(true, jTextPane0.isCursorSet());
      assertEquals(false, jTextPane0.isValid());
      assertEquals(false, jTextPane0.getIgnoreRepaint());
      assertEquals(false, jTextPane0.isMinimumSizeSet());
      assertEquals(true, jTextPane0.isFontSet());
      assertEquals(true, jTextPane0.isFocusCycleRoot());
      assertEquals(0, jTextPane0.countComponents());
      assertEquals(true, jTextPane0.getFocusTraversalKeysEnabled());
      assertEquals(true, jTextPane0.isFocusTraversalPolicySet());
      assertEquals(false, jTextPane0.isLightweight());
      assertEquals(0, jTextPane0.getComponentCount());
      assertEquals(false, jTextPane0.isShowing());
      
      Rectangle rectangle0 = jTextPane0.bounds();
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.width);
      assertNotNull(rectangle0);
      assertEquals(0.0, rectangle0.getX(), 0.01D);
      assertEquals(0.0, rectangle0.getY(), 0.01D);
      assertEquals(0.0, rectangle0.getMinX(), 0.01D);
      assertEquals(0.0, rectangle0.getMinY(), 0.01D);
      assertEquals(0.0, rectangle0.getHeight(), 0.01D);
      assertEquals(true, rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getWidth(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterY(), 0.01D);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01D);
      assertEquals("java.awt.Rectangle[x=0,y=0,width=0,height=0]", rectangle0.toString());
      assertEquals(0.0, rectangle0.getMaxY(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01D);
      assertEquals(false, jTextPane0.isDisplayable());
      assertEquals(true, jTextPane0.isForegroundSet());
      assertEquals(true, jTextPane0.isEnabled());
      assertEquals(true, jTextPane0.isVisible());
      assertEquals(false, jTextPane0.isFocusTraversalPolicyProvider());
      assertEquals(true, jTextPane0.isBackgroundSet());
      assertEquals(false, jTextPane0.isPreferredSizeSet());
      assertEquals(false, jTextPane0.isMaximumSizeSet());
      assertEquals(true, jTextPane0.isCursorSet());
      assertEquals(false, jTextPane0.isValid());
      assertEquals(false, jTextPane0.getIgnoreRepaint());
      assertEquals(false, jTextPane0.isMinimumSizeSet());
      assertEquals(true, jTextPane0.isFontSet());
      assertEquals(true, jTextPane0.isFocusCycleRoot());
      assertEquals(0, jTextPane0.countComponents());
      assertEquals(true, jTextPane0.getFocusTraversalKeysEnabled());
      assertEquals(true, jTextPane0.isFocusTraversalPolicySet());
      assertEquals(false, jTextPane0.isLightweight());
      assertEquals(0, jTextPane0.getComponentCount());
      assertEquals(false, jTextPane0.isShowing());
      
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      assertNotNull(combinedDomainXYPlot0);
      assertEquals(true, combinedDomainXYPlot0.isDomainZoomable());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(true, combinedDomainXYPlot0.isRangeZoomable());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertEquals(true, combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(true, combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertEquals(false, combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(false, combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(false, combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertEquals(true, combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(false, combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01D);
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01D);
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01D);
      assertEquals(true, combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertEquals(false, combinedDomainXYPlot0.isSubplot());
      assertEquals(true, combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      
      NumberAxis numberAxis0 = (NumberAxis)combinedDomainXYPlot0.getDomainAxis(rectangle0.height);
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.width);
      assertNotNull(numberAxis0);
      assertEquals(true, combinedDomainXYPlot0.isDomainZoomable());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(true, combinedDomainXYPlot0.isRangeZoomable());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertEquals(true, combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(true, combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertEquals(false, combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(false, combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(false, combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertEquals(true, combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(false, combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01D);
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01D);
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01D);
      assertEquals(true, combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertEquals(false, combinedDomainXYPlot0.isSubplot());
      assertEquals(true, combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertEquals(0.0, rectangle0.getX(), 0.01D);
      assertEquals(0.0, rectangle0.getY(), 0.01D);
      assertEquals(0.0, rectangle0.getMinX(), 0.01D);
      assertEquals(0.0, rectangle0.getMinY(), 0.01D);
      assertEquals(0.0, rectangle0.getHeight(), 0.01D);
      assertEquals(true, rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getWidth(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterY(), 0.01D);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01D);
      assertEquals("java.awt.Rectangle[x=0,y=0,width=0,height=0]", rectangle0.toString());
      assertEquals(0.0, rectangle0.getMaxY(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01D);
      assertEquals(0.05, numberAxis0.getLowerMargin(), 0.01D);
      assertEquals(true, numberAxis0.isVisible());
      assertEquals(2.0F, numberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(true, numberAxis0.isTickMarksVisible());
      assertEquals(false, numberAxis0.isInverted());
      assertEquals(0.0, numberAxis0.getFixedDimension(), 0.01D);
      assertEquals(false, numberAxis0.isPositiveArrowVisible());
      assertEquals(true, numberAxis0.getAutoRangeStickyZero());
      assertEquals(0.0F, numberAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(0.0, numberAxis0.getLabelAngle(), 0.01D);
      assertEquals(0.05, numberAxis0.getUpperMargin(), 0.01D);
      assertEquals(1.0E-8, numberAxis0.getAutoRangeMinimumSize(), 0.01D);
      assertNull(numberAxis0.getLabel());
      assertEquals(true, numberAxis0.isAutoTickUnitSelection());
      assertNull(numberAxis0.getLabelURL());
      assertEquals(0.0, numberAxis0.getLowerBound(), 0.01D);
      assertEquals(true, numberAxis0.isTickLabelsVisible());
      assertEquals(false, numberAxis0.isVerticalTickLabels());
      assertEquals(true, numberAxis0.isAutoRange());
      assertEquals(0.0, numberAxis0.getFixedAutoRange(), 0.01D);
      assertEquals(1.05, numberAxis0.getUpperBound(), 0.01D);
      assertEquals(true, numberAxis0.isAxisLineVisible());
      assertEquals(true, numberAxis0.getAutoRangeIncludesZero());
      assertEquals(false, numberAxis0.isNegativeArrowVisible());
      assertNull(numberAxis0.getLabelToolTip());
      assertEquals(false, jTextPane0.isDisplayable());
      assertEquals(true, jTextPane0.isForegroundSet());
      assertEquals(true, jTextPane0.isEnabled());
      assertEquals(true, jTextPane0.isVisible());
      assertEquals(false, jTextPane0.isFocusTraversalPolicyProvider());
      assertEquals(true, jTextPane0.isBackgroundSet());
      assertEquals(false, jTextPane0.isPreferredSizeSet());
      assertEquals(false, jTextPane0.isMaximumSizeSet());
      assertEquals(true, jTextPane0.isCursorSet());
      assertEquals(false, jTextPane0.isValid());
      assertEquals(false, jTextPane0.getIgnoreRepaint());
      assertEquals(false, jTextPane0.isMinimumSizeSet());
      assertEquals(true, jTextPane0.isFontSet());
      assertEquals(true, jTextPane0.isFocusCycleRoot());
      assertEquals(0, jTextPane0.countComponents());
      assertEquals(true, jTextPane0.getFocusTraversalKeysEnabled());
      assertEquals(true, jTextPane0.isFocusTraversalPolicySet());
      assertEquals(false, jTextPane0.isLightweight());
      assertEquals(0, jTextPane0.getComponentCount());
      assertEquals(false, jTextPane0.isShowing());
      
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) numberAxis0);
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.width);
      assertNotNull(combinedRangeCategoryPlot0);
      assertEquals(true, combinedDomainXYPlot0.isDomainZoomable());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(true, combinedDomainXYPlot0.isRangeZoomable());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertEquals(true, combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(true, combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertEquals(false, combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(false, combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(false, combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertEquals(true, combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(false, combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01D);
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01D);
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01D);
      assertEquals(true, combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertEquals(false, combinedDomainXYPlot0.isSubplot());
      assertEquals(true, combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertEquals(0.0, rectangle0.getX(), 0.01D);
      assertEquals(0.0, rectangle0.getY(), 0.01D);
      assertEquals(0.0, rectangle0.getMinX(), 0.01D);
      assertEquals(0.0, rectangle0.getMinY(), 0.01D);
      assertEquals(0.0, rectangle0.getHeight(), 0.01D);
      assertEquals(true, rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getWidth(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterY(), 0.01D);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01D);
      assertEquals("java.awt.Rectangle[x=0,y=0,width=0,height=0]", rectangle0.toString());
      assertEquals(0.0, rectangle0.getMaxY(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01D);
      assertEquals(0.05, numberAxis0.getLowerMargin(), 0.01D);
      assertEquals(true, numberAxis0.isVisible());
      assertEquals(2.0F, numberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(true, numberAxis0.isTickMarksVisible());
      assertEquals(false, numberAxis0.isInverted());
      assertEquals(0.0, numberAxis0.getFixedDimension(), 0.01D);
      assertEquals(false, numberAxis0.isPositiveArrowVisible());
      assertEquals(true, numberAxis0.getAutoRangeStickyZero());
      assertEquals(0.0F, numberAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(0.0, numberAxis0.getLabelAngle(), 0.01D);
      assertEquals(0.05, numberAxis0.getUpperMargin(), 0.01D);
      assertEquals(1.0E-8, numberAxis0.getAutoRangeMinimumSize(), 0.01D);
      assertNull(numberAxis0.getLabel());
      assertEquals(true, numberAxis0.isAutoTickUnitSelection());
      assertNull(numberAxis0.getLabelURL());
      assertEquals(0.0, numberAxis0.getLowerBound(), 0.01D);
      assertEquals(true, numberAxis0.isTickLabelsVisible());
      assertEquals(false, numberAxis0.isVerticalTickLabels());
      assertEquals(true, numberAxis0.isAutoRange());
      assertEquals(0.0, numberAxis0.getFixedAutoRange(), 0.01D);
      assertEquals(1.05, numberAxis0.getUpperBound(), 0.01D);
      assertEquals(true, numberAxis0.isAxisLineVisible());
      assertEquals(true, numberAxis0.getAutoRangeIncludesZero());
      assertEquals(false, numberAxis0.isNegativeArrowVisible());
      assertNull(numberAxis0.getLabelToolTip());
      assertEquals(1.0F, combinedRangeCategoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(5.0, combinedRangeCategoryPlot0.getGap(), 0.01D);
      assertEquals(false, combinedRangeCategoryPlot0.isDomainZoomable());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeGridlinesVisible());
      assertEquals(1.0F, combinedRangeCategoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(false, combinedRangeCategoryPlot0.isDomainGridlinesVisible());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeZoomable());
      assertEquals(0, combinedRangeCategoryPlot0.getWeight());
      assertEquals(0.0, combinedRangeCategoryPlot0.getRangeCrosshairValue(), 0.01D);
      assertEquals(false, combinedRangeCategoryPlot0.isSubplot());
      assertEquals(0.5F, combinedRangeCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(true, combinedRangeCategoryPlot0.isOutlineVisible());
      assertEquals(15, combinedRangeCategoryPlot0.getBackgroundImageAlignment());
      assertEquals(false, combinedRangeCategoryPlot0.getDrawSharedDomainAxis());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.0, combinedRangeCategoryPlot0.getAnchorValue(), 0.01D);
      assertNull(combinedRangeCategoryPlot0.getNoDataMessage());
      assertEquals(false, combinedRangeCategoryPlot0.isRangeCrosshairVisible());
      assertEquals(false, jTextPane0.isDisplayable());
      assertEquals(true, jTextPane0.isForegroundSet());
      assertEquals(true, jTextPane0.isEnabled());
      assertEquals(true, jTextPane0.isVisible());
      assertEquals(false, jTextPane0.isFocusTraversalPolicyProvider());
      assertEquals(true, jTextPane0.isBackgroundSet());
      assertEquals(false, jTextPane0.isPreferredSizeSet());
      assertEquals(false, jTextPane0.isMaximumSizeSet());
      assertEquals(true, jTextPane0.isCursorSet());
      assertEquals(false, jTextPane0.isValid());
      assertEquals(false, jTextPane0.getIgnoreRepaint());
      assertEquals(false, jTextPane0.isMinimumSizeSet());
      assertEquals(true, jTextPane0.isFontSet());
      assertEquals(true, jTextPane0.isFocusCycleRoot());
      assertEquals(0, jTextPane0.countComponents());
      assertEquals(true, jTextPane0.getFocusTraversalKeysEnabled());
      assertEquals(true, jTextPane0.isFocusTraversalPolicySet());
      assertEquals(false, jTextPane0.isLightweight());
      assertEquals(0, jTextPane0.getComponentCount());
      assertEquals(false, jTextPane0.isShowing());
      
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertNotNull(plotRenderingInfo0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      assertNotNull(stackedAreaRenderer0);
      assertEquals(false, stackedAreaRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(true, stackedAreaRenderer0.getBaseCreateEntities());
      assertEquals(2, stackedAreaRenderer0.getPassCount());
      assertEquals(false, stackedAreaRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(true, stackedAreaRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, stackedAreaRenderer0.getRowCount());
      assertEquals(false, stackedAreaRenderer0.getRenderAsPercentages());
      assertEquals(0, stackedAreaRenderer0.getColumnCount());
      assertEquals(2.0, stackedAreaRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, stackedAreaRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(true, stackedAreaRenderer0.getAutoPopulateSeriesShape());
      assertEquals(true, stackedAreaRenderer0.getBaseSeriesVisible());
      assertEquals(false, stackedAreaRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, stackedAreaRenderer0.getBaseItemLabelsVisible());
      assertEquals(false, stackedAreaRenderer0.getAutoPopulateSeriesStroke());
      
      CategoryItemRendererState categoryItemRendererState0 = stackedAreaRenderer0.initialise(graphics2D0, (Rectangle2D) rectangle0, (CategoryPlot) combinedRangeCategoryPlot0, rectangle0.height, plotRenderingInfo0);
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.width);
      assertNotNull(categoryItemRendererState0);
      assertEquals(true, combinedDomainXYPlot0.isDomainZoomable());
      assertNull(combinedDomainXYPlot0.getNoDataMessage());
      assertEquals(1.0F, combinedDomainXYPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(true, combinedDomainXYPlot0.isRangeZoomable());
      assertEquals("Combined_Domain_XYPlot", combinedDomainXYPlot0.getPlotType());
      assertEquals(true, combinedDomainXYPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainXYPlot0.getWeight());
      assertEquals(true, combinedDomainXYPlot0.isDomainGridlinesVisible());
      assertEquals(false, combinedDomainXYPlot0.isDomainZeroBaselineVisible());
      assertEquals(false, combinedDomainXYPlot0.isDomainCrosshairVisible());
      assertEquals(1.0F, combinedDomainXYPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(false, combinedDomainXYPlot0.isRangeCrosshairVisible());
      assertEquals(true, combinedDomainXYPlot0.isOutlineVisible());
      assertEquals(false, combinedDomainXYPlot0.isRangeZeroBaselineVisible());
      assertEquals(0.5F, combinedDomainXYPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(5.0, combinedDomainXYPlot0.getGap(), 0.01D);
      assertEquals(0.0, combinedDomainXYPlot0.getDomainCrosshairValue(), 0.01D);
      assertEquals(0.0, combinedDomainXYPlot0.getRangeCrosshairValue(), 0.01D);
      assertEquals(true, combinedDomainXYPlot0.isRangeGridlinesVisible());
      assertEquals(false, combinedDomainXYPlot0.isSubplot());
      assertEquals(true, combinedDomainXYPlot0.isDomainCrosshairLockedOnData());
      assertEquals(15, combinedDomainXYPlot0.getBackgroundImageAlignment());
      assertEquals(0.0, rectangle0.getX(), 0.01D);
      assertEquals(0.0, rectangle0.getY(), 0.01D);
      assertEquals(0.0, rectangle0.getMinX(), 0.01D);
      assertEquals(0.0, rectangle0.getMinY(), 0.01D);
      assertEquals(0.0, rectangle0.getHeight(), 0.01D);
      assertEquals(true, rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getWidth(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterY(), 0.01D);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01D);
      assertEquals("java.awt.Rectangle[x=0,y=0,width=0,height=0]", rectangle0.toString());
      assertEquals(0.0, rectangle0.getMaxY(), 0.01D);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01D);
      assertEquals(0.05, numberAxis0.getLowerMargin(), 0.01D);
      assertEquals(true, numberAxis0.isVisible());
      assertEquals(2.0F, numberAxis0.getTickMarkOutsideLength(), 0.01F);
      assertEquals(true, numberAxis0.isTickMarksVisible());
      assertEquals(false, numberAxis0.isInverted());
      assertEquals(0.0, numberAxis0.getFixedDimension(), 0.01D);
      assertEquals(false, numberAxis0.isPositiveArrowVisible());
      assertEquals(true, numberAxis0.getAutoRangeStickyZero());
      assertEquals(0.0F, numberAxis0.getTickMarkInsideLength(), 0.01F);
      assertEquals(0.0, numberAxis0.getLabelAngle(), 0.01D);
      assertEquals(0.05, numberAxis0.getUpperMargin(), 0.01D);
      assertEquals(1.0E-8, numberAxis0.getAutoRangeMinimumSize(), 0.01D);
      assertNull(numberAxis0.getLabel());
      assertEquals(true, numberAxis0.isAutoTickUnitSelection());
      assertNull(numberAxis0.getLabelURL());
      assertEquals(0.0, numberAxis0.getLowerBound(), 0.01D);
      assertEquals(true, numberAxis0.isTickLabelsVisible());
      assertEquals(false, numberAxis0.isVerticalTickLabels());
      assertEquals(true, numberAxis0.isAutoRange());
      assertEquals(0.0, numberAxis0.getFixedAutoRange(), 0.01D);
      assertEquals(1.05, numberAxis0.getUpperBound(), 0.01D);
      assertEquals(true, numberAxis0.isAxisLineVisible());
      assertEquals(true, numberAxis0.getAutoRangeIncludesZero());
      assertEquals(false, numberAxis0.isNegativeArrowVisible());
      assertNull(numberAxis0.getLabelToolTip());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01D);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01D);
      assertEquals(1.0F, combinedRangeCategoryPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(5.0, combinedRangeCategoryPlot0.getGap(), 0.01D);
      assertEquals(false, combinedRangeCategoryPlot0.isDomainZoomable());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeGridlinesVisible());
      assertEquals(1.0F, combinedRangeCategoryPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(false, combinedRangeCategoryPlot0.isDomainGridlinesVisible());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeZoomable());
      assertEquals(0, combinedRangeCategoryPlot0.getWeight());
      assertEquals(0.0, combinedRangeCategoryPlot0.getRangeCrosshairValue(), 0.01D);
      assertEquals(false, combinedRangeCategoryPlot0.isSubplot());
      assertEquals(0.5F, combinedRangeCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(true, combinedRangeCategoryPlot0.isOutlineVisible());
      assertEquals(15, combinedRangeCategoryPlot0.getBackgroundImageAlignment());
      assertEquals(false, combinedRangeCategoryPlot0.getDrawSharedDomainAxis());
      assertEquals(true, combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.0, combinedRangeCategoryPlot0.getAnchorValue(), 0.01D);
      assertNull(combinedRangeCategoryPlot0.getNoDataMessage());
      assertEquals(false, combinedRangeCategoryPlot0.isRangeCrosshairVisible());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(false, stackedAreaRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(true, stackedAreaRenderer0.getBaseCreateEntities());
      assertEquals(2, stackedAreaRenderer0.getPassCount());
      assertEquals(false, stackedAreaRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(true, stackedAreaRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, stackedAreaRenderer0.getRowCount());
      assertEquals(false, stackedAreaRenderer0.getRenderAsPercentages());
      assertEquals(0, stackedAreaRenderer0.getColumnCount());
      assertEquals(2.0, stackedAreaRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, stackedAreaRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(true, stackedAreaRenderer0.getAutoPopulateSeriesShape());
      assertEquals(true, stackedAreaRenderer0.getBaseSeriesVisible());
      assertEquals(false, stackedAreaRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, stackedAreaRenderer0.getBaseItemLabelsVisible());
      assertEquals(false, stackedAreaRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(false, jTextPane0.isDisplayable());
      assertEquals(true, jTextPane0.isForegroundSet());
      assertEquals(true, jTextPane0.isEnabled());
      assertEquals(true, jTextPane0.isVisible());
      assertEquals(false, jTextPane0.isFocusTraversalPolicyProvider());
      assertEquals(true, jTextPane0.isBackgroundSet());
      assertEquals(false, jTextPane0.isPreferredSizeSet());
      assertEquals(false, jTextPane0.isMaximumSizeSet());
      assertEquals(true, jTextPane0.isCursorSet());
      assertEquals(false, jTextPane0.isValid());
      assertEquals(false, jTextPane0.getIgnoreRepaint());
      assertEquals(false, jTextPane0.isMinimumSizeSet());
      assertEquals(true, jTextPane0.isFontSet());
      assertEquals(true, jTextPane0.isFocusCycleRoot());
      assertEquals(0, jTextPane0.countComponents());
      assertEquals(true, jTextPane0.getFocusTraversalKeysEnabled());
      assertEquals(true, jTextPane0.isFocusTraversalPolicySet());
      assertEquals(false, jTextPane0.isLightweight());
      assertEquals(0, jTextPane0.getComponentCount());
      assertEquals(false, jTextPane0.isShowing());
      
      CategoryAxis categoryAxis0 = null;
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      assertNotNull(multiplePiePlot0);
      assertEquals(1.0F, multiplePiePlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, multiplePiePlot0.getLimit(), 0.01D);
      assertEquals(true, multiplePiePlot0.isOutlineVisible());
      assertEquals(0.5F, multiplePiePlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("Multiple Pie Plot", multiplePiePlot0.getPlotType());
      assertEquals(15, multiplePiePlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, multiplePiePlot0.getForegroundAlpha(), 0.01F);
      assertNull(multiplePiePlot0.getNoDataMessage());
      assertEquals(false, multiplePiePlot0.isSubplot());
      
      CategoryDataset categoryDataset0 = multiplePiePlot0.getDataset();
      assertNull(categoryDataset0);
      assertEquals(1.0F, multiplePiePlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.0, multiplePiePlot0.getLimit(), 0.01D);
      assertEquals(true, multiplePiePlot0.isOutlineVisible());
      assertEquals(0.5F, multiplePiePlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals("Multiple Pie Plot", multiplePiePlot0.getPlotType());
      assertEquals(15, multiplePiePlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, multiplePiePlot0.getForegroundAlpha(), 0.01F);
      assertNull(multiplePiePlot0.getNoDataMessage());
      assertEquals(false, multiplePiePlot0.isSubplot());
      
      // Undeclared exception!
      try {
        statisticalBarRenderer0.drawItem(graphics2D0, categoryItemRendererState0, (Rectangle2D) rectangle0, (CategoryPlot) combinedRangeCategoryPlot0, categoryAxis0, (ValueAxis) numberAxis0, categoryDataset0, rectangle0.x, rectangle0.width, rectangle0.y);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires StatisticalCategoryDataset.
         //
      }
  }

  @Test
  public void test6()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertNotNull(statisticalBarRenderer0);
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      
      BasicStroke basicStroke0 = (BasicStroke)statisticalBarRenderer0.getErrorIndicatorStroke();
      assertNotNull(basicStroke0);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
  }

  @Test
  public void test7()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertNotNull(statisticalBarRenderer0);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      
      Color color0 = (Color)statisticalBarRenderer0.getErrorIndicatorPaint();
      assertNotNull(color0);
      assertEquals(1, color0.getTransparency());
      assertEquals("java.awt.Color[r=128,g=128,b=128]", color0.toString());
      assertEquals(128, color0.getBlue());
      assertEquals(128, color0.getGreen());
      assertEquals(-8355712, color0.getRGB());
      assertEquals(128, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
  }

  @Test
  public void test8()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      assertNotNull(statisticalBarRenderer0);
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
      
      BasicStroke basicStroke0 = (BasicStroke)AbstractRenderer.DEFAULT_STROKE;
      assertNotNull(basicStroke0);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      
      statisticalBarRenderer0.setErrorIndicatorStroke((Stroke) basicStroke0);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0.0, statisticalBarRenderer0.getUpperClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.isDrawBarOutline());
      assertEquals(0.2, statisticalBarRenderer0.getItemMargin(), 0.01D);
      assertEquals(1, statisticalBarRenderer0.getPassCount());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisible());
      assertEquals(0, statisticalBarRenderer0.getRowCount());
      assertEquals(2.0, statisticalBarRenderer0.getItemLabelAnchorOffset(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0.0, statisticalBarRenderer0.getLowerClip(), 0.01D);
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01D);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(true, statisticalBarRenderer0.getIncludeBaseInRange());
      assertEquals(0.0, statisticalBarRenderer0.getBase(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getBaseCreateEntities());
      assertEquals(false, statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(true, statisticalBarRenderer0.getBaseSeriesVisibleInLegend());
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01D);
      assertEquals(true, statisticalBarRenderer0.getAutoPopulateSeriesShape());
      assertEquals(false, statisticalBarRenderer0.getBaseItemLabelsVisible());
  }
}
