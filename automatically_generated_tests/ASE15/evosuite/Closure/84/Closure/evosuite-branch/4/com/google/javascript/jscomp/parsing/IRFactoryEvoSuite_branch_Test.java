/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 22:58:15 GMT 2014
 */

package com.google.javascript.jscomp.parsing;

import static org.junit.Assert.*;
import org.junit.Test;
import com.google.javascript.jscomp.mozilla.rhino.Context;
import com.google.javascript.jscomp.mozilla.rhino.ErrorReporter;
import com.google.javascript.jscomp.mozilla.rhino.Token;
import com.google.javascript.jscomp.mozilla.rhino.ast.AstNode;
import com.google.javascript.jscomp.mozilla.rhino.ast.AstRoot;
import com.google.javascript.jscomp.mozilla.rhino.ast.Comment;
import com.google.javascript.jscomp.mozilla.rhino.ast.ExpressionStatement;
import com.google.javascript.jscomp.mozilla.rhino.ast.NumberLiteral;
import com.google.javascript.jscomp.mozilla.rhino.ast.ObjectLiteral;
import com.google.javascript.jscomp.mozilla.rhino.tools.ToolErrorReporter;
import com.google.javascript.jscomp.parsing.Config;
import com.google.javascript.jscomp.parsing.IRFactory;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
 import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.FileSystemHandling;
import org.junit.runner.RunWith;

 
public class IRFactoryEvoSuite_branch_Test   {

  @Test
  public void test0() {}
//   @Test
//   public void test0()  throws Throwable  {
//       String string0 = "f";
//       AstRoot astRoot0 = new AstRoot();
//       assertEquals(-1, astRoot0.getBaseLineno());
//       assertEquals(-1, astRoot0.getAbsolutePosition());
//       assertNull(astRoot0.getEncodedSource());
//       assertEquals("136", astRoot0.toString());
//       assertEquals(false, astRoot0.hasChildren());
//       assertEquals(false, astRoot0.isInStrictMode());
//       assertNull(astRoot0.getJsDoc());
//       assertEquals(1, astRoot0.getLength());
//       assertEquals(136, astRoot0.getType());
//       assertEquals(0, astRoot0.depth());
//       assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       assertEquals(0, astRoot0.getRegexpCount());
//       assertEquals(-1, astRoot0.getLineno());
//       assertNull(astRoot0.getSourceName());
//       assertEquals(-1, astRoot0.getEncodedSourceStart());
//       assertEquals(-1, astRoot0.getEndLineno());
//       assertEquals(0, astRoot0.getFunctionCount());
//       assertEquals(0, astRoot0.getParamCount());
//       assertEquals(-1, astRoot0.getPosition());
//       assertNotNull(astRoot0);
//       
//       int int0 = 706;
//       ObjectLiteral objectLiteral0 = new ObjectLiteral(int0, int0);
//       assertEquals("66", objectLiteral0.toString());
//       assertEquals(66, objectLiteral0.getType());
//       assertEquals(706, objectLiteral0.getAbsolutePosition());
//       assertEquals(false, objectLiteral0.isDestructuring());
//       assertNull(objectLiteral0.getJsDoc());
//       assertEquals(0, objectLiteral0.depth());
//       assertEquals(706, objectLiteral0.getLength());
//       assertEquals(-1, objectLiteral0.getLineno());
//       assertEquals(false, objectLiteral0.hasChildren());
//       assertEquals(706, objectLiteral0.getPosition());
//       assertNotNull(objectLiteral0);
//       
//       astRoot0.addChild((AstNode) objectLiteral0);
//       assertEquals("66", objectLiteral0.toString());
//       assertEquals(66, objectLiteral0.getType());
//       assertEquals(706, objectLiteral0.getAbsolutePosition());
//       assertEquals(false, objectLiteral0.isDestructuring());
//       assertNull(objectLiteral0.getJsDoc());
//       assertEquals(706, objectLiteral0.getLength());
//       assertEquals(-1, objectLiteral0.getLineno());
//       assertEquals(false, objectLiteral0.hasChildren());
//       assertEquals(1, objectLiteral0.depth());
//       assertEquals(707, objectLiteral0.getPosition());
//       assertEquals(-1, astRoot0.getBaseLineno());
//       assertEquals(-1, astRoot0.getAbsolutePosition());
//       assertNull(astRoot0.getEncodedSource());
//       assertEquals("136", astRoot0.toString());
//       assertEquals(false, astRoot0.isInStrictMode());
//       assertNull(astRoot0.getJsDoc());
//       assertEquals(136, astRoot0.getType());
//       assertEquals(0, astRoot0.depth());
//       assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       assertEquals(1413, astRoot0.getLength());
//       assertEquals(0, astRoot0.getRegexpCount());
//       assertEquals(true, astRoot0.hasChildren());
//       assertEquals(-1, astRoot0.getLineno());
//       assertNull(astRoot0.getSourceName());
//       assertEquals(-1, astRoot0.getEncodedSourceStart());
//       assertEquals(-1, astRoot0.getEndLineno());
//       assertEquals(0, astRoot0.getFunctionCount());
//       assertEquals(0, astRoot0.getParamCount());
//       assertEquals(-1, astRoot0.getPosition());
//       
//       Config config0 = null;
//       Context context0 = Context.getCurrentContext();
//       assertTrue(context0.generateObserverCount);
//       assertEquals(true, context0.isSealed());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(false, context0.hasCompileFunctionsWithDynamicScope());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(false, context0.isGeneratingDebugChanged());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertNotNull(context0);
//       
//       ToolErrorReporter toolErrorReporter0 = (ToolErrorReporter)context0.getErrorReporter();
//       assertTrue(context0.generateObserverCount);
//       assertEquals(true, context0.isSealed());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(false, context0.hasCompileFunctionsWithDynamicScope());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(false, context0.isGeneratingDebugChanged());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       assertEquals(true, toolErrorReporter0.hasReportedError());
//       assertNotNull(toolErrorReporter0);
//       
//       Node node0 = IRFactory.transformTree(astRoot0, string0, config0, (ErrorReporter) toolErrorReporter0);
//       assertTrue(context0.generateObserverCount);
//       assertEquals(-1, node0.getCharno());
//       assertEquals(true, node0.hasOneChild());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(132, node0.getType());
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(false, node0.isQualifiedName());
//       assertEquals(true, node0.hasChildren());
//       assertEquals(-1, node0.getLineno());
//       assertEquals(1, node0.getChildCount());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(false, node0.isSyntheticBlock());
//       assertEquals(false, node0.isUnscopedQualifiedName());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(false, node0.hasMoreThanOneChild());
//       assertEquals(true, context0.isSealed());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(false, context0.hasCompileFunctionsWithDynamicScope());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(false, context0.isGeneratingDebugChanged());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       assertEquals(true, toolErrorReporter0.hasReportedError());
//       assertEquals(-1, astRoot0.getBaseLineno());
//       assertEquals(-1, astRoot0.getAbsolutePosition());
//       assertNull(astRoot0.getEncodedSource());
//       assertEquals("136", astRoot0.toString());
//       assertEquals(false, astRoot0.isInStrictMode());
//       assertNull(astRoot0.getJsDoc());
//       assertEquals(136, astRoot0.getType());
//       assertEquals(0, astRoot0.depth());
//       assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       assertEquals(1413, astRoot0.getLength());
//       assertEquals(0, astRoot0.getRegexpCount());
//       assertEquals(true, astRoot0.hasChildren());
//       assertEquals(-1, astRoot0.getLineno());
//       assertNull(astRoot0.getSourceName());
//       assertEquals(-1, astRoot0.getEncodedSourceStart());
//       assertEquals(-1, astRoot0.getEndLineno());
//       assertEquals(0, astRoot0.getFunctionCount());
//       assertEquals(0, astRoot0.getParamCount());
//       assertEquals(-1, astRoot0.getPosition());
//       assertNotNull(node0);
//   }

  @Test
  public void test1() {}
//   @Test
//   public void test1()  throws Throwable  {
//       String string0 = "";
//       AstRoot astRoot0 = new AstRoot();
//       assertEquals(0, astRoot0.getFunctionCount());
//       assertEquals(false, astRoot0.hasChildren());
//       assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       assertEquals(1, astRoot0.getLength());
//       assertEquals(0, astRoot0.depth());
//       assertEquals(0, astRoot0.getParamCount());
//       assertNull(astRoot0.getSourceName());
//       assertEquals(-1, astRoot0.getBaseLineno());
//       assertEquals(false, astRoot0.isInStrictMode());
//       assertEquals(-1, astRoot0.getAbsolutePosition());
//       assertEquals("136", astRoot0.toString());
//       assertEquals(-1, astRoot0.getEndLineno());
//       assertNull(astRoot0.getJsDoc());
//       assertEquals(-1, astRoot0.getEncodedSourceStart());
//       assertEquals(-1, astRoot0.getPosition());
//       assertEquals(-1, astRoot0.getLineno());
//       assertEquals(136, astRoot0.getType());
//       assertEquals(0, astRoot0.getRegexpCount());
//       assertNull(astRoot0.getEncodedSource());
//       assertNotNull(astRoot0);
//       
//       int int0 = 703;
//       Config config0 = null;
//       Token.CommentType token_CommentType0 = Token.CommentType.BLOCK;
//       Comment comment0 = new Comment(int0, int0, token_CommentType0, string0);
//       assertEquals(703, comment0.getAbsolutePosition());
//       assertEquals(false, comment0.isParsed());
//       assertEquals(161, comment0.getType());
//       assertEquals(703, comment0.getPosition());
//       assertEquals("", comment0.getValue());
//       assertEquals(703, comment0.getLength());
//       assertEquals("161", comment0.toString());
//       assertEquals(Token.CommentType.BLOCK, comment0.getCommentType());
//       assertEquals(0, comment0.depth());
//       assertNull(comment0.getJsDoc());
//       assertEquals(false, comment0.hasChildren());
//       assertEquals(-1, comment0.getLineno());
//       assertNotNull(comment0);
//       
//       astRoot0.addComment(comment0);
//       assertEquals(703, comment0.getAbsolutePosition());
//       assertEquals(false, comment0.isParsed());
//       assertEquals(161, comment0.getType());
//       assertEquals("", comment0.getValue());
//       assertEquals(704, comment0.getPosition());
//       assertEquals(703, comment0.getLength());
//       assertEquals("161", comment0.toString());
//       assertEquals(Token.CommentType.BLOCK, comment0.getCommentType());
//       assertNull(comment0.getJsDoc());
//       assertEquals(1, comment0.depth());
//       assertEquals(false, comment0.hasChildren());
//       assertEquals(-1, comment0.getLineno());
//       assertEquals(0, astRoot0.getFunctionCount());
//       assertEquals(false, astRoot0.hasChildren());
//       assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       assertEquals(1, astRoot0.getLength());
//       assertEquals(0, astRoot0.depth());
//       assertEquals(0, astRoot0.getParamCount());
//       assertNull(astRoot0.getSourceName());
//       assertEquals(-1, astRoot0.getBaseLineno());
//       assertEquals(false, astRoot0.isInStrictMode());
//       assertEquals(-1, astRoot0.getAbsolutePosition());
//       assertEquals("136", astRoot0.toString());
//       assertEquals(-1, astRoot0.getEndLineno());
//       assertNull(astRoot0.getJsDoc());
//       assertEquals(-1, astRoot0.getEncodedSourceStart());
//       assertEquals(-1, astRoot0.getPosition());
//       assertEquals(-1, astRoot0.getLineno());
//       assertEquals(136, astRoot0.getType());
//       assertEquals(0, astRoot0.getRegexpCount());
//       assertNull(astRoot0.getEncodedSource());
//       
//       Context context0 = Context.getCurrentContext();
//       assertTrue(context0.generateObserverCount);
//       assertEquals(false, context0.hasCompileFunctionsWithDynamicScope());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(true, context0.isSealed());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(false, context0.isGeneratingDebugChanged());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertNotNull(context0);
//       
//       ToolErrorReporter toolErrorReporter0 = (ToolErrorReporter)context0.getErrorReporter();
//       assertTrue(context0.generateObserverCount);
//       assertEquals(true, toolErrorReporter0.hasReportedError());
//       assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       assertEquals(false, context0.hasCompileFunctionsWithDynamicScope());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(true, context0.isSealed());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(false, context0.isGeneratingDebugChanged());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertNotNull(toolErrorReporter0);
//       
//       Node node0 = IRFactory.transformTree(astRoot0, string0, config0, (ErrorReporter) toolErrorReporter0);
//       assertTrue(context0.generateObserverCount);
//       assertEquals(true, toolErrorReporter0.hasReportedError());
//       assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       assertEquals(false, node0.isUnscopedQualifiedName());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(132, node0.getType());
//       assertEquals(-1, node0.getCharno());
//       assertEquals(false, node0.hasChildren());
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(false, node0.hasOneChild());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(false, node0.hasMoreThanOneChild());
//       assertEquals(false, node0.isSyntheticBlock());
//       assertEquals(0, node0.getChildCount());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(false, node0.isQualifiedName());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(-1, node0.getLineno());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(false, context0.hasCompileFunctionsWithDynamicScope());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(true, context0.isSealed());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(false, context0.isGeneratingDebugChanged());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(0, astRoot0.getFunctionCount());
//       assertEquals(false, astRoot0.hasChildren());
//       assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       assertEquals(1, astRoot0.getLength());
//       assertEquals(0, astRoot0.depth());
//       assertEquals(0, astRoot0.getParamCount());
//       assertNull(astRoot0.getSourceName());
//       assertEquals(-1, astRoot0.getBaseLineno());
//       assertEquals(false, astRoot0.isInStrictMode());
//       assertEquals(-1, astRoot0.getAbsolutePosition());
//       assertEquals("136", astRoot0.toString());
//       assertEquals(-1, astRoot0.getEndLineno());
//       assertNull(astRoot0.getJsDoc());
//       assertEquals(-1, astRoot0.getEncodedSourceStart());
//       assertEquals(-1, astRoot0.getPosition());
//       assertEquals(-1, astRoot0.getLineno());
//       assertEquals(136, astRoot0.getType());
//       assertEquals(0, astRoot0.getRegexpCount());
//       assertNull(astRoot0.getEncodedSource());
//       assertNotNull(node0);
//   }

  @Test
  public void test2() {}
//   @Test
//   public void test2()  throws Throwable  {
//       String string0 = "";
//       AstRoot astRoot0 = new AstRoot();
//       assertNull(astRoot0.getEncodedSource());
//       assertEquals(false, astRoot0.isInStrictMode());
//       assertEquals(-1, astRoot0.getLineno());
//       assertEquals(-1, astRoot0.getEndLineno());
//       assertEquals(false, astRoot0.hasChildren());
//       assertNull(astRoot0.getJsDoc());
//       assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       assertEquals(0, astRoot0.depth());
//       assertEquals(1, astRoot0.getLength());
//       assertEquals(-1, astRoot0.getEncodedSourceStart());
//       assertEquals(-1, astRoot0.getBaseLineno());
//       assertNull(astRoot0.getSourceName());
//       assertEquals(0, astRoot0.getFunctionCount());
//       assertEquals(0, astRoot0.getParamCount());
//       assertEquals(-1, astRoot0.getPosition());
//       assertEquals(-1, astRoot0.getAbsolutePosition());
//       assertEquals(136, astRoot0.getType());
//       assertEquals(0, astRoot0.getRegexpCount());
//       assertEquals("136", astRoot0.toString());
//       assertNotNull(astRoot0);
//       
//       Config config0 = null;
//       boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
//       assertTrue(boolean0);
//       
//       ExpressionStatement expressionStatement0 = new ExpressionStatement((AstNode) astRoot0, boolean0);
//       assertEquals(134, expressionStatement0.getType());
//       assertEquals(-1, expressionStatement0.getLineno());
//       assertEquals(-1, expressionStatement0.getPosition());
//       assertEquals(1, expressionStatement0.getLength());
//       assertEquals(false, expressionStatement0.hasChildren());
//       assertNull(expressionStatement0.getJsDoc());
//       assertEquals(-1, expressionStatement0.getAbsolutePosition());
//       assertEquals("134", expressionStatement0.toString());
//       assertEquals(0, expressionStatement0.depth());
//       assertNull(astRoot0.getEncodedSource());
//       assertEquals(false, astRoot0.isInStrictMode());
//       assertEquals(-1, astRoot0.getLineno());
//       assertEquals(-1, astRoot0.getEndLineno());
//       assertEquals(false, astRoot0.hasChildren());
//       assertNull(astRoot0.getJsDoc());
//       assertEquals(1, astRoot0.depth());
//       assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       assertEquals(1, astRoot0.getLength());
//       assertEquals(-1, astRoot0.getEncodedSourceStart());
//       assertEquals(-1, astRoot0.getBaseLineno());
//       assertNull(astRoot0.getSourceName());
//       assertEquals(0, astRoot0.getFunctionCount());
//       assertEquals(0, astRoot0.getParamCount());
//       assertEquals(0, astRoot0.getPosition());
//       assertEquals(-1, astRoot0.getAbsolutePosition());
//       assertEquals(136, astRoot0.getType());
//       assertEquals(0, astRoot0.getRegexpCount());
//       assertEquals("136", astRoot0.toString());
//       assertNotNull(expressionStatement0);
//       
//       astRoot0.addChildToBack((com.google.javascript.jscomp.mozilla.rhino.Node) expressionStatement0);
//       assertEquals(134, expressionStatement0.getType());
//       assertEquals(-1, expressionStatement0.getLineno());
//       assertEquals(-1, expressionStatement0.getPosition());
//       assertEquals(1, expressionStatement0.getLength());
//       assertEquals(false, expressionStatement0.hasChildren());
//       assertNull(expressionStatement0.getJsDoc());
//       assertEquals(-1, expressionStatement0.getAbsolutePosition());
//       assertEquals("134", expressionStatement0.toString());
//       assertEquals(0, expressionStatement0.depth());
//       assertNull(astRoot0.getEncodedSource());
//       assertEquals(false, astRoot0.isInStrictMode());
//       assertEquals(-1, astRoot0.getLineno());
//       assertEquals(-1, astRoot0.getEndLineno());
//       assertNull(astRoot0.getJsDoc());
//       assertEquals(1, astRoot0.depth());
//       assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       assertEquals(1, astRoot0.getLength());
//       assertEquals(-1, astRoot0.getEncodedSourceStart());
//       assertEquals(-1, astRoot0.getBaseLineno());
//       assertNull(astRoot0.getSourceName());
//       assertEquals(0, astRoot0.getFunctionCount());
//       assertEquals(0, astRoot0.getParamCount());
//       assertEquals(0, astRoot0.getPosition());
//       assertEquals(true, astRoot0.hasChildren());
//       assertEquals(-1, astRoot0.getAbsolutePosition());
//       assertEquals(136, astRoot0.getType());
//       assertEquals(0, astRoot0.getRegexpCount());
//       assertEquals("136", astRoot0.toString());
//       
//       Context context0 = Context.getCurrentContext();
//       assertTrue(context0.generateObserverCount);
//       assertEquals(false, context0.isGeneratingDebugChanged());
//       assertEquals(false, context0.hasCompileFunctionsWithDynamicScope());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(true, context0.isSealed());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertNotNull(context0);
//       
//       ToolErrorReporter toolErrorReporter0 = (ToolErrorReporter)context0.getErrorReporter();
//       assertTrue(context0.generateObserverCount);
//       assertEquals(false, context0.isGeneratingDebugChanged());
//       assertEquals(false, context0.hasCompileFunctionsWithDynamicScope());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(true, context0.isSealed());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(true, toolErrorReporter0.hasReportedError());
//       assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       assertNotNull(toolErrorReporter0);
//       
//       // Undeclared exception!
//       try {
//         Node node0 = IRFactory.transformTree(astRoot0, string0, config0, (ErrorReporter) toolErrorReporter0);
//         fail("Expecting exception: StackOverflowError");
//       
//       } catch(StackOverflowError e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//       }
//   }

  @Test
  public void test3() {}
//   @Test
//   public void test3()  throws Throwable  {
//       String string0 = "\n";
//       AstRoot astRoot0 = new AstRoot();
//       assertEquals(0, astRoot0.getRegexpCount());
//       assertNull(astRoot0.getEncodedSource());
//       assertEquals(false, astRoot0.hasChildren());
//       assertEquals(0, astRoot0.getFunctionCount());
//       assertEquals(1, astRoot0.getLength());
//       assertEquals(0, astRoot0.depth());
//       assertEquals(0, astRoot0.getParamCount());
//       assertNull(astRoot0.getJsDoc());
//       assertEquals(false, astRoot0.isInStrictMode());
//       assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       assertEquals(-1, astRoot0.getEncodedSourceStart());
//       assertEquals(-1, astRoot0.getPosition());
//       assertEquals(-1, astRoot0.getBaseLineno());
//       assertEquals("136", astRoot0.toString());
//       assertNull(astRoot0.getSourceName());
//       assertEquals(-1, astRoot0.getAbsolutePosition());
//       assertEquals(-1, astRoot0.getEndLineno());
//       assertEquals(136, astRoot0.getType());
//       assertEquals(-1, astRoot0.getLineno());
//       assertNotNull(astRoot0);
//       
//       int int0 = 8198;
//       NumberLiteral numberLiteral0 = new NumberLiteral(int0, string0);
//       assertEquals(0, numberLiteral0.depth());
//       assertEquals(8198, numberLiteral0.getPosition());
//       assertEquals(-1, numberLiteral0.getLineno());
//       assertEquals(0.0, numberLiteral0.getNumber(), 0.01D);
//       assertEquals("40", numberLiteral0.toString());
//       assertEquals(1, numberLiteral0.getLength());
//       assertEquals(40, numberLiteral0.getType());
//       assertEquals(false, numberLiteral0.hasChildren());
//       assertEquals(8198, numberLiteral0.getAbsolutePosition());
//       assertEquals(0.0, numberLiteral0.getDouble(), 0.01D);
//       assertEquals("\n", numberLiteral0.getValue());
//       assertNull(numberLiteral0.getJsDoc());
//       assertNotNull(numberLiteral0);
//       
//       astRoot0.addChildrenToFront((com.google.javascript.jscomp.mozilla.rhino.Node) numberLiteral0);
//       assertEquals(0, astRoot0.getRegexpCount());
//       assertNull(astRoot0.getEncodedSource());
//       assertEquals(0, astRoot0.getFunctionCount());
//       assertEquals(1, astRoot0.getLength());
//       assertEquals(0, astRoot0.depth());
//       assertEquals(0, astRoot0.getParamCount());
//       assertNull(astRoot0.getJsDoc());
//       assertEquals(false, astRoot0.isInStrictMode());
//       assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       assertEquals(true, astRoot0.hasChildren());
//       assertEquals(-1, astRoot0.getEncodedSourceStart());
//       assertEquals(-1, astRoot0.getPosition());
//       assertEquals(-1, astRoot0.getBaseLineno());
//       assertEquals("136", astRoot0.toString());
//       assertNull(astRoot0.getSourceName());
//       assertEquals(-1, astRoot0.getAbsolutePosition());
//       assertEquals(-1, astRoot0.getEndLineno());
//       assertEquals(136, astRoot0.getType());
//       assertEquals(-1, astRoot0.getLineno());
//       assertEquals(0, numberLiteral0.depth());
//       assertEquals(8198, numberLiteral0.getPosition());
//       assertEquals(-1, numberLiteral0.getLineno());
//       assertEquals(0.0, numberLiteral0.getNumber(), 0.01D);
//       assertEquals("40", numberLiteral0.toString());
//       assertEquals(1, numberLiteral0.getLength());
//       assertEquals(40, numberLiteral0.getType());
//       assertEquals(false, numberLiteral0.hasChildren());
//       assertEquals(8198, numberLiteral0.getAbsolutePosition());
//       assertEquals(0.0, numberLiteral0.getDouble(), 0.01D);
//       assertEquals("\n", numberLiteral0.getValue());
//       assertNull(numberLiteral0.getJsDoc());
//       
//       Config config0 = null;
//       Context context0 = Context.getCurrentContext();
//       assertTrue(context0.generateObserverCount);
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(false, context0.isGeneratingDebugChanged());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(false, context0.hasCompileFunctionsWithDynamicScope());
//       assertEquals(true, context0.isSealed());
//       assertNotNull(context0);
//       
//       ToolErrorReporter toolErrorReporter0 = (ToolErrorReporter)context0.getErrorReporter();
//       assertTrue(context0.generateObserverCount);
//       assertEquals(true, toolErrorReporter0.hasReportedError());
//       assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(false, context0.isGeneratingDebugChanged());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(false, context0.hasCompileFunctionsWithDynamicScope());
//       assertEquals(true, context0.isSealed());
//       assertNotNull(toolErrorReporter0);
//       
//       Node node0 = IRFactory.transformTree(astRoot0, string0, config0, (ErrorReporter) toolErrorReporter0);
//       assertTrue(context0.generateObserverCount);
//       assertEquals(true, toolErrorReporter0.hasReportedError());
//       assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       assertEquals(0, astRoot0.getRegexpCount());
//       assertNull(astRoot0.getEncodedSource());
//       assertEquals(0, astRoot0.getFunctionCount());
//       assertEquals(1, astRoot0.getLength());
//       assertEquals(0, astRoot0.depth());
//       assertEquals(0, astRoot0.getParamCount());
//       assertNull(astRoot0.getJsDoc());
//       assertEquals(false, astRoot0.isInStrictMode());
//       assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       assertEquals(true, astRoot0.hasChildren());
//       assertEquals(-1, astRoot0.getEncodedSourceStart());
//       assertEquals(-1, astRoot0.getPosition());
//       assertEquals(-1, astRoot0.getBaseLineno());
//       assertEquals("136", astRoot0.toString());
//       assertNull(astRoot0.getSourceName());
//       assertEquals(-1, astRoot0.getAbsolutePosition());
//       assertEquals(-1, astRoot0.getEndLineno());
//       assertEquals(136, astRoot0.getType());
//       assertEquals(-1, astRoot0.getLineno());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(false, context0.isGeneratingDebugChanged());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(false, context0.hasCompileFunctionsWithDynamicScope());
//       assertEquals(true, context0.isSealed());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(false, node0.isQualifiedName());
//       assertEquals(1, node0.getChildCount());
//       assertEquals(false, node0.isSyntheticBlock());
//       assertEquals(false, node0.hasMoreThanOneChild());
//       assertEquals(true, node0.hasOneChild());
//       assertEquals(-1, node0.getLineno());
//       assertEquals(-1, node0.getCharno());
//       assertEquals(132, node0.getType());
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(false, node0.isUnscopedQualifiedName());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(true, node0.hasChildren());
//       assertNotNull(node0);
//   }

  @Test
  public void test4() {}
//   @Test
//   public void test4()  throws Throwable  {
//       String string0 = "destruturing aignment fobide";
//       AstRoot astRoot0 = new AstRoot();
//       assertEquals(-1, astRoot0.getEncodedSourceStart());
//       assertEquals(136, astRoot0.getType());
//       assertEquals(1, astRoot0.getLength());
//       assertEquals(0, astRoot0.getRegexpCount());
//       assertEquals(-1, astRoot0.getAbsolutePosition());
//       assertEquals(-1, astRoot0.getLineno());
//       assertNull(astRoot0.getEncodedSource());
//       assertEquals(0, astRoot0.getParamCount());
//       assertEquals(false, astRoot0.isInStrictMode());
//       assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       assertEquals(0, astRoot0.getFunctionCount());
//       assertEquals("136", astRoot0.toString());
//       assertEquals(false, astRoot0.hasChildren());
//       assertEquals(-1, astRoot0.getBaseLineno());
//       assertEquals(-1, astRoot0.getEndLineno());
//       assertEquals(-1, astRoot0.getPosition());
//       assertNull(astRoot0.getSourceName());
//       assertEquals(0, astRoot0.depth());
//       assertNull(astRoot0.getJsDoc());
//       assertNotNull(astRoot0);
//       
//       int int0 = 0;
//       Config config0 = null;
//       Context context0 = Context.getCurrentContext();
//       assertTrue(context0.generateObserverCount);
//       assertEquals(false, context0.isGeneratingDebugChanged());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(true, context0.isSealed());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(false, context0.hasCompileFunctionsWithDynamicScope());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertNotNull(context0);
//       
//       AstRoot astRoot1 = (AstRoot)astRoot0.setType(int0);
//       assertEquals(-1, astRoot1.getAbsolutePosition());
//       assertEquals(-1, astRoot1.getEndLineno());
//       assertEquals(1, astRoot1.getLength());
//       assertEquals(0, astRoot1.getType());
//       assertEquals(-1, astRoot1.getBaseLineno());
//       assertEquals(-1, astRoot1.getLineno());
//       assertEquals(false, astRoot1.isInStrictMode());
//       assertEquals(0, astRoot1.getParamCount());
//       assertEquals(0, astRoot1.getFunctionCount());
//       assertEquals(-1, astRoot1.getEncodedSourceEnd());
//       assertNull(astRoot1.getSourceName());
//       assertEquals(false, astRoot1.hasChildren());
//       assertEquals(0, astRoot1.depth());
//       assertNull(astRoot1.getEncodedSource());
//       assertNull(astRoot1.getJsDoc());
//       assertEquals(-1, astRoot1.getEncodedSourceStart());
//       assertEquals(-1, astRoot1.getPosition());
//       assertEquals(0, astRoot1.getRegexpCount());
//       assertEquals("0", astRoot1.toString());
//       assertEquals(-1, astRoot0.getEncodedSourceStart());
//       assertEquals(0, astRoot0.getType());
//       assertEquals(1, astRoot0.getLength());
//       assertEquals("0", astRoot0.toString());
//       assertEquals(0, astRoot0.getRegexpCount());
//       assertEquals(-1, astRoot0.getAbsolutePosition());
//       assertEquals(-1, astRoot0.getLineno());
//       assertNull(astRoot0.getEncodedSource());
//       assertEquals(0, astRoot0.getParamCount());
//       assertEquals(false, astRoot0.isInStrictMode());
//       assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       assertEquals(0, astRoot0.getFunctionCount());
//       assertEquals(false, astRoot0.hasChildren());
//       assertEquals(-1, astRoot0.getBaseLineno());
//       assertEquals(-1, astRoot0.getEndLineno());
//       assertEquals(-1, astRoot0.getPosition());
//       assertNull(astRoot0.getSourceName());
//       assertEquals(0, astRoot0.depth());
//       assertNull(astRoot0.getJsDoc());
//       assertSame(astRoot1, astRoot0);
//       assertSame(astRoot0, astRoot1);
//       assertNotNull(astRoot1);
//       
//       ToolErrorReporter toolErrorReporter0 = (ToolErrorReporter)context0.getErrorReporter();
//       assertTrue(context0.generateObserverCount);
//       assertEquals(false, context0.isGeneratingDebugChanged());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(true, context0.isSealed());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(false, context0.hasCompileFunctionsWithDynamicScope());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       assertEquals(true, toolErrorReporter0.hasReportedError());
//       assertNotNull(toolErrorReporter0);
//       
//       Node node0 = IRFactory.transformTree(astRoot0, string0, config0, (ErrorReporter) toolErrorReporter0);
//       assertTrue(context0.generateObserverCount);
//       assertEquals(false, context0.isGeneratingDebugChanged());
//       assertEquals(false, context0.isGeneratingDebug());
//       assertEquals(true, context0.isSealed());
//       assertEquals(0, context0.getLanguageVersion());
//       assertEquals(0, context0.getOptimizationLevel());
//       assertEquals(true, context0.isGeneratingSource());
//       assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       assertEquals(false, context0.hasCompileFunctionsWithDynamicScope());
//       assertEquals(0, context0.getInstructionObserverThreshold());
//       assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       assertEquals(true, toolErrorReporter0.hasReportedError());
//       assertEquals(false, node0.hasChildren());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(false, node0.hasMoreThanOneChild());
//       assertEquals(0, node0.getChildCount());
//       assertEquals(-1, node0.getCharno());
//       assertEquals(-1, node0.getLineno());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(false, node0.isUnscopedQualifiedName());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(false, node0.isSyntheticBlock());
//       assertEquals(124, node0.getType());
//       assertEquals(false, node0.isQualifiedName());
//       assertEquals(false, node0.hasOneChild());
//       assertEquals(-1, astRoot0.getEncodedSourceStart());
//       assertEquals(0, astRoot0.getType());
//       assertEquals(1, astRoot0.getLength());
//       assertEquals("0", astRoot0.toString());
//       assertEquals(0, astRoot0.getRegexpCount());
//       assertEquals(-1, astRoot0.getAbsolutePosition());
//       assertEquals(-1, astRoot0.getLineno());
//       assertNull(astRoot0.getEncodedSource());
//       assertEquals(0, astRoot0.getParamCount());
//       assertEquals(false, astRoot0.isInStrictMode());
//       assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       assertEquals(0, astRoot0.getFunctionCount());
//       assertEquals(false, astRoot0.hasChildren());
//       assertEquals(-1, astRoot0.getBaseLineno());
//       assertEquals(-1, astRoot0.getEndLineno());
//       assertEquals(-1, astRoot0.getPosition());
//       assertNull(astRoot0.getSourceName());
//       assertEquals(0, astRoot0.depth());
//       assertNull(astRoot0.getJsDoc());
//       assertSame(astRoot0, astRoot1);
//       assertNotNull(node0);
//   }
}
