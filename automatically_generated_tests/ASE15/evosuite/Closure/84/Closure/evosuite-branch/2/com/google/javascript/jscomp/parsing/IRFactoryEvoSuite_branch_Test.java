/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 22:36:23 GMT 2014
 */

package com.google.javascript.jscomp.parsing;

import static org.junit.Assert.*;
import org.junit.Test;
import com.google.javascript.jscomp.mozilla.rhino.Context;
import com.google.javascript.jscomp.mozilla.rhino.ErrorReporter;
import com.google.javascript.jscomp.mozilla.rhino.Node;
import com.google.javascript.jscomp.mozilla.rhino.Token;
import com.google.javascript.jscomp.mozilla.rhino.ast.AstNode;
import com.google.javascript.jscomp.mozilla.rhino.ast.AstRoot;
import com.google.javascript.jscomp.mozilla.rhino.ast.Block;
import com.google.javascript.jscomp.mozilla.rhino.ast.Comment;
import com.google.javascript.jscomp.mozilla.rhino.ast.ForLoop;
import com.google.javascript.jscomp.mozilla.rhino.ast.Name;
import com.google.javascript.jscomp.mozilla.rhino.ast.NewExpression;
import com.google.javascript.jscomp.mozilla.rhino.ast.ObjectProperty;
import com.google.javascript.jscomp.mozilla.rhino.tools.ToolErrorReporter;
import com.google.javascript.jscomp.parsing.Config;
import com.google.javascript.jscomp.parsing.IRFactory;
import java.io.PrintStream;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
 import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.FileSystemHandling;
import org.evosuite.runtime.mock.java.lang.MockIllegalStateException;
import org.junit.runner.RunWith;

 
public class IRFactoryEvoSuite_branch_Test   {

  @Test
  public void test0() {}
//   @Test
//   public void test0()  throws Throwable  {
//       EvoSuiteFile evoSuiteFile0 = null;
//       String string0 = "setters are not supported in Internet Explorer";
//       boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
//       //  // Unstable assertion: assertFalse(boolean0);
//       
//       byte byte0 = (byte)63;
//       AstRoot astRoot0 = new AstRoot((int) byte0);
//       //  // Unstable assertion: assertNotNull(astRoot0);
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(false, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(63, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(63, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       
//       Block block0 = new Block((int) byte0);
//       //  // Unstable assertion: assertNotNull(block0);
//       //  // Unstable assertion: assertEquals(-1, block0.getLineno());
//       //  // Unstable assertion: assertEquals(0, block0.depth());
//       //  // Unstable assertion: assertEquals(63, block0.getPosition());
//       //  // Unstable assertion: assertNull(block0.getJsDoc());
//       //  // Unstable assertion: assertEquals(129, block0.getType());
//       //  // Unstable assertion: assertEquals("129", block0.toString());
//       //  // Unstable assertion: assertEquals(63, block0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(1, block0.getLength());
//       //  // Unstable assertion: assertEquals(false, block0.hasChildren());
//       
//       astRoot0.addChildToBack((Node) block0);
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(true, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(63, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(63, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(-1, block0.getLineno());
//       //  // Unstable assertion: assertEquals(0, block0.depth());
//       //  // Unstable assertion: assertEquals(63, block0.getPosition());
//       //  // Unstable assertion: assertNull(block0.getJsDoc());
//       //  // Unstable assertion: assertEquals(129, block0.getType());
//       //  // Unstable assertion: assertEquals("129", block0.toString());
//       //  // Unstable assertion: assertEquals(63, block0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(1, block0.getLength());
//       //  // Unstable assertion: assertEquals(false, block0.hasChildren());
//       
//       Locale locale0 = new Locale(string0);
//       //  // Unstable assertion: assertNotNull(locale0);
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("setters are not supported in internet explorer", locale0.toString());
//       //  // Unstable assertion: assertEquals("setters are not supported in internet explorer", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       
//       Set<String> set0 = locale0.getUnicodeLocaleKeys();
//       //  // Unstable assertion: assertNotNull(set0);
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("setters are not supported in internet explorer", locale0.toString());
//       //  // Unstable assertion: assertEquals("setters are not supported in internet explorer", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       
//       Config config0 = new Config(set0, set0, boolean0, boolean0);
//       //  // Unstable assertion: assertNotNull(config0);
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("setters are not supported in internet explorer", locale0.toString());
//       //  // Unstable assertion: assertEquals("setters are not supported in internet explorer", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       
//       block0.addChildToFront((Node) astRoot0);
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(true, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(63, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(63, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(true, block0.hasChildren());
//       //  // Unstable assertion: assertEquals(-1, block0.getLineno());
//       //  // Unstable assertion: assertEquals(0, block0.depth());
//       //  // Unstable assertion: assertEquals(63, block0.getPosition());
//       //  // Unstable assertion: assertNull(block0.getJsDoc());
//       //  // Unstable assertion: assertEquals(129, block0.getType());
//       //  // Unstable assertion: assertEquals("129", block0.toString());
//       //  // Unstable assertion: assertEquals(63, block0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(1, block0.getLength());
//       
//       Context context0 = Context.getCurrentContext();
//       //  // Unstable assertion: assertNotNull(context0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       
//       PrintStream printStream0 = null;
//       ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(context0.generateObserverCount, printStream0);
//       //  // Unstable assertion: assertNotNull(toolErrorReporter0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.hasReportedError());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       
//       // Undeclared exception!
//       try {
//         com.google.javascript.rhino.Node node0 = IRFactory.transformTree(astRoot0, string0, config0, (ErrorReporter) toolErrorReporter0);
//        //  fail("Expecting exception: StackOverflowError");
//        // Unstable assertion
//       } catch(StackOverflowError e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//       }
//   }

  @Test
  public void test1() {}
//   @Test
//   public void test1()  throws Throwable  {
//       EvoSuiteFile evoSuiteFile0 = null;
//       String string0 = "setters are not supported in Internet Explorer";
//       boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
//       //  // Unstable assertion: assertFalse(boolean0);
//       
//       byte byte0 = (byte)63;
//       AstRoot astRoot0 = new AstRoot((int) byte0);
//       //  // Unstable assertion: assertNotNull(astRoot0);
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(63, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(false, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(63, astRoot0.getPosition());
//       
//       Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
//       Comment comment0 = new Comment((int) byte0, (int) byte0, token_CommentType0, string0);
//       //  // Unstable assertion: assertNotNull(comment0);
//       //  // Unstable assertion: assertEquals(63, comment0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(false, comment0.isParsed());
//       //  // Unstable assertion: assertEquals(-1, comment0.getLineno());
//       //  // Unstable assertion: assertEquals(63, comment0.getLength());
//       //  // Unstable assertion: assertEquals(false, comment0.hasChildren());
//       //  // Unstable assertion: assertEquals("161", comment0.toString());
//       //  // Unstable assertion: assertEquals(Token.CommentType.JSDOC, comment0.getCommentType());
//       //  // Unstable assertion: assertEquals(63, comment0.getPosition());
//       //  // Unstable assertion: assertNull(comment0.getJsDoc());
//       //  // Unstable assertion: assertEquals(161, comment0.getType());
//       //  // Unstable assertion: assertEquals("setters are not supported in Internet Explorer", comment0.getValue());
//       //  // Unstable assertion: assertEquals(0, comment0.depth());
//       
//       astRoot0.setJsDocNode(comment0);
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(63, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals("setters are not supported in Internet Explorer", astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(false, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(63, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(63, comment0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(false, comment0.isParsed());
//       //  // Unstable assertion: assertEquals(-1, comment0.getLineno());
//       //  // Unstable assertion: assertEquals(63, comment0.getLength());
//       //  // Unstable assertion: assertEquals(false, comment0.hasChildren());
//       //  // Unstable assertion: assertEquals("161", comment0.toString());
//       //  // Unstable assertion: assertEquals(Token.CommentType.JSDOC, comment0.getCommentType());
//       //  // Unstable assertion: assertEquals(63, comment0.getPosition());
//       //  // Unstable assertion: assertNull(comment0.getJsDoc());
//       //  // Unstable assertion: assertEquals(161, comment0.getType());
//       //  // Unstable assertion: assertEquals("setters are not supported in Internet Explorer", comment0.getValue());
//       //  // Unstable assertion: assertEquals(0, comment0.depth());
//       
//       Locale locale0 = new Locale(string0);
//       //  // Unstable assertion: assertNotNull(locale0);
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("setters are not supported in internet explorer", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("setters are not supported in internet explorer", locale0.toString());
//       
//       Set<String> set0 = locale0.getUnicodeLocaleKeys();
//       //  // Unstable assertion: assertNotNull(set0);
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("setters are not supported in internet explorer", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("setters are not supported in internet explorer", locale0.toString());
//       
//       Config config0 = new Config(set0, set0, boolean0, boolean0);
//       //  // Unstable assertion: assertNotNull(config0);
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("setters are not supported in internet explorer", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("setters are not supported in internet explorer", locale0.toString());
//       
//       Context context0 = Context.getCurrentContext();
//       //  // Unstable assertion: assertNotNull(context0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       
//       PrintStream printStream0 = null;
//       ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(context0.generateObserverCount, printStream0);
//       //  // Unstable assertion: assertNotNull(toolErrorReporter0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.hasReportedError());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       
//       com.google.javascript.rhino.Node node0 = IRFactory.transformTree(astRoot0, string0, config0, (ErrorReporter) toolErrorReporter0);
//       //  // Unstable assertion: assertNotNull(node0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(false, node0.hasMoreThanOneChild());
//       //  // Unstable assertion: assertEquals(false, node0.hasOneChild());
//       //  // Unstable assertion: assertEquals(false, node0.isOptionalArg());
//       //  // Unstable assertion: assertEquals(-1, node0.getCharno());
//       //  // Unstable assertion: assertEquals(false, node0.wasEmptyNode());
//       //  // Unstable assertion: assertEquals(false, node0.isVarArgs());
//       //  // Unstable assertion: assertEquals(false, node0.isNoSideEffectsCall());
//       //  // Unstable assertion: assertEquals(false, node0.isQualifiedName());
//       //  // Unstable assertion: assertEquals(0, node0.getSideEffectFlags());
//       //  // Unstable assertion: assertEquals(false, node0.hasChildren());
//       //  // Unstable assertion: assertEquals(false, node0.isSyntheticBlock());
//       //  // Unstable assertion: assertEquals(false, node0.isUnscopedQualifiedName());
//       //  // Unstable assertion: assertEquals(-1, node0.getLineno());
//       //  // Unstable assertion: assertEquals(false, node0.isOnlyModifiesThisCall());
//       //  // Unstable assertion: assertEquals(0, node0.getChildCount());
//       //  // Unstable assertion: assertEquals(false, node0.isLocalResultCall());
//       //  // Unstable assertion: assertEquals(false, node0.isQuotedString());
//       //  // Unstable assertion: assertEquals(132, node0.getType());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.hasReportedError());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(63, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals("setters are not supported in Internet Explorer", astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(false, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(63, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("setters are not supported in internet explorer", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("setters are not supported in internet explorer", locale0.toString());
//   }

  @Test
  public void test2() {}
//   @Test
//   public void test2()  throws Throwable  {
//       EvoSuiteFile evoSuiteFile0 = null;
//       String string0 = "m`b8$,3(ne&R^2h";
//       byte[] byteArray0 = new byte[5];
//       boolean boolean0 = FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
//       //  // Unstable assertion: assertFalse(boolean0);
//       //  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
//       
//       AstRoot astRoot0 = new AstRoot((int) byteArray0[1]);
//       //  // Unstable assertion: assertNotNull(astRoot0);
//       //  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(false, astRoot0.hasChildren());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       
//       Locale locale0 = new Locale(string0);
//       //  // Unstable assertion: assertNotNull(locale0);
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.toString());
//       
//       Set<String> set0 = locale0.getUnicodeLocaleKeys();
//       //  // Unstable assertion: assertNotNull(set0);
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.toString());
//       
//       Config config0 = new Config(set0, set0, boolean0, boolean0);
//       //  // Unstable assertion: assertNotNull(config0);
//       //  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.toString());
//       
//       Token.CommentType token_CommentType0 = Token.CommentType.LINE;
//       Comment comment0 = new Comment((int) byteArray0[1], (int) byteArray0[1], token_CommentType0, string0);
//       //  // Unstable assertion: assertNotNull(comment0);
//       //  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&R^2h", comment0.getValue());
//       //  // Unstable assertion: assertEquals(0, comment0.getPosition());
//       //  // Unstable assertion: assertEquals(0, comment0.getLength());
//       //  // Unstable assertion: assertEquals(false, comment0.hasChildren());
//       //  // Unstable assertion: assertEquals(161, comment0.getType());
//       //  // Unstable assertion: assertEquals("161", comment0.toString());
//       //  // Unstable assertion: assertEquals(0, comment0.depth());
//       //  // Unstable assertion: assertEquals(0, comment0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(Token.CommentType.LINE, comment0.getCommentType());
//       //  // Unstable assertion: assertEquals(false, comment0.isParsed());
//       //  // Unstable assertion: assertNull(comment0.getJsDoc());
//       //  // Unstable assertion: assertEquals(-1, comment0.getLineno());
//       
//       astRoot0.addComment(comment0);
//       //  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&R^2h", comment0.getValue());
//       //  // Unstable assertion: assertEquals(0, comment0.getPosition());
//       //  // Unstable assertion: assertEquals(0, comment0.getLength());
//       //  // Unstable assertion: assertEquals(false, comment0.hasChildren());
//       //  // Unstable assertion: assertEquals(161, comment0.getType());
//       //  // Unstable assertion: assertEquals("161", comment0.toString());
//       //  // Unstable assertion: assertEquals(0, comment0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(Token.CommentType.LINE, comment0.getCommentType());
//       //  // Unstable assertion: assertEquals(false, comment0.isParsed());
//       //  // Unstable assertion: assertNull(comment0.getJsDoc());
//       //  // Unstable assertion: assertEquals(1, comment0.depth());
//       //  // Unstable assertion: assertEquals(-1, comment0.getLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(false, astRoot0.hasChildren());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       
//       Context context0 = Context.getCurrentContext();
//       //  // Unstable assertion: assertNotNull(context0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       
//       PrintStream printStream0 = null;
//       ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(context0.generateObserverCount, printStream0);
//       //  // Unstable assertion: assertNotNull(toolErrorReporter0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.hasReportedError());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       
//       com.google.javascript.rhino.Node node0 = IRFactory.transformTree(astRoot0, string0, config0, (ErrorReporter) toolErrorReporter0);
//       //  // Unstable assertion: assertNotNull(node0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.hasReportedError());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(false, astRoot0.hasChildren());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(false, node0.isQualifiedName());
//       //  // Unstable assertion: assertEquals(132, node0.getType());
//       //  // Unstable assertion: assertEquals(false, node0.isUnscopedQualifiedName());
//       //  // Unstable assertion: assertEquals(0, node0.getSideEffectFlags());
//       //  // Unstable assertion: assertEquals(false, node0.wasEmptyNode());
//       //  // Unstable assertion: assertEquals(-1, node0.getLineno());
//       //  // Unstable assertion: assertEquals(false, node0.isOptionalArg());
//       //  // Unstable assertion: assertEquals(false, node0.isQuotedString());
//       //  // Unstable assertion: assertEquals(false, node0.isVarArgs());
//       //  // Unstable assertion: assertEquals(false, node0.isSyntheticBlock());
//       //  // Unstable assertion: assertEquals(false, node0.isNoSideEffectsCall());
//       //  // Unstable assertion: assertEquals(false, node0.isOnlyModifiesThisCall());
//       //  // Unstable assertion: assertEquals(-1, node0.getCharno());
//       //  // Unstable assertion: assertEquals(false, node0.hasChildren());
//       //  // Unstable assertion: assertEquals(0, node0.getChildCount());
//       //  // Unstable assertion: assertEquals(false, node0.isLocalResultCall());
//       //  // Unstable assertion: assertEquals(false, node0.hasOneChild());
//       //  // Unstable assertion: assertEquals(false, node0.hasMoreThanOneChild());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.toString());
//   }

  @Test
  public void test3() {}
//   @Test
//   public void test3()  throws Throwable  {
//       EvoSuiteFile evoSuiteFile0 = null;
//       String string0 = "m`b8$,3(ne&R^2h";
//       boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
//       //  // Unstable assertion: assertFalse(boolean0);
//       
//       int int0 = 48;
//       AstRoot astRoot0 = new AstRoot(int0);
//       //  // Unstable assertion: assertNotNull(astRoot0);
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(48, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(48, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(false, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       
//       Locale locale0 = new Locale(string0);
//       //  // Unstable assertion: assertNotNull(locale0);
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.toString());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       
//       Set<String> set0 = locale0.getUnicodeLocaleKeys();
//       //  // Unstable assertion: assertNotNull(set0);
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.toString());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       
//       Config config0 = new Config(set0, set0, boolean0, boolean0);
//       //  // Unstable assertion: assertNotNull(config0);
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.toString());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       
//       Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
//       Comment comment0 = new Comment(int0, int0, token_CommentType0, string0);
//       //  // Unstable assertion: assertNotNull(comment0);
//       //  // Unstable assertion: assertEquals(-1, comment0.getLineno());
//       //  // Unstable assertion: assertNull(comment0.getJsDoc());
//       //  // Unstable assertion: assertEquals(161, comment0.getType());
//       //  // Unstable assertion: assertEquals(0, comment0.depth());
//       //  // Unstable assertion: assertEquals(false, comment0.isParsed());
//       //  // Unstable assertion: assertEquals(48, comment0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(48, comment0.getLength());
//       //  // Unstable assertion: assertEquals("161", comment0.toString());
//       //  // Unstable assertion: assertEquals(48, comment0.getPosition());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&R^2h", comment0.getValue());
//       //  // Unstable assertion: assertEquals(Token.CommentType.JSDOC, comment0.getCommentType());
//       //  // Unstable assertion: assertEquals(false, comment0.hasChildren());
//       
//       astRoot0.addComment(comment0);
//       //  // Unstable assertion: assertEquals(1, comment0.depth());
//       //  // Unstable assertion: assertEquals(-1, comment0.getLineno());
//       //  // Unstable assertion: assertNull(comment0.getJsDoc());
//       //  // Unstable assertion: assertEquals(161, comment0.getType());
//       //  // Unstable assertion: assertEquals(false, comment0.isParsed());
//       //  // Unstable assertion: assertEquals(48, comment0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(48, comment0.getLength());
//       //  // Unstable assertion: assertEquals("161", comment0.toString());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&R^2h", comment0.getValue());
//       //  // Unstable assertion: assertEquals(Token.CommentType.JSDOC, comment0.getCommentType());
//       //  // Unstable assertion: assertEquals(false, comment0.hasChildren());
//       //  // Unstable assertion: assertEquals(0, comment0.getPosition());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(48, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(48, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(false, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       
//       Context context0 = Context.getCurrentContext();
//       //  // Unstable assertion: assertNotNull(context0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       
//       PrintStream printStream0 = null;
//       ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(context0.generateObserverCount, printStream0);
//       //  // Unstable assertion: assertNotNull(toolErrorReporter0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.hasReportedError());
//       
//       com.google.javascript.rhino.Node node0 = IRFactory.transformTree(astRoot0, string0, config0, (ErrorReporter) toolErrorReporter0);
//       //  // Unstable assertion: assertNotNull(node0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertEquals(false, node0.hasOneChild());
//       //  // Unstable assertion: assertEquals(false, node0.hasMoreThanOneChild());
//       //  // Unstable assertion: assertEquals(false, node0.isQuotedString());
//       //  // Unstable assertion: assertEquals(0, node0.getSideEffectFlags());
//       //  // Unstable assertion: assertEquals(false, node0.isSyntheticBlock());
//       //  // Unstable assertion: assertEquals(false, node0.isVarArgs());
//       //  // Unstable assertion: assertEquals(false, node0.isUnscopedQualifiedName());
//       //  // Unstable assertion: assertEquals(132, node0.getType());
//       //  // Unstable assertion: assertEquals(false, node0.hasChildren());
//       //  // Unstable assertion: assertEquals(0, node0.getChildCount());
//       //  // Unstable assertion: assertEquals(false, node0.isLocalResultCall());
//       //  // Unstable assertion: assertEquals(false, node0.isOptionalArg());
//       //  // Unstable assertion: assertEquals(false, node0.isNoSideEffectsCall());
//       //  // Unstable assertion: assertEquals(-1, node0.getLineno());
//       //  // Unstable assertion: assertEquals(false, node0.isQualifiedName());
//       //  // Unstable assertion: assertEquals(false, node0.isOnlyModifiesThisCall());
//       //  // Unstable assertion: assertEquals(false, node0.wasEmptyNode());
//       //  // Unstable assertion: assertEquals(-1, node0.getCharno());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(48, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(48, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(false, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.hasReportedError());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.toString());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//   }

  @Test
  public void test4() {}
//   @Test
//   public void test4()  throws Throwable  {
//       EvoSuiteFile evoSuiteFile0 = null;
//       String string0 = "setters are not supported in Internet Explorer";
//       boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
//       //  // Unstable assertion: assertFalse(boolean0);
//       
//       byte byte0 = (byte)63;
//       AstRoot astRoot0 = new AstRoot((int) byte0);
//       //  // Unstable assertion: assertNotNull(astRoot0);
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(63, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertEquals(false, astRoot0.hasChildren());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(63, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       
//       Block block0 = new Block((int) byte0);
//       //  // Unstable assertion: assertNotNull(block0);
//       //  // Unstable assertion: assertEquals("129", block0.toString());
//       //  // Unstable assertion: assertNull(block0.getJsDoc());
//       //  // Unstable assertion: assertEquals(-1, block0.getLineno());
//       //  // Unstable assertion: assertEquals(false, block0.hasChildren());
//       //  // Unstable assertion: assertEquals(63, block0.getPosition());
//       //  // Unstable assertion: assertEquals(129, block0.getType());
//       //  // Unstable assertion: assertEquals(63, block0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(1, block0.getLength());
//       //  // Unstable assertion: assertEquals(0, block0.depth());
//       
//       astRoot0.addChildToBack((Node) block0);
//       //  // Unstable assertion: assertEquals("129", block0.toString());
//       //  // Unstable assertion: assertNull(block0.getJsDoc());
//       //  // Unstable assertion: assertEquals(-1, block0.getLineno());
//       //  // Unstable assertion: assertEquals(false, block0.hasChildren());
//       //  // Unstable assertion: assertEquals(63, block0.getPosition());
//       //  // Unstable assertion: assertEquals(129, block0.getType());
//       //  // Unstable assertion: assertEquals(63, block0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(1, block0.getLength());
//       //  // Unstable assertion: assertEquals(0, block0.depth());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(true, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(63, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(63, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       
//       Locale locale0 = new Locale(string0);
//       //  // Unstable assertion: assertNotNull(locale0);
//       //  // Unstable assertion: assertEquals("setters are not supported in internet explorer", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("setters are not supported in internet explorer", locale0.toString());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       
//       Set<String> set0 = locale0.getUnicodeLocaleKeys();
//       //  // Unstable assertion: assertNotNull(set0);
//       //  // Unstable assertion: assertEquals("setters are not supported in internet explorer", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("setters are not supported in internet explorer", locale0.toString());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       
//       Config config0 = new Config(set0, set0, boolean0, boolean0);
//       //  // Unstable assertion: assertNotNull(config0);
//       //  // Unstable assertion: assertEquals("setters are not supported in internet explorer", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("setters are not supported in internet explorer", locale0.toString());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       
//       Context context0 = Context.getCurrentContext();
//       //  // Unstable assertion: assertNotNull(context0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       
//       PrintStream printStream0 = null;
//       ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(context0.generateObserverCount, printStream0);
//       //  // Unstable assertion: assertNotNull(toolErrorReporter0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.hasReportedError());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       
//       com.google.javascript.rhino.Node node0 = IRFactory.transformTree(astRoot0, string0, config0, (ErrorReporter) toolErrorReporter0);
//       //  // Unstable assertion: assertNotNull(node0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(false, node0.wasEmptyNode());
//       //  // Unstable assertion: assertEquals(false, node0.isSyntheticBlock());
//       //  // Unstable assertion: assertEquals(false, node0.isNoSideEffectsCall());
//       //  // Unstable assertion: assertEquals(true, node0.hasChildren());
//       //  // Unstable assertion: assertEquals(1, node0.getChildCount());
//       //  // Unstable assertion: assertEquals(false, node0.isVarArgs());
//       //  // Unstable assertion: assertEquals(false, node0.isUnscopedQualifiedName());
//       //  // Unstable assertion: assertEquals(false, node0.hasMoreThanOneChild());
//       //  // Unstable assertion: assertEquals(false, node0.isOptionalArg());
//       //  // Unstable assertion: assertEquals(-1, node0.getCharno());
//       //  // Unstable assertion: assertEquals(-1, node0.getLineno());
//       //  // Unstable assertion: assertEquals(false, node0.isLocalResultCall());
//       //  // Unstable assertion: assertEquals(false, node0.isQuotedString());
//       //  // Unstable assertion: assertEquals(false, node0.isOnlyModifiesThisCall());
//       //  // Unstable assertion: assertEquals(0, node0.getSideEffectFlags());
//       //  // Unstable assertion: assertEquals(132, node0.getType());
//       //  // Unstable assertion: assertEquals(true, node0.hasOneChild());
//       //  // Unstable assertion: assertEquals(false, node0.isQualifiedName());
//       //  // Unstable assertion: assertEquals("setters are not supported in internet explorer", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("setters are not supported in internet explorer", locale0.toString());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.hasReportedError());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(true, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(63, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(63, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//   }

  @Test
  public void test5() {}
//   @Test
//   public void test5()  throws Throwable  {
//       EvoSuiteFile evoSuiteFile0 = null;
//       String string0 = "H;:\n";
//       boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
//       //  // Unstable assertion: assertFalse(boolean0);
//       
//       byte byte0 = (byte)63;
//       AstRoot astRoot0 = new AstRoot((int) byte0);
//       //  // Unstable assertion: assertNotNull(astRoot0);
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(63, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(false, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(63, astRoot0.getAbsolutePosition());
//       
//       ForLoop forLoop0 = new ForLoop();
//       //  // Unstable assertion: assertNotNull(forLoop0);
//       //  // Unstable assertion: assertEquals(0, forLoop0.depth());
//       //  // Unstable assertion: assertEquals("119", forLoop0.toString());
//       //  // Unstable assertion: assertEquals(-1, forLoop0.getRp());
//       //  // Unstable assertion: assertEquals(1, forLoop0.getLength());
//       //  // Unstable assertion: assertEquals(-1, forLoop0.getLp());
//       //  // Unstable assertion: assertNull(forLoop0.getJsDoc());
//       //  // Unstable assertion: assertEquals(-1, forLoop0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(false, forLoop0.hasChildren());
//       //  // Unstable assertion: assertEquals(-1, forLoop0.getPosition());
//       //  // Unstable assertion: assertEquals(-1, forLoop0.getLineno());
//       //  // Unstable assertion: assertEquals(119, forLoop0.getType());
//       
//       astRoot0.addChildToFront((Node) forLoop0);
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(63, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(true, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(63, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(0, forLoop0.depth());
//       //  // Unstable assertion: assertEquals("119", forLoop0.toString());
//       //  // Unstable assertion: assertEquals(-1, forLoop0.getRp());
//       //  // Unstable assertion: assertEquals(1, forLoop0.getLength());
//       //  // Unstable assertion: assertEquals(-1, forLoop0.getLp());
//       //  // Unstable assertion: assertNull(forLoop0.getJsDoc());
//       //  // Unstable assertion: assertEquals(-1, forLoop0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(false, forLoop0.hasChildren());
//       //  // Unstable assertion: assertEquals(-1, forLoop0.getPosition());
//       //  // Unstable assertion: assertEquals(-1, forLoop0.getLineno());
//       //  // Unstable assertion: assertEquals(119, forLoop0.getType());
//       
//       Locale locale0 = new Locale(string0);
//       //  // Unstable assertion: assertNotNull(locale0);
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("h;:\n", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("h;:\n", locale0.toString());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       
//       Set<String> set0 = locale0.getUnicodeLocaleKeys();
//       //  // Unstable assertion: assertNotNull(set0);
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("h;:\n", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("h;:\n", locale0.toString());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       
//       Config config0 = new Config(set0, set0, boolean0, boolean0);
//       //  // Unstable assertion: assertNotNull(config0);
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("h;:\n", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("h;:\n", locale0.toString());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       
//       Context context0 = Context.getCurrentContext();
//       //  // Unstable assertion: assertNotNull(context0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       
//       PrintStream printStream0 = null;
//       ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(context0.generateObserverCount, printStream0);
//       //  // Unstable assertion: assertNotNull(toolErrorReporter0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.hasReportedError());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       
//       // Undeclared exception!
//       try {
//         com.google.javascript.rhino.Node node0 = IRFactory.transformTree(astRoot0, string0, config0, (ErrorReporter) toolErrorReporter0);
//        //  fail("Expecting exception: NullPointerException");
//        // Unstable assertion
//       } catch(NullPointerException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//       }
//   }

  @Test
  public void test6() {}
//   @Test
//   public void test6()  throws Throwable  {
//       EvoSuiteFile evoSuiteFile0 = null;
//       String string0 = "m`b8$,3(ne&R^2h";
//       byte[] byteArray0 = new byte[5];
//       boolean boolean0 = FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
//       //  // Unstable assertion: assertFalse(boolean0);
//       //  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
//       
//       AstRoot astRoot0 = new AstRoot((int) byteArray0[1]);
//       //  // Unstable assertion: assertNotNull(astRoot0);
//       //  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(false, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       
//       Name name0 = new Name((int) byteArray0[1], string0);
//       //  // Unstable assertion: assertNotNull(name0);
//       //  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&R^2h", name0.getIdentifier());
//       //  // Unstable assertion: assertEquals(15, name0.length());
//       //  // Unstable assertion: assertEquals(0, name0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(0, name0.getPosition());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&R^2h", name0.getString());
//       //  // Unstable assertion: assertEquals(39, name0.getType());
//       //  // Unstable assertion: assertEquals(0, name0.depth());
//       //  // Unstable assertion: assertEquals("39", name0.toString());
//       //  // Unstable assertion: assertEquals(15, name0.getLength());
//       //  // Unstable assertion: assertNull(name0.getJsDoc());
//       //  // Unstable assertion: assertEquals(false, name0.hasChildren());
//       //  // Unstable assertion: assertEquals(-1, name0.getLineno());
//       
//       astRoot0.addChild((AstNode) name0);
//       //  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&R^2h", name0.getIdentifier());
//       //  // Unstable assertion: assertEquals(15, name0.length());
//       //  // Unstable assertion: assertEquals(0, name0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(0, name0.getPosition());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&R^2h", name0.getString());
//       //  // Unstable assertion: assertEquals(1, name0.depth());
//       //  // Unstable assertion: assertEquals(39, name0.getType());
//       //  // Unstable assertion: assertEquals("39", name0.toString());
//       //  // Unstable assertion: assertEquals(15, name0.getLength());
//       //  // Unstable assertion: assertNull(name0.getJsDoc());
//       //  // Unstable assertion: assertEquals(false, name0.hasChildren());
//       //  // Unstable assertion: assertEquals(-1, name0.getLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(15, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getPosition());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(true, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       
//       Locale locale0 = new Locale(string0);
//       //  // Unstable assertion: assertNotNull(locale0);
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.toString());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       
//       Set<String> set0 = locale0.getUnicodeLocaleKeys();
//       //  // Unstable assertion: assertNotNull(set0);
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.toString());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       
//       Config config0 = new Config(set0, set0, boolean0, boolean0);
//       //  // Unstable assertion: assertNotNull(config0);
//       //  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.toString());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       
//       Context context0 = Context.getCurrentContext();
//       //  // Unstable assertion: assertNotNull(context0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       
//       PrintStream printStream0 = null;
//       ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(context0.generateObserverCount, printStream0);
//       //  // Unstable assertion: assertNotNull(toolErrorReporter0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.hasReportedError());
//       
//       com.google.javascript.rhino.Node node0 = IRFactory.transformTree(astRoot0, string0, config0, (ErrorReporter) toolErrorReporter0);
//       //  // Unstable assertion: assertNotNull(node0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
//       //  // Unstable assertion: assertEquals(false, node0.isVarArgs());
//       //  // Unstable assertion: assertEquals(false, node0.isOptionalArg());
//       //  // Unstable assertion: assertEquals(false, node0.isNoSideEffectsCall());
//       //  // Unstable assertion: assertEquals(false, node0.isQualifiedName());
//       //  // Unstable assertion: assertEquals(false, node0.isSyntheticBlock());
//       //  // Unstable assertion: assertEquals(-1, node0.getCharno());
//       //  // Unstable assertion: assertEquals(1, node0.getChildCount());
//       //  // Unstable assertion: assertEquals(-1, node0.getLineno());
//       //  // Unstable assertion: assertEquals(false, node0.isOnlyModifiesThisCall());
//       //  // Unstable assertion: assertEquals(false, node0.isUnscopedQualifiedName());
//       //  // Unstable assertion: assertEquals(0, node0.getSideEffectFlags());
//       //  // Unstable assertion: assertEquals(false, node0.hasMoreThanOneChild());
//       //  // Unstable assertion: assertEquals(false, node0.wasEmptyNode());
//       //  // Unstable assertion: assertEquals(true, node0.hasOneChild());
//       //  // Unstable assertion: assertEquals(false, node0.isLocalResultCall());
//       //  // Unstable assertion: assertEquals(132, node0.getType());
//       //  // Unstable assertion: assertEquals(false, node0.isQuotedString());
//       //  // Unstable assertion: assertEquals(true, node0.hasChildren());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("m`b8$,3(ne&r^2h", locale0.toString());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(15, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getPosition());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(true, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.hasReportedError());
//   }

  @Test
  public void test7() {}
//   @Test
//   public void test7()  throws Throwable  {
//       EvoSuiteFile evoSuiteFile0 = null;
//       String string0 = "m`b8$3(ne&R^2h";
//       boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
//       //  // Unstable assertion: assertFalse(boolean0);
//       
//       byte byte0 = (byte)46;
//       AstRoot astRoot0 = new AstRoot((int) byte0);
//       //  // Unstable assertion: assertNotNull(astRoot0);
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(false, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(46, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(46, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       
//       NewExpression newExpression0 = new NewExpression();
//       //  // Unstable assertion: assertNotNull(newExpression0);
//       //  // Unstable assertion: assertNull(newExpression0.getJsDoc());
//       //  // Unstable assertion: assertEquals(30, newExpression0.getType());
//       //  // Unstable assertion: assertEquals(-1, newExpression0.getRp());
//       //  // Unstable assertion: assertEquals(false, newExpression0.hasChildren());
//       //  // Unstable assertion: assertEquals(1, newExpression0.getLength());
//       //  // Unstable assertion: assertEquals("30", newExpression0.toString());
//       //  // Unstable assertion: assertEquals(-1, newExpression0.getLp());
//       //  // Unstable assertion: assertEquals(-1, newExpression0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(-1, newExpression0.getLineno());
//       //  // Unstable assertion: assertEquals(-1, newExpression0.getPosition());
//       //  // Unstable assertion: assertEquals(0, newExpression0.depth());
//       
//       astRoot0.addChild((AstNode) newExpression0);
//       //  // Unstable assertion: assertNull(newExpression0.getJsDoc());
//       //  // Unstable assertion: assertEquals(30, newExpression0.getType());
//       //  // Unstable assertion: assertEquals(-1, newExpression0.getRp());
//       //  // Unstable assertion: assertEquals(false, newExpression0.hasChildren());
//       //  // Unstable assertion: assertEquals(1, newExpression0.getLength());
//       //  // Unstable assertion: assertEquals("30", newExpression0.toString());
//       //  // Unstable assertion: assertEquals(-1, newExpression0.getLp());
//       //  // Unstable assertion: assertEquals(-47, newExpression0.getPosition());
//       //  // Unstable assertion: assertEquals(-1, newExpression0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(-1, newExpression0.getLineno());
//       //  // Unstable assertion: assertEquals(1, newExpression0.depth());
//       //  // Unstable assertion: assertEquals(true, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(-46, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(46, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(46, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       
//       Locale locale0 = new Locale(string0);
//       //  // Unstable assertion: assertNotNull(locale0);
//       //  // Unstable assertion: assertEquals("m`b8$3(ne&r^2h", locale0.toString());
//       //  // Unstable assertion: assertEquals("m`b8$3(ne&r^2h", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       
//       Set<String> set0 = locale0.getUnicodeLocaleKeys();
//       //  // Unstable assertion: assertNotNull(set0);
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertEquals("m`b8$3(ne&r^2h", locale0.toString());
//       //  // Unstable assertion: assertEquals("m`b8$3(ne&r^2h", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       
//       Config config0 = new Config(set0, set0, boolean0, boolean0);
//       //  // Unstable assertion: assertNotNull(config0);
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertEquals("m`b8$3(ne&r^2h", locale0.toString());
//       //  // Unstable assertion: assertEquals("m`b8$3(ne&r^2h", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       
//       Context context0 = Context.getCurrentContext();
//       //  // Unstable assertion: assertNotNull(context0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       
//       PrintStream printStream0 = null;
//       ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(context0.generateObserverCount, printStream0);
//       //  // Unstable assertion: assertNotNull(toolErrorReporter0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.hasReportedError());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       
//       // Undeclared exception!
//       try {
//         com.google.javascript.rhino.Node node0 = IRFactory.transformTree(astRoot0, string0, config0, (ErrorReporter) toolErrorReporter0);
//        //  fail("Expecting exception: NullPointerException");
//        // Unstable assertion
//       } catch(NullPointerException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//       }
//   }

  @Test
  public void test8() {}
//   @Test
//   public void test8()  throws Throwable  {
//       EvoSuiteFile evoSuiteFile0 = null;
//       String string0 = "k@Q";
//       boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
//       //  // Unstable assertion: assertFalse(boolean0);
//       
//       int int0 = (-2406);
//       AstRoot astRoot0 = new AstRoot(int0);
//       //  // Unstable assertion: assertNotNull(astRoot0);
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(-2406, astRoot0.getPosition());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(-2406, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(false, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       
//       Locale locale0 = new Locale(string0);
//       //  // Unstable assertion: assertNotNull(locale0);
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("k@q", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("k@q", locale0.getISO3Language());
//       //  // Unstable assertion: assertEquals("k@q", locale0.toString());
//       
//       Set<String> set0 = locale0.getUnicodeLocaleKeys();
//       //  // Unstable assertion: assertNotNull(set0);
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("k@q", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("k@q", locale0.getISO3Language());
//       //  // Unstable assertion: assertEquals("k@q", locale0.toString());
//       
//       ObjectProperty objectProperty0 = new ObjectProperty();
//       //  // Unstable assertion: assertNotNull(objectProperty0);
//       //  // Unstable assertion: assertEquals(false, objectProperty0.hasChildren());
//       //  // Unstable assertion: assertEquals(-1, objectProperty0.getOperatorPosition());
//       //  // Unstable assertion: assertNull(objectProperty0.getJsDoc());
//       //  // Unstable assertion: assertEquals(-1, objectProperty0.getPosition());
//       //  // Unstable assertion: assertEquals(false, objectProperty0.isGetter());
//       //  // Unstable assertion: assertEquals(103, objectProperty0.getType());
//       //  // Unstable assertion: assertEquals(-1, objectProperty0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(1, objectProperty0.getLength());
//       //  // Unstable assertion: assertEquals("103", objectProperty0.toString());
//       //  // Unstable assertion: assertEquals(false, objectProperty0.isSetter());
//       //  // Unstable assertion: assertEquals(0, objectProperty0.depth());
//       //  // Unstable assertion: assertEquals(-1, objectProperty0.getLineno());
//       
//       astRoot0.addChild((AstNode) objectProperty0);
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertEquals(-2406, astRoot0.getPosition());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(-2406, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(2406, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(true, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(false, objectProperty0.hasChildren());
//       //  // Unstable assertion: assertEquals(-1, objectProperty0.getOperatorPosition());
//       //  // Unstable assertion: assertNull(objectProperty0.getJsDoc());
//       //  // Unstable assertion: assertEquals(false, objectProperty0.isGetter());
//       //  // Unstable assertion: assertEquals(103, objectProperty0.getType());
//       //  // Unstable assertion: assertEquals(-1, objectProperty0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(2405, objectProperty0.getPosition());
//       //  // Unstable assertion: assertEquals(1, objectProperty0.getLength());
//       //  // Unstable assertion: assertEquals(1, objectProperty0.depth());
//       //  // Unstable assertion: assertEquals("103", objectProperty0.toString());
//       //  // Unstable assertion: assertEquals(false, objectProperty0.isSetter());
//       //  // Unstable assertion: assertEquals(-1, objectProperty0.getLineno());
//       
//       Config config0 = new Config(set0, set0, boolean0, boolean0);
//       //  // Unstable assertion: assertNotNull(config0);
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("k@q", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("k@q", locale0.getISO3Language());
//       //  // Unstable assertion: assertEquals("k@q", locale0.toString());
//       
//       Context context0 = Context.getCurrentContext();
//       //  // Unstable assertion: assertNotNull(context0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       
//       PrintStream printStream0 = null;
//       ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(context0.generateObserverCount, printStream0);
//       //  // Unstable assertion: assertNotNull(toolErrorReporter0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.hasReportedError());
//       
//       // Undeclared exception!
//       try {
//         com.google.javascript.rhino.Node node0 = IRFactory.transformTree(astRoot0, string0, config0, (ErrorReporter) toolErrorReporter0);
//        //  fail("Expecting exception: NullPointerException");
//        // Unstable assertion
//       } catch(NullPointerException e) {
//          //
//          // no message in exception (getMessage() returned null)
//          //
//       }
//   }

  @Test
  public void test9() {}
//   @Test
//   public void test9()  throws Throwable  {
//       EvoSuiteFile evoSuiteFile0 = null;
//       String string0 = "m`28$,3(ne&R^2h";
//       boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
//       //  // Unstable assertion: assertFalse(boolean0);
//       
//       int int0 = (-8);
//       AstRoot astRoot0 = new AstRoot(int0);
//       //  // Unstable assertion: assertNotNull(astRoot0);
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertEquals("136", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(-8, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(-8, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(false, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(136, astRoot0.getType());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       
//       Locale locale0 = new Locale(string0);
//       //  // Unstable assertion: assertNotNull(locale0);
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("m`28$,3(ne&r^2h", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("m`28$,3(ne&r^2h", locale0.toString());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       
//       AstRoot astRoot1 = (AstRoot)astRoot0.setType(int0);
//       //  // Unstable assertion: assertNotNull(astRoot1);
//       //  // Unstable assertion: assertSame(astRoot0, astRoot1);
//       //  // Unstable assertion: assertSame(astRoot1, astRoot0);
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getBaseLineno());
//       //  // Unstable assertion: assertNull(astRoot0.getSourceName());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getParamCount());
//       //  // Unstable assertion: assertNull(astRoot0.getEncodedSource());
//       //  // Unstable assertion: assertEquals(0, astRoot0.depth());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEndLineno());
//       //  // Unstable assertion: assertEquals(1, astRoot0.getLength());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getLineno());
//       //  // Unstable assertion: assertEquals(-8, astRoot0.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals("-8", astRoot0.toString());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getFunctionCount());
//       //  // Unstable assertion: assertEquals(0, astRoot0.getRegexpCount());
//       //  // Unstable assertion: assertEquals(-8, astRoot0.getPosition());
//       //  // Unstable assertion: assertEquals(false, astRoot0.hasChildren());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(false, astRoot0.isInStrictMode());
//       //  // Unstable assertion: assertEquals(-1, astRoot0.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals(-8, astRoot0.getType());
//       //  // Unstable assertion: assertNull(astRoot0.getJsDoc());
//       //  // Unstable assertion: assertEquals(0, astRoot1.getFunctionCount());
//       //  // Unstable assertion: assertEquals(-8, astRoot1.getType());
//       //  // Unstable assertion: assertEquals(0, astRoot1.getRegexpCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot1.getEncodedSourceStart());
//       //  // Unstable assertion: assertEquals("-8", astRoot1.toString());
//       //  // Unstable assertion: assertEquals(-1, astRoot1.getEncodedSourceEnd());
//       //  // Unstable assertion: assertEquals(0, astRoot1.getParamCount());
//       //  // Unstable assertion: assertEquals(-1, astRoot1.getEndLineno());
//       //  // Unstable assertion: assertNull(astRoot1.getJsDoc());
//       //  // Unstable assertion: assertEquals(false, astRoot1.hasChildren());
//       //  // Unstable assertion: assertNull(astRoot1.getSourceName());
//       //  // Unstable assertion: assertEquals(1, astRoot1.getLength());
//       //  // Unstable assertion: assertEquals(0, astRoot1.depth());
//       //  // Unstable assertion: assertEquals(-1, astRoot1.getBaseLineno());
//       //  // Unstable assertion: assertNull(astRoot1.getEncodedSource());
//       //  // Unstable assertion: assertEquals(false, astRoot1.isInStrictMode());
//       //  // Unstable assertion: assertEquals(-8, astRoot1.getAbsolutePosition());
//       //  // Unstable assertion: assertEquals(-8, astRoot1.getPosition());
//       //  // Unstable assertion: assertEquals(-1, astRoot1.getLineno());
//       
//       Set<String> set0 = locale0.getUnicodeLocaleKeys();
//       //  // Unstable assertion: assertNotNull(set0);
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("m`28$,3(ne&r^2h", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("m`28$,3(ne&r^2h", locale0.toString());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       
//       Config config0 = new Config(set0, set0, boolean0, boolean0);
//       //  // Unstable assertion: assertNotNull(config0);
//       //  // Unstable assertion: assertEquals(0, set0.size());
//       //  // Unstable assertion: assertEquals(true, set0.isEmpty());
//       //  // Unstable assertion: assertEquals("", locale0.getISO3Country());
//       //  // Unstable assertion: assertEquals("m`28$,3(ne&r^2h", locale0.getLanguage());
//       //  // Unstable assertion: assertEquals("", locale0.getCountry());
//       //  // Unstable assertion: assertEquals("m`28$,3(ne&r^2h", locale0.toString());
//       //  // Unstable assertion: assertEquals("", locale0.getVariant());
//       
//       Context context0 = Context.getCurrentContext();
//       //  // Unstable assertion: assertNotNull(context0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       
//       PrintStream printStream0 = null;
//       ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(context0.generateObserverCount, printStream0);
//       //  // Unstable assertion: assertNotNull(toolErrorReporter0);
//       //  // Unstable assertion: assertFalse(context0.generateObserverCount);
//       //  // Unstable assertion: assertEquals(0, context0.getInstructionObserverThreshold());
//       //  // Unstable assertion: assertEquals(true, context0.hasCompileFunctionsWithDynamicScope());
//       //  // Unstable assertion: assertEquals(0, context0.getOptimizationLevel());
//       //  // Unstable assertion: assertEquals(0, context0.getLanguageVersion());
//       //  // Unstable assertion: assertEquals(false, context0.isSealed());
//       //  // Unstable assertion: assertEquals(true, context0.isGeneratingDebugChanged());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingDebug());
//       //  // Unstable assertion: assertEquals(false, context0.isGeneratingSource());
//       //  // Unstable assertion: assertEquals(2147483647, context0.getMaximumInterpreterStackDepth());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.isReportingWarnings());
//       //  // Unstable assertion: assertEquals(false, toolErrorReporter0.hasReportedError());
//       
//       // Undeclared exception!
//       try {
//         com.google.javascript.rhino.Node node0 = IRFactory.transformTree(astRoot0, string0, config0, (ErrorReporter) toolErrorReporter0);
//        //  fail("Expecting exception: IllegalStateException");
//        // Unstable assertion
//       } catch(IllegalStateException e) {
//          //
//          // -8
//          //
//       }
//   }
}
