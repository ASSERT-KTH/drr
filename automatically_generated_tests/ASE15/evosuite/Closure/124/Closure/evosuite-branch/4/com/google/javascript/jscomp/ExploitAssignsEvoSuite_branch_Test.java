/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 20:08:35 GMT 2014
 */

package com.google.javascript.jscomp;

import static org.junit.Assert.*;
import org.junit.Test;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.ExploitAssigns;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
 import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;

 
public class ExploitAssignsEvoSuite_branch_Test   {

  @Test(timeout = 4000)
  public void test0() {}
//   @Test(timeout = 4000)
//   public void test0()  throws Throwable  {
//       ExploitAssigns exploitAssigns0 = new ExploitAssigns();
//       assertNotNull(exploitAssigns0);
//       
//       Compiler compiler0 = new Compiler();
//       assertNotNull(compiler0);
//       assertEquals(0.0, compiler0.getProgress(), 0.01D);
//       
//       String string0 = "r=H;R%=V";
//       Node node0 = compiler0.parseTestCode(string0);
//       assertNotNull(node0);
//       assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
//       assertEquals(0, compiler0.getWarningCount());
//       assertEquals(false, compiler0.hasErrors());
//       assertEquals(false, compiler0.acceptConstKeyword());
//       assertEquals(0.0, compiler0.getProgress(), 0.01D);
//       assertEquals(false, compiler0.isIdeMode());
//       assertEquals(0, compiler0.getErrorCount());
//       assertEquals(false, compiler0.isTypeCheckingEnabled());
//       assertEquals(false, node0.isOnlyModifiesArgumentsCall());
//       assertEquals(false, node0.isGetterDef());
//       assertEquals(false, node0.isAssign());
//       assertEquals(false, node0.isInc());
//       assertEquals(false, node0.isExprResult());
//       assertEquals(false, node0.isIn());
//       assertEquals(false, node0.isParamList());
//       assertEquals(false, node0.isThis());
//       assertEquals(false, node0.isLabel());
//       assertEquals(false, node0.isWhile());
//       assertEquals(false, node0.isNew());
//       assertEquals(2, node0.getChildCount());
//       assertEquals(false, node0.isTypeOf());
//       assertEquals(false, node0.isCall());
//       assertEquals(false, node0.isStringKey());
//       assertEquals(false, node0.isFor());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(false, node0.isFromExterns());
//       assertEquals(false, node0.isBreak());
//       assertEquals(false, node0.isArrayLit());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(false, node0.isAssignAdd());
//       assertEquals(true, node0.isSyntheticBlock());
//       assertEquals(false, node0.isTrue());
//       assertEquals(false, node0.isCase());
//       assertEquals(false, node0.isReturn());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(false, node0.isVar());
//       assertEquals(false, node0.isHook());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(true, node0.hasChildren());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(false, node0.isAnd());
//       assertEquals(false, node0.isString());
//       assertEquals(false, node0.isRegExp());
//       assertEquals(false, node0.isDec());
//       assertEquals(false, node0.isDebugger());
//       assertEquals(true, node0.isScript());
//       assertEquals(false, node0.isNE());
//       assertEquals(false, node0.isFalse());
//       assertEquals(false, node0.isWith());
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(0, node0.getChangeTime());
//       assertEquals(false, node0.isComma());
//       assertEquals(false, node0.isOr());
//       assertEquals(true, node0.mayMutateArguments());
//       assertEquals(false, node0.isVoid());
//       assertEquals(false, node0.isObjectLit());
//       assertEquals(true, node0.hasMoreThanOneChild());
//       assertEquals(false, node0.isNot());
//       assertEquals(false, node0.isBlock());
//       assertEquals(false, node0.isContinue());
//       assertEquals(1, node0.getLineno());
//       assertEquals(false, node0.isSwitch());
//       assertEquals(false, node0.isFunction());
//       assertEquals(false, node0.isDo());
//       assertEquals(false, node0.isGetElem());
//       assertEquals(4096, node0.getSourcePosition());
//       assertEquals(false, node0.isDefaultCase());
//       assertEquals(false, node0.isSetterDef());
//       assertEquals(false, node0.isNull());
//       assertEquals(false, node0.isAdd());
//       assertEquals(false, node0.isCatch());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(132, node0.getType());
//       assertEquals(0, node0.getCharno());
//       assertEquals(0, node0.getLength());
//       assertEquals(false, node0.isThrow());
//       assertEquals(false, node0.isTry());
//       assertEquals(false, node0.isIf());
//       assertEquals(false, node0.isCast());
//       assertEquals(false, node0.isLabelName());
//       assertEquals(false, node0.hasOneChild());
//       assertEquals(false, node0.isDelProp());
//       assertEquals(false, node0.isInstanceOf());
//       assertEquals(false, node0.isNumber());
//       assertEquals(false, node0.isGetProp());
//       assertEquals(false, node0.isEmpty());
//       assertEquals("[testcode]", node0.getSourceFileName());
//       assertEquals(false, node0.isName());
//       assertEquals(true, node0.mayMutateGlobalStateOrThrow());
//       
//       Node node1 = exploitAssigns0.optimizeSubtree(node0);
//       assertSame(node1, node0);
//       assertSame(node0, node1);
//       assertNotNull(node1);
//       assertEquals(false, node1.isString());
//       assertEquals(false, node1.isArrayLit());
//       assertEquals(false, node1.isThrow());
//       assertEquals(false, node1.isName());
//       assertEquals(false, node1.isIf());
//       assertEquals(2, node1.getChildCount());
//       assertEquals(false, node1.isOnlyModifiesArgumentsCall());
//       assertEquals(false, node1.isNew());
//       assertEquals(false, node1.isHook());
//       assertEquals(false, node1.isFalse());
//       assertEquals(0, node1.getCharno());
//       assertEquals(false, node1.isCast());
//       assertEquals(false, node1.isGetElem());
//       assertEquals(false, node1.isGetterDef());
//       assertEquals(false, node1.isFromExterns());
//       assertEquals("[testcode]", node1.getSourceFileName());
//       assertEquals(false, node1.isNE());
//       assertEquals(true, node1.hasChildren());
//       assertEquals(false, node1.isReturn());
//       assertEquals(false, node1.isOr());
//       assertEquals(true, node1.isScript());
//       assertEquals(false, node1.isTypeOf());
//       assertEquals(false, node1.isAssignAdd());
//       assertEquals(false, node1.isWhile());
//       assertEquals(false, node1.isDec());
//       assertEquals(false, node1.isCall());
//       assertEquals(false, node1.isLabelName());
//       assertEquals(false, node1.isNumber());
//       assertEquals(false, node1.isTry());
//       assertEquals(false, node1.isWith());
//       assertEquals(false, node1.wasEmptyNode());
//       assertEquals(false, node1.isIn());
//       assertEquals(false, node1.isContinue());
//       assertEquals(0, node1.getChangeTime());
//       assertEquals(false, node1.isGetProp());
//       assertEquals(true, node1.hasMoreThanOneChild());
//       assertEquals(false, node1.isComma());
//       assertEquals(false, node1.isRegExp());
//       assertEquals(false, node1.isNot());
//       assertEquals(false, node1.isInc());
//       assertEquals(false, node1.isNull());
//       assertEquals(false, node1.hasOneChild());
//       assertEquals(false, node1.isFor());
//       assertEquals(false, node1.isExprResult());
//       assertEquals(false, node1.isAdd());
//       assertEquals(false, node1.isSwitch());
//       assertEquals(false, node1.isCatch());
//       assertEquals(true, node1.mayMutateArguments());
//       assertEquals(false, node1.isObjectLit());
//       assertEquals(false, node1.isLocalResultCall());
//       assertEquals(4096, node1.getSourcePosition());
//       assertEquals(0, node1.getSideEffectFlags());
//       assertEquals(false, node1.isBlock());
//       assertEquals(false, node1.isVoid());
//       assertEquals(false, node1.isSetterDef());
//       assertEquals(false, node1.isCase());
//       assertEquals(0, node1.getLength());
//       assertEquals(false, node1.isParamList());
//       assertEquals(false, node1.isAnd());
//       assertEquals(true, node1.isSyntheticBlock());
//       assertEquals(false, node1.isDefaultCase());
//       assertEquals(false, node1.isQuotedString());
//       assertEquals(false, node1.isOptionalArg());
//       assertEquals(false, node1.isInstanceOf());
//       assertEquals(132, node1.getType());
//       assertEquals(false, node1.isBreak());
//       assertEquals(false, node1.isFunction());
//       assertEquals(false, node1.isNoSideEffectsCall());
//       assertEquals(false, node1.isTrue());
//       assertEquals(true, node1.mayMutateGlobalStateOrThrow());
//       assertEquals(false, node1.isEmpty());
//       assertEquals(false, node1.isDebugger());
//       assertEquals(false, node1.isOnlyModifiesThisCall());
//       assertEquals(false, node1.isDo());
//       assertEquals(1, node1.getLineno());
//       assertEquals(false, node1.isAssign());
//       assertEquals(false, node1.isStringKey());
//       assertEquals(false, node1.isVarArgs());
//       assertEquals(false, node1.isVar());
//       assertEquals(false, node1.isDelProp());
//       assertEquals(false, node1.isThis());
//       assertEquals(false, node1.isLabel());
//       assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
//       assertEquals(0, compiler0.getWarningCount());
//       assertEquals(false, compiler0.hasErrors());
//       assertEquals(false, compiler0.acceptConstKeyword());
//       assertEquals(0.0, compiler0.getProgress(), 0.01D);
//       assertEquals(false, compiler0.isIdeMode());
//       assertEquals(0, compiler0.getErrorCount());
//       assertEquals(false, compiler0.isTypeCheckingEnabled());
//       assertEquals(false, node0.isOnlyModifiesArgumentsCall());
//       assertEquals(false, node0.isGetterDef());
//       assertEquals(false, node0.isAssign());
//       assertEquals(false, node0.isInc());
//       assertEquals(false, node0.isExprResult());
//       assertEquals(false, node0.isIn());
//       assertEquals(false, node0.isParamList());
//       assertEquals(false, node0.isThis());
//       assertEquals(false, node0.isLabel());
//       assertEquals(false, node0.isWhile());
//       assertEquals(false, node0.isNew());
//       assertEquals(2, node0.getChildCount());
//       assertEquals(false, node0.isTypeOf());
//       assertEquals(false, node0.isCall());
//       assertEquals(false, node0.isStringKey());
//       assertEquals(false, node0.isFor());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(false, node0.isFromExterns());
//       assertEquals(false, node0.isBreak());
//       assertEquals(false, node0.isArrayLit());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(false, node0.isAssignAdd());
//       assertEquals(true, node0.isSyntheticBlock());
//       assertEquals(false, node0.isTrue());
//       assertEquals(false, node0.isCase());
//       assertEquals(false, node0.isReturn());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(false, node0.isVar());
//       assertEquals(false, node0.isHook());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(true, node0.hasChildren());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(false, node0.isAnd());
//       assertEquals(false, node0.isString());
//       assertEquals(false, node0.isRegExp());
//       assertEquals(false, node0.isDec());
//       assertEquals(false, node0.isDebugger());
//       assertEquals(true, node0.isScript());
//       assertEquals(false, node0.isNE());
//       assertEquals(false, node0.isFalse());
//       assertEquals(false, node0.isWith());
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(0, node0.getChangeTime());
//       assertEquals(false, node0.isComma());
//       assertEquals(false, node0.isOr());
//       assertEquals(true, node0.mayMutateArguments());
//       assertEquals(false, node0.isVoid());
//       assertEquals(false, node0.isObjectLit());
//       assertEquals(true, node0.hasMoreThanOneChild());
//       assertEquals(false, node0.isNot());
//       assertEquals(false, node0.isBlock());
//       assertEquals(false, node0.isContinue());
//       assertEquals(1, node0.getLineno());
//       assertEquals(false, node0.isSwitch());
//       assertEquals(false, node0.isFunction());
//       assertEquals(false, node0.isDo());
//       assertEquals(false, node0.isGetElem());
//       assertEquals(4096, node0.getSourcePosition());
//       assertEquals(false, node0.isDefaultCase());
//       assertEquals(false, node0.isSetterDef());
//       assertEquals(false, node0.isNull());
//       assertEquals(false, node0.isAdd());
//       assertEquals(false, node0.isCatch());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(132, node0.getType());
//       assertEquals(0, node0.getCharno());
//       assertEquals(0, node0.getLength());
//       assertEquals(false, node0.isThrow());
//       assertEquals(false, node0.isTry());
//       assertEquals(false, node0.isIf());
//       assertEquals(false, node0.isCast());
//       assertEquals(false, node0.isLabelName());
//       assertEquals(false, node0.hasOneChild());
//       assertEquals(false, node0.isDelProp());
//       assertEquals(false, node0.isInstanceOf());
//       assertEquals(false, node0.isNumber());
//       assertEquals(false, node0.isGetProp());
//       assertEquals(false, node0.isEmpty());
//       assertEquals("[testcode]", node0.getSourceFileName());
//       assertEquals(false, node0.isName());
//       assertEquals(true, node0.mayMutateGlobalStateOrThrow());
//   }

  @Test(timeout = 4000)
  public void test1() {}
//   @Test(timeout = 4000)
//   public void test1()  throws Throwable  {
//       ExploitAssigns exploitAssigns0 = new ExploitAssigns();
//       assertNotNull(exploitAssigns0);
//       
//       Compiler compiler0 = new Compiler();
//       assertNotNull(compiler0);
//       assertEquals(0.0, compiler0.getProgress(), 0.01D);
//       
//       String string0 = "r=7;R=V";
//       Node node0 = compiler0.parseTestCode(string0);
//       assertNotNull(node0);
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(false, node0.isString());
//       assertEquals(false, node0.isRegExp());
//       assertEquals(false, node0.isInc());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(false, node0.isThis());
//       assertEquals(false, node0.isBreak());
//       assertEquals(false, node0.isLabel());
//       assertEquals(false, node0.isSwitch());
//       assertEquals(132, node0.getType());
//       assertEquals(false, node0.isReturn());
//       assertEquals(false, node0.isTypeOf());
//       assertEquals(false, node0.isAnd());
//       assertEquals(false, node0.isDec());
//       assertEquals(false, node0.isComma());
//       assertEquals(false, node0.isAssign());
//       assertEquals(false, node0.isAssignAdd());
//       assertEquals(false, node0.isStringKey());
//       assertEquals("[testcode]", node0.getSourceFileName());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(false, node0.isOnlyModifiesArgumentsCall());
//       assertEquals(2, node0.getChildCount());
//       assertEquals(false, node0.isParamList());
//       assertEquals(false, node0.isHook());
//       assertEquals(false, node0.isEmpty());
//       assertEquals(false, node0.isCase());
//       assertEquals(false, node0.isLabelName());
//       assertEquals(false, node0.isFromExterns());
//       assertEquals(false, node0.isCall());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(0, node0.getChangeTime());
//       assertEquals(false, node0.isNot());
//       assertEquals(false, node0.isDefaultCase());
//       assertEquals(false, node0.isNumber());
//       assertEquals(false, node0.isGetProp());
//       assertEquals(false, node0.isObjectLit());
//       assertEquals(true, node0.isScript());
//       assertEquals(false, node0.isGetElem());
//       assertEquals(false, node0.isVoid());
//       assertEquals(false, node0.isInstanceOf());
//       assertEquals(1, node0.getLineno());
//       assertEquals(false, node0.isArrayLit());
//       assertEquals(false, node0.isOr());
//       assertEquals(false, node0.isWith());
//       assertEquals(true, node0.mayMutateGlobalStateOrThrow());
//       assertEquals(true, node0.mayMutateArguments());
//       assertEquals(4096, node0.getSourcePosition());
//       assertEquals(false, node0.isDo());
//       assertEquals(false, node0.isSetterDef());
//       assertEquals(false, node0.isDebugger());
//       assertEquals(true, node0.hasMoreThanOneChild());
//       assertEquals(false, node0.isDelProp());
//       assertEquals(false, node0.isName());
//       assertEquals(false, node0.isBlock());
//       assertEquals(false, node0.isExprResult());
//       assertEquals(false, node0.isNew());
//       assertEquals(false, node0.isWhile());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(false, node0.isCatch());
//       assertEquals(false, node0.isTry());
//       assertEquals(false, node0.isFor());
//       assertEquals(true, node0.isSyntheticBlock());
//       assertEquals(false, node0.isFunction());
//       assertEquals(0, node0.getLength());
//       assertEquals(false, node0.isThrow());
//       assertEquals(false, node0.isFalse());
//       assertEquals(0, node0.getCharno());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(true, node0.hasChildren());
//       assertEquals(false, node0.isAdd());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(false, node0.isIn());
//       assertEquals(false, node0.isNull());
//       assertEquals(false, node0.isGetterDef());
//       assertEquals(false, node0.isContinue());
//       assertEquals(false, node0.isVar());
//       assertEquals(false, node0.isNE());
//       assertEquals(false, node0.isIf());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(false, node0.isTrue());
//       assertEquals(false, node0.isCast());
//       assertEquals(false, node0.hasOneChild());
//       assertEquals(0.0, compiler0.getProgress(), 0.01D);
//       assertEquals(false, compiler0.hasErrors());
//       assertEquals(0, compiler0.getWarningCount());
//       assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
//       assertEquals(false, compiler0.isTypeCheckingEnabled());
//       assertEquals(false, compiler0.isIdeMode());
//       assertEquals(false, compiler0.acceptConstKeyword());
//       assertEquals(0, compiler0.getErrorCount());
//       
//       Node node1 = exploitAssigns0.optimizeSubtree(node0);
//       assertSame(node0, node1);
//       assertSame(node1, node0);
//       assertNotNull(node1);
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(false, node0.isString());
//       assertEquals(false, node0.isRegExp());
//       assertEquals(false, node0.isInc());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(false, node0.isThis());
//       assertEquals(false, node0.isBreak());
//       assertEquals(false, node0.isLabel());
//       assertEquals(false, node0.isSwitch());
//       assertEquals(132, node0.getType());
//       assertEquals(false, node0.isReturn());
//       assertEquals(false, node0.isTypeOf());
//       assertEquals(false, node0.isAnd());
//       assertEquals(false, node0.isDec());
//       assertEquals(false, node0.isComma());
//       assertEquals(false, node0.isAssign());
//       assertEquals(false, node0.isAssignAdd());
//       assertEquals(false, node0.isStringKey());
//       assertEquals("[testcode]", node0.getSourceFileName());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(false, node0.isOnlyModifiesArgumentsCall());
//       assertEquals(2, node0.getChildCount());
//       assertEquals(false, node0.isParamList());
//       assertEquals(false, node0.isHook());
//       assertEquals(false, node0.isEmpty());
//       assertEquals(false, node0.isCase());
//       assertEquals(false, node0.isLabelName());
//       assertEquals(false, node0.isFromExterns());
//       assertEquals(false, node0.isCall());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(0, node0.getChangeTime());
//       assertEquals(false, node0.isNot());
//       assertEquals(false, node0.isDefaultCase());
//       assertEquals(false, node0.isNumber());
//       assertEquals(false, node0.isGetProp());
//       assertEquals(false, node0.isObjectLit());
//       assertEquals(true, node0.isScript());
//       assertEquals(false, node0.isGetElem());
//       assertEquals(false, node0.isVoid());
//       assertEquals(false, node0.isInstanceOf());
//       assertEquals(1, node0.getLineno());
//       assertEquals(false, node0.isArrayLit());
//       assertEquals(false, node0.isOr());
//       assertEquals(false, node0.isWith());
//       assertEquals(true, node0.mayMutateGlobalStateOrThrow());
//       assertEquals(true, node0.mayMutateArguments());
//       assertEquals(4096, node0.getSourcePosition());
//       assertEquals(false, node0.isDo());
//       assertEquals(false, node0.isSetterDef());
//       assertEquals(false, node0.isDebugger());
//       assertEquals(true, node0.hasMoreThanOneChild());
//       assertEquals(false, node0.isDelProp());
//       assertEquals(false, node0.isName());
//       assertEquals(false, node0.isBlock());
//       assertEquals(false, node0.isExprResult());
//       assertEquals(false, node0.isNew());
//       assertEquals(false, node0.isWhile());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(false, node0.isCatch());
//       assertEquals(false, node0.isTry());
//       assertEquals(false, node0.isFor());
//       assertEquals(true, node0.isSyntheticBlock());
//       assertEquals(false, node0.isFunction());
//       assertEquals(0, node0.getLength());
//       assertEquals(false, node0.isThrow());
//       assertEquals(false, node0.isFalse());
//       assertEquals(0, node0.getCharno());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(true, node0.hasChildren());
//       assertEquals(false, node0.isAdd());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(false, node0.isIn());
//       assertEquals(false, node0.isNull());
//       assertEquals(false, node0.isGetterDef());
//       assertEquals(false, node0.isContinue());
//       assertEquals(false, node0.isVar());
//       assertEquals(false, node0.isNE());
//       assertEquals(false, node0.isIf());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(false, node0.isTrue());
//       assertEquals(false, node0.isCast());
//       assertEquals(false, node0.hasOneChild());
//       assertEquals(0.0, compiler0.getProgress(), 0.01D);
//       assertEquals(false, compiler0.hasErrors());
//       assertEquals(0, compiler0.getWarningCount());
//       assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
//       assertEquals(false, compiler0.isTypeCheckingEnabled());
//       assertEquals(false, compiler0.isIdeMode());
//       assertEquals(false, compiler0.acceptConstKeyword());
//       assertEquals(0, compiler0.getErrorCount());
//       assertEquals(false, node1.hasOneChild());
//       assertEquals(false, node1.isContinue());
//       assertEquals(false, node1.isDo());
//       assertEquals(false, node1.isAssign());
//       assertEquals(false, node1.isComma());
//       assertEquals(false, node1.isDefaultCase());
//       assertEquals(false, node1.isAssignAdd());
//       assertEquals(false, node1.isNot());
//       assertEquals(false, node1.isAnd());
//       assertEquals(false, node1.isOptionalArg());
//       assertEquals(false, node1.isExprResult());
//       assertEquals(false, node1.isTry());
//       assertEquals(true, node1.mayMutateGlobalStateOrThrow());
//       assertEquals(false, node1.isGetProp());
//       assertEquals(false, node1.isStringKey());
//       assertEquals(false, node1.isInc());
//       assertEquals(false, node1.isObjectLit());
//       assertEquals(false, node1.isDelProp());
//       assertEquals(false, node1.isName());
//       assertEquals(false, node1.isNoSideEffectsCall());
//       assertEquals(false, node1.isOnlyModifiesArgumentsCall());
//       assertEquals(false, node1.isString());
//       assertEquals(true, node1.hasChildren());
//       assertEquals(false, node1.isWhile());
//       assertEquals(false, node1.isCall());
//       assertEquals(2, node1.getChildCount());
//       assertEquals(false, node1.isLocalResultCall());
//       assertEquals(true, node1.hasMoreThanOneChild());
//       assertEquals(false, node1.isQuotedString());
//       assertEquals(false, node1.isDec());
//       assertEquals(false, node1.isTrue());
//       assertEquals(false, node1.isRegExp());
//       assertEquals(0, node1.getCharno());
//       assertEquals(false, node1.isParamList());
//       assertEquals(false, node1.isHook());
//       assertEquals(false, node1.isCatch());
//       assertEquals(false, node1.isSetterDef());
//       assertEquals(false, node1.isReturn());
//       assertEquals(false, node1.isOr());
//       assertEquals(false, node1.wasEmptyNode());
//       assertEquals(false, node1.isGetterDef());
//       assertEquals(false, node1.isThrow());
//       assertEquals(false, node1.isNumber());
//       assertEquals(false, node1.isIf());
//       assertEquals(false, node1.isFromExterns());
//       assertEquals(false, node1.isSwitch());
//       assertEquals(false, node1.isVar());
//       assertEquals(false, node1.isCast());
//       assertEquals(false, node1.isVarArgs());
//       assertEquals(true, node1.isSyntheticBlock());
//       assertEquals(132, node1.getType());
//       assertEquals(false, node1.isThis());
//       assertEquals(false, node1.isLabel());
//       assertEquals(false, node1.isNew());
//       assertEquals(false, node1.isIn());
//       assertEquals(false, node1.isWith());
//       assertEquals(false, node1.isVoid());
//       assertEquals(false, node1.isAdd());
//       assertEquals(false, node1.isFor());
//       assertEquals(false, node1.isFalse());
//       assertEquals(false, node1.isTypeOf());
//       assertEquals(false, node1.isDebugger());
//       assertEquals(false, node1.isBreak());
//       assertEquals(true, node1.mayMutateArguments());
//       assertEquals(0, node1.getChangeTime());
//       assertEquals(false, node1.isEmpty());
//       assertEquals(false, node1.isFunction());
//       assertEquals(false, node1.isBlock());
//       assertEquals(false, node1.isCase());
//       assertEquals(0, node1.getLength());
//       assertEquals(false, node1.isNull());
//       assertEquals(1, node1.getLineno());
//       assertEquals(false, node1.isInstanceOf());
//       assertEquals(0, node1.getSideEffectFlags());
//       assertEquals(false, node1.isNE());
//       assertEquals(false, node1.isArrayLit());
//       assertEquals("[testcode]", node1.getSourceFileName());
//       assertEquals(4096, node1.getSourcePosition());
//       assertEquals(false, node1.isOnlyModifiesThisCall());
//       assertEquals(false, node1.isLabelName());
//       assertEquals(false, node1.isGetElem());
//       assertEquals(true, node1.isScript());
//   }

  @Test(timeout = 4000)
  public void test2() {}
//   @Test(timeout = 4000)
//   public void test2()  throws Throwable  {
//       ExploitAssigns exploitAssigns0 = new ExploitAssigns();
//       assertNotNull(exploitAssigns0);
//       
//       Compiler compiler0 = new Compiler();
//       assertNotNull(compiler0);
//       assertEquals(0.0, compiler0.getProgress(), 0.01D);
//       
//       String string0 = "k=R;c.XJ";
//       Node node0 = compiler0.parseTestCode(string0);
//       assertNotNull(node0);
//       assertEquals(1, node0.getLineno());
//       assertEquals(false, node0.isTypeOf());
//       assertEquals(false, node0.isLabelName());
//       assertEquals(false, node0.isOr());
//       assertEquals(false, node0.isOnlyModifiesArgumentsCall());
//       assertEquals(false, node0.isEmpty());
//       assertEquals(true, node0.isSyntheticBlock());
//       assertEquals(true, node0.mayMutateGlobalStateOrThrow());
//       assertEquals(false, node0.isDelProp());
//       assertEquals(true, node0.hasMoreThanOneChild());
//       assertEquals(false, node0.isTry());
//       assertEquals(false, node0.isNot());
//       assertEquals(false, node0.isAssignAdd());
//       assertEquals(false, node0.isCast());
//       assertEquals(false, node0.isDefaultCase());
//       assertEquals(false, node0.isObjectLit());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(true, node0.isScript());
//       assertEquals(false, node0.isNew());
//       assertEquals(false, node0.isVar());
//       assertEquals(false, node0.isHook());
//       assertEquals(4096, node0.getSourcePosition());
//       assertEquals(false, node0.isInstanceOf());
//       assertEquals(false, node0.isParamList());
//       assertEquals(false, node0.isAdd());
//       assertEquals("[testcode]", node0.getSourceFileName());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(false, node0.isCall());
//       assertEquals(0, node0.getCharno());
//       assertEquals(false, node0.isLabel());
//       assertEquals(false, node0.isAssign());
//       assertEquals(0, node0.getChangeTime());
//       assertEquals(false, node0.isStringKey());
//       assertEquals(false, node0.isString());
//       assertEquals(false, node0.hasOneChild());
//       assertEquals(false, node0.isFunction());
//       assertEquals(false, node0.isDo());
//       assertEquals(false, node0.isNull());
//       assertEquals(false, node0.isExprResult());
//       assertEquals(false, node0.isVoid());
//       assertEquals(false, node0.isWith());
//       assertEquals(false, node0.isNumber());
//       assertEquals(false, node0.isGetterDef());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(false, node0.isWhile());
//       assertEquals(false, node0.isArrayLit());
//       assertEquals(false, node0.isBreak());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(true, node0.mayMutateArguments());
//       assertEquals(false, node0.isSwitch());
//       assertEquals(false, node0.isName());
//       assertEquals(132, node0.getType());
//       assertEquals(true, node0.hasChildren());
//       assertEquals(false, node0.isFalse());
//       assertEquals(false, node0.isDebugger());
//       assertEquals(2, node0.getChildCount());
//       assertEquals(0, node0.getLength());
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(false, node0.isInc());
//       assertEquals(false, node0.isTrue());
//       assertEquals(false, node0.isBlock());
//       assertEquals(false, node0.isComma());
//       assertEquals(false, node0.isCatch());
//       assertEquals(false, node0.isAnd());
//       assertEquals(false, node0.isSetterDef());
//       assertEquals(false, node0.isRegExp());
//       assertEquals(false, node0.isReturn());
//       assertEquals(false, node0.isContinue());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(false, node0.isCase());
//       assertEquals(false, node0.isFor());
//       assertEquals(false, node0.isIf());
//       assertEquals(false, node0.isGetElem());
//       assertEquals(false, node0.isNE());
//       assertEquals(false, node0.isGetProp());
//       assertEquals(false, node0.isIn());
//       assertEquals(false, node0.isThrow());
//       assertEquals(false, node0.isThis());
//       assertEquals(false, node0.isFromExterns());
//       assertEquals(false, node0.isDec());
//       assertEquals(false, compiler0.acceptConstKeyword());
//       assertEquals(0.0, compiler0.getProgress(), 0.01D);
//       assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
//       assertEquals(0, compiler0.getWarningCount());
//       assertEquals(false, compiler0.hasErrors());
//       assertEquals(0, compiler0.getErrorCount());
//       assertEquals(false, compiler0.isTypeCheckingEnabled());
//       assertEquals(false, compiler0.isIdeMode());
//       
//       Node node1 = exploitAssigns0.optimizeSubtree(node0);
//       assertSame(node0, node1);
//       assertSame(node1, node0);
//       assertNotNull(node1);
//       assertEquals(1, node0.getLineno());
//       assertEquals(false, node0.isTypeOf());
//       assertEquals(false, node0.isLabelName());
//       assertEquals(false, node0.isOr());
//       assertEquals(false, node0.isOnlyModifiesArgumentsCall());
//       assertEquals(false, node0.isEmpty());
//       assertEquals(true, node0.isSyntheticBlock());
//       assertEquals(true, node0.mayMutateGlobalStateOrThrow());
//       assertEquals(false, node0.isDelProp());
//       assertEquals(true, node0.hasMoreThanOneChild());
//       assertEquals(false, node0.isTry());
//       assertEquals(false, node0.isNot());
//       assertEquals(false, node0.isAssignAdd());
//       assertEquals(false, node0.isCast());
//       assertEquals(false, node0.isDefaultCase());
//       assertEquals(false, node0.isObjectLit());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(true, node0.isScript());
//       assertEquals(false, node0.isNew());
//       assertEquals(false, node0.isVar());
//       assertEquals(false, node0.isHook());
//       assertEquals(4096, node0.getSourcePosition());
//       assertEquals(false, node0.isInstanceOf());
//       assertEquals(false, node0.isParamList());
//       assertEquals(false, node0.isAdd());
//       assertEquals("[testcode]", node0.getSourceFileName());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(false, node0.isCall());
//       assertEquals(0, node0.getCharno());
//       assertEquals(false, node0.isLabel());
//       assertEquals(false, node0.isAssign());
//       assertEquals(0, node0.getChangeTime());
//       assertEquals(false, node0.isStringKey());
//       assertEquals(false, node0.isString());
//       assertEquals(false, node0.hasOneChild());
//       assertEquals(false, node0.isFunction());
//       assertEquals(false, node0.isDo());
//       assertEquals(false, node0.isNull());
//       assertEquals(false, node0.isExprResult());
//       assertEquals(false, node0.isVoid());
//       assertEquals(false, node0.isWith());
//       assertEquals(false, node0.isNumber());
//       assertEquals(false, node0.isGetterDef());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(false, node0.isWhile());
//       assertEquals(false, node0.isArrayLit());
//       assertEquals(false, node0.isBreak());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(true, node0.mayMutateArguments());
//       assertEquals(false, node0.isSwitch());
//       assertEquals(false, node0.isName());
//       assertEquals(132, node0.getType());
//       assertEquals(true, node0.hasChildren());
//       assertEquals(false, node0.isFalse());
//       assertEquals(false, node0.isDebugger());
//       assertEquals(2, node0.getChildCount());
//       assertEquals(0, node0.getLength());
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(false, node0.isInc());
//       assertEquals(false, node0.isTrue());
//       assertEquals(false, node0.isBlock());
//       assertEquals(false, node0.isComma());
//       assertEquals(false, node0.isCatch());
//       assertEquals(false, node0.isAnd());
//       assertEquals(false, node0.isSetterDef());
//       assertEquals(false, node0.isRegExp());
//       assertEquals(false, node0.isReturn());
//       assertEquals(false, node0.isContinue());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(false, node0.isCase());
//       assertEquals(false, node0.isFor());
//       assertEquals(false, node0.isIf());
//       assertEquals(false, node0.isGetElem());
//       assertEquals(false, node0.isNE());
//       assertEquals(false, node0.isGetProp());
//       assertEquals(false, node0.isIn());
//       assertEquals(false, node0.isThrow());
//       assertEquals(false, node0.isThis());
//       assertEquals(false, node0.isFromExterns());
//       assertEquals(false, node0.isDec());
//       assertEquals(false, node1.isTry());
//       assertEquals(false, node1.isOnlyModifiesThisCall());
//       assertEquals(132, node1.getType());
//       assertEquals(false, node1.isSwitch());
//       assertEquals(false, node1.isObjectLit());
//       assertEquals(false, node1.isIf());
//       assertEquals(false, node1.isTrue());
//       assertEquals(0, node1.getLength());
//       assertEquals(false, node1.isFunction());
//       assertEquals(true, node1.hasMoreThanOneChild());
//       assertEquals(false, node1.isGetterDef());
//       assertEquals(false, node1.isBreak());
//       assertEquals(false, node1.isIn());
//       assertEquals(false, node1.isRegExp());
//       assertEquals(false, node1.isFor());
//       assertEquals(1, node1.getLineno());
//       assertEquals(false, node1.isEmpty());
//       assertEquals(false, node1.isHook());
//       assertEquals(false, node1.isAssignAdd());
//       assertEquals("[testcode]", node1.getSourceFileName());
//       assertEquals(false, node1.isNE());
//       assertEquals(false, node1.isAdd());
//       assertEquals(false, node1.isParamList());
//       assertEquals(true, node1.isScript());
//       assertEquals(false, node1.isFalse());
//       assertEquals(false, node1.isDebugger());
//       assertEquals(false, node1.isNull());
//       assertEquals(false, node1.isInc());
//       assertEquals(false, node1.isString());
//       assertEquals(false, node1.isDefaultCase());
//       assertEquals(2, node1.getChildCount());
//       assertEquals(false, node1.isLocalResultCall());
//       assertEquals(0, node1.getCharno());
//       assertEquals(false, node1.hasOneChild());
//       assertEquals(false, node1.isExprResult());
//       assertEquals(false, node1.isDo());
//       assertEquals(false, node1.isNot());
//       assertEquals(false, node1.isBlock());
//       assertEquals(false, node1.isInstanceOf());
//       assertEquals(0, node1.getChangeTime());
//       assertEquals(true, node1.hasChildren());
//       assertEquals(false, node1.isVar());
//       assertEquals(false, node1.isVarArgs());
//       assertEquals(false, node1.isGetElem());
//       assertEquals(false, node1.isLabel());
//       assertEquals(true, node1.isSyntheticBlock());
//       assertEquals(false, node1.isWith());
//       assertEquals(false, node1.isWhile());
//       assertEquals(4096, node1.getSourcePosition());
//       assertEquals(false, node1.isOr());
//       assertEquals(true, node1.mayMutateArguments());
//       assertEquals(false, node1.isNew());
//       assertEquals(false, node1.isComma());
//       assertEquals(false, node1.isLabelName());
//       assertEquals(false, node1.isCase());
//       assertEquals(false, node1.isDelProp());
//       assertEquals(false, node1.isAnd());
//       assertEquals(false, node1.isGetProp());
//       assertEquals(false, node1.isName());
//       assertEquals(false, node1.isQuotedString());
//       assertEquals(false, node1.isOptionalArg());
//       assertEquals(false, node1.isCast());
//       assertEquals(false, node1.isReturn());
//       assertEquals(false, node1.isCall());
//       assertEquals(false, node1.wasEmptyNode());
//       assertEquals(true, node1.mayMutateGlobalStateOrThrow());
//       assertEquals(0, node1.getSideEffectFlags());
//       assertEquals(false, node1.isNoSideEffectsCall());
//       assertEquals(false, node1.isContinue());
//       assertEquals(false, node1.isTypeOf());
//       assertEquals(false, node1.isOnlyModifiesArgumentsCall());
//       assertEquals(false, node1.isStringKey());
//       assertEquals(false, node1.isDec());
//       assertEquals(false, node1.isSetterDef());
//       assertEquals(false, node1.isVoid());
//       assertEquals(false, node1.isAssign());
//       assertEquals(false, node1.isThis());
//       assertEquals(false, node1.isThrow());
//       assertEquals(false, node1.isCatch());
//       assertEquals(false, node1.isArrayLit());
//       assertEquals(false, node1.isNumber());
//       assertEquals(false, node1.isFromExterns());
//       assertEquals(false, compiler0.acceptConstKeyword());
//       assertEquals(0.0, compiler0.getProgress(), 0.01D);
//       assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
//       assertEquals(0, compiler0.getWarningCount());
//       assertEquals(false, compiler0.hasErrors());
//       assertEquals(0, compiler0.getErrorCount());
//       assertEquals(false, compiler0.isTypeCheckingEnabled());
//       assertEquals(false, compiler0.isIdeMode());
//   }
}
