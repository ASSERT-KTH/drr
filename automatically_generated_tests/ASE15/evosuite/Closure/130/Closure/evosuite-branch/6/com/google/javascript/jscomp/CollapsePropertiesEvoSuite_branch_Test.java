/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 20:37:44 GMT 2014
 */

package com.google.javascript.jscomp;

import static org.junit.Assert.*;
import org.junit.Test;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.CollapseProperties;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.Normalize;
import com.google.javascript.rhino.Node;
import java.io.PrintStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
 import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

 
public class CollapsePropertiesEvoSuite_branch_Test   {

  @Test
  public void test0() {}
//   @Test
//   public void test0()  throws Throwable  {
//       String string0 = "Vi|0S>]?=r0p$kH3v";
//       MockPrintStream mockPrintStream0 = new MockPrintStream(string0);
//       assertNotNull(mockPrintStream0);
//       
//       Compiler compiler0 = new Compiler((PrintStream) mockPrintStream0);
//       assertNotNull(compiler0);
//       assertEquals(0.0, compiler0.getProgress(), 0.01D);
//       
//       NodeTraversal.Callback nodeTraversal_Callback0 = null;
//       NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) compiler0, nodeTraversal_Callback0);
//       assertNotNull(nodeTraversal0);
//       assertEquals(0.0, compiler0.getProgress(), 0.01D);
//       assertEquals(0, nodeTraversal0.getLineNumber());
//       assertEquals("", nodeTraversal0.getSourceName());
//       
//       boolean boolean0 = true;
//       CollapseProperties collapseProperties0 = new CollapseProperties(compiler0, boolean0, boolean0);
//       assertNotNull(collapseProperties0);
//       assertEquals(0.0, compiler0.getProgress(), 0.01D);
//       
//       Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, string0);
//       assertNotNull(node0);
//       assertEquals(false, node0.isFunction());
//       assertEquals(false, node0.isTrue());
//       assertEquals("[testcode]", node0.getSourceFileName());
//       assertEquals(false, node0.isCase());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(false, node0.isNot());
//       assertEquals(false, node0.isInstanceOf());
//       assertEquals(false, node0.isFalse());
//       assertEquals(false, node0.isFromExterns());
//       assertEquals(false, node0.isGetterDef());
//       assertEquals(false, node0.isDelProp());
//       assertEquals(false, node0.isContinue());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(false, node0.isComma());
//       assertEquals(false, node0.isObjectLit());
//       assertEquals(false, node0.isAssignAdd());
//       assertEquals(false, node0.isAnd());
//       assertEquals(false, node0.isArrayLit());
//       assertEquals(false, node0.isNumber());
//       assertEquals(false, node0.isBreak());
//       assertEquals(false, node0.isName());
//       assertEquals(-1, node0.getCharno());
//       assertEquals(false, node0.isExprResult());
//       assertEquals(false, node0.isDebugger());
//       assertEquals(false, node0.isThis());
//       assertEquals(false, node0.isRegExp());
//       assertEquals(false, node0.isReturn());
//       assertEquals(true, node0.isScript());
//       assertEquals(false, node0.isEmpty());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(false, node0.isLabelName());
//       assertEquals(false, node0.isThrow());
//       assertEquals(false, node0.isParamList());
//       assertEquals(-1, node0.getLineno());
//       assertEquals(false, node0.isLabel());
//       assertEquals(false, node0.isDefaultCase());
//       assertEquals(-1, node0.getSourcePosition());
//       assertEquals(false, node0.isSetterDef());
//       assertEquals(false, node0.isOr());
//       assertEquals(132, node0.getType());
//       assertEquals(false, node0.isGetElem());
//       assertEquals(false, node0.isAdd());
//       assertEquals(false, node0.isWhile());
//       assertEquals(false, node0.isAssign());
//       assertEquals(false, node0.isCall());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(false, node0.isTypeOf());
//       assertEquals(false, node0.isWith());
//       assertEquals(false, node0.isNew());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(false, node0.isDec());
//       assertEquals(false, node0.isSyntheticBlock());
//       assertEquals(false, node0.isIf());
//       assertEquals(false, node0.isVar());
//       assertEquals(false, node0.isTry());
//       assertEquals(false, node0.isVoid());
//       assertEquals(false, node0.hasMoreThanOneChild());
//       assertEquals(false, node0.isIn());
//       assertEquals(false, node0.isGetProp());
//       assertEquals(false, node0.hasOneChild());
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(false, node0.isSwitch());
//       assertEquals(false, node0.hasChildren());
//       assertEquals(false, node0.isHook());
//       assertEquals(false, node0.isBlock());
//       assertEquals(false, node0.isDo());
//       assertEquals(0, node0.getChildCount());
//       assertEquals(false, node0.isStringKey());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(0, node0.getLength());
//       assertEquals(false, node0.isNull());
//       assertEquals(false, node0.isFor());
//       assertEquals(false, node0.isCatch());
//       assertEquals(false, node0.isCast());
//       assertEquals(false, node0.isNE());
//       assertEquals(false, node0.isString());
//       assertEquals(false, node0.isInc());
//       assertEquals(true, compiler0.hasErrors());
//       assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
//       assertEquals(0.0, compiler0.getProgress(), 0.01D);
//       assertEquals(false, compiler0.acceptConstKeyword());
//       assertEquals(1, compiler0.getErrorCount());
//       assertEquals(0, compiler0.getWarningCount());
//       assertEquals(false, compiler0.isIdeMode());
//       assertEquals(false, compiler0.isTypeCheckingEnabled());
//       
//       collapseProperties0.process(node0, node0);
//       assertEquals(false, node0.isFunction());
//       assertEquals(false, node0.isTrue());
//       assertEquals("[testcode]", node0.getSourceFileName());
//       assertEquals(false, node0.isCase());
//       assertEquals(false, node0.isLocalResultCall());
//       assertEquals(false, node0.isNot());
//       assertEquals(false, node0.isInstanceOf());
//       assertEquals(false, node0.isFalse());
//       assertEquals(false, node0.isFromExterns());
//       assertEquals(false, node0.isGetterDef());
//       assertEquals(false, node0.isDelProp());
//       assertEquals(false, node0.isContinue());
//       assertEquals(false, node0.isNoSideEffectsCall());
//       assertEquals(false, node0.isComma());
//       assertEquals(false, node0.isObjectLit());
//       assertEquals(false, node0.isAssignAdd());
//       assertEquals(false, node0.isAnd());
//       assertEquals(false, node0.isArrayLit());
//       assertEquals(false, node0.isNumber());
//       assertEquals(false, node0.isBreak());
//       assertEquals(false, node0.isName());
//       assertEquals(-1, node0.getCharno());
//       assertEquals(false, node0.isExprResult());
//       assertEquals(false, node0.isDebugger());
//       assertEquals(false, node0.isThis());
//       assertEquals(false, node0.isRegExp());
//       assertEquals(false, node0.isReturn());
//       assertEquals(true, node0.isScript());
//       assertEquals(false, node0.isEmpty());
//       assertEquals(false, node0.isOnlyModifiesThisCall());
//       assertEquals(false, node0.isLabelName());
//       assertEquals(false, node0.isThrow());
//       assertEquals(false, node0.isParamList());
//       assertEquals(-1, node0.getLineno());
//       assertEquals(false, node0.isLabel());
//       assertEquals(false, node0.isDefaultCase());
//       assertEquals(-1, node0.getSourcePosition());
//       assertEquals(false, node0.isSetterDef());
//       assertEquals(false, node0.isOr());
//       assertEquals(132, node0.getType());
//       assertEquals(false, node0.isGetElem());
//       assertEquals(false, node0.isAdd());
//       assertEquals(false, node0.isWhile());
//       assertEquals(false, node0.isAssign());
//       assertEquals(false, node0.isCall());
//       assertEquals(false, node0.isQuotedString());
//       assertEquals(false, node0.isOptionalArg());
//       assertEquals(false, node0.isTypeOf());
//       assertEquals(false, node0.isWith());
//       assertEquals(false, node0.isNew());
//       assertEquals(0, node0.getSideEffectFlags());
//       assertEquals(false, node0.isDec());
//       assertEquals(false, node0.isSyntheticBlock());
//       assertEquals(false, node0.isIf());
//       assertEquals(false, node0.isVar());
//       assertEquals(false, node0.isTry());
//       assertEquals(false, node0.isVoid());
//       assertEquals(false, node0.hasMoreThanOneChild());
//       assertEquals(false, node0.isIn());
//       assertEquals(false, node0.isGetProp());
//       assertEquals(false, node0.hasOneChild());
//       assertEquals(false, node0.isVarArgs());
//       assertEquals(false, node0.isSwitch());
//       assertEquals(false, node0.hasChildren());
//       assertEquals(false, node0.isHook());
//       assertEquals(false, node0.isBlock());
//       assertEquals(false, node0.isDo());
//       assertEquals(0, node0.getChildCount());
//       assertEquals(false, node0.isStringKey());
//       assertEquals(false, node0.wasEmptyNode());
//       assertEquals(0, node0.getLength());
//       assertEquals(false, node0.isNull());
//       assertEquals(false, node0.isFor());
//       assertEquals(false, node0.isCatch());
//       assertEquals(false, node0.isCast());
//       assertEquals(false, node0.isNE());
//       assertEquals(false, node0.isString());
//       assertEquals(false, node0.isInc());
//       assertEquals(true, compiler0.hasErrors());
//       assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
//       assertEquals(0.0, compiler0.getProgress(), 0.01D);
//       assertEquals(false, compiler0.acceptConstKeyword());
//       assertEquals(1, compiler0.getErrorCount());
//       assertEquals(0, compiler0.getWarningCount());
//       assertEquals(false, compiler0.isIdeMode());
//       assertEquals(false, compiler0.isTypeCheckingEnabled());
//   }
}
