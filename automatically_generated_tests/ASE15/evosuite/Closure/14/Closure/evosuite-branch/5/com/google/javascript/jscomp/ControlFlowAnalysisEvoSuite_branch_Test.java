/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 11 21:44:36 GMT 2014
 */

package com.google.javascript.jscomp;

import static org.junit.Assert.*;
import org.junit.Test;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.ControlFlowAnalysis;
import com.google.javascript.jscomp.ControlFlowGraph;
import com.google.javascript.jscomp.DefaultPassConfig;
import com.google.javascript.jscomp.MemoizedScopeCreator;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.Normalize;
import com.google.javascript.jscomp.ScopeCreator;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import java.io.PrintStream;
import java.util.List;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
 import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.mock.java.lang.MockIllegalStateException;
import org.evosuite.runtime.mock.java.lang.MockRuntimeException;
import org.junit.runner.RunWith;

 
public class ControlFlowAnalysisEvoSuite_branch_Test   {

  @Test
  public void test00()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      assertNotNull(simpleErrorReporter0);
      
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) simpleErrorReporter0);
      assertNotNull(jSTypeRegistry0);
      assertEquals(false, jSTypeRegistry0.shouldTolerateUndefinedValues());
      
      Stack<JSType> stack0 = new Stack<JSType>();
      assertNotNull(stack0);
      assertEquals("[]", stack0.toString());
      assertEquals(10, stack0.capacity());
      assertEquals(true, stack0.isEmpty());
      assertEquals(0, stack0.size());
      assertEquals(true, stack0.empty());
      
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      assertNotNull(node0);
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFor());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLabel());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCase());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isSetterDef());
      assertEquals(true, node0.isParamList());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(83, node0.getType());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isCall());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isOr());
      assertEquals(-1, node0.getCharno());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isCatch());
      assertEquals(false, jSTypeRegistry0.shouldTolerateUndefinedValues());
      assertEquals("[]", stack0.toString());
      assertEquals(10, stack0.capacity());
      assertEquals(true, stack0.isEmpty());
      assertEquals(0, stack0.size());
      assertEquals(true, stack0.empty());
      
      // Undeclared exception!
      try {
        Node node1 = ControlFlowAnalysis.getExceptionHandler(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test01()  throws Throwable  {
      int int0 = 125;
      String string0 = "b~cL?( ";
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isQuotedString());
      assertEquals(125, node0.getLineno());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isWhile());
      assertEquals(125, node0.getType());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isStringKey());
      assertEquals(125, node0.getCharno());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDebugger());
      assertEquals(true, node0.isBlock());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDelProp());
      assertEquals(512125, node0.getSourcePosition());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isComma());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDo());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isReturn());
      
      // Undeclared exception!
      try {
        Node node1 = ControlFlowAnalysis.getExceptionHandler(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test02()  throws Throwable  {
      int int0 = 113;
      String string0 = "b~cL?( ";
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertNotNull(node0);
      assertEquals(462961, node0.getSourcePosition());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(113, node0.getCharno());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isArrayLit());
      assertEquals(113, node0.getType());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isStringKey());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCatch());
      assertEquals(113, node0.getLineno());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isLabel());
      assertEquals(true, node0.isWhile());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTrue());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isGetElem());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNew());
      
      boolean boolean0 = ControlFlowAnalysis.isContinueStructure(node0);
      assertEquals(462961, node0.getSourcePosition());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(113, node0.getCharno());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isArrayLit());
      assertEquals(113, node0.getType());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isStringKey());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCatch());
      assertEquals(113, node0.getLineno());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isLabel());
      assertEquals(true, node0.isWhile());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTrue());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isGetElem());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNew());
      assertTrue(boolean0);
  }

  @Test
  public void test03()  throws Throwable  {
      boolean boolean0 = true;
      int int0 = 115;
      String string0 = "b~cL( ";
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertNotNull(node0);
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVoid());
      assertEquals(115, node0.getLineno());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isParamList());
      assertEquals(true, node0.isFor());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTry());
      assertEquals(471155, node0.getSourcePosition());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isExprResult());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isIn());
      assertEquals(115, node0.getCharno());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCatch());
      assertEquals(115, node0.getType());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isWith());
      
      boolean boolean1 = ControlFlowAnalysis.isBreakStructure(node0, boolean0);
      assertTrue(boolean0 == boolean1);
      assertTrue(boolean1 == boolean0);
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVoid());
      assertEquals(115, node0.getLineno());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isParamList());
      assertEquals(true, node0.isFor());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTry());
      assertEquals(471155, node0.getSourcePosition());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isExprResult());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isIn());
      assertEquals(115, node0.getCharno());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isFunction());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCatch());
      assertEquals(115, node0.getType());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isWith());
      assertTrue(boolean1);
  }

  @Test
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      assertFalse(boolean0);
      
      int int0 = 110;
      String string0 = "{rH=jlHP@";
      Node node0 = Node.newString(int0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isExprResult());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isThis());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getChildCount());
      assertEquals(true, node0.isSwitch());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetterDef());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSetterDef());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isQuotedString());
      assertEquals(110, node0.getType());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isIf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isFalse());
      
      boolean boolean1 = ControlFlowAnalysis.isBreakStructure(node0, boolean0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean0 == boolean1);
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isExprResult());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isThis());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getChildCount());
      assertEquals(true, node0.isSwitch());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isGetterDef());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSetterDef());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isQuotedString());
      assertEquals(110, node0.getType());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isIf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isFalse());
      assertTrue(boolean1);
  }

  @Test
  public void test05()  throws Throwable  {
      int int0 = 85;
      AbstractCompiler abstractCompiler0 = null;
      boolean boolean0 = true;
      String string0 = "Ck*I4V9-r";
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(abstractCompiler0, boolean0, boolean0);
      assertNotNull(controlFlowAnalysis0);
      
      Node node0 = Node.newNumber((double) int0);
      assertNotNull(node0);
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isParamList());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasChildren());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAnd());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isIf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNot());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isThrow());
      
      int int1 = 35;
      Node node1 = Node.newString(int1, string0, int0, int0);
      assertFalse(node1.equals((Object)node0));
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
      assertNotNull(node1);
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isWith());
      assertEquals(85, node1.getCharno());
      assertEquals(348245, node1.getSourcePosition());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isString());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isStringKey());
      assertEquals(true, node1.isGetElem());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isGetterDef());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isDec());
      assertEquals(35, node1.getType());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isArrayLit());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isBlock());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isNull());
      assertEquals(85, node1.getLineno());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isNE());
      assertNotSame(node1, node0);
      
      Node node2 = new Node(int0, node0, node0, node1, int0, int0);
      assertFalse(node1.equals((Object)node2));
      assertFalse(node1.equals((Object)node0));
      assertFalse(int1 == int0);
      assertFalse(node0.equals((Object)node1));
      assertFalse(node0.equals((Object)node2));
      assertFalse(node2.equals((Object)node0));
      assertFalse(node2.equals((Object)node1));
      assertFalse(int0 == int1);
      assertNotNull(node2);
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isWith());
      assertEquals(85, node1.getCharno());
      assertEquals(348245, node1.getSourcePosition());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isString());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isStringKey());
      assertEquals(true, node1.isGetElem());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isGetterDef());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isDec());
      assertEquals(35, node1.getType());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isArrayLit());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isBlock());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isNull());
      assertEquals(85, node1.getLineno());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isNE());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isParamList());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasChildren());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAnd());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isIf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNot());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isThrow());
      assertEquals(2, node2.getChildCount());
      assertEquals(false, node2.isOr());
      assertEquals(false, node2.isFor());
      assertEquals(false, node2.isReturn());
      assertEquals(false, node2.isLocalResultCall());
      assertEquals(false, node2.isFalse());
      assertEquals(false, node2.isAssignAdd());
      assertEquals(false, node2.isFunction());
      assertEquals(85, node2.getCharno());
      assertEquals(false, node2.isTrue());
      assertEquals(false, node2.isContinue());
      assertEquals(false, node2.isGetElem());
      assertEquals(false, node2.isGetterDef());
      assertEquals(false, node2.isIn());
      assertEquals(true, node2.hasMoreThanOneChild());
      assertEquals(false, node2.isExprResult());
      assertEquals(false, node2.isStringKey());
      assertEquals(false, node2.isInc());
      assertEquals(false, node2.isParamList());
      assertEquals(false, node2.isHook());
      assertEquals(false, node2.isFromExterns());
      assertEquals(false, node2.isLabelName());
      assertEquals(false, node2.isDebugger());
      assertEquals(false, node2.isInstanceOf());
      assertEquals(85, node2.getLineno());
      assertEquals(false, node2.isDec());
      assertEquals(85, node2.getType());
      assertEquals(false, node2.isSetterDef());
      assertEquals(false, node2.isCall());
      assertEquals(false, node2.isName());
      assertEquals(false, node2.isBreak());
      assertEquals(false, node2.isArrayLit());
      assertEquals(false, node2.isIf());
      assertEquals(false, node2.isRegExp());
      assertEquals(348245, node2.getSourcePosition());
      assertEquals(false, node2.isCatch());
      assertEquals(false, node2.isThrow());
      assertEquals(0, node2.getLength());
      assertEquals(false, node2.isVarArgs());
      assertEquals(true, node2.isComma());
      assertEquals(false, node2.isLabel());
      assertEquals(false, node2.isWith());
      assertEquals(false, node2.isOnlyModifiesThisCall());
      assertEquals(false, node2.wasEmptyNode());
      assertEquals(false, node2.isQuotedString());
      assertEquals(false, node2.isAdd());
      assertEquals(false, node2.isEmpty());
      assertEquals(false, node2.isString());
      assertEquals(false, node2.isTypeOf());
      assertEquals(false, node2.isNot());
      assertEquals(false, node2.isOptionalArg());
      assertEquals(false, node2.isAssign());
      assertEquals(false, node2.isNoSideEffectsCall());
      assertEquals(false, node2.isDefaultCase());
      assertEquals(false, node2.isVoid());
      assertEquals(false, node2.isTry());
      assertEquals(false, node2.isObjectLit());
      assertEquals(false, node2.isDo());
      assertEquals(false, node2.isNew());
      assertEquals(false, node2.isDelProp());
      assertEquals(false, node2.isCase());
      assertEquals(false, node2.isAnd());
      assertEquals(false, node2.isVar());
      assertEquals(false, node2.isGetProp());
      assertEquals(false, node2.isScript());
      assertEquals(false, node2.isNumber());
      assertEquals(false, node2.isSyntheticBlock());
      assertEquals(true, node2.hasChildren());
      assertEquals(false, node2.isNE());
      assertEquals(false, node2.isSwitch());
      assertEquals(false, node2.isBlock());
      assertEquals(0, node2.getSideEffectFlags());
      assertNull(node2.getSourceFileName());
      assertEquals(false, node2.isWhile());
      assertEquals(false, node2.isNull());
      assertEquals(false, node2.isThis());
      assertEquals(false, node2.hasOneChild());
      assertNotSame(node1, node2);
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertNotSame(node0, node2);
      assertNotSame(node2, node0);
      assertNotSame(node2, node1);
      
      controlFlowAnalysis0.process(node0, node2);
      assertFalse(node1.equals((Object)node2));
      assertFalse(node1.equals((Object)node0));
      assertFalse(int1 == int0);
      assertFalse(node0.equals((Object)node1));
      assertFalse(node0.equals((Object)node2));
      assertFalse(node2.equals((Object)node0));
      assertFalse(node2.equals((Object)node1));
      assertFalse(int0 == int1);
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isWith());
      assertEquals(85, node1.getCharno());
      assertEquals(348245, node1.getSourcePosition());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isString());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isStringKey());
      assertEquals(true, node1.isGetElem());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isGetterDef());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isDec());
      assertEquals(35, node1.getType());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isArrayLit());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isBlock());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isNull());
      assertEquals(85, node1.getLineno());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isNE());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isParamList());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasChildren());
      assertEquals(0, node0.getLength());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isAnd());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isSetterDef());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isIf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNot());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNE());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isThrow());
      assertEquals(2, node2.getChildCount());
      assertEquals(false, node2.isOr());
      assertEquals(false, node2.isFor());
      assertEquals(false, node2.isReturn());
      assertEquals(false, node2.isLocalResultCall());
      assertEquals(false, node2.isFalse());
      assertEquals(false, node2.isAssignAdd());
      assertEquals(false, node2.isFunction());
      assertEquals(85, node2.getCharno());
      assertEquals(false, node2.isTrue());
      assertEquals(false, node2.isContinue());
      assertEquals(false, node2.isGetElem());
      assertEquals(false, node2.isGetterDef());
      assertEquals(false, node2.isIn());
      assertEquals(true, node2.hasMoreThanOneChild());
      assertEquals(false, node2.isExprResult());
      assertEquals(false, node2.isStringKey());
      assertEquals(false, node2.isInc());
      assertEquals(false, node2.isParamList());
      assertEquals(false, node2.isHook());
      assertEquals(false, node2.isFromExterns());
      assertEquals(false, node2.isLabelName());
      assertEquals(false, node2.isDebugger());
      assertEquals(false, node2.isInstanceOf());
      assertEquals(85, node2.getLineno());
      assertEquals(false, node2.isDec());
      assertEquals(85, node2.getType());
      assertEquals(false, node2.isSetterDef());
      assertEquals(false, node2.isCall());
      assertEquals(false, node2.isName());
      assertEquals(false, node2.isBreak());
      assertEquals(false, node2.isArrayLit());
      assertEquals(false, node2.isIf());
      assertEquals(false, node2.isRegExp());
      assertEquals(348245, node2.getSourcePosition());
      assertEquals(false, node2.isCatch());
      assertEquals(false, node2.isThrow());
      assertEquals(0, node2.getLength());
      assertEquals(false, node2.isVarArgs());
      assertEquals(true, node2.isComma());
      assertEquals(false, node2.isLabel());
      assertEquals(false, node2.isWith());
      assertEquals(false, node2.isOnlyModifiesThisCall());
      assertEquals(false, node2.wasEmptyNode());
      assertEquals(false, node2.isQuotedString());
      assertEquals(false, node2.isAdd());
      assertEquals(false, node2.isEmpty());
      assertEquals(false, node2.isString());
      assertEquals(false, node2.isTypeOf());
      assertEquals(false, node2.isNot());
      assertEquals(false, node2.isOptionalArg());
      assertEquals(false, node2.isAssign());
      assertEquals(false, node2.isNoSideEffectsCall());
      assertEquals(false, node2.isDefaultCase());
      assertEquals(false, node2.isVoid());
      assertEquals(false, node2.isTry());
      assertEquals(false, node2.isObjectLit());
      assertEquals(false, node2.isDo());
      assertEquals(false, node2.isNew());
      assertEquals(false, node2.isDelProp());
      assertEquals(false, node2.isCase());
      assertEquals(false, node2.isAnd());
      assertEquals(false, node2.isVar());
      assertEquals(false, node2.isGetProp());
      assertEquals(false, node2.isScript());
      assertEquals(false, node2.isNumber());
      assertEquals(false, node2.isSyntheticBlock());
      assertEquals(true, node2.hasChildren());
      assertEquals(false, node2.isNE());
      assertEquals(false, node2.isSwitch());
      assertEquals(false, node2.isBlock());
      assertEquals(0, node2.getSideEffectFlags());
      assertNull(node2.getSourceFileName());
      assertEquals(false, node2.isWhile());
      assertEquals(false, node2.isNull());
      assertEquals(false, node2.isThis());
      assertEquals(false, node2.hasOneChild());
      assertNotSame(node1, node2);
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      assertNotSame(node0, node2);
      assertNotSame(node2, node0);
      assertNotSame(node2, node1);
  }

  @Test
  public void test06()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertNotNull(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      int int0 = 105;
      Node[] nodeArray0 = new Node[1];
      String string0 = "b";
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, string0, string0);
      assertNotNull(node0);
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isBreak());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCase());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTrue());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDelProp());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isHook());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isIn());
      assertEquals(1, node0.getLineno());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isStringKey());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isParamList());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isQuotedString());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isDec());
      
      nodeArray0[0] = node0;
      assertNotNull(nodeArray0[0]);
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(false, nodeArray0[0].isVoid());
      assertEquals(false, nodeArray0[0].isTry());
      assertEquals(true, nodeArray0[0].hasOneChild());
      assertEquals(false, nodeArray0[0].isAdd());
      assertEquals("[testcode]", nodeArray0[0].getSourceFileName());
      assertEquals(false, nodeArray0[0].isIn());
      assertEquals(false, nodeArray0[0].isTypeOf());
      assertEquals(false, nodeArray0[0].isRegExp());
      assertEquals(0, nodeArray0[0].getSideEffectFlags());
      assertEquals(false, nodeArray0[0].isGetElem());
      assertEquals(false, nodeArray0[0].isOptionalArg());
      assertEquals(false, nodeArray0[0].isExprResult());
      assertEquals(false, nodeArray0[0].isThrow());
      assertEquals(132, nodeArray0[0].getType());
      assertEquals(false, nodeArray0[0].isFor());
      assertEquals(0, nodeArray0[0].getLength());
      assertEquals(false, nodeArray0[0].isFunction());
      assertEquals(false, nodeArray0[0].isAssign());
      assertEquals(false, nodeArray0[0].isComma());
      assertEquals(false, nodeArray0[0].isNot());
      assertEquals(false, nodeArray0[0].isNE());
      assertEquals(false, nodeArray0[0].isCatch());
      assertEquals(false, nodeArray0[0].isAnd());
      assertEquals(1, nodeArray0[0].getChildCount());
      assertEquals(false, nodeArray0[0].isWhile());
      assertEquals(true, nodeArray0[0].isSyntheticBlock());
      assertEquals(false, nodeArray0[0].isLabel());
      assertEquals(false, nodeArray0[0].isObjectLit());
      assertEquals(0, nodeArray0[0].getCharno());
      assertEquals(false, nodeArray0[0].isVarArgs());
      assertEquals(false, nodeArray0[0].isWith());
      assertEquals(false, nodeArray0[0].isDelProp());
      assertEquals(false, nodeArray0[0].isArrayLit());
      assertEquals(false, nodeArray0[0].isNumber());
      assertEquals(false, nodeArray0[0].isSetterDef());
      assertEquals(false, nodeArray0[0].isNoSideEffectsCall());
      assertEquals(true, nodeArray0[0].hasChildren());
      assertEquals(false, nodeArray0[0].isBreak());
      assertEquals(false, nodeArray0[0].isLabelName());
      assertEquals(false, nodeArray0[0].isDo());
      assertEquals(false, nodeArray0[0].isName());
      assertEquals(4096, nodeArray0[0].getSourcePosition());
      assertEquals(false, nodeArray0[0].isAssignAdd());
      assertEquals(false, nodeArray0[0].isDefaultCase());
      assertEquals(false, nodeArray0[0].isLocalResultCall());
      assertEquals(false, nodeArray0[0].isNew());
      assertEquals(false, nodeArray0[0].isInstanceOf());
      assertEquals(false, nodeArray0[0].hasMoreThanOneChild());
      assertEquals(false, nodeArray0[0].isParamList());
      assertEquals(1, nodeArray0[0].getLineno());
      assertEquals(false, nodeArray0[0].isNull());
      assertEquals(false, nodeArray0[0].isDec());
      assertEquals(false, nodeArray0[0].isHook());
      assertEquals(false, nodeArray0[0].isCall());
      assertEquals(false, nodeArray0[0].isEmpty());
      assertEquals(false, nodeArray0[0].isContinue());
      assertEquals(false, nodeArray0[0].isFromExterns());
      assertEquals(false, nodeArray0[0].isDebugger());
      assertEquals(false, nodeArray0[0].isOnlyModifiesThisCall());
      assertEquals(true, nodeArray0[0].isScript());
      assertEquals(false, nodeArray0[0].isThis());
      assertEquals(false, nodeArray0[0].isTrue());
      assertEquals(false, nodeArray0[0].isCase());
      assertEquals(false, nodeArray0[0].isBlock());
      assertEquals(false, nodeArray0[0].isOr());
      assertEquals(false, nodeArray0[0].isVar());
      assertEquals(false, nodeArray0[0].isReturn());
      assertEquals(false, nodeArray0[0].isIf());
      assertEquals(false, nodeArray0[0].isFalse());
      assertEquals(false, nodeArray0[0].isQuotedString());
      assertEquals(false, nodeArray0[0].isString());
      assertEquals(false, nodeArray0[0].isSwitch());
      assertEquals(false, nodeArray0[0].isGetProp());
      assertEquals(false, nodeArray0[0].isInc());
      assertEquals(false, nodeArray0[0].isGetterDef());
      assertEquals(false, nodeArray0[0].isStringKey());
      assertEquals(false, nodeArray0[0].wasEmptyNode());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isBreak());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCase());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(true, node0.hasChildren());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTrue());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isDelProp());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isHook());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isIn());
      assertEquals(1, node0.getLineno());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isStringKey());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isParamList());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isQuotedString());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isDec());
      
      Node node1 = new Node(int0, nodeArray0, int0, int0);
      assertFalse(node1.equals((Object)node0));
      assertNotNull(node1);
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isTypeOf());
      assertEquals(105, node1.getLineno());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(105, node1.getType());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isDelProp());
      assertEquals(true, node1.isFunction());
      assertEquals(false, node1.isName());
      assertEquals(430185, node1.getSourcePosition());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isThis());
      assertEquals(105, node1.getCharno());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isInc());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isHook());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isReturn());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isCall());
      assertEquals(true, node1.hasChildren());
      assertNotSame(node1, node0);
      
      boolean boolean0 = ControlFlowAnalysis.mayThrowException(node1);
      assertFalse(node1.equals((Object)node0));
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isTypeOf());
      assertEquals(105, node1.getLineno());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(105, node1.getType());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isDelProp());
      assertEquals(true, node1.isFunction());
      assertEquals(false, node1.isName());
      assertEquals(430185, node1.getSourcePosition());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isThis());
      assertEquals(105, node1.getCharno());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isInc());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isHook());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isReturn());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isCall());
      assertEquals(true, node1.hasChildren());
      assertNotSame(node1, node0);
      assertFalse(boolean0);
  }

  @Test
  public void test07()  throws Throwable  {
      int int0 = 49;
      String string0 = "Z";
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isWith());
      assertEquals(49, node0.getLineno());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isDebugger());
      assertEquals(200753, node0.getSourcePosition());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTypeOf());
      assertEquals(49, node0.getType());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isReturn());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(49, node0.getCharno());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isAssign());
      assertEquals(true, node0.isThrow());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBreak());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDo());
      
      boolean boolean0 = ControlFlowAnalysis.mayThrowException(node0);
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isWith());
      assertEquals(49, node0.getLineno());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isDebugger());
      assertEquals(200753, node0.getSourcePosition());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTypeOf());
      assertEquals(49, node0.getType());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isReturn());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isVarArgs());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(49, node0.getCharno());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isAssign());
      assertEquals(true, node0.isThrow());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBreak());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDo());
      assertTrue(boolean0);
  }

  @Test
  public void test08()  throws Throwable  {
      byte byte0 = (byte) (-70);
      String string0 = "Cannot find continue target.";
      Node node0 = Node.newString((int) byte0, string0, (int) byte0, (int) byte0);
      assertNotNull(node0);
      assertEquals(-70, node0.getType());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNumber());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getChildCount());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isTypeOf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isQuotedString());
      
      boolean boolean0 = ControlFlowAnalysis.isBreakTarget(node0, string0);
      assertEquals(-70, node0.getType());
      assertEquals(false, node0.isNE());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNumber());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isGetElem());
      assertEquals(0, node0.getChildCount());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isTypeOf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isQuotedString());
      assertFalse(boolean0);
  }

  @Test
  public void test09()  throws Throwable  {
      int int0 = 125;
      String string0 = "b~cL?( ";
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(125, node0.getCharno());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFromExterns());
      assertEquals(125, node0.getLineno());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isSwitch());
      assertEquals(125, node0.getType());
      assertEquals(false, node0.isLabelName());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isSetterDef());
      assertEquals(512125, node0.getSourcePosition());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isNE());
      assertEquals(true, node0.isBlock());
      
      // Undeclared exception!
      try {
        boolean boolean0 = ControlFlowAnalysis.isBreakTarget(node0, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test10()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertNotNull(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      boolean boolean0 = false;
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, boolean0, boolean0);
      assertNotNull(controlFlowAnalysis0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      int int0 = 115;
      String string0 = "b~cL( ";
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isEmpty());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isNot());
      assertEquals(115, node0.getType());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isComma());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isWith());
      assertEquals(115, node0.getCharno());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isHook());
      assertEquals(true, node0.isFor());
      assertEquals(false, node0.isInc());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isSetterDef());
      assertEquals(115, node0.getLineno());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isIf());
      assertEquals(471155, node0.getSourcePosition());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSyntheticBlock());
      
      // Undeclared exception!
      try {
        controlFlowAnalysis0.process(node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test11()  throws Throwable  {
      int int0 = 107;
      AbstractCompiler abstractCompiler0 = null;
      boolean boolean0 = false;
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(abstractCompiler0, boolean0, boolean0);
      assertNotNull(controlFlowAnalysis0);
      
      Node node0 = Node.newNumber((double) int0);
      assertNotNull(node0);
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDelProp());
      assertEquals(-1, node0.getCharno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDec());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isInc());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAssign());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVar());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isExprResult());
      
      controlFlowAnalysis0.process(node0, node0);
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDelProp());
      assertEquals(-1, node0.getCharno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDec());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isInc());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAssign());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVar());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isExprResult());
      
      Node node1 = new Node(int0, node0, node0, node0, int0, int0);
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertNotNull(node1);
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isComma());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isQuotedString());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isName());
      assertEquals(107, node1.getType());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isSwitch());
      assertEquals(107, node1.getCharno());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isWith());
      assertEquals(438379, node1.getSourcePosition());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isSyntheticBlock());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isInc());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isTrue());
      assertEquals(107, node1.getLineno());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isSetterDef());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isIn());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDelProp());
      assertEquals(-1, node0.getCharno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDec());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isInc());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAssign());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVar());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isExprResult());
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      
      Node node2 = ControlFlowAnalysis.computeFollowNode(node0, controlFlowAnalysis0);
      assertFalse(node0.equals((Object)node1));
      assertNull(node2);
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isDelProp());
      assertEquals(-1, node0.getCharno());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDec());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isInc());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isAssign());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isVar());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isExprResult());
      assertNotSame(node0, node1);
  }

  @Test
  public void test12()  throws Throwable  {
      int int0 = 81;
      Node node0 = new Node(int0);
      assertNotNull(node0);
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFalse());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isContinue());
      assertEquals(81, node0.getType());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isReturn());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isComma());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isWith());
      
      Node node1 = new Node(int0, node0, node0, node0);
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertNotNull(node1);
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isCatch());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isFromExterns());
      assertEquals(-1, node1.getLineno());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isComma());
      assertEquals(-1, node1.getSourcePosition());
      assertEquals(81, node1.getType());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isThis());
      assertEquals(-1, node1.getCharno());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isTrue());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isString());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isCall());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isRegExp());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isIf());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFalse());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isContinue());
      assertEquals(81, node0.getType());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isReturn());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isComma());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isWith());
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      
      Node node2 = ControlFlowAnalysis.computeFollowNode(node0);
      assertFalse(node0.equals((Object)node1));
      assertNull(node2);
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFalse());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isContinue());
      assertEquals(81, node0.getType());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isReturn());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isComma());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isNull());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isWith());
      assertNotSame(node0, node1);
  }

  @Test
  public void test13()  throws Throwable  {
      PrintStream printStream0 = null;
      Compiler compiler0 = new Compiler(printStream0);
      assertNotNull(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      boolean boolean0 = false;
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, boolean0, boolean0);
      assertNotNull(controlFlowAnalysis0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      int int0 = 125;
      String string0 = "b~cL?( ";
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(512125, node0.getSourcePosition());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isParamList());
      assertEquals(125, node0.getType());
      assertEquals(false, node0.isExprResult());
      assertEquals(125, node0.getLineno());
      assertEquals(false, node0.isContinue());
      assertEquals(125, node0.getCharno());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isName());
      assertEquals(0, node0.getLength());
      assertEquals(true, node0.isBlock());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDec());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isReturn());
      
      controlFlowAnalysis0.process(node0, node0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isCase());
      assertEquals(512125, node0.getSourcePosition());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isParamList());
      assertEquals(125, node0.getType());
      assertEquals(false, node0.isExprResult());
      assertEquals(125, node0.getLineno());
      assertEquals(false, node0.isContinue());
      assertEquals(125, node0.getCharno());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isName());
      assertEquals(0, node0.getLength());
      assertEquals(true, node0.isBlock());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDec());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isReturn());
  }

  @Test
  public void test14()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertNotNull(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      CompilerOptions compilerOptions0 = new CompilerOptions();
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertNotNull(compilerOptions0);
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getInferTypes());
      
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, compilerOptions0.checkSymbols, compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertNotNull(controlFlowAnalysis0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getInferTypes());
      
      int int0 = 117;
      Node node0 = Node.newString(int0, compilerOptions0.inputDelimiter, int0, int0);
      assertFalse(compilerOptions0.recordFunctionInformation);
      assertFalse(compilerOptions0.removeUnusedVars);
      assertFalse(compilerOptions0.devirtualizePrototypeMethods);
      assertFalse(compilerOptions0.inlineFunctions);
      assertFalse(compilerOptions0.checkSymbols);
      assertFalse(compilerOptions0.inlineConstantVars);
      assertFalse(compilerOptions0.ambiguateProperties);
      assertFalse(compilerOptions0.labelRenaming);
      assertFalse(compilerOptions0.checkTypes);
      assertFalse(compilerOptions0.checkControlStructures);
      assertFalse(compilerOptions0.lineBreak);
      assertFalse(compilerOptions0.optimizeReturns);
      assertFalse(compilerOptions0.gatherCssNames);
      assertFalse(compilerOptions0.flowSensitiveInlineVariables);
      assertFalse(compilerOptions0.removeUnusedLocalVars);
      assertFalse(compilerOptions0.removeUnusedClassProperties);
      assertFalse(compilerOptions0.rewriteFunctionExpressions);
      assertFalse(compilerOptions0.markNoSideEffectCalls);
      assertFalse(compilerOptions0.deadAssignmentElimination);
      assertFalse(compilerOptions0.aliasKeywords);
      assertFalse(compilerOptions0.inlineVariables);
      assertFalse(compilerOptions0.crossModuleCodeMotion);
      assertFalse(compilerOptions0.removeUnusedPrototypePropertiesInExterns);
      assertFalse(compilerOptions0.checkSuspiciousCode);
      assertFalse(compilerOptions0.removeUnusedPrototypeProperties);
      assertFalse(compilerOptions0.removeTryCatchFinally);
      assertFalse(compilerOptions0.exportTestFunctions);
      assertFalse(compilerOptions0.convertToDottedProperties);
      assertFalse(compilerOptions0.foldConstants);
      assertFalse(compilerOptions0.coalesceVariableNames);
      assertFalse(compilerOptions0.collapseAnonymousFunctions);
      assertFalse(compilerOptions0.jqueryPass);
      assertFalse(compilerOptions0.generateExports);
      assertFalse(compilerOptions0.markAsCompiled);
      assertFalse(compilerOptions0.aliasAllStrings);
      assertFalse(compilerOptions0.extractPrototypeMemberDeclarations);
      assertFalse(compilerOptions0.computeFunctionSideEffects);
      assertFalse(compilerOptions0.removeDeadCode);
      assertFalse(compilerOptions0.reserveRawExports);
      assertFalse(compilerOptions0.printInputDelimiter);
      assertFalse(compilerOptions0.optimizeCalls);
      assertFalse(compilerOptions0.aliasExternals);
      assertFalse(compilerOptions0.collapseVariableDeclarations);
      assertFalse(compilerOptions0.generatePseudoNames);
      assertFalse(compilerOptions0.moveFunctionDeclarations);
      assertFalse(compilerOptions0.crossModuleMethodMotion);
      assertFalse(compilerOptions0.smartNameRemoval);
      assertFalse(compilerOptions0.disambiguateProperties);
      assertFalse(compilerOptions0.ideMode);
      assertFalse(compilerOptions0.closurePass);
      assertFalse(compilerOptions0.inlineLocalFunctions);
      assertFalse(compilerOptions0.inlineGetters);
      assertFalse(compilerOptions0.collapseProperties);
      assertFalse(compilerOptions0.optimizeParameters);
      assertFalse(compilerOptions0.preferLineBreakAtEndOfFile);
      assertFalse(compilerOptions0.prettyPrint);
      assertFalse(compilerOptions0.optimizeArgumentsArray);
      assertNotNull(node0);
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNull());
      assertEquals(117, node0.getCharno());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isTry());
      assertEquals(479349, node0.getSourcePosition());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isCall());
      assertNull(node0.getSourceFileName());
      assertEquals(true, node0.isContinue());
      assertEquals(false, node0.hasOneChild());
      assertEquals(117, node0.getLineno());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isIn());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isObjectLit());
      assertEquals(117, node0.getType());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isExprResult());
      assertEquals(CompilerOptions.TweakProcessing.OFF, compilerOptions0.getTweakProcessing());
      assertEquals(false, compilerOptions0.isExternExportsEnabled());
      assertEquals(CompilerOptions.TracerMode.OFF, compilerOptions0.getTracerMode());
      assertEquals(false, compilerOptions0.assumeClosuresOnlyCaptureReferences());
      assertEquals(false, compilerOptions0.isRemoveUnusedClassProperties());
      assertEquals(false, compilerOptions0.assumeStrictThis());
      assertNull(compilerOptions0.getLanguageOut());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compilerOptions0.getLanguageIn());
      assertEquals(false, compilerOptions0.shouldColorizeErrorOutput());
      assertEquals(false, compilerOptions0.getInferTypes());
      
      // Undeclared exception!
      try {
        controlFlowAnalysis0.process(node0, node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL COMPILER ERROR.
         // Please report this problem.
         // Cannot find continue target.
         //
      }
  }

  @Test
  public void test15()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertNotNull(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      boolean boolean0 = false;
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, boolean0, boolean0);
      assertNotNull(controlFlowAnalysis0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      int int0 = 115;
      String string0 = "b~cL( ";
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetterDef());
      assertEquals(115, node0.getLineno());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isIn());
      assertEquals(471155, node0.getSourcePosition());
      assertEquals(false, node0.isLabelName());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isGetProp());
      assertEquals(115, node0.getType());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDec());
      assertEquals(115, node0.getCharno());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isTypeOf());
      assertEquals(true, node0.isFor());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isWith());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isNumber());
      
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) compiler0, (NodeTraversal.Callback) controlFlowAnalysis0);
      assertNotNull(nodeTraversal0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals("", nodeTraversal0.getSourceName());
      assertEquals(0, nodeTraversal0.getLineNumber());
      
      // Undeclared exception!
      try {
        controlFlowAnalysis0.visit(nodeTraversal0, node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test16()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertNotNull(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      boolean boolean0 = false;
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, boolean0, boolean0);
      assertNotNull(controlFlowAnalysis0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      int int0 = 111;
      String string0 = "b~cL( ";
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTry());
      assertEquals(111, node0.getLineno());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isStringKey());
      assertEquals(111, node0.getType());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(111, node0.getCharno());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOr());
      assertEquals(454767, node0.getSourcePosition());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(true, node0.isCase());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isBlock());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.wasEmptyNode());
      assertNull(node0.getSourceFileName());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isComma());
      
      // Undeclared exception!
      try {
        controlFlowAnalysis0.process(node0, node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL COMPILER ERROR.
         // Please report this problem.
         // null
         //
      }
  }

  @Test
  public void test17()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      assertFalse(boolean0);
      
      int int0 = 110;
      String string0 = "{rH=jlHP@";
      Node node0 = Node.newString(int0, string0);
      assertNotNull(node0);
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isDo());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isDebugger());
      assertEquals(110, node0.getType());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isTypeOf());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isName());
      assertEquals(0, node0.getChildCount());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isIf());
      assertEquals(true, node0.isSwitch());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isCall());
      
      AbstractCompiler abstractCompiler0 = null;
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(abstractCompiler0, boolean0, boolean0);
      assertNotNull(controlFlowAnalysis0);
      
      CompilerOptions compilerOptions0 = null;
      DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
      assertNotNull(defaultPassConfig0);
      
      MemoizedScopeCreator memoizedScopeCreator0 = defaultPassConfig0.getTypedScopeCreator();
      assertNull(memoizedScopeCreator0);
      
      NodeTraversal nodeTraversal0 = new NodeTraversal(abstractCompiler0, (NodeTraversal.Callback) controlFlowAnalysis0, (ScopeCreator) memoizedScopeCreator0);
      assertNotNull(nodeTraversal0);
      assertEquals(0, nodeTraversal0.getLineNumber());
      assertEquals("", nodeTraversal0.getSourceName());
      
      // Undeclared exception!
      try {
        controlFlowAnalysis0.visit(nodeTraversal0, node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertNotNull(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      boolean boolean0 = false;
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, boolean0, boolean0);
      assertNotNull(controlFlowAnalysis0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      int int0 = 100;
      String string0 = "b~cL( ";
      int int1 = 105;
      Node node0 = Node.newString(int1, string0, int0, int0);
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
      assertNotNull(node0);
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isFor());
      assertEquals(true, node0.isFunction());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isQuotedString());
      assertEquals(105, node0.getType());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOr());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNull());
      assertEquals(100, node0.getLineno());
      assertEquals(100, node0.getCharno());
      assertEquals(false, node0.isObjectLit());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isWhile());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isParamList());
      assertEquals(409700, node0.getSourcePosition());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isAssign());
      
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) compiler0, (NodeTraversal.Callback) controlFlowAnalysis0);
      assertNotNull(nodeTraversal0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(0, nodeTraversal0.getLineNumber());
      assertEquals("", nodeTraversal0.getSourceName());
      
      // Undeclared exception!
      try {
        controlFlowAnalysis0.visit(nodeTraversal0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test19()  throws Throwable  {
      boolean boolean0 = true;
      int int0 = 81;
      Node node0 = new Node(int0);
      assertNotNull(node0);
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getCharno());
      assertEquals(81, node0.getType());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isArrayLit());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabelName());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCall());
      
      Compiler compiler0 = new Compiler();
      assertNotNull(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, boolean0, boolean0);
      assertNotNull(controlFlowAnalysis0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      controlFlowAnalysis0.process(node0, node0);
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isSetterDef());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isHook());
      assertEquals(-1, node0.getCharno());
      assertEquals(81, node0.getType());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isArrayLit());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isLabelName());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isCall());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      int int1 = 118;
      String string0 = "";
      Node node1 = Node.newString(int1, string0, int1, int1);
      assertFalse(int1 == int0);
      assertFalse(node1.equals((Object)node0));
      assertNotNull(node1);
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(118, node1.getCharno());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(118, node1.getLineno());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isFunction());
      assertEquals(483446, node1.getSourcePosition());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isAnd());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isThis());
      assertEquals(true, node1.isVar());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isBreak());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.hasChildren());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isStringKey());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isFalse());
      assertEquals(0, node1.getLength());
      assertNotSame(node1, node0);
      
      NodeTraversal nodeTraversal0 = null;
      boolean boolean1 = controlFlowAnalysis0.shouldTraverse(nodeTraversal0, node1, node1);
      assertFalse(boolean1 == boolean0);
      assertFalse(int1 == int0);
      assertFalse(node1.equals((Object)node0));
      assertFalse(boolean0 == boolean1);
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(118, node1.getCharno());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(118, node1.getLineno());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isFunction());
      assertEquals(483446, node1.getSourcePosition());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isAnd());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isThis());
      assertEquals(true, node1.isVar());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isBreak());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.hasChildren());
      assertEquals(118, node1.getType());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isStringKey());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isFalse());
      assertEquals(0, node1.getLength());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertNotSame(node1, node0);
      assertFalse(boolean1);
  }

  @Test
  public void test20()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertNotNull(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      boolean boolean0 = false;
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, boolean0, boolean0);
      assertNotNull(controlFlowAnalysis0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      int int0 = 105;
      Node[] nodeArray0 = new Node[1];
      String string0 = "b";
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, string0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDec());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(1, node0.getLineno());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isReturn());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFunction());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.hasChildren());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isString());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSwitch());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isNumber());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isWith());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.hasErrors());
      
      nodeArray0[0] = node0;
      assertNotNull(nodeArray0[0]);
      assertEquals(false, nodeArray0[0].isLocalResultCall());
      assertEquals(1, nodeArray0[0].getChildCount());
      assertEquals(false, nodeArray0[0].isNew());
      assertEquals(false, nodeArray0[0].isWith());
      assertEquals(false, nodeArray0[0].isDebugger());
      assertEquals(false, nodeArray0[0].isAssignAdd());
      assertEquals(false, nodeArray0[0].isWhile());
      assertEquals(false, nodeArray0[0].isSwitch());
      assertEquals(false, nodeArray0[0].isDelProp());
      assertEquals(false, nodeArray0[0].isName());
      assertEquals(false, nodeArray0[0].isRegExp());
      assertEquals(false, nodeArray0[0].isDec());
      assertEquals(false, nodeArray0[0].isObjectLit());
      assertEquals(false, nodeArray0[0].isOptionalArg());
      assertEquals(false, nodeArray0[0].isEmpty());
      assertEquals(false, nodeArray0[0].isVoid());
      assertEquals(false, nodeArray0[0].isString());
      assertEquals(false, nodeArray0[0].isReturn());
      assertEquals(false, nodeArray0[0].isAnd());
      assertEquals("[testcode]", nodeArray0[0].getSourceFileName());
      assertEquals(false, nodeArray0[0].isFalse());
      assertEquals(false, nodeArray0[0].isVar());
      assertEquals(false, nodeArray0[0].isFor());
      assertEquals(false, nodeArray0[0].isNoSideEffectsCall());
      assertEquals(false, nodeArray0[0].isVarArgs());
      assertEquals(1, nodeArray0[0].getLineno());
      assertEquals(false, nodeArray0[0].isInstanceOf());
      assertEquals(false, nodeArray0[0].isComma());
      assertEquals(0, nodeArray0[0].getCharno());
      assertEquals(false, nodeArray0[0].isDo());
      assertEquals(false, nodeArray0[0].isStringKey());
      assertEquals(false, nodeArray0[0].isNull());
      assertEquals(0, nodeArray0[0].getLength());
      assertEquals(false, nodeArray0[0].isNot());
      assertEquals(false, nodeArray0[0].isLabel());
      assertEquals(false, nodeArray0[0].isNumber());
      assertEquals(false, nodeArray0[0].isGetElem());
      assertEquals(false, nodeArray0[0].isLabelName());
      assertEquals(false, nodeArray0[0].isTrue());
      assertEquals(false, nodeArray0[0].isExprResult());
      assertEquals(false, nodeArray0[0].isGetterDef());
      assertEquals(false, nodeArray0[0].isOnlyModifiesThisCall());
      assertEquals(132, nodeArray0[0].getType());
      assertEquals(false, nodeArray0[0].isCase());
      assertEquals(false, nodeArray0[0].isInc());
      assertEquals(false, nodeArray0[0].isThrow());
      assertEquals(false, nodeArray0[0].isIf());
      assertEquals(false, nodeArray0[0].isAssign());
      assertEquals(true, nodeArray0[0].isScript());
      assertEquals(false, nodeArray0[0].isFunction());
      assertEquals(false, nodeArray0[0].isGetProp());
      assertEquals(false, nodeArray0[0].wasEmptyNode());
      assertEquals(false, nodeArray0[0].isIn());
      assertEquals(false, nodeArray0[0].isArrayLit());
      assertEquals(false, nodeArray0[0].isTry());
      assertEquals(false, nodeArray0[0].isDefaultCase());
      assertEquals(true, nodeArray0[0].isSyntheticBlock());
      assertEquals(false, nodeArray0[0].isContinue());
      assertEquals(false, nodeArray0[0].isNE());
      assertEquals(true, nodeArray0[0].hasOneChild());
      assertEquals(false, nodeArray0[0].isAdd());
      assertEquals(false, nodeArray0[0].isParamList());
      assertEquals(false, nodeArray0[0].isHook());
      assertEquals(false, nodeArray0[0].isSetterDef());
      assertEquals(0, nodeArray0[0].getSideEffectFlags());
      assertEquals(false, nodeArray0[0].isOr());
      assertEquals(false, nodeArray0[0].isThis());
      assertEquals(false, nodeArray0[0].isCatch());
      assertEquals(false, nodeArray0[0].isFromExterns());
      assertEquals(false, nodeArray0[0].isBlock());
      assertEquals(false, nodeArray0[0].isBreak());
      assertEquals(false, nodeArray0[0].isQuotedString());
      assertEquals(false, nodeArray0[0].hasMoreThanOneChild());
      assertEquals(4096, nodeArray0[0].getSourcePosition());
      assertEquals(false, nodeArray0[0].isTypeOf());
      assertEquals(true, nodeArray0[0].hasChildren());
      assertEquals(false, nodeArray0[0].isCall());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isDec());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(1, node0.getLineno());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isReturn());
      assertEquals(132, node0.getType());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isFunction());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isRegExp());
      assertEquals(true, node0.hasChildren());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isString());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSwitch());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isNumber());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isWith());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.hasErrors());
      
      Node node1 = new Node(int0, nodeArray0, int0, int0);
      assertFalse(node1.equals((Object)node0));
      assertNotNull(node1);
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isDefaultCase());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isGetterDef());
      assertEquals(0, node1.getLength());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isOr());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isBlock());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isAnd());
      assertEquals(true, node1.isFunction());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isWith());
      assertEquals(105, node1.getType());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isInc());
      assertEquals(430185, node1.getSourcePosition());
      assertEquals(false, node1.isNew());
      assertEquals(105, node1.getLineno());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(105, node1.getCharno());
      assertNotSame(node1, node0);
      
      // Undeclared exception!
      try {
        controlFlowAnalysis0.process(nodeArray0[0], node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL COMPILER ERROR.
         // Please report this problem.
         // null
         //
      }
  }

  @Test
  public void test21()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      assertNotNull(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      boolean boolean0 = false;
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, boolean0, boolean0);
      assertNotNull(controlFlowAnalysis0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      int int0 = 105;
      Node[] nodeArray0 = new Node[1];
      String string0 = "b";
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, string0, string0);
      assertNotNull(node0);
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.hasChildren());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLabelName());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isRegExp());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isIf());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVarArgs());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isReturn());
      assertEquals(132, node0.getType());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOr());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isParamList());
      assertEquals(1, node0.getLineno());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      
      nodeArray0[0] = node0;
      assertNotNull(nodeArray0[0]);
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.hasChildren());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLabelName());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isRegExp());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isIf());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVarArgs());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isReturn());
      assertEquals(132, node0.getType());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOr());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isParamList());
      assertEquals(1, node0.getLineno());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, nodeArray0[0].isDefaultCase());
      assertEquals(false, nodeArray0[0].isFor());
      assertEquals(false, nodeArray0[0].wasEmptyNode());
      assertEquals(false, nodeArray0[0].isDo());
      assertEquals(false, nodeArray0[0].isNoSideEffectsCall());
      assertEquals(false, nodeArray0[0].isCase());
      assertEquals(false, nodeArray0[0].isThis());
      assertEquals(false, nodeArray0[0].isAdd());
      assertEquals(false, nodeArray0[0].isTry());
      assertEquals(false, nodeArray0[0].isObjectLit());
      assertEquals(false, nodeArray0[0].isVar());
      assertEquals(false, nodeArray0[0].isNumber());
      assertEquals(false, nodeArray0[0].isFunction());
      assertEquals(false, nodeArray0[0].isAssignAdd());
      assertEquals(false, nodeArray0[0].isBreak());
      assertEquals(false, nodeArray0[0].isEmpty());
      assertEquals(132, nodeArray0[0].getType());
      assertEquals(true, nodeArray0[0].isScript());
      assertEquals(0, nodeArray0[0].getCharno());
      assertEquals(false, nodeArray0[0].isTypeOf());
      assertEquals(false, nodeArray0[0].isLocalResultCall());
      assertEquals(false, nodeArray0[0].isOr());
      assertEquals(false, nodeArray0[0].isLabel());
      assertEquals(false, nodeArray0[0].isDebugger());
      assertEquals(false, nodeArray0[0].isVarArgs());
      assertEquals(true, nodeArray0[0].isSyntheticBlock());
      assertEquals(false, nodeArray0[0].isAnd());
      assertEquals(false, nodeArray0[0].isTrue());
      assertEquals(false, nodeArray0[0].isGetElem());
      assertEquals(false, nodeArray0[0].isNot());
      assertEquals(false, nodeArray0[0].isDelProp());
      assertEquals(0, nodeArray0[0].getSideEffectFlags());
      assertEquals(false, nodeArray0[0].isContinue());
      assertEquals(false, nodeArray0[0].isDec());
      assertEquals(false, nodeArray0[0].isThrow());
      assertEquals(false, nodeArray0[0].isSetterDef());
      assertEquals(false, nodeArray0[0].isWhile());
      assertEquals(false, nodeArray0[0].isString());
      assertEquals(false, nodeArray0[0].isStringKey());
      assertEquals(false, nodeArray0[0].isSwitch());
      assertEquals(false, nodeArray0[0].isGetProp());
      assertEquals(false, nodeArray0[0].isReturn());
      assertEquals(false, nodeArray0[0].isHook());
      assertEquals(false, nodeArray0[0].isBlock());
      assertEquals(true, nodeArray0[0].hasOneChild());
      assertEquals(false, nodeArray0[0].isNull());
      assertEquals(1, nodeArray0[0].getChildCount());
      assertEquals(false, nodeArray0[0].isWith());
      assertEquals(false, nodeArray0[0].isArrayLit());
      assertEquals(true, nodeArray0[0].hasChildren());
      assertEquals(false, nodeArray0[0].isAssign());
      assertEquals(false, nodeArray0[0].isFalse());
      assertEquals(4096, nodeArray0[0].getSourcePosition());
      assertEquals(false, nodeArray0[0].isCall());
      assertEquals(false, nodeArray0[0].isRegExp());
      assertEquals(false, nodeArray0[0].isNew());
      assertEquals(false, nodeArray0[0].isName());
      assertEquals(false, nodeArray0[0].isIf());
      assertEquals(false, nodeArray0[0].isInstanceOf());
      assertEquals(false, nodeArray0[0].isInc());
      assertEquals(0, nodeArray0[0].getLength());
      assertEquals(false, nodeArray0[0].isQuotedString());
      assertEquals("[testcode]", nodeArray0[0].getSourceFileName());
      assertEquals(false, nodeArray0[0].isVoid());
      assertEquals(false, nodeArray0[0].isIn());
      assertEquals(false, nodeArray0[0].isCatch());
      assertEquals(false, nodeArray0[0].isParamList());
      assertEquals(false, nodeArray0[0].isOptionalArg());
      assertEquals(false, nodeArray0[0].isExprResult());
      assertEquals(false, nodeArray0[0].isFromExterns());
      assertEquals(false, nodeArray0[0].isGetterDef());
      assertEquals(false, nodeArray0[0].isComma());
      assertEquals(false, nodeArray0[0].isNE());
      assertEquals(1, nodeArray0[0].getLineno());
      assertEquals(false, nodeArray0[0].isLabelName());
      assertEquals(false, nodeArray0[0].hasMoreThanOneChild());
      assertEquals(false, nodeArray0[0].isOnlyModifiesThisCall());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      
      Node node1 = new Node(int0, nodeArray0, int0, int0);
      assertFalse(node1.equals((Object)node0));
      assertNotNull(node1);
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isString());
      assertNull(node1.getSourceFileName());
      assertEquals(430185, node1.getSourcePosition());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isFromExterns());
      assertEquals(105, node1.getType());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isInc());
      assertEquals(true, node1.isFunction());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isIn());
      assertEquals(105, node1.getLineno());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isSetterDef());
      assertEquals(105, node1.getCharno());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isRegExp());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(0, node1.getLength());
      assertEquals(1, node1.getChildCount());
      assertNotSame(node1, node0);
      
      controlFlowAnalysis0.process(node0, node0);
      assertFalse(node0.equals((Object)node1));
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.hasChildren());
      assertEquals(0, node0.getCharno());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLabelName());
      assertEquals(true, node0.isSyntheticBlock());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isRegExp());
      assertEquals("[testcode]", node0.getSourceFileName());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isIf());
      assertEquals(1, node0.getChildCount());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isVarArgs());
      assertEquals(true, node0.hasOneChild());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isReturn());
      assertEquals(132, node0.getType());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isOr());
      assertEquals(4096, node0.getSourcePosition());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.isScript());
      assertEquals(false, node0.isSwitch());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isParamList());
      assertEquals(1, node0.getLineno());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isBlock());
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertNotSame(node0, node1);
      
      nodeArray0[0] = node1;
      assertNotNull(nodeArray0[0]);
      assertEquals(false, nodeArray0[0].isReturn());
      assertEquals(false, nodeArray0[0].isRegExp());
      assertEquals(false, nodeArray0[0].isIf());
      assertEquals(false, nodeArray0[0].isEmpty());
      assertEquals(false, nodeArray0[0].isWith());
      assertEquals(false, nodeArray0[0].isNew());
      assertEquals(false, nodeArray0[0].isGetterDef());
      assertEquals(false, nodeArray0[0].isString());
      assertEquals(false, nodeArray0[0].isTrue());
      assertEquals(true, nodeArray0[0].hasChildren());
      assertEquals(false, nodeArray0[0].isVar());
      assertEquals(1, nodeArray0[0].getChildCount());
      assertEquals(false, nodeArray0[0].isLabel());
      assertEquals(false, nodeArray0[0].isBreak());
      assertEquals(false, nodeArray0[0].isComma());
      assertEquals(false, nodeArray0[0].isVoid());
      assertEquals(false, nodeArray0[0].isContinue());
      assertEquals(false, nodeArray0[0].isFromExterns());
      assertEquals(0, nodeArray0[0].getSideEffectFlags());
      assertEquals(false, nodeArray0[0].isArrayLit());
      assertEquals(105, nodeArray0[0].getLineno());
      assertEquals(false, nodeArray0[0].isFalse());
      assertEquals(false, nodeArray0[0].isCall());
      assertEquals(false, nodeArray0[0].isNot());
      assertEquals(false, nodeArray0[0].isInc());
      assertEquals(false, nodeArray0[0].isNE());
      assertEquals(false, nodeArray0[0].isName());
      assertEquals(false, nodeArray0[0].isDefaultCase());
      assertEquals(false, nodeArray0[0].isParamList());
      assertEquals(false, nodeArray0[0].isTry());
      assertEquals(false, nodeArray0[0].isIn());
      assertNull(nodeArray0[0].getSourceFileName());
      assertEquals(false, nodeArray0[0].isDec());
      assertEquals(false, nodeArray0[0].isScript());
      assertEquals(false, nodeArray0[0].isSyntheticBlock());
      assertEquals(false, nodeArray0[0].isVarArgs());
      assertEquals(true, nodeArray0[0].hasOneChild());
      assertEquals(false, nodeArray0[0].isOptionalArg());
      assertEquals(false, nodeArray0[0].isQuotedString());
      assertEquals(false, nodeArray0[0].isSwitch());
      assertEquals(false, nodeArray0[0].isCase());
      assertEquals(false, nodeArray0[0].isGetElem());
      assertEquals(false, nodeArray0[0].isBlock());
      assertEquals(false, nodeArray0[0].isDebugger());
      assertEquals(false, nodeArray0[0].isStringKey());
      assertEquals(false, nodeArray0[0].isSetterDef());
      assertEquals(false, nodeArray0[0].isThis());
      assertEquals(false, nodeArray0[0].isTypeOf());
      assertEquals(false, nodeArray0[0].isExprResult());
      assertEquals(false, nodeArray0[0].isThrow());
      assertEquals(false, nodeArray0[0].isNoSideEffectsCall());
      assertEquals(false, nodeArray0[0].isDelProp());
      assertEquals(false, nodeArray0[0].hasMoreThanOneChild());
      assertEquals(false, nodeArray0[0].isInstanceOf());
      assertEquals(false, nodeArray0[0].isOnlyModifiesThisCall());
      assertEquals(false, nodeArray0[0].isDo());
      assertEquals(false, nodeArray0[0].isAssignAdd());
      assertEquals(false, nodeArray0[0].isNumber());
      assertEquals(false, nodeArray0[0].isGetProp());
      assertEquals(false, nodeArray0[0].isLocalResultCall());
      assertEquals(false, nodeArray0[0].isAssign());
      assertEquals(false, nodeArray0[0].isHook());
      assertEquals(false, nodeArray0[0].isFor());
      assertEquals(105, nodeArray0[0].getType());
      assertEquals(430185, nodeArray0[0].getSourcePosition());
      assertEquals(true, nodeArray0[0].isFunction());
      assertEquals(false, nodeArray0[0].isLabelName());
      assertEquals(false, nodeArray0[0].isCatch());
      assertEquals(false, nodeArray0[0].isObjectLit());
      assertEquals(false, nodeArray0[0].isAdd());
      assertEquals(false, nodeArray0[0].isWhile());
      assertEquals(false, nodeArray0[0].isOr());
      assertEquals(false, nodeArray0[0].isAnd());
      assertEquals(false, nodeArray0[0].isNull());
      assertEquals(false, nodeArray0[0].wasEmptyNode());
      assertEquals(105, nodeArray0[0].getCharno());
      assertEquals(0, nodeArray0[0].getLength());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isString());
      assertNull(node1.getSourceFileName());
      assertEquals(430185, node1.getSourcePosition());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isFromExterns());
      assertEquals(105, node1.getType());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isInc());
      assertEquals(true, node1.isFunction());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isIn());
      assertEquals(105, node1.getLineno());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isSetterDef());
      assertEquals(105, node1.getCharno());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isRegExp());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(0, node1.getLength());
      assertEquals(1, node1.getChildCount());
      
      NodeTraversal nodeTraversal0 = null;
      boolean boolean1 = controlFlowAnalysis0.shouldTraverse(nodeTraversal0, nodeArray0[0], nodeArray0[0]);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean0 == boolean1);
      assertEquals(false, compiler0.hasErrors());
      assertEquals(0, compiler0.getErrorCount());
      assertEquals(false, compiler0.isIdeMode());
      assertEquals(0, compiler0.getWarningCount());
      assertEquals(false, compiler0.isTypeCheckingEnabled());
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, compiler0.acceptConstKeyword());
      assertEquals(CompilerOptions.LanguageMode.ECMASCRIPT3, compiler0.languageMode());
      assertFalse(boolean1);
  }

  @Test
  public void test22()  throws Throwable  {
      PrintStream printStream0 = null;
      Compiler compiler0 = new Compiler(printStream0);
      assertNotNull(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      boolean boolean0 = false;
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, boolean0, boolean0);
      assertNotNull(controlFlowAnalysis0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      int int0 = 113;
      String string0 = "b~cL?( ";
      Node node0 = Node.newString(int0, string0, int0, int0);
      assertNotNull(node0);
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isHook());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(true, node0.isWhile());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isBreak());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isNot());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isSetterDef());
      assertEquals(113, node0.getLineno());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isCatch());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDec());
      assertEquals(113, node0.getCharno());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.hasChildren());
      assertEquals(0, node0.getLength());
      assertEquals(462961, node0.getSourcePosition());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isContinue());
      assertEquals(113, node0.getType());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isReturn());
      
      // Undeclared exception!
      try {
        controlFlowAnalysis0.process(node0, node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL COMPILER ERROR.
         // Please report this problem.
         // null
         //
      }
  }

  @Test
  public void test23()  throws Throwable  {
      int int0 = 89;
      AbstractCompiler abstractCompiler0 = null;
      boolean boolean0 = true;
      String string0 = "Ck*I4V9-r";
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(abstractCompiler0, boolean0, boolean0);
      assertNotNull(controlFlowAnalysis0);
      
      Node node0 = Node.newNumber((double) int0);
      assertNotNull(node0);
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isOr());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBreak());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNull());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCatch());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isThrow());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThis());
      
      int int1 = 77;
      Node node1 = Node.newString(int1, string0, int0, int0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(node1.equals((Object)node0));
      assertNotNull(node1);
      assertEquals(89, node1.getCharno());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isStringKey());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isBreak());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isTrue());
      assertEquals(364633, node1.getSourcePosition());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isNew());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isNot());
      assertEquals(89, node1.getLineno());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isBlock());
      assertEquals(77, node1.getType());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isOr());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(true, node1.isTry());
      assertEquals(false, node1.isGetProp());
      assertNotSame(node1, node0);
      
      controlFlowAnalysis0.process(node0, node1);
      assertFalse(int0 == int1);
      assertFalse(node0.equals((Object)node1));
      assertFalse(int1 == int0);
      assertFalse(node1.equals((Object)node0));
      assertEquals(false, node0.isIf());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isOr());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isBreak());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isDefaultCase());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isVarArgs());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isNull());
      assertEquals(true, node0.isNumber());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isCatch());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isAnd());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isVar());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isThrow());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThis());
      assertEquals(89, node1.getCharno());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isFor());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isStringKey());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isBreak());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isDo());
      assertEquals(false, node1.isFromExterns());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isQuotedString());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isVoid());
      assertEquals(false, node1.isIf());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isNumber());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isTrue());
      assertEquals(364633, node1.getSourcePosition());
      assertEquals(false, node1.hasOneChild());
      assertEquals(false, node1.isAssign());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isNew());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isRegExp());
      assertEquals(false, node1.isNot());
      assertEquals(89, node1.getLineno());
      assertEquals(false, node1.isInc());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.hasChildren());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isGetElem());
      assertEquals(false, node1.isBlock());
      assertEquals(77, node1.getType());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isOr());
      assertEquals(0, node1.getChildCount());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(true, node1.isTry());
      assertEquals(false, node1.isGetProp());
      assertNotSame(node0, node1);
      assertNotSame(node1, node0);
  }

  @Test
  public void test24()  throws Throwable  {
      int int0 = 114;
      AbstractCompiler abstractCompiler0 = null;
      boolean boolean0 = true;
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(abstractCompiler0, boolean0, boolean0);
      assertNotNull(controlFlowAnalysis0);
      
      Node node0 = Node.newNumber((double) int0);
      assertNotNull(node0);
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.isNumber());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBlock());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isWith());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDefaultCase());
      
      Node node1 = new Node(int0, node0, node0, node0, int0, int0);
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertNotNull(node1);
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isVoid());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isNumber());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isFromExterns());
      assertEquals(true, node1.isDo());
      assertEquals(114, node1.getCharno());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isRegExp());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isQuotedString());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isInc());
      assertEquals(114, node1.getType());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isAssign());
      assertEquals(467058, node1.getSourcePosition());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isGetElem());
      assertEquals(114, node1.getLineno());
      assertEquals(false, node1.isFor());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isIf());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.isNumber());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBlock());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isWith());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDefaultCase());
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
      
      controlFlowAnalysis0.process(node0, node1);
      assertFalse(node1.equals((Object)node0));
      assertFalse(node0.equals((Object)node1));
      assertEquals(false, node1.isBreak());
      assertEquals(false, node1.isDefaultCase());
      assertEquals(false, node1.isWith());
      assertEquals(false, node1.isDebugger());
      assertEquals(false, node1.isWhile());
      assertEquals(false, node1.isNull());
      assertEquals(false, node1.isSyntheticBlock());
      assertEquals(false, node1.isArrayLit());
      assertEquals(false, node1.isNot());
      assertEquals(false, node1.isCatch());
      assertEquals(false, node1.isName());
      assertEquals(false, node1.isVoid());
      assertEquals(true, node1.hasChildren());
      assertEquals(false, node1.isScript());
      assertEquals(false, node1.isFunction());
      assertEquals(false, node1.isNumber());
      assertEquals(1, node1.getChildCount());
      assertEquals(false, node1.isThis());
      assertEquals(false, node1.isOptionalArg());
      assertEquals(false, node1.isGetProp());
      assertEquals(false, node1.hasMoreThanOneChild());
      assertEquals(0, node1.getSideEffectFlags());
      assertEquals(false, node1.isExprResult());
      assertEquals(false, node1.isObjectLit());
      assertEquals(false, node1.isHook());
      assertEquals(false, node1.isReturn());
      assertEquals(false, node1.isLocalResultCall());
      assertEquals(false, node1.isDec());
      assertEquals(false, node1.isThrow());
      assertEquals(false, node1.isFromExterns());
      assertEquals(true, node1.isDo());
      assertEquals(114, node1.getCharno());
      assertEquals(false, node1.isCase());
      assertEquals(false, node1.isInstanceOf());
      assertEquals(false, node1.isAssignAdd());
      assertEquals(false, node1.isRegExp());
      assertEquals(0, node1.getLength());
      assertEquals(false, node1.wasEmptyNode());
      assertEquals(false, node1.isAdd());
      assertEquals(false, node1.isOnlyModifiesThisCall());
      assertEquals(false, node1.isEmpty());
      assertEquals(false, node1.isStringKey());
      assertEquals(false, node1.isContinue());
      assertEquals(false, node1.isTypeOf());
      assertEquals(false, node1.isAnd());
      assertEquals(false, node1.isVar());
      assertEquals(false, node1.isOr());
      assertEquals(false, node1.isSetterDef());
      assertEquals(false, node1.isTry());
      assertEquals(false, node1.isBlock());
      assertEquals(false, node1.isNew());
      assertEquals(false, node1.isComma());
      assertEquals(false, node1.isLabelName());
      assertEquals(false, node1.isQuotedString());
      assertEquals(true, node1.hasOneChild());
      assertEquals(false, node1.isNE());
      assertEquals(false, node1.isNoSideEffectsCall());
      assertEquals(false, node1.isCall());
      assertEquals(false, node1.isTrue());
      assertEquals(false, node1.isLabel());
      assertEquals(false, node1.isInc());
      assertEquals(114, node1.getType());
      assertEquals(false, node1.isVarArgs());
      assertEquals(false, node1.isFalse());
      assertEquals(false, node1.isDelProp());
      assertEquals(false, node1.isAssign());
      assertEquals(467058, node1.getSourcePosition());
      assertEquals(false, node1.isSwitch());
      assertEquals(false, node1.isParamList());
      assertEquals(false, node1.isString());
      assertEquals(false, node1.isIn());
      assertEquals(false, node1.isGetterDef());
      assertEquals(false, node1.isGetElem());
      assertEquals(114, node1.getLineno());
      assertEquals(false, node1.isFor());
      assertNull(node1.getSourceFileName());
      assertEquals(false, node1.isIf());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isQuotedString());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isCatch());
      assertEquals(true, node0.isNumber());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isRegExp());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAnd());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isFunction());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isBlock());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isGetterDef());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.isWith());
      assertEquals(39, node0.getType());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isNot());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isCase());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isIf());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isDebugger());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isParamList());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isDo());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isNew());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAdd());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isDefaultCase());
      assertNotSame(node1, node0);
      assertNotSame(node0, node1);
  }

  @Test
  public void test25()  throws Throwable  {
      AbstractCompiler abstractCompiler0 = null;
      boolean boolean0 = false;
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(abstractCompiler0, boolean0, boolean0);
      assertNotNull(controlFlowAnalysis0);
      
      ControlFlowGraph<Node> controlFlowGraph0 = controlFlowAnalysis0.getCfg();
      assertNull(controlFlowGraph0);
  }

  @Test
  public void test26()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      byte byte0 = (byte) (-70);
      Compiler compiler0 = new Compiler();
      assertNotNull(compiler0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, boolean0, boolean0);
      assertNotNull(controlFlowAnalysis0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      
      int int0 = 112;
      String string0 = "Cannot find continue target.";
      Node node0 = Node.newString(int0, string0, (int) byte0, (int) byte0);
      assertNotNull(node0);
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isIf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.isDefaultCase());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNew());
      assertEquals(112, node0.getType());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDebugger());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isFunction());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetterDef());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNot());
      
      controlFlowAnalysis0.process(node0, node0);
      assertEquals(0.0, compiler0.getProgress(), 0.01D);
      assertEquals(false, node0.isHook());
      assertEquals(false, node0.isIn());
      assertEquals(false, node0.isOnlyModifiesThisCall());
      assertEquals(false, node0.isVarArgs());
      assertEquals(false, node0.hasOneChild());
      assertEquals(false, node0.isAdd());
      assertEquals(false, node0.isQuotedString());
      assertEquals(false, node0.isTypeOf());
      assertEquals(false, node0.isTry());
      assertEquals(false, node0.isAssign());
      assertEquals(false, node0.isObjectLit());
      assertEquals(false, node0.isSyntheticBlock());
      assertEquals(false, node0.isIf());
      assertEquals(-1, node0.getLineno());
      assertEquals(false, node0.isSwitch());
      assertEquals(false, node0.isWhile());
      assertEquals(false, node0.isStringKey());
      assertEquals(false, node0.isGetProp());
      assertEquals(false, node0.isName());
      assertEquals(false, node0.isWith());
      assertEquals(false, node0.isNumber());
      assertEquals(false, node0.isEmpty());
      assertEquals(false, node0.isVar());
      assertEquals(false, node0.isLocalResultCall());
      assertEquals(false, node0.isCall());
      assertEquals(false, node0.isInstanceOf());
      assertEquals(false, node0.isFor());
      assertEquals(false, node0.isContinue());
      assertEquals(false, node0.hasMoreThanOneChild());
      assertEquals(false, node0.isNE());
      assertEquals(false, node0.isFalse());
      assertEquals(false, node0.isDelProp());
      assertEquals(false, node0.isAnd());
      assertEquals(true, node0.isDefaultCase());
      assertEquals(false, node0.hasChildren());
      assertEquals(false, node0.isLabel());
      assertEquals(false, node0.wasEmptyNode());
      assertEquals(false, node0.isThrow());
      assertEquals(false, node0.isNew());
      assertEquals(112, node0.getType());
      assertEquals(false, node0.isDo());
      assertEquals(false, node0.isThis());
      assertEquals(false, node0.isParamList());
      assertEquals(0, node0.getChildCount());
      assertEquals(false, node0.isScript());
      assertEquals(false, node0.isAssignAdd());
      assertEquals(false, node0.isLabelName());
      assertEquals(false, node0.isVoid());
      assertEquals(false, node0.isArrayLit());
      assertEquals(false, node0.isOptionalArg());
      assertEquals(false, node0.isComma());
      assertEquals(false, node0.isDebugger());
      assertEquals(-1, node0.getCharno());
      assertEquals(false, node0.isNoSideEffectsCall());
      assertEquals(false, node0.isFunction());
      assertEquals(-1, node0.getSourcePosition());
      assertEquals(false, node0.isBreak());
      assertEquals(false, node0.isString());
      assertEquals(false, node0.isReturn());
      assertEquals(false, node0.isOr());
      assertEquals(false, node0.isExprResult());
      assertEquals(false, node0.isBlock());
      assertEquals(false, node0.isGetElem());
      assertEquals(false, node0.isGetterDef());
      assertNull(node0.getSourceFileName());
      assertEquals(false, node0.isRegExp());
      assertEquals(false, node0.isFromExterns());
      assertEquals(false, node0.isCase());
      assertEquals(0, node0.getLength());
      assertEquals(false, node0.isDec());
      assertEquals(false, node0.isSetterDef());
      assertEquals(false, node0.isInc());
      assertEquals(false, node0.isNull());
      assertEquals(false, node0.isTrue());
      assertEquals(false, node0.isCatch());
      assertEquals(0, node0.getSideEffectFlags());
      assertEquals(false, node0.isNot());
  }
}
