* EvoSuite 1.0.2
* Going to generate test cases for class: org.apache.commons.math3.complex.Complex
* Starting client
* Connecting to master process on port 8164
* Analyzing classpath: 
  - /home/wasp/Desktop/ICSE18/DiffTGen/drr/patches/D_correct/Math5/patch1-Math-5-ACS/patch1Math5_acs/target/build/classes
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/myprinter.jar
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.complex.Complex
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 196
  - Branch 183
  - Exception 0
  - MutationFactory 886
  - Output 358
  - Method 44
  - MethodNoException 44
  - CBranchFitnessFactory 183
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1552323083601
* Starting evolution
[Progress:>                             1%] [Cov:===>                               9%][Progress:>                             1%] [Cov:=====>                             16%][Progress:>                             1%] [Cov:=========>                         28%][Progress:>                             1%] [Cov:==============>                    41%][Progress:>                             1%] [Cov:=================>                 50%][Progress:>                             1%] [Cov:====================>              58%][Progress:>                             1%] [Cov:=====================>             60%][Progress:=>                            5%] [Cov:===>                               9%][Progress:=>                            5%] [Cov:=====>                             16%][Progress:=>                            5%] [Cov:==========>                        29%][Progress:=>                            5%] [Cov:==============>                    42%][Progress:=>                            5%] [Cov:==================>                52%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:=======================>           66%][Progress:=>                            6%] [Cov:==>                                8%][Progress:=>                            6%] [Cov:=====>                             16%][Progress:=>                            6%] [Cov:==========>                        29%][Progress:=>                            6%] [Cov:==============>                    40%][Progress:=>                            6%] [Cov:=================>                 50%][Progress:=>                            6%] [Cov:=====================>             60%][Progress:=>                            6%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:===>                               9%][Progress:==>                           8%] [Cov:=====>                             16%][Progress:==>                           8%] [Cov:==========>                        29%][Progress:==>                           8%] [Cov:==============>                    41%][Progress:==>                           8%] [Cov:=================>                 51%][Progress:==>                           8%] [Cov:=====================>             60%][Progress:==>                           8%] [Cov:=====================>             62%][Progress:==>                           8%] [Cov:======================>            65%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:====>                              14%][Progress:===>                          10%] [Cov:=========>                         26%][Progress:===>                          10%] [Cov:============>                      37%][Progress:===>                          10%] [Cov:=============>                     38%][Progress:===>                          10%] [Cov:================>                  47%][Progress:===>                          10%] [Cov:===================>               56%][Progress:===>                          10%] [Cov:===================>               57%][Progress:===>                          11%] [Cov:==============>                    42%][Progress:===>                          11%] [Cov:================>                  47%][Progress:===>                          11%] [Cov:================>                  48%][Progress:===>                          11%] [Cov:=================>                 49%][Progress:===>                          13%] [Cov:==>                                8%][Progress:===>                          13%] [Cov:=====>                             15%][Progress:===>                          13%] [Cov:=========>                         27%][Progress:===>                          13%] [Cov:=============>                     39%][Progress:===>                          13%] [Cov:==============>                    40%][Progress:===>                          13%] [Cov:=================>                 50%][Progress:===>                          13%] [Cov:====================>              59%][Progress:===>                          13%] [Cov:=====================>             62%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:====>                              14%][Progress:====>                         15%] [Cov:=========>                         26%][Progress:====>                         15%] [Cov:============>                      36%][Progress:====>                         15%] [Cov:===============>                   44%][Progress:====>                         15%] [Cov:==================>                52%][Progress:====>                         15%] [Cov:===================>               55%][Progress:====>                         15%] [Cov:=====================>             60%][Progress:====>                         15%] [Cov:======================>            63%][Progress:====>                         15%] [Cov:======================>            65%][Progress:====>                         15%] [Cov:=======================>           68%][Progress:======>                       20%] [Cov:==>                                8%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:=========>                         28%][Progress:======>                       20%] [Cov:==============>                    40%][Progress:======>                       20%] [Cov:=================>                 49%][Progress:======>                       20%] [Cov:===================>               57%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       21%] [Cov:==>                                8%][Progress:======>                       21%] [Cov:====>                              14%][Progress:======>                       21%] [Cov:=========>                         27%][Progress:======>                       21%] [Cov:============>                      37%][Progress:======>                       21%] [Cov:================>                  48%][Progress:======>                       21%] [Cov:====================>              58%][Progress:======>                       21%] [Cov:=====================>             60%][Progress:======>                       23%] [Cov:==>                                6%][Progress:======>                       23%] [Cov:===>                               11%][Progress:======>                       23%] [Cov:========>                          23%][Progress:======>                       23%] [Cov:==========>                        31%][Progress:======>                       23%] [Cov:============>                      36%][Progress:======>                       23%] [Cov:==============>                    42%][Progress:======>                       23%] [Cov:===============>                   43%][Progress:======>                       23%] [Cov:=================>                 51%][Progress:======>                       23%] [Cov:==================>                53%][Progress:=======>                      26%] [Cov:===>                               9%][Progress:=======>                      26%] [Cov:=====>                             17%][Progress:=======>                      26%] [Cov:==========>                        29%][Progress:=======>                      26%] [Cov:==============>                    41%][Progress:=======>                      26%] [Cov:==============>                    42%][Progress:=======>                      26%] [Cov:=================>                 50%][Progress:=======>                      26%] [Cov:====================>              59%][Progress:=======>                      26%] [Cov:=====================>             62%][Progress:========>                     28%] [Cov:=>                                 5%][Progress:========>                     28%] [Cov:===>                               10%][Progress:========>                     28%] [Cov:========>                          23%][Progress:========>                     28%] [Cov:==========>                        30%][Progress:========>                     28%] [Cov:===========>                       32%][Progress:========>                     28%] [Cov:===========>                       34%][Progress:=========>                    30%] [Cov:===>                               10%][Progress:=========>                    30%] [Cov:======>                            19%][Progress:=========>                    30%] [Cov:==========>                        31%][Progress:=========>                    30%] [Cov:===============>                   44%][Progress:=========>                    30%] [Cov:===============>                   45%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:=======================>           67%][Progress:=========>                    30%] [Cov:========================>          70%][Progress:=========>                    30%] [Cov:========================>          70%][Progress:=========>                    31%] [Cov:=====================>             61%][Progress:=========>                    31%] [Cov:=======================>           68%][Progress:==========>                   35%] [Cov:=====================>             60%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            64%][Progress:==========>                   35%] [Cov:========================>          70%][Progress:==========>                   36%] [Cov:========================>          69%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:=====================>             60%][Progress:===========>                  38%] [Cov:=====================>             61%][Progress:===========>                  38%] [Cov:=====================>             62%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            64%][Progress:===========>                  38%] [Cov:========================>          70%][Progress:============>                 40%] [Cov:=====================>             61%][Progress:============>                 40%] [Cov:=====================>             62%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:=======================>           66%][Progress:============>                 40%] [Cov:=============================>     85%][Progress:============>                 41%] [Cov:=============================>     85%][Progress:============>                 41%] [Cov:=============================>     85%][Progress:============>                 43%] [Cov:=============================>     85%][Progress:=============>                45%] [Cov:=============================>     84%][Progress:=============>                45%] [Cov:=============================>     85%][Progress:=============>                46%] [Cov:=============================>     85%][Progress:=============>                46%] [Cov:=============================>     85%][Progress:==============>               48%] [Cov:=============================>     85%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     85%][Progress:===============>              53%] [Cov:=============================>     84%][Progress:===============>              53%] [Cov:=============================>     85%][Progress:===============>              53%] [Cov:=============================>     85%][Progress:================>             55%] [Cov:=============================>     85%][Progress:================>             56%] [Cov:=============================>     84%][Progress:================>             56%] [Cov:=============================>     85%][Progress:================>             56%] [Cov:=============================>     85%][Progress:=================>            58%] [Cov:=============================>     85%][Progress:=================>            58%] [Cov:==============================>    86%][Progress:==================>           60%] [Cov:=============================>     84%][Progress:==================>           60%] [Cov:=============================>     85%][Progress:==================>           60%] [Cov:==============================>    86%][Progress:==================>           61%] [Cov:==============================>    86%][Progress:==================>           63%] [Cov:=============================>     85%][Progress:==================>           63%] [Cov:==============================>    86%][Progress:===================>          65%] [Cov:=============================>     84%][Progress:===================>          65%] [Cov:=============================>     85%][Progress:===================>          65%] [Cov:==============================>    86%][Progress:===================>          65%] [Cov:==============================>    86%][Progress:===================>          66%] [Cov:=============================>     85%][Progress:===================>          66%] [Cov:==============================>    86%][Progress:====================>         68%] [Cov:=============================>     85%][Progress:====================>         68%] [Cov:==============================>    86%][Progress:=====================>        70%] [Cov:=============================>     85%][Progress:=====================>        70%] [Cov:==============================>    86%][Progress:=====================>        71%] [Cov:=============================>     85%][Progress:=====================>        71%] [Cov:==============================>    86%][Progress:=====================>        71%] [Cov:==============================>    86%][Progress:=====================>        73%] [Cov:=============================>     85%][Progress:=====================>        73%] [Cov:==============================>    86%][Progress:======================>       75%] [Cov:==============================>    86%][Progress:======================>       76%] [Cov:==============================>    86%][Progress:=======================>      78%] [Cov:==============================>    86%][Progress:========================>     80%] [Cov:==============================>    86%][Progress:========================>     80%] [Cov:==============================>    86%][Progress:========================>     81%] [Cov:=============================>     85%][Progress:========================>     81%] [Cov:==============================>    86%][Progress:========================>     83%] [Cov:==============================>    86%][Progress:========================>     83%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    86%] [Cov:==============================>    86%][Progress:==========================>   88%] [Cov:==============================>    86%][Progress:===========================>  90%] [Cov:==============================>    86%][Progress:===========================>  90%] [Cov:==============================>    86%][Progress:===========================>  91%] [Cov:==============================>    86%][Progress:===========================>  91%] [Cov:==============================>    86%][Progress:===========================>  93%] [Cov:==============================>    86%][Progress:============================> 95%] [Cov:==============================>    86%][Progress:============================> 96%] [Cov:==============================>    86%][Progress:=============================>98%] [Cov:==============================>    86%][Progress:=============================>98%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    87%]
* Search finished after 65s and 19 generations, 18357 statements, best individual has fitness: 366.12416548659274
* Minimizing test suite
[MASTER] 17:53:36.740 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 196
* Number of covered goals: 195
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 183
* Number of covered goals: 177
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 99%
* Total number of goals: 886
* Number of covered goals: 880
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 6%
* Total number of goals: 358
* Number of covered goals: 20
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 44
* Number of covered goals: 44
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 44
* Number of covered goals: 44
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 183
* Number of covered goals: 176
* Generated 61 tests with total length 815
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 17:53:51.464 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000
[MASTER] 17:53:51.464 [logback-1] WARN  JUnitAnalyzer - Failing test: Complex complex0 = new Complex((-2584.694011803565), (-2584.694011803565));
Complex complex1 = complex0.pow((-2448.8447607731));
Complex complex2 = complex0.multiply(963);
Complex complex3 = complex0.multiply(complex2);
Complex complex4 = Complex.valueOf(329.078926831, (-2584.694011803565));
int int0 = complex0.hashCode();
Complex complex5 = complex0.atan();
Complex complex6 = complex0.divide(complex3);
Complex complex7 = complex2.tan();
List<Complex> list0 = complex3.nthRoot(4398);
Complex complex8 = complex7.pow(0.0);
Complex complex9 = complex7.pow(complex0);
Complex complex10 = complex3.multiply(963);
Complex complex11 = complex7.atan();
Complex complex12 = complex11.conjugate();
Complex complex13 = complex2.negate();
Complex complex14 = complex7.tan();
boolean boolean0 = complex11.isInfinite();
Complex complex15 = complex7.tan();
Complex complex16 = complex10.atan();
Complex complex17 = complex13.subtract(complex10);
Complex complex18 = complex3.sqrt();
Complex complex19 = complex10.multiply(2040);

* Writing JUnit test case 'Complex_ESTest' to evosuite-tests
* Done!

* Computation finished
