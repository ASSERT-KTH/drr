* EvoSuite 1.0.2
* Going to generate test cases for class: org.apache.commons.math3.complex.Complex
* Starting client
* Connecting to master process on port 3010
* Analyzing classpath: 
  - /home/wasp/Desktop/ICSE18/DiffTGen/drr/patches/D_correct/Math5/patch3-Math-5-Jaid/patch3Math5_jaid/target/build/classes
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/myprinter.jar
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.complex.Complex
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 196
  - Branch 183
  - Exception 0
  - MutationFactory 886
  - Output 358
  - Method 44
  - MethodNoException 44
  - CBranchFitnessFactory 183
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1552357114797
* Starting evolution
[Progress:>                             1%] [Cov:=>                                 3%][Progress:>                             1%] [Cov:=>                                 5%][Progress:>                             1%] [Cov:======>                            18%][Progress:>                             1%] [Cov:=======>                           21%][Progress:>                             1%] [Cov:========>                          23%][Progress:>                             1%] [Cov:========>                          25%][Progress:=>                            5%] [Cov:==>                                8%][Progress:=>                            5%] [Cov:=====>                             15%][Progress:=>                            5%] [Cov:=========>                         28%][Progress:=>                            5%] [Cov:=============>                     39%][Progress:=>                            5%] [Cov:================>                  48%][Progress:=>                            5%] [Cov:===================>               57%][Progress:=>                            5%] [Cov:====================>              59%][Progress:=>                            6%] [Cov:==>                                6%][Progress:=>                            6%] [Cov:===>                               11%][Progress:=>                            6%] [Cov:========>                          23%][Progress:=>                            6%] [Cov:===========>                       32%][Progress:=>                            6%] [Cov:=============>                     39%][Progress:=>                            6%] [Cov:================>                  46%][Progress:=>                            6%] [Cov:================>                  48%][Progress:=>                            6%] [Cov:=================>                 51%][Progress:=>                            6%] [Cov:==================>                52%][Progress:==>                           8%] [Cov:==>                                8%][Progress:==>                           8%] [Cov:=====>                             16%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:==============>                    40%][Progress:==>                           8%] [Cov:=================>                 50%][Progress:==>                           8%] [Cov:=====================>             60%][Progress:==>                           8%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:===>                               9%][Progress:===>                          10%] [Cov:=====>                             17%][Progress:===>                          10%] [Cov:==========>                        30%][Progress:===>                          10%] [Cov:===============>                   43%][Progress:===>                          10%] [Cov:==================>                53%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:=======================>           66%][Progress:===>                          11%] [Cov:==>                                8%][Progress:===>                          11%] [Cov:=====>                             16%][Progress:===>                          11%] [Cov:=========>                         28%][Progress:===>                          11%] [Cov:==============>                    40%][Progress:===>                          11%] [Cov:==============>                    41%][Progress:===>                          11%] [Cov:=================>                 51%][Progress:===>                          11%] [Cov:=====================>             61%][Progress:===>                          11%] [Cov:======================>            64%][Progress:===>                          13%] [Cov:==>                                8%][Progress:===>                          13%] [Cov:=====>                             15%][Progress:===>                          13%] [Cov:=========>                         28%][Progress:===>                          13%] [Cov:==============>                    40%][Progress:===>                          13%] [Cov:=================>                 50%][Progress:===>                          13%] [Cov:=====================>             60%][Progress:===>                          13%] [Cov:======================>            63%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:====>                              14%][Progress:====>                         15%] [Cov:=========>                         27%][Progress:====>                         15%] [Cov:============>                      37%][Progress:====>                         15%] [Cov:===============>                   45%][Progress:====>                         15%] [Cov:==================>                53%][Progress:====>                         15%] [Cov:==================>                54%][Progress:====>                         15%] [Cov:======================>            64%][Progress:====>                         15%] [Cov:=======================>           68%][Progress:====>                         16%] [Cov:==>                                8%][Progress:====>                         16%] [Cov:====>                              14%][Progress:====>                         16%] [Cov:=========>                         26%][Progress:====>                         16%] [Cov:============>                      37%][Progress:====>                         16%] [Cov:===============>                   43%][Progress:====>                         16%] [Cov:================>                  48%][Progress:====>                         16%] [Cov:=================>                 49%][Progress:=====>                        18%] [Cov:===>                               9%][Progress:=====>                        18%] [Cov:=====>                             16%][Progress:=====>                        18%] [Cov:==========>                        29%][Progress:=====>                        18%] [Cov:==============>                    42%][Progress:=====>                        18%] [Cov:==================>                52%][Progress:=====>                        18%] [Cov:=====================>             62%][Progress:=====>                        18%] [Cov:======================>            65%][Progress:======>                       21%] [Cov:==>                                8%][Progress:======>                       21%] [Cov:====>                              14%][Progress:======>                       21%] [Cov:=========>                         27%][Progress:======>                       21%] [Cov:============>                      37%][Progress:======>                       21%] [Cov:===============>                   45%][Progress:======>                       21%] [Cov:==================>                53%][Progress:======>                       21%] [Cov:===================>               56%][Progress:======>                       21%] [Cov:====================>              58%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:===>                               9%][Progress:=======>                      25%] [Cov:======>                            18%][Progress:=======>                      25%] [Cov:==========>                        30%][Progress:=======>                      25%] [Cov:===============>                   44%][Progress:=======>                      25%] [Cov:==================>                54%][Progress:=======>                      25%] [Cov:======================>            65%][Progress:=======>                      25%] [Cov:=======================>           68%][Progress:========>                     28%] [Cov:===>                               9%][Progress:========>                     28%] [Cov:=====>                             17%][Progress:========>                     28%] [Cov:==========>                        29%][Progress:========>                     28%] [Cov:==============>                    42%][Progress:========>                     28%] [Cov:===============>                   43%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:======================>            65%][Progress:========>                     28%] [Cov:=======================>           67%][Progress:=========>                    30%] [Cov:==>                                7%][Progress:=========>                    30%] [Cov:====>                              13%][Progress:=========>                    30%] [Cov:========>                          25%][Progress:=========>                    30%] [Cov:===========>                       34%][Progress:=========>                    30%] [Cov:==============>                    42%][Progress:=========>                    30%] [Cov:=================>                 49%][Progress:=========>                    30%] [Cov:=================>                 50%][Progress:=========>                    30%] [Cov:====================>              59%][Progress:=========>                    30%] [Cov:=====================>             62%][Progress:=========>                    30%] [Cov:=======================>           68%][Progress:=========>                    31%] [Cov:=================>                 49%][Progress:=========>                    31%] [Cov:======================>            64%][Progress:=========>                    31%] [Cov:=======================>           66%][Progress:=========>                    31%] [Cov:=======================>           67%][Progress:=========>                    33%] [Cov:=======================>           67%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:==========>                        29%][Progress:==========>                   36%] [Cov:===============>                   45%][Progress:==========>                   36%] [Cov:=================>                 49%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               57%][Progress:==========>                   36%] [Cov:=====================>             60%][Progress:==========>                   36%] [Cov:======================>            65%][Progress:==========>                   36%] [Cov:=======================>           68%][Progress:==========>                   36%] [Cov:=============================>     83%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      82%][Progress:============>                 41%] [Cov:============================>      82%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:============================>      82%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:============================>      82%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:============================>      82%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             56%] [Cov:============================>      82%][Progress:================>             56%] [Cov:=============================>     83%][Progress:=================>            58%] [Cov:=============================>     83%][Progress:==================>           60%] [Cov:=============================>     83%][Progress:==================>           61%] [Cov:=============================>     83%][Progress:==================>           61%] [Cov:=============================>     84%][Progress:==================>           63%] [Cov:=============================>     83%][Progress:==================>           63%] [Cov:=============================>     84%][Progress:===================>          65%] [Cov:=============================>     84%][Progress:===================>          66%] [Cov:============================>      82%][Progress:===================>          66%] [Cov:=============================>     83%][Progress:===================>          66%] [Cov:=============================>     84%][Progress:===================>          66%] [Cov:=============================>     84%][Progress:====================>         68%] [Cov:=============================>     84%][Progress:=====================>        70%] [Cov:=============================>     83%][Progress:=====================>        70%] [Cov:=============================>     84%][Progress:=====================>        71%] [Cov:=============================>     84%][Progress:=====================>        73%] [Cov:=============================>     84%][Progress:======================>       75%] [Cov:=============================>     84%][Progress:======================>       76%] [Cov:=============================>     84%][Progress:=======================>      78%] [Cov:=============================>     83%][Progress:=======================>      78%] [Cov:=============================>     84%][Progress:========================>     80%] [Cov:=============================>     84%][Progress:========================>     81%] [Cov:=============================>     84%][Progress:========================>     83%] [Cov:=============================>     84%][Progress:=========================>    86%] [Cov:=============================>     84%][Progress:=========================>    86%] [Cov:=============================>     84%][Progress:=========================>    86%] [Cov:=============================>     85%][Progress:==========================>   88%] [Cov:=============================>     85%][Progress:===========================>  90%] [Cov:=============================>     84%][Progress:===========================>  90%] [Cov:=============================>     85%][Progress:===========================>  91%] [Cov:=============================>     84%][Progress:===========================>  91%] [Cov:=============================>     85%][Progress:===========================>  93%] [Cov:=============================>     84%][Progress:===========================>  93%] [Cov:=============================>     85%][Progress:===========================>  93%] [Cov:=============================>     85%][Progress:============================> 96%] [Cov:=============================>     85%][Progress:=============================>98%] [Cov:=============================>     84%][Progress:=============================>98%] [Cov:=============================>     85%][Progress:==============================100%] [Cov:=============================>     85%][Progress:==============================100%] [Cov:=============================>     85%][Progress:==============================100%] [Cov:=============================>     84%][Progress:==============================100%] [Cov:=============================>     85%][Progress:==============================100%] [Cov:==============================>    86%]
* Search finished after 65s and 10 generations, 10245 statements, best individual has fitness: 376.2916665414554
* Minimizing test suite
[MASTER] 03:20:47.817 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 196
* Number of covered goals: 195
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 183
* Number of covered goals: 174
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 99%
* Total number of goals: 886
* Number of covered goals: 877
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 6%
* Total number of goals: 358
* Number of covered goals: 20
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 44
* Number of covered goals: 44
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 44
* Number of covered goals: 44
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 95%
* Total number of goals: 183
* Number of covered goals: 173
* Generated 56 tests with total length 802
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 03:21:08.032 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000
[MASTER] 03:21:08.032 [logback-1] WARN  JUnitAnalyzer - Failing test: Complex complex0 = new Complex(0.0);
Complex complex1 = complex0.multiply(37);
double double0 = complex1.getArgument();
Complex complex2 = complex1.multiply(37);
Complex complex3 = complex1.sqrt1z();
int int0 = complex0.hashCode();
Complex complex4 = complex0.subtract(complex1);
List<Complex> list0 = complex0.nthRoot(4826);
Complex complex5 = complex0.atan();
Complex complex6 = complex0.pow(0.0);
Complex complex7 = complex0.conjugate();
Complex complex8 = complex4.sqrt1z();
Complex complex9 = new Complex(1351.55);
Complex complex10 = complex6.sqrt1z();
Complex complex11 = new Complex(1351.55);
Complex complex12 = complex11.createComplex(0.0, (-1497.0));
double double1 = complex11.abs();
Complex complex13 = complex6.subtract(complex4);
boolean boolean0 = complex7.isNaN();
Complex complex14 = (Complex)complex9.readResolve();
Complex complex15 = complex0.asin();
Complex complex16 = complex7.multiply((-2199));
boolean boolean1 = complex7.equals(complex2);

* Writing JUnit test case 'Complex_ESTest' to evosuite-tests
* Done!

* Computation finished
