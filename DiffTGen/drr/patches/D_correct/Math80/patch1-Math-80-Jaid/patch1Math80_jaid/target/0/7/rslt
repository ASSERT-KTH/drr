* EvoSuite 1.0.2
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 7562
* Analyzing classpath: 
  - /home/wasp/Desktop/ICSE18/DiffTGen/drr/patches/D_correct/Math80/patch1-Math-80-Jaid/patch1Math80_jaid/target/build/classes
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/myprinter.jar
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 835
  - Branch 428
  - Exception 0
  - MutationFactory 209
  - Output 57
  - Method 12
  - MethodNoException 12
  - CBranchFitnessFactory 428
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1552339604638
* Starting evolution
[Progress:>                             0%] [Cov:>                                  1%][Progress:>                             0%] [Cov:====>                              13%][Progress:>                             0%] [Cov:====>                              14%][Progress:>                             0%] [Cov:=====>                             15%][Progress:>                             1%] [Cov:=====>                             15%][Progress:>                             1%] [Cov:=====>                             16%][Progress:>                             1%] [Cov:=====>                             17%][Progress:>                             3%] [Cov:>                                  0%][Progress:>                             3%] [Cov:>                                  1%][Progress:>                             3%] [Cov:====>                              13%][Progress:>                             3%] [Cov:====>                              14%][Progress:=>                            5%] [Cov:==>                                6%][Progress:=>                            5%] [Cov:====>                              12%][Progress:=>                            5%] [Cov:========>                          24%][Progress:=>                            5%] [Cov:==========>                        30%][Progress:=>                            5%] [Cov:===========>                       33%][Progress:=>                            5%] [Cov:============>                      35%][Progress:=>                            5%] [Cov:=============>                     39%][Progress:=>                            5%] [Cov:=============>                     39%][Progress:=>                            6%] [Cov:======>                            18%][Progress:=>                            6%] [Cov:======>                            19%][Progress:=>                            6%] [Cov:=======>                           21%][Progress:=>                            6%] [Cov:=========>                         26%][Progress:=>                            6%] [Cov:=========>                         27%][Progress:=>                            6%] [Cov:==========>                        29%][Progress:=>                            6%] [Cov:==========>                        31%][Progress:=>                            6%] [Cov:===========>                       34%][Progress:=>                            6%] [Cov:===============>                   44%][Progress:==>                           8%] [Cov:==============>                    42%][Progress:==>                           8%] [Cov:===============>                   44%][Progress:==>                           8%] [Cov:===============>                   44%][Progress:===>                          10%] [Cov:==============>                    42%][Progress:===>                          10%] [Cov:===============>                   44%][Progress:===>                          10%] [Cov:================>                  46%][Progress:===>                          10%] [Cov:================>                  47%][Progress:===>                          10%] [Cov:================>                  48%][Progress:===>                          11%] [Cov:===============>                   43%][Progress:===>                          11%] [Cov:================>                  46%][Progress:===>                          11%] [Cov:================>                  48%][Progress:===>                          13%] [Cov:================>                  47%][Progress:===>                          13%] [Cov:================>                  48%][Progress:===>                          13%] [Cov:=================>                 49%][Progress:====>                         15%] [Cov:===============>                   43%][Progress:====>                         15%] [Cov:================>                  46%][Progress:====>                         15%] [Cov:================>                  47%][Progress:====>                         15%] [Cov:================>                  48%][Progress:====>                         15%] [Cov:=================>                 49%][Progress:====>                         15%] [Cov:==================>                53%][Progress:====>                         16%] [Cov:==================>                53%][Progress:====>                         16%] [Cov:==================>                54%][Progress:====>                         16%] [Cov:===================>               55%][Progress:====>                         16%] [Cov:===================>               55%][Progress:====>                         16%] [Cov:===================>               56%][Progress:====>                         16%] [Cov:===================>               57%][Progress:=====>                        18%] [Cov:=================>                 51%][Progress:=====>                        18%] [Cov:===================>               55%][Progress:=====>                        18%] [Cov:===================>               57%][Progress:======>                       20%] [Cov:===================>               57%][Progress:======>                       20%] [Cov:====================>              58%][Progress:======>                       21%] [Cov:===================>               57%][Progress:======>                       21%] [Cov:===================>               57%][Progress:======>                       21%] [Cov:====================>              58%][Progress:======>                       23%] [Cov:====================>              58%][Progress:=======>                      25%] [Cov:===================>               57%][Progress:=======>                      25%] [Cov:====================>              58%][Progress:=======>                      25%] [Cov:====================>              58%][Progress:=======>                      26%] [Cov:===================>               57%][Progress:=======>                      26%] [Cov:====================>              58%][Progress:========>                     28%] [Cov:===================>               57%][Progress:========>                     28%] [Cov:====================>              58%][Progress:========>                     28%] [Cov:====================>              59%][Progress:========>                     28%] [Cov:=====================>             60%][Progress:========>                     28%] [Cov:=====================>             61%][Progress:========>                     28%] [Cov:=====================>             62%][Progress:========>                     28%] [Cov:======================>            63%][Progress:=========>                    30%] [Cov:=====================>             60%][Progress:=========>                    30%] [Cov:=====================>             61%][Progress:=========>                    31%] [Cov:=====================>             60%][Progress:=========>                    31%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             61%][Progress:=========>                    33%] [Cov:=====================>             62%][Progress:=========>                    33%] [Cov:======================>            63%][Progress:=========>                    33%] [Cov:======================>            65%][Progress:==========>                   35%] [Cov:======================>            64%][Progress:==========>                   35%] [Cov:======================>            65%][Progress:==========>                   36%] [Cov:======================>            64%][Progress:==========>                   36%] [Cov:======================>            65%][Progress:==========>                   36%] [Cov:=======================>           66%][Progress:===========>                  38%] [Cov:======================>            64%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:=======================>           68%][Progress:============>                 40%] [Cov:=======================>           67%][Progress:============>                 40%] [Cov:=======================>           68%][Progress:============>                 41%] [Cov:=======================>           68%][Progress:============>                 43%] [Cov:=======================>           67%][Progress:============>                 43%] [Cov:=======================>           68%][Progress:=============>                45%] [Cov:=======================>           68%][Progress:=============>                46%] [Cov:=======================>           68%][Progress:==============>               48%] [Cov:=======================>           67%][Progress:==============>               48%] [Cov:=======================>           68%][Progress:==============>               48%] [Cov:========================>          69%][Progress:===============>              50%] [Cov:=======================>           68%][Progress:===============>              51%] [Cov:=======================>           68%][Progress:===============>              51%] [Cov:========================>          70%][Progress:===============>              53%] [Cov:========================>          70%][Progress:================>             55%] [Cov:========================>          70%][Progress:================>             55%] [Cov:========================>          70%][Progress:================>             56%] [Cov:========================>          70%][Progress:=================>            58%] [Cov:========================>          70%][Progress:==================>           60%] [Cov:========================>          70%][Progress:==================>           61%] [Cov:========================>          70%][Progress:==================>           61%] [Cov:========================>          71%][Progress:==================>           61%] [Cov:========================>          70%][Progress:==================>           63%] [Cov:========================>          71%][Progress:===================>          65%] [Cov:========================>          71%][Progress:===================>          66%] [Cov:========================>          70%][Progress:===================>          66%] [Cov:========================>          71%][Progress:===================>          66%] [Cov:========================>          71%][Progress:====================>         68%] [Cov:========================>          70%][Progress:====================>         68%] [Cov:========================>          71%][Progress:=====================>        70%] [Cov:========================>          71%][Progress:=====================>        70%] [Cov:========================>          71%][Progress:=====================>        71%] [Cov:========================>          70%][Progress:=====================>        71%] [Cov:========================>          71%][Progress:=====================>        73%] [Cov:========================>          70%][Progress:=====================>        73%] [Cov:========================>          71%][Progress:======================>       75%] [Cov:========================>          70%][Progress:======================>       75%] [Cov:========================>          71%][Progress:======================>       75%] [Cov:========================>          71%][Progress:======================>       76%] [Cov:========================>          71%][Progress:=======================>      78%] [Cov:========================>          70%][Progress:=======================>      78%] [Cov:========================>          71%][Progress:========================>     80%] [Cov:========================>          71%][Progress:========================>     81%] [Cov:========================>          71%][Progress:========================>     83%] [Cov:========================>          71%][Progress:========================>     83%] [Cov:========================>          71%][Progress:=========================>    85%] [Cov:========================>          71%][Progress:=========================>    86%] [Cov:========================>          71%][Progress:==========================>   88%] [Cov:========================>          71%][Progress:==========================>   88%] [Cov:========================>          71%][Progress:===========================>  90%] [Cov:========================>          71%][Progress:===========================>  91%] [Cov:========================>          71%][Progress:===========================>  91%] [Cov:========================>          71%][Progress:===========================>  93%] [Cov:========================>          71%][Progress:============================> 95%] [Cov:========================>          71%][Progress:============================> 96%] [Cov:========================>          71%][Progress:=============================>98%] [Cov:========================>          71%][Progress:==============================100%] [Cov:========================>          71%][Progress:==============================100%] [Cov:=========================>         72%][Progress:==============================100%] [Cov:=========================>         72%][Progress:==============================100%] [Cov:=========================>         72%][Progress:==============================100%] [Cov:=========================>         74%]
* Search finished after 66s and 26 generations, 11292 statements, best individual has fitness: 1136.7458604780313
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
[MASTER] 22:28:59.807 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Coverage of criterion LINE: 80%
* Total number of goals: 835
* Number of covered goals: 667
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 69%
* Total number of goals: 428
* Number of covered goals: 296
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 56%
* Total number of goals: 209
* Number of covered goals: 116
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 21%
* Total number of goals: 57
* Number of covered goals: 12
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 69%
* Total number of goals: 428
* Number of covered goals: 296
* Generated 29 tests with total length 399
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'EigenDecompositionImpl_ESTest' to evosuite-tests
* Done!

* Computation finished
