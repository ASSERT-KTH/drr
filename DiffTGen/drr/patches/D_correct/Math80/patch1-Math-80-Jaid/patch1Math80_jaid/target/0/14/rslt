* EvoSuite 1.0.2
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 8019
* Analyzing classpath: 
  - /home/wasp/Desktop/ICSE18/DiffTGen/drr/patches/D_correct/Math80/patch1-Math-80-Jaid/patch1Math80_jaid/target/build/classes
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/myprinter.jar
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 835
  - Branch 428
  - Exception 0
  - MutationFactory 209
  - Output 57
  - Method 12
  - MethodNoException 12
  - CBranchFitnessFactory 428
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1552340716738
* Starting evolution
[Progress:>                             0%] [Cov:>                                  1%][Progress:>                             0%] [Cov:====>                              13%][Progress:>                             0%] [Cov:====>                              14%][Progress:>                             1%] [Cov:>                                  0%][Progress:>                             1%] [Cov:>                                  1%][Progress:>                             1%] [Cov:====>                              13%][Progress:>                             1%] [Cov:====>                              14%][Progress:>                             3%] [Cov:>                                  0%][Progress:>                             3%] [Cov:>                                  1%][Progress:>                             3%] [Cov:====>                              13%][Progress:>                             3%] [Cov:====>                              14%][Progress:>                             3%] [Cov:====>                              14%][Progress:=>                            5%] [Cov:====>                              14%][Progress:=>                            5%] [Cov:====>                              14%][Progress:=>                            6%] [Cov:====>                              14%][Progress:=>                            6%] [Cov:====>                              14%][Progress:=>                            6%] [Cov:====>                              14%][Progress:==>                           8%] [Cov:====>                              14%][Progress:==>                           8%] [Cov:=====>                             15%][Progress:==>                           8%] [Cov:=====>                             16%][Progress:==>                           8%] [Cov:=====>                             16%][Progress:==>                           8%] [Cov:=====>                             16%][Progress:==>                           8%] [Cov:=====>                             16%][Progress:===>                          10%] [Cov:=====>                             16%][Progress:===>                          10%] [Cov:=====>                             16%][Progress:===>                          10%] [Cov:=====>                             16%][Progress:===>                          10%] [Cov:=====>                             16%][Progress:===>                          10%] [Cov:=====>                             16%][Progress:===>                          11%] [Cov:=====>                             16%][Progress:===>                          11%] [Cov:=====>                             17%][Progress:===>                          11%] [Cov:======>                            18%][Progress:===>                          11%] [Cov:======>                            19%][Progress:===>                          11%] [Cov:=======>                           21%][Progress:===>                          11%] [Cov:========>                          23%][Progress:===>                          11%] [Cov:========>                          25%][Progress:===>                          11%] [Cov:=========>                         27%][Progress:===>                          11%] [Cov:=========>                         28%][Progress:===>                          11%] [Cov:==========>                        29%][Progress:===>                          11%] [Cov:==========>                        30%][Progress:===>                          13%] [Cov:==========>                        29%][Progress:===>                          13%] [Cov:==========>                        30%][Progress:===>                          13%] [Cov:==========>                        31%][Progress:===>                          13%] [Cov:===========>                       32%][Progress:===>                          13%] [Cov:===========>                       33%][Progress:===>                          13%] [Cov:===========>                       34%][Progress:===>                          13%] [Cov:============>                      35%][Progress:===>                          13%] [Cov:============>                      35%][Progress:===>                          13%] [Cov:============>                      36%][Progress:===>                          13%] [Cov:============>                      36%][Progress:====>                         15%] [Cov:============>                      36%][Progress:====>                         15%] [Cov:============>                      36%][Progress:====>                         15%] [Cov:============>                      36%][Progress:====>                         15%] [Cov:============>                      36%][Progress:====>                         16%] [Cov:============>                      36%][Progress:====>                         16%] [Cov:============>                      36%][Progress:====>                         16%] [Cov:============>                      36%][Progress:====>                         16%] [Cov:============>                      36%][Progress:=====>                        18%] [Cov:============>                      36%][Progress:=====>                        18%] [Cov:============>                      36%][Progress:=====>                        18%] [Cov:============>                      36%][Progress:======>                       20%] [Cov:============>                      36%][Progress:======>                       20%] [Cov:============>                      36%][Progress:======>                       21%] [Cov:============>                      36%][Progress:======>                       21%] [Cov:============>                      36%][Progress:======>                       21%] [Cov:============>                      36%][Progress:======>                       21%] [Cov:============>                      37%][Progress:======>                       21%] [Cov:=============>                     38%][Progress:======>                       21%] [Cov:=============>                     38%][Progress:======>                       23%] [Cov:=============>                     38%][Progress:======>                       23%] [Cov:=============>                     38%][Progress:======>                       23%] [Cov:=============>                     38%][Progress:=======>                      25%] [Cov:===============>                   43%][Progress:=======>                      25%] [Cov:================>                  47%][Progress:=======>                      25%] [Cov:==================>                54%][Progress:=======>                      25%] [Cov:===================>               57%][Progress:=======>                      26%] [Cov:===================>               57%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:===================>               57%][Progress:========>                     28%] [Cov:===================>               57%][Progress:=========>                    30%] [Cov:==================>                54%][Progress:=========>                    30%] [Cov:===================>               57%][Progress:=========>                    30%] [Cov:====================>              58%][Progress:=========>                    31%] [Cov:====================>              58%][Progress:=========>                    33%] [Cov:==================>                54%][Progress:=========>                    33%] [Cov:===================>               57%][Progress:=========>                    33%] [Cov:====================>              58%][Progress:=========>                    33%] [Cov:====================>              58%][Progress:=========>                    33%] [Cov:====================>              58%][Progress:==========>                   35%] [Cov:===================>               55%][Progress:==========>                   35%] [Cov:====================>              58%][Progress:==========>                   36%] [Cov:====================>              58%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:============>                 40%] [Cov:====================>              58%][Progress:============>                 40%] [Cov:====================>              59%][Progress:============>                 41%] [Cov:====================>              59%][Progress:============>                 43%] [Cov:====================>              59%][Progress:============>                 43%] [Cov:=====================>             60%][Progress:============>                 43%] [Cov:=====================>             61%][Progress:=============>                45%] [Cov:====================>              59%][Progress:=============>                46%] [Cov:====================>              59%][Progress:==============>               48%] [Cov:=====================>             62%][Progress:===============>              50%] [Cov:=====================>             62%][Progress:===============>              51%] [Cov:=====================>             62%][Progress:===============>              51%] [Cov:=====================>             62%][Progress:===============>              53%] [Cov:=====================>             62%][Progress:================>             55%] [Cov:=====================>             62%][Progress:================>             56%] [Cov:=====================>             62%][Progress:=================>            58%] [Cov:=====================>             62%][Progress:==================>           60%] [Cov:=====================>             62%][Progress:==================>           61%] [Cov:=====================>             62%][Progress:==================>           61%] [Cov:=====================>             62%][Progress:==================>           63%] [Cov:=====================>             62%][Progress:===================>          65%] [Cov:=====================>             62%][Progress:===================>          66%] [Cov:=====================>             62%][Progress:====================>         68%] [Cov:=====================>             62%][Progress:=====================>        70%] [Cov:=====================>             62%][Progress:=====================>        70%] [Cov:======================>            63%][Progress:=====================>        70%] [Cov:======================>            64%][Progress:=====================>        71%] [Cov:======================>            64%][Progress:=====================>        73%] [Cov:======================>            64%][Progress:======================>       75%] [Cov:======================>            64%][Progress:======================>       76%] [Cov:======================>            64%][Progress:=======================>      78%] [Cov:======================>            64%][Progress:=======================>      78%] [Cov:======================>            65%][Progress:========================>     80%] [Cov:======================>            64%][Progress:========================>     80%] [Cov:======================>            65%][Progress:========================>     81%] [Cov:======================>            64%][Progress:========================>     81%] [Cov:======================>            65%][Progress:========================>     83%] [Cov:======================>            64%][Progress:========================>     83%] [Cov:======================>            65%][Progress:=========================>    85%] [Cov:======================>            64%][Progress:=========================>    85%] [Cov:======================>            65%][Progress:=========================>    86%] [Cov:======================>            64%][Progress:=========================>    86%] [Cov:======================>            65%][Progress:==========================>   88%] [Cov:======================>            65%][Progress:===========================>  90%] [Cov:======================>            64%][Progress:===========================>  90%] [Cov:======================>            65%][Progress:===========================>  91%] [Cov:======================>            65%][Progress:===========================>  91%] [Cov:=======================>           67%][Progress:===========================>  91%] [Cov:=======================>           67%][Progress:===========================>  93%] [Cov:=======================>           66%][Progress:============================> 95%] [Cov:=======================>           66%][Progress:============================> 96%] [Cov:=======================>           66%][Progress:============================> 96%] [Cov:=======================>           67%][Progress:=============================>98%] [Cov:=======================>           66%][Progress:=============================>98%] [Cov:=======================>           67%][Progress:==============================100%] [Cov:=======================>           66%][Progress:==============================100%] [Cov:=======================>           67%][Progress:==============================100%] [Cov:=======================>           66%][Progress:==============================100%] [Cov:=======================>           66%][Progress:==============================100%] [Cov:=======================>           67%][Progress:==============================100%] [Cov:=======================>           68%]
* Search finished after 66s and 46 generations, 17159 statements, best individual has fitness: 1261.4494636513912
* Minimizing test suite
[MASTER] 22:47:32.496 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 77%
* Total number of goals: 835
* Number of covered goals: 645
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 286
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 55%
* Total number of goals: 209
* Number of covered goals: 115
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 18%
* Total number of goals: 57
* Number of covered goals: 10
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 67%
* Total number of goals: 428
* Number of covered goals: 286
* Generated 25 tests with total length 340
* Resulting test suite's coverage: 69% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 22:47:45.335 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.apache.commons.math.linear.InvalidMatrixException: 
[MASTER] 22:47:45.336 [logback-1] WARN  JUnitAnalyzer - Failing test: double[] doubleArray0 = new double[8];
doubleArray0[0] = 0.333;
doubleArray0[1] = 4.177382378921493;
doubleArray0[2] = (-2078.76219748014);
doubleArray0[3] = Double.NaN;
doubleArray0[4] = 204060.85718164642;
doubleArray0[5] = 253.166521001;
doubleArray0[6] = 100.0;
doubleArray0[7] = 3.3367086871294305E-11;
double[] doubleArray1 = new double[7];
doubleArray1[0] = (-2078.76219748014);
doubleArray1[1] = 3.3367086871294305E-11;
doubleArray1[2] = 3.3367086871294305E-11;
doubleArray1[3] = Double.NaN;
doubleArray1[4] = (-2078.76219748014);
doubleArray1[5] = (-2078.76219748014);
doubleArray1[6] = 4.177382378921493;
EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-2078.76219748014));
double double0 = eigenDecompositionImpl0.getRealEigenvalue(1733906914);

* Writing JUnit test case 'EigenDecompositionImpl_ESTest' to evosuite-tests
* Done!

* Computation finished
