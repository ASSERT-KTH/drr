* EvoSuite 1.0.2
* Going to generate test cases for class: org.apache.commons.math.linear.EigenDecompositionImpl
* Starting client
* Connecting to master process on port 18462
* Analyzing classpath: 
  - /home/wasp/Desktop/ICSE18/DiffTGen/drr/patches/D_correct/Math80/patch1-Math-80-Jaid/patch1Math80_jaid/target/build/classes
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/myprinter.jar
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.linear.EigenDecompositionImpl
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 835
  - Branch 428
  - Exception 0
  - MutationFactory 209
  - Output 57
  - Method 12
  - MethodNoException 12
  - CBranchFitnessFactory 428
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1552340399479
* Starting evolution
[Progress:>                             0%] [Cov:>                                  1%][Progress:>                             0%] [Cov:====>                              13%][Progress:>                             0%] [Cov:====>                              14%][Progress:>                             1%] [Cov:>                                  0%][Progress:>                             1%] [Cov:>                                  1%][Progress:>                             1%] [Cov:====>                              13%][Progress:>                             1%] [Cov:====>                              14%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:====>                              12%][Progress:>                             3%] [Cov:========>                          24%][Progress:>                             3%] [Cov:==========>                        30%][Progress:>                             3%] [Cov:===========>                       32%][Progress:>                             3%] [Cov:============>                      36%][Progress:=>                            5%] [Cov:>                                  0%][Progress:=>                            5%] [Cov:>                                  1%][Progress:=>                            5%] [Cov:====>                              13%][Progress:=>                            5%] [Cov:====>                              14%][Progress:=>                            5%] [Cov:============>                      36%][Progress:=>                            6%] [Cov:=======>                           20%][Progress:=>                            6%] [Cov:========>                          24%][Progress:=>                            6%] [Cov:===========>                       32%][Progress:=>                            6%] [Cov:===========>                       33%][Progress:=>                            6%] [Cov:============>                      35%][Progress:=>                            6%] [Cov:=============>                     39%][Progress:==>                           8%] [Cov:===========>                       33%][Progress:==>                           8%] [Cov:===========>                       34%][Progress:==>                           8%] [Cov:=============>                     38%][Progress:==>                           8%] [Cov:==============>                    41%][Progress:==>                           8%] [Cov:==============>                    42%][Progress:==>                           8%] [Cov:===============>                   43%][Progress:===>                          10%] [Cov:============>                      37%][Progress:===>                          10%] [Cov:==============>                    41%][Progress:===>                          10%] [Cov:===============>                   43%][Progress:===>                          11%] [Cov:=============>                     39%][Progress:===>                          11%] [Cov:===============>                   43%][Progress:===>                          11%] [Cov:===============>                   44%][Progress:===>                          11%] [Cov:===============>                   44%][Progress:===>                          13%] [Cov:==============>                    40%][Progress:===>                          13%] [Cov:===============>                   44%][Progress:===>                          13%] [Cov:===============>                   44%][Progress:====>                         15%] [Cov:===============>                   44%][Progress:====>                         16%] [Cov:===============>                   44%][Progress:====>                         16%] [Cov:===============>                   45%][Progress:=====>                        18%] [Cov:===============>                   45%][Progress:======>                       20%] [Cov:===============>                   45%][Progress:======>                       20%] [Cov:===============>                   45%][Progress:======>                       21%] [Cov:===============>                   45%][Progress:======>                       21%] [Cov:================>                  46%][Progress:======>                       21%] [Cov:================>                  47%][Progress:======>                       23%] [Cov:===============>                   44%][Progress:======>                       23%] [Cov:===============>                   45%][Progress:======>                       23%] [Cov:================>                  47%][Progress:======>                       23%] [Cov:================>                  48%][Progress:=======>                      25%] [Cov:================>                  47%][Progress:=======>                      26%] [Cov:================>                  47%][Progress:========>                     28%] [Cov:================>                  48%][Progress:=========>                    30%] [Cov:================>                  48%][Progress:=========>                    31%] [Cov:================>                  48%][Progress:=========>                    31%] [Cov:=================>                 49%][Progress:=========>                    31%] [Cov:=================>                 50%][Progress:=========>                    31%] [Cov:=================>                 50%][Progress:=========>                    33%] [Cov:=================>                 50%][Progress:=========>                    33%] [Cov:=================>                 51%][Progress:==========>                   35%] [Cov:=================>                 50%][Progress:==========>                   36%] [Cov:=================>                 50%][Progress:==========>                   36%] [Cov:=================>                 51%][Progress:==========>                   36%] [Cov:==================>                52%][Progress:==========>                   36%] [Cov:==================>                53%][Progress:===========>                  38%] [Cov:==================>                53%][Progress:============>                 40%] [Cov:==================>                53%][Progress:============>                 41%] [Cov:==================>                53%][Progress:============>                 41%] [Cov:==================>                54%][Progress:============>                 43%] [Cov:==================>                53%][Progress:============>                 43%] [Cov:==================>                54%][Progress:============>                 43%] [Cov:===================>               55%][Progress:=============>                45%] [Cov:==================>                53%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:===================>               55%][Progress:==============>               48%] [Cov:===================>               55%][Progress:===============>              50%] [Cov:===================>               55%][Progress:===============>              51%] [Cov:===================>               55%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               55%][Progress:===============>              53%] [Cov:===================>               56%][Progress:===============>              53%] [Cov:===================>               57%][Progress:================>             55%] [Cov:===================>               55%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:=====================>             60%][Progress:=================>            58%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:=====================>             60%][Progress:===================>          65%] [Cov:=====================>             60%][Progress:===================>          66%] [Cov:=====================>             60%][Progress:===================>          66%] [Cov:=====================>             61%][Progress:====================>         68%] [Cov:=====================>             60%][Progress:=====================>        70%] [Cov:=====================>             60%][Progress:=====================>        71%] [Cov:=====================>             60%][Progress:=====================>        71%] [Cov:=====================>             61%][Progress:=====================>        73%] [Cov:=====================>             60%][Progress:======================>       75%] [Cov:=====================>             60%][Progress:======================>       75%] [Cov:=====================>             61%][Progress:======================>       76%] [Cov:=====================>             60%][Progress:======================>       76%] [Cov:=====================>             61%][Progress:=======================>      78%] [Cov:=====================>             61%][Progress:========================>     80%] [Cov:=====================>             61%][Progress:========================>     80%] [Cov:=====================>             62%][Progress:========================>     81%] [Cov:=====================>             61%][Progress:========================>     81%] [Cov:=====================>             62%][Progress:========================>     83%] [Cov:=====================>             62%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:===========================>  90%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:======================>            63%][Progress:===========================>  93%] [Cov:======================>            64%][Progress:============================> 95%] [Cov:======================>            64%][Progress:============================> 96%] [Cov:======================>            64%][Progress:=============================>98%] [Cov:======================>            63%][Progress:=============================>98%] [Cov:======================>            64%][Progress:==============================100%] [Cov:======================>            64%][Progress:==============================100%] [Cov:======================>            64%][Progress:==============================100%] [Cov:======================>            64%][Progress:==============================100%] [Cov:======================>            64%][Progress:==============================100%] [Cov:======================>            65%]
* Search finished after 65s and 21 generations, 11141 statements, best individual has fitness: 1192.3170871538193
* Minimizing test suite
[MASTER] 22:42:12.638 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 79%
* Total number of goals: 835
* Number of covered goals: 656
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 68%
* Total number of goals: 428
* Number of covered goals: 290
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 55%
* Total number of goals: 209
* Number of covered goals: 114
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 16%
* Total number of goals: 57
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 68%
* Total number of goals: 428
* Number of covered goals: 290
* Generated 25 tests with total length 369
* Resulting test suite's coverage: 66% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 22:42:23.006 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.apache.commons.math.linear.InvalidMatrixException: 
[MASTER] 22:42:23.006 [logback-1] WARN  JUnitAnalyzer - Failing test: double[] doubleArray0 = new double[6];
doubleArray0[0] = 54.0;
doubleArray0[1] = (-2424.9);
doubleArray0[1] = 1931.66424014985;
doubleArray0[5] = 0.0;
double[] doubleArray1 = new double[5];
doubleArray1[0] = (-781.49954655);
doubleArray1[1] = 0.0;
doubleArray1[2] = (-2424.9);
doubleArray1[4] = (-2424.9);
EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
ArrayRealVector arrayRealVector0 = (ArrayRealVector)eigenDecompositionImpl0.getEigenvector(0);
Array2DRowRealMatrix array2DRowRealMatrix0 = (Array2DRowRealMatrix)eigenDecompositionImpl0.getV();
DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
Array2DRowRealMatrix array2DRowRealMatrix1 = (Array2DRowRealMatrix)eigenDecompositionImpl0.getD();
EigenDecompositionImpl eigenDecompositionImpl1 = new EigenDecompositionImpl((RealMatrix) array2DRowRealMatrix0, 2237.1954700398496);
double[] doubleArray2 = eigenDecompositionImpl0.getImagEigenvalues();
double double0 = eigenDecompositionImpl0.getRealEigenvalue((-1460));

* Writing JUnit test case 'EigenDecompositionImpl_ESTest' to evosuite-tests
* Done!

* Computation finished
