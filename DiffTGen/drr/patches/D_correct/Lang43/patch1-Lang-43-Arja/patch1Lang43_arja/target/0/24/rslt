* EvoSuite 1.0.2
* Going to generate test cases for class: org.apache.commons.lang.text.ExtendedMessageFormat
* Starting client
* Connecting to master process on port 10733
* Analyzing classpath: 
  - /home/wasp/Desktop/ICSE18/DiffTGen/drr/patches/D_correct/Lang43/patch1-Lang-43-Arja/patch1Lang43_arja/target/build/classes
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/myprinter.jar
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang.text.ExtendedMessageFormat
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 158
  - Branch 123
  - Exception 0
  - MutationFactory 321
  - Output 17
  - Method 10
  - MethodNoException 10
  - CBranchFitnessFactory 123
* Using seed 1552239895910
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:>                             1%] [Cov:>                                  0%][Progress:>                             1%] [Cov:====>                              13%][Progress:>                             3%] [Cov:>                                  2%][Progress:>                             3%] [Cov:=>                                 4%][Progress:>                             3%] [Cov:=====>                             17%][Progress:>                             3%] [Cov:======>                            18%][Progress:>                             3%] [Cov:======>                            19%][Progress:==>                           8%] [Cov:=>                                 3%][Progress:==>                           8%] [Cov:=>                                 4%][Progress:==>                           8%] [Cov:=====>                             17%][Progress:==>                           8%] [Cov:======>                            18%][Progress:==>                           8%] [Cov:======>                            19%][Progress:==>                           8%] [Cov:=======>                           20%][Progress:==>                           8%] [Cov:=======>                           21%][Progress:===>                          13%] [Cov:>                                  2%][Progress:===>                          13%] [Cov:=>                                 4%][Progress:===>                          13%] [Cov:=====>                             17%][Progress:===>                          13%] [Cov:======>                            18%][Progress:===>                          13%] [Cov:======>                            19%][Progress:===>                          13%] [Cov:=======>                           21%][Progress:===>                          13%] [Cov:=======>                           22%][Progress:====>                         16%] [Cov:>                                  2%][Progress:====>                         16%] [Cov:=>                                 5%][Progress:====>                         16%] [Cov:=====>                             17%][Progress:====>                         16%] [Cov:======>                            18%][Progress:====>                         16%] [Cov:=======>                           21%][Progress:====>                         16%] [Cov:=======>                           22%][Progress:====>                         16%] [Cov:========>                          23%][Progress:====>                         16%] [Cov:========>                          24%][Progress:======>                       21%] [Cov:>                                  2%][Progress:======>                       21%] [Cov:=>                                 4%][Progress:======>                       21%] [Cov:=====>                             17%][Progress:======>                       21%] [Cov:======>                            18%][Progress:======>                       21%] [Cov:=======>                           20%][Progress:======>                       21%] [Cov:=======>                           21%][Progress:======>                       21%] [Cov:=======>                           22%][Progress:======>                       21%] [Cov:========>                          25%][Progress:======>                       21%] [Cov:=========>                         26%][Progress:=======>                      25%] [Cov:=>                                 3%][Progress:=======>                      25%] [Cov:=>                                 5%][Progress:=======>                      25%] [Cov:=====>                             17%][Progress:=======>                      25%] [Cov:======>                            19%][Progress:=======>                      25%] [Cov:=======>                           20%][Progress:=======>                      25%] [Cov:=======>                           21%][Progress:=======>                      25%] [Cov:========>                          24%][Progress:=======>                      25%] [Cov:========>                          25%][Progress:=======>                      25%] [Cov:=========>                         27%][Progress:=======>                      25%] [Cov:==========>                        29%][Progress:=======>                      25%] [Cov:==========>                        30%][Progress:========>                     28%] [Cov:>                                  2%][Progress:========>                     28%] [Cov:=>                                 5%][Progress:========>                     28%] [Cov:=====>                             17%][Progress:========>                     28%] [Cov:======>                            18%][Progress:========>                     28%] [Cov:======>                            19%][Progress:========>                     28%] [Cov:=======>                           20%][Progress:========>                     28%] [Cov:=======>                           21%][Progress:=========>                    31%] [Cov:>                                  2%][Progress:=========>                    31%] [Cov:=>                                 5%][Progress:=========>                    31%] [Cov:=====>                             17%][Progress:=========>                    31%] [Cov:======>                            18%][Progress:=========>                    31%] [Cov:=======>                           20%][Progress:=========>                    31%] [Cov:=======>                           21%][Progress:==========>                   35%] [Cov:=>                                 3%][Progress:==========>                   35%] [Cov:=>                                 5%][Progress:==========>                   35%] [Cov:======>                            18%][Progress:==========>                   35%] [Cov:======>                            19%][Progress:==========>                   35%] [Cov:=======>                           20%][Progress:==========>                   35%] [Cov:=======>                           21%][Progress:==========>                   35%] [Cov:=======>                           22%][Progress:===========>                  38%] [Cov:=>                                 3%][Progress:===========>                  38%] [Cov:=>                                 5%][Progress:===========>                  38%] [Cov:=====>                             17%][Progress:===========>                  38%] [Cov:======>                            18%][Progress:===========>                  38%] [Cov:=======>                           21%][Progress:===========>                  38%] [Cov:=======>                           22%][Progress:===========>                  38%] [Cov:========>                          23%][Progress:============>                 40%] [Cov:>                                  2%][Progress:============>                 40%] [Cov:=>                                 4%][Progress:============>                 40%] [Cov:=====>                             17%][Progress:============>                 40%] [Cov:======>                            18%][Progress:============>                 40%] [Cov:======>                            19%][Progress:============>                 40%] [Cov:=======>                           20%][Progress:============>                 40%] [Cov:=======>                           21%][Progress:============>                 40%] [Cov:=======>                           22%][Progress:============>                 43%] [Cov:=>                                 4%][Progress:============>                 43%] [Cov:==>                                8%][Progress:============>                 43%] [Cov:=======>                           20%][Progress:============>                 43%] [Cov:========>                          24%][Progress:============>                 43%] [Cov:=========>                         28%][Progress:============>                 43%] [Cov:==========>                        29%][Progress:===============>              53%] [Cov:=>                                 3%][Progress:===============>              53%] [Cov:=>                                 5%][Progress:===============>              53%] [Cov:=====>                             17%][Progress:===============>              53%] [Cov:======>                            19%][Progress:===============>              53%] [Cov:========>                          25%][Progress:===============>              53%] [Cov:==========>                        29%][Progress:===============>              53%] [Cov:==========>                        30%][Progress:===============>              53%] [Cov:==========>                        29%][Progress:===============>              53%] [Cov:==========>                        30%][Progress:================>             56%] [Cov:========>                          25%][Progress:================>             56%] [Cov:==========>                        29%][Progress:================>             56%] [Cov:==============>                    41%][Progress:=================>            58%] [Cov:==============>                    40%][Progress:=================>            58%] [Cov:==============>                    41%][Progress:=================>            58%] [Cov:==============>                    41%][Progress:==================>           61%] [Cov:==============>                    40%][Progress:==================>           61%] [Cov:==============>                    41%][Progress:===================>          66%] [Cov:==============>                    40%][Progress:===================>          66%] [Cov:==============>                    41%][Progress:=====================>        70%] [Cov:==============>                    41%][Progress:=====================>        70%] [Cov:==============>                    41%][Progress:=====================>        73%] [Cov:==============>                    40%][Progress:=====================>        73%] [Cov:==============>                    41%][Progress:======================>       75%] [Cov:==============>                    40%][Progress:======================>       75%] [Cov:==============>                    41%][Progress:=======================>      78%] [Cov:=============>                     39%][Progress:=======================>      78%] [Cov:==============>                    41%][Progress:=======================>      78%] [Cov:==============>                    41%][Progress:========================>     80%] [Cov:==============>                    41%][Progress:========================>     80%] [Cov:==============>                    41%][Progress:========================>     83%] [Cov:==============>                    41%][Progress:=========================>    86%] [Cov:==============>                    41%][Progress:=========================>    86%] [Cov:==============>                    41%][Progress:===========================>  90%] [Cov:==============>                    41%][Progress:===========================>  90%] [Cov:==============>                    42%][Progress:============================> 95%] [Cov:==============>                    41%][Progress:============================> 95%] [Cov:==============>                    42%][Progress:=============================>98%] [Cov:==============>                    42%][Progress:=============================>98%] [Cov:==============>                    42%][Progress:==============================100%] [Cov:==============>                    42%][Progress:==============================100%] [Cov:==============>                    42%][MASTER] 18:46:01.148 [logback-1] WARN  ResetExecutor - Stopped resetting of classes due to timeout
[Progress:==============================100%] [Cov:===============>                   44%]
* Search finished after 65s and 9 generations, 4727 statements, best individual has fitness: 642.3434233267776
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 41%
* Total number of goals: 158
* Number of covered goals: 65
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 32%
* Total number of goals: 123
* Number of covered goals: 39
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 26%
* Total number of goals: 321
* Number of covered goals: 82
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 6%
* Total number of goals: 17
* Number of covered goals: 1
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 29%
* Total number of goals: 123
* Number of covered goals: 36
* Generated 19 tests with total length 59
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'ExtendedMessageFormat_ESTest' to evosuite-tests
* Done!

* Computation finished
