/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 11 15:56:00 GMT 2019
 */

package org.apache.commons.lang.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.apache.commons.lang.math.NumberUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class NumberUtils_ESTest extends NumberUtils_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: I3 Branch 2 IFNONNULL L221 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: I3 Branch 2 IFNONNULL L221 - true in context: org.apache.commons.lang.math.NumberUtils:toLong(Ljava/lang/String;J)J
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 221
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 225
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 226
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 227
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J
   * Goal 9. Weak Mutation 13: org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J:221 - ReplaceComparisonOperator != null -> = null
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J:zero
   */

  @Test
  public void test000()  throws Throwable  {
      long long0 = NumberUtils.toLong("'!c1o[%", 0L);
  }

  //Test case number: 1
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - true in context: org.apache.commons.lang.math.NumberUtils:toInt(Ljava/lang/String;I)I
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 172
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 176
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 177
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 178
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I
   * Goal 9. Weak Mutation 4: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:172 - ReplaceComparisonOperator != null -> = null
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:zero
   */

  @Test
  public void test001()  throws Throwable  {
      int int0 = NumberUtils.toInt("xh^o54C?A:", (int) (byte)0);
  }

  //Test case number: 2
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I: root-Branch
   * Goal 2. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I: root-Branch in context: org.apache.commons.lang.math.NumberUtils:toInt(Ljava/lang/String;)I
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I: Line 129
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 172
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 176
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I
   * Goal 9. Weak Mutation 0: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I:129 - ReplaceConstant - 0 -> 1
   * Goal 10. Weak Mutation 4: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:172 - ReplaceComparisonOperator != null -> = null
   * Goal 11. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I:positive
   */

  @Test
  public void test002()  throws Throwable  {
      int int0 = NumberUtils.toInt("7");
  }

  //Test case number: 3
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: I3 Branch 3 IFNONNULL L273 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: I3 Branch 3 IFNONNULL L273 - true in context: org.apache.commons.lang.math.NumberUtils:toFloat(Ljava/lang/String;F)F
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 273
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 277
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 278
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 279
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F
   * Goal 9. Weak Mutation 18: org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F:273 - ReplaceComparisonOperator != null -> = null
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F:positive
   */

  @Test
  public void test003()  throws Throwable  {
      float float0 = NumberUtils.toFloat("", (float) (byte)45);
  }

  //Test case number: 4
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: I3 Branch 4 IFNONNULL L325 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: I3 Branch 4 IFNONNULL L325 - true in context: org.apache.commons.lang.math.NumberUtils:toDouble(Ljava/lang/String;D)D
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 325
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 329
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 330
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 331
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D
   * Goal 9. Weak Mutation 23: org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D:325 - ReplaceComparisonOperator != null -> = null
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D:positive
   */

  @Test
  public void test004()  throws Throwable  {
      double double0 = NumberUtils.toDouble(" is not a valid number.", 1136.66);
  }

  //Test case number: 5
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D: root-Branch
   * Goal 2. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: I3 Branch 4 IFNONNULL L325 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D: root-Branch in context: org.apache.commons.lang.math.NumberUtils:toDouble(Ljava/lang/String;)D
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D: Line 302
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 325
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 329
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D
   * Goal 9. Weak Mutation 21: org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D:302 - ReplaceConstant - 0.0 -> 1.0
   * Goal 10. Weak Mutation 22: org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D:302 - ReplaceConstant - 0.0 -> -1.0
   * Goal 11. Weak Mutation 23: org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D:325 - ReplaceComparisonOperator != null -> = null
   * Goal 12. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D:positive
   */

  @Test
  public void test005()  throws Throwable  {
      double double0 = NumberUtils.toDouble("7");
  }

  //Test case number: 6
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I: root-Branch
   * Goal 2. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I: root-Branch in context: org.apache.commons.lang.math.NumberUtils:stringToInt(Ljava/lang/String;I)I
   * Goal 4. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I: Line 151
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 172
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 176
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 177
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 178
   * Goal 9. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I
   * Goal 10. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I
   * Goal 11. Weak Mutation 4: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:172 - ReplaceComparisonOperator != null -> = null
   * Goal 12. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I:positive
   */

  @Test
  public void test006()  throws Throwable  {
      int int0 = NumberUtils.stringToInt("/Mi5~sN?M~4{At\"gi6", 102);
  }

  //Test case number: 7
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I: root-Branch
   * Goal 2. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I: root-Branch in context: org.apache.commons.lang.math.NumberUtils:stringToInt(Ljava/lang/String;I)I
   * Goal 4. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I: Line 151
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 172
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 176
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 177
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 178
   * Goal 9. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I
   * Goal 10. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I
   * Goal 11. Weak Mutation 4: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:172 - ReplaceComparisonOperator != null -> = null
   * Goal 12. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I:negative
   */

  @Test
  public void test007()  throws Throwable  {
      int int0 = NumberUtils.stringToInt("bBW_TlF", (-1200));
  }

  //Test case number: 8
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;)I: root-Branch
   * Goal 2. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I: root-Branch
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - true
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;)I: root-Branch in context: org.apache.commons.lang.math.NumberUtils:stringToInt(Ljava/lang/String;)I
   * Goal 5. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;)I: Line 108
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I: Line 129
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 172
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 176
   * Goal 9. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;)I
   * Goal 10. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;)I
   * Goal 11. Weak Mutation 0: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I:129 - ReplaceConstant - 0 -> 1
   * Goal 12. Weak Mutation 4: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:172 - ReplaceComparisonOperator != null -> = null
   * Goal 13. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;)I:positive
   */

  @Test
  public void test008()  throws Throwable  {
      int int0 = NumberUtils.stringToInt("2");
  }

  //Test case number: 9
  /*
   * 27 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([S)S: I3 Branch 104 IFNONNULL L900 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([S)S: I28 Branch 105 IFNE L902 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 106 IF_ICMPGE L908 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 106 IF_ICMPGE L908 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([S)S: I70 Branch 107 IF_ICMPGE L909 - false
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I3 Branch 104 IFNONNULL L900 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I28 Branch 105 IFNE L902 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 106 IF_ICMPGE L908 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 106 IF_ICMPGE L908 - false in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I70 Branch 107 IF_ICMPGE L909 - false in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 900
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 902
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 907
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 908
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 909
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 910
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 914
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([S)S
   * Goal 19. org.apache.commons.lang.math.NumberUtils.min([S)S
   * Goal 20. Weak Mutation 435: org.apache.commons.lang.math.NumberUtils.min([S)S:900 - ReplaceComparisonOperator != null -> = null
   * Goal 21. Weak Mutation 439: org.apache.commons.lang.math.NumberUtils.min([S)S:902 - ReplaceComparisonOperator != -> <
   * Goal 22. Weak Mutation 443: org.apache.commons.lang.math.NumberUtils.min([S)S:907 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 444: org.apache.commons.lang.math.NumberUtils.min([S)S:908 - ReplaceConstant - 1 -> 0
   * Goal 24. Weak Mutation 448: org.apache.commons.lang.math.NumberUtils.min([S)S:908 - ReplaceComparisonOperator >= -> -1
   * Goal 25. Weak Mutation 449: org.apache.commons.lang.math.NumberUtils.min([S)S:908 - ReplaceComparisonOperator >= -> >
   * Goal 26. Weak Mutation 457: org.apache.commons.lang.math.NumberUtils.min([S)S:909 - ReplaceComparisonOperator >= -> -1
   * Goal 27. org.apache.commons.lang.math.NumberUtils.min([S)S:positive
   */

  @Test
  public void test009()  throws Throwable  {
      short[] shortArray0 = new short[2];
      shortArray0[0] = (short)260;
      shortArray0[1] = (short)45;
      short short0 = NumberUtils.min(shortArray0);
  }

  //Test case number: 10
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([J)J: I3 Branch 96 IFNONNULL L846 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([J)J: I28 Branch 97 IFNE L848 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 98 IF_ICMPGE L854 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 98 IF_ICMPGE L854 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([J)J: I71 Branch 99 IFGE L855 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([J)J: I71 Branch 99 IFGE L855 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I3 Branch 96 IFNONNULL L846 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I28 Branch 97 IFNE L848 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 98 IF_ICMPGE L854 - false in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 98 IF_ICMPGE L854 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I71 Branch 99 IFGE L855 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I71 Branch 99 IFGE L855 - false in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 846
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 848
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 853
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 854
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 855
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 856
   * Goal 19. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 860
   * Goal 20. org.apache.commons.lang.math.NumberUtils.min([J)J
   * Goal 21. org.apache.commons.lang.math.NumberUtils.min([J)J
   * Goal 22. Weak Mutation 372: org.apache.commons.lang.math.NumberUtils.min([J)J:846 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 376: org.apache.commons.lang.math.NumberUtils.min([J)J:848 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 380: org.apache.commons.lang.math.NumberUtils.min([J)J:853 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 381: org.apache.commons.lang.math.NumberUtils.min([J)J:854 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 385: org.apache.commons.lang.math.NumberUtils.min([J)J:854 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 386: org.apache.commons.lang.math.NumberUtils.min([J)J:854 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 392: org.apache.commons.lang.math.NumberUtils.min([J)J:855 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 394: org.apache.commons.lang.math.NumberUtils.min([J)J:855 - ReplaceComparisonOperator >= -> >
   * Goal 30. org.apache.commons.lang.math.NumberUtils.min([J)J:positive
   */

  @Test
  public void test010()  throws Throwable  {
      long[] longArray0 = new long[3];
      longArray0[0] = 2493L;
      longArray0[1] = 2493L;
      longArray0[2] = 2L;
      long long0 = NumberUtils.min(longArray0);
  }

  //Test case number: 11
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([I)I: I3 Branch 100 IFNONNULL L873 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([I)I: I28 Branch 101 IFNE L875 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([I)I: I63 Branch 102 IF_ICMPGE L881 - true
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I3 Branch 100 IFNONNULL L873 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I28 Branch 101 IFNE L875 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I63 Branch 102 IF_ICMPGE L881 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 873
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 875
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 880
   * Goal 10. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 881
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 887
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([I)I
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([I)I
   * Goal 14. Weak Mutation 399: org.apache.commons.lang.math.NumberUtils.min([I)I:873 - ReplaceComparisonOperator != null -> = null
   * Goal 15. Weak Mutation 403: org.apache.commons.lang.math.NumberUtils.min([I)I:875 - ReplaceComparisonOperator != -> <
   * Goal 16. Weak Mutation 407: org.apache.commons.lang.math.NumberUtils.min([I)I:880 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 408: org.apache.commons.lang.math.NumberUtils.min([I)I:881 - ReplaceConstant - 1 -> 0
   * Goal 18. Weak Mutation 414: org.apache.commons.lang.math.NumberUtils.min([I)I:881 - ReplaceComparisonOperator >= -> >
   * Goal 19. org.apache.commons.lang.math.NumberUtils.min([I)I:positive
   */

  @Test
  public void test011()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 3659;
      int int0 = NumberUtils.min(intArray0);
  }

  //Test case number: 12
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([F)F: I3 Branch 116 IFNONNULL L981 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([F)F: I28 Branch 117 IFNE L983 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 118 IF_ICMPGE L989 - true
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I3 Branch 116 IFNONNULL L981 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I28 Branch 117 IFNE L983 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 118 IF_ICMPGE L989 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 981
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 983
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 988
   * Goal 10. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 989
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 995
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([F)F
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([F)F
   * Goal 14. Weak Mutation 524: org.apache.commons.lang.math.NumberUtils.min([F)F:981 - ReplaceComparisonOperator != null -> = null
   * Goal 15. Weak Mutation 528: org.apache.commons.lang.math.NumberUtils.min([F)F:983 - ReplaceComparisonOperator != -> <
   * Goal 16. Weak Mutation 532: org.apache.commons.lang.math.NumberUtils.min([F)F:988 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 533: org.apache.commons.lang.math.NumberUtils.min([F)F:989 - ReplaceConstant - 1 -> 0
   * Goal 18. Weak Mutation 538: org.apache.commons.lang.math.NumberUtils.min([F)F:989 - ReplaceComparisonOperator >= -> >
   * Goal 19. org.apache.commons.lang.math.NumberUtils.min([F)F:positive
   */

  @Test
  public void test012()  throws Throwable  {
      float[] floatArray0 = new float[1];
      floatArray0[0] = 2672.6099F;
      float float0 = NumberUtils.min(floatArray0);
  }

  //Test case number: 13
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([D)D: I3 Branch 112 IFNONNULL L954 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([D)D: I28 Branch 113 IFNE L956 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([D)D: I63 Branch 114 IF_ICMPGE L962 - true
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I3 Branch 112 IFNONNULL L954 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I28 Branch 113 IFNE L956 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I63 Branch 114 IF_ICMPGE L962 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 954
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 956
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 961
   * Goal 10. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 962
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 968
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([D)D
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([D)D
   * Goal 14. Weak Mutation 497: org.apache.commons.lang.math.NumberUtils.min([D)D:954 - ReplaceComparisonOperator != null -> = null
   * Goal 15. Weak Mutation 501: org.apache.commons.lang.math.NumberUtils.min([D)D:956 - ReplaceComparisonOperator != -> <
   * Goal 16. Weak Mutation 505: org.apache.commons.lang.math.NumberUtils.min([D)D:961 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 506: org.apache.commons.lang.math.NumberUtils.min([D)D:962 - ReplaceConstant - 1 -> 0
   * Goal 18. Weak Mutation 511: org.apache.commons.lang.math.NumberUtils.min([D)D:962 - ReplaceComparisonOperator >= -> >
   * Goal 19. org.apache.commons.lang.math.NumberUtils.min([D)D:positive
   */

  @Test
  public void test013()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 6.0;
      double double0 = NumberUtils.min(doubleArray0);
  }

  //Test case number: 14
  /*
   * 27 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([B)B: I3 Branch 108 IFNONNULL L927 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([B)B: I28 Branch 109 IFNE L929 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 110 IF_ICMPGE L935 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 110 IF_ICMPGE L935 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([B)B: I70 Branch 111 IF_ICMPGE L936 - false
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I3 Branch 108 IFNONNULL L927 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I28 Branch 109 IFNE L929 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 110 IF_ICMPGE L935 - false in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 110 IF_ICMPGE L935 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I70 Branch 111 IF_ICMPGE L936 - false in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 927
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 929
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 934
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 935
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 936
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 937
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 941
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([B)B
   * Goal 19. org.apache.commons.lang.math.NumberUtils.min([B)B
   * Goal 20. Weak Mutation 466: org.apache.commons.lang.math.NumberUtils.min([B)B:927 - ReplaceComparisonOperator != null -> = null
   * Goal 21. Weak Mutation 470: org.apache.commons.lang.math.NumberUtils.min([B)B:929 - ReplaceComparisonOperator != -> <
   * Goal 22. Weak Mutation 474: org.apache.commons.lang.math.NumberUtils.min([B)B:934 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 475: org.apache.commons.lang.math.NumberUtils.min([B)B:935 - ReplaceConstant - 1 -> 0
   * Goal 24. Weak Mutation 479: org.apache.commons.lang.math.NumberUtils.min([B)B:935 - ReplaceComparisonOperator >= -> -1
   * Goal 25. Weak Mutation 480: org.apache.commons.lang.math.NumberUtils.min([B)B:935 - ReplaceComparisonOperator >= -> >
   * Goal 26. Weak Mutation 488: org.apache.commons.lang.math.NumberUtils.min([B)B:936 - ReplaceComparisonOperator >= -> -1
   * Goal 27. org.apache.commons.lang.math.NumberUtils.min([B)B:positive
   */

  @Test
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)120;
      byteArray0[1] = (byte)2;
      byte byte0 = NumberUtils.min(byteArray0);
  }

  //Test case number: 15
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(FFF)F: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.min(FFF)F: root-Branch in context: org.apache.commons.lang.math.NumberUtils:min(FFF)F
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min(FFF)F: Line 1263
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min(FFF)F
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(FFF)F
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(FFF)F:zero
   */

  @Test
  public void test015()  throws Throwable  {
      float float0 = NumberUtils.min((float) 0, (float) 0, (float) 0);
  }

  //Test case number: 16
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(FFF)F: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.min(FFF)F: root-Branch in context: org.apache.commons.lang.math.NumberUtils:min(FFF)F
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min(FFF)F: Line 1263
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min(FFF)F
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(FFF)F
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(FFF)F:positive
   */

  @Test
  public void test016()  throws Throwable  {
      float float0 = NumberUtils.min((float) 511L, (float) 511L, (float) 511L);
  }

  //Test case number: 17
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(DDD)D: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.min(DDD)D: root-Branch in context: org.apache.commons.lang.math.NumberUtils:min(DDD)D
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min(DDD)D: Line 1248
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min(DDD)D
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(DDD)D
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(DDD)D:positive
   */

  @Test
  public void test017()  throws Throwable  {
      double double0 = NumberUtils.min((double) 1L, 173.69330198, (double) 1L);
  }

  //Test case number: 18
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(DDD)D: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.min(DDD)D: root-Branch in context: org.apache.commons.lang.math.NumberUtils:min(DDD)D
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min(DDD)D: Line 1248
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min(DDD)D
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(DDD)D
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(DDD)D:negative
   */

  @Test
  public void test018()  throws Throwable  {
      double double0 = NumberUtils.min((double) 0, (-1.0), (-2615.492197183));
  }

  //Test case number: 19
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(BBB)B: I4 Branch 150 IF_ICMPGE L1227 - false
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(BBB)B: I13 Branch 151 IF_ICMPGE L1230 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(BBB)B: I4 Branch 150 IF_ICMPGE L1227 - false in context: org.apache.commons.lang.math.NumberUtils:min(BBB)B
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(BBB)B: I13 Branch 151 IF_ICMPGE L1230 - false in context: org.apache.commons.lang.math.NumberUtils:min(BBB)B
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1227
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1228
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1230
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1231
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1233
   * Goal 10. org.apache.commons.lang.math.NumberUtils.min(BBB)B
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min(BBB)B
   * Goal 12. Weak Mutation 849: org.apache.commons.lang.math.NumberUtils.min(BBB)B:1227 - ReplaceComparisonOperator >= -> -1
   * Goal 13. Weak Mutation 867: org.apache.commons.lang.math.NumberUtils.min(BBB)B:1230 - ReplaceComparisonOperator >= -> -1
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min(BBB)B:zero
   */

  @Test
  public void test019()  throws Throwable  {
      byte byte0 = NumberUtils.min((byte)69, (byte)45, (byte)0);
  }

  //Test case number: 20
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([S)S: I3 Branch 128 IFNONNULL L1064 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([S)S: I28 Branch 129 IFNE L1066 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([S)S: I63 Branch 130 IF_ICMPGE L1072 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([S)S: I63 Branch 130 IF_ICMPGE L1072 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([S)S: I70 Branch 131 IF_ICMPLE L1073 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I3 Branch 128 IFNONNULL L1064 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I28 Branch 129 IFNE L1066 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I63 Branch 130 IF_ICMPGE L1072 - false in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I63 Branch 130 IF_ICMPGE L1072 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I70 Branch 131 IF_ICMPLE L1073 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1064
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1066
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1071
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1072
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1073
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1078
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([S)S
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([S)S
   * Goal 19. Weak Mutation 614: org.apache.commons.lang.math.NumberUtils.max([S)S:1064 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 618: org.apache.commons.lang.math.NumberUtils.max([S)S:1066 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 622: org.apache.commons.lang.math.NumberUtils.max([S)S:1071 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 623: org.apache.commons.lang.math.NumberUtils.max([S)S:1072 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 627: org.apache.commons.lang.math.NumberUtils.max([S)S:1072 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 628: org.apache.commons.lang.math.NumberUtils.max([S)S:1072 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 638: org.apache.commons.lang.math.NumberUtils.max([S)S:1073 - ReplaceComparisonOperator <= -> ==
   * Goal 26. org.apache.commons.lang.math.NumberUtils.max([S)S:negative
   */

  @Test
  public void test020()  throws Throwable  {
      short[] shortArray0 = new short[2];
      shortArray0[0] = (short) (-1205);
      shortArray0[1] = (short) (-3256);
      short short0 = NumberUtils.max(shortArray0);
  }

  //Test case number: 21
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([J)J: I3 Branch 120 IFNONNULL L1010 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([J)J: I28 Branch 121 IFNE L1012 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([J)J: I63 Branch 122 IF_ICMPGE L1018 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([J)J: I63 Branch 122 IF_ICMPGE L1018 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([J)J: I71 Branch 123 IFLE L1019 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I3 Branch 120 IFNONNULL L1010 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I28 Branch 121 IFNE L1012 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I63 Branch 122 IF_ICMPGE L1018 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I63 Branch 122 IF_ICMPGE L1018 - false in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I71 Branch 123 IFLE L1019 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1010
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1012
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1017
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1018
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1019
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1024
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([J)J
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([J)J
   * Goal 19. Weak Mutation 551: org.apache.commons.lang.math.NumberUtils.max([J)J:1010 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 555: org.apache.commons.lang.math.NumberUtils.max([J)J:1012 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 559: org.apache.commons.lang.math.NumberUtils.max([J)J:1017 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 560: org.apache.commons.lang.math.NumberUtils.max([J)J:1018 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 564: org.apache.commons.lang.math.NumberUtils.max([J)J:1018 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 565: org.apache.commons.lang.math.NumberUtils.max([J)J:1018 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 572: org.apache.commons.lang.math.NumberUtils.max([J)J:1019 - ReplaceComparisonOperator <= -> ==
   * Goal 26. org.apache.commons.lang.math.NumberUtils.max([J)J:negative
   */

  @Test
  public void test021()  throws Throwable  {
      long[] longArray0 = new long[2];
      longArray0[0] = (-1L);
      longArray0[1] = (-2516L);
      long long0 = NumberUtils.max(longArray0);
  }

  //Test case number: 22
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([I)I: I3 Branch 124 IFNONNULL L1037 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([I)I: I28 Branch 125 IFNE L1039 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 126 IF_ICMPGE L1045 - true
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I3 Branch 124 IFNONNULL L1037 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I28 Branch 125 IFNE L1039 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 126 IF_ICMPGE L1045 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1037
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1039
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1044
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1045
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1051
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([I)I
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([I)I
   * Goal 14. Weak Mutation 578: org.apache.commons.lang.math.NumberUtils.max([I)I:1037 - ReplaceComparisonOperator != null -> = null
   * Goal 15. Weak Mutation 582: org.apache.commons.lang.math.NumberUtils.max([I)I:1039 - ReplaceComparisonOperator != -> <
   * Goal 16. Weak Mutation 586: org.apache.commons.lang.math.NumberUtils.max([I)I:1044 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 587: org.apache.commons.lang.math.NumberUtils.max([I)I:1045 - ReplaceConstant - 1 -> 0
   * Goal 18. Weak Mutation 593: org.apache.commons.lang.math.NumberUtils.max([I)I:1045 - ReplaceComparisonOperator >= -> >
   * Goal 19. org.apache.commons.lang.math.NumberUtils.max([I)I:negative
   */

  @Test
  public void test022()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = (-1370);
      int int0 = NumberUtils.max(intArray0);
  }

  //Test case number: 23
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([F)F: I3 Branch 140 IFNONNULL L1145 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([F)F: I28 Branch 141 IFNE L1147 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([F)F: I63 Branch 142 IF_ICMPGE L1153 - true
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I3 Branch 140 IFNONNULL L1145 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I28 Branch 141 IFNE L1147 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I63 Branch 142 IF_ICMPGE L1153 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1145
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1147
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1152
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1153
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1159
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([F)F
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([F)F
   * Goal 14. Weak Mutation 703: org.apache.commons.lang.math.NumberUtils.max([F)F:1145 - ReplaceComparisonOperator != null -> = null
   * Goal 15. Weak Mutation 707: org.apache.commons.lang.math.NumberUtils.max([F)F:1147 - ReplaceComparisonOperator != -> <
   * Goal 16. Weak Mutation 711: org.apache.commons.lang.math.NumberUtils.max([F)F:1152 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 712: org.apache.commons.lang.math.NumberUtils.max([F)F:1153 - ReplaceConstant - 1 -> 0
   * Goal 18. Weak Mutation 717: org.apache.commons.lang.math.NumberUtils.max([F)F:1153 - ReplaceComparisonOperator >= -> >
   * Goal 19. org.apache.commons.lang.math.NumberUtils.max([F)F:negative
   */

  @Test
  public void test023()  throws Throwable  {
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) (-2388);
      float float0 = NumberUtils.max(floatArray0);
  }

  //Test case number: 24
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([D)D: I3 Branch 136 IFNONNULL L1118 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([D)D: I28 Branch 137 IFNE L1120 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([D)D: I63 Branch 138 IF_ICMPGE L1126 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([D)D: I63 Branch 138 IF_ICMPGE L1126 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([D)D: I71 Branch 139 IFLE L1127 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I3 Branch 136 IFNONNULL L1118 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I28 Branch 137 IFNE L1120 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I63 Branch 138 IF_ICMPGE L1126 - false in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I63 Branch 138 IF_ICMPGE L1126 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I71 Branch 139 IFLE L1127 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1118
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1120
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1125
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1126
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1127
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1132
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([D)D
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([D)D
   * Goal 19. Weak Mutation 676: org.apache.commons.lang.math.NumberUtils.max([D)D:1118 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 680: org.apache.commons.lang.math.NumberUtils.max([D)D:1120 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 684: org.apache.commons.lang.math.NumberUtils.max([D)D:1125 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 685: org.apache.commons.lang.math.NumberUtils.max([D)D:1126 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 689: org.apache.commons.lang.math.NumberUtils.max([D)D:1126 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 690: org.apache.commons.lang.math.NumberUtils.max([D)D:1126 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 698: org.apache.commons.lang.math.NumberUtils.max([D)D:1127 - ReplaceComparisonOperator <= -> <
   * Goal 26. org.apache.commons.lang.math.NumberUtils.max([D)D:negative
   */

  @Test
  public void test024()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) (-4289);
      doubleArray0[1] = (double) (-4289);
      doubleArray0[2] = (double) (-4289);
      doubleArray0[3] = (double) (-4289);
      doubleArray0[4] = (double) (-4289);
      double double0 = NumberUtils.max(doubleArray0);
  }

  //Test case number: 25
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([B)B: I3 Branch 132 IFNONNULL L1091 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([B)B: I28 Branch 133 IFNE L1093 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([B)B: I63 Branch 134 IF_ICMPGE L1099 - true
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I3 Branch 132 IFNONNULL L1091 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I28 Branch 133 IFNE L1093 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I63 Branch 134 IF_ICMPGE L1099 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1091
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1093
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1098
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1099
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1105
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([B)B
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([B)B
   * Goal 14. Weak Mutation 645: org.apache.commons.lang.math.NumberUtils.max([B)B:1091 - ReplaceComparisonOperator != null -> = null
   * Goal 15. Weak Mutation 649: org.apache.commons.lang.math.NumberUtils.max([B)B:1093 - ReplaceComparisonOperator != -> <
   * Goal 16. Weak Mutation 653: org.apache.commons.lang.math.NumberUtils.max([B)B:1098 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 654: org.apache.commons.lang.math.NumberUtils.max([B)B:1099 - ReplaceConstant - 1 -> 0
   * Goal 18. Weak Mutation 659: org.apache.commons.lang.math.NumberUtils.max([B)B:1099 - ReplaceComparisonOperator >= -> >
   * Goal 19. org.apache.commons.lang.math.NumberUtils.max([B)B:negative
   */

  @Test
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-37);
      byte byte0 = NumberUtils.max(byteArray0);
  }

  //Test case number: 26
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I5 Branch 152 IFLE L1277 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I15 Branch 153 IFLE L1280 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I5 Branch 152 IFLE L1277 - true in context: org.apache.commons.lang.math.NumberUtils:max(JJJ)J
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I15 Branch 153 IFLE L1280 - true in context: org.apache.commons.lang.math.NumberUtils:max(JJJ)J
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1277
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1280
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1283
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(JJJ)J
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(JJJ)J
   * Goal 10. Weak Mutation 905: org.apache.commons.lang.math.NumberUtils.max(JJJ)J:1277 - ReplaceComparisonOperator <= -> ==
   * Goal 11. Weak Mutation 917: org.apache.commons.lang.math.NumberUtils.max(JJJ)J:1280 - ReplaceComparisonOperator <= -> ==
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max(JJJ)J:zero
   */

  @Test
  public void test026()  throws Throwable  {
      long long0 = NumberUtils.max(0L, (-1L), (-222L));
  }

  //Test case number: 27
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(III)I: I4 Branch 154 IF_ICMPLE L1295 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(III)I: I13 Branch 155 IF_ICMPLE L1298 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(III)I: I4 Branch 154 IF_ICMPLE L1295 - true in context: org.apache.commons.lang.math.NumberUtils:max(III)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(III)I: I13 Branch 155 IF_ICMPLE L1298 - true in context: org.apache.commons.lang.math.NumberUtils:max(III)I
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1295
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1298
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1301
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(III)I
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(III)I
   * Goal 10. Weak Mutation 936: org.apache.commons.lang.math.NumberUtils.max(III)I:1295 - ReplaceComparisonOperator <= -> <
   * Goal 11. Weak Mutation 954: org.apache.commons.lang.math.NumberUtils.max(III)I:1298 - ReplaceComparisonOperator <= -> <
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max(III)I:negative
   */

  @Test
  public void test027()  throws Throwable  {
      int int0 = NumberUtils.max((-1), (-1), (-1));
  }

  //Test case number: 28
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(FFF)F: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.max(FFF)F: root-Branch in context: org.apache.commons.lang.math.NumberUtils:max(FFF)F
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max(FFF)F: Line 1367
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max(FFF)F
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(FFF)F
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(FFF)F:positive
   */

  @Test
  public void test028()  throws Throwable  {
      float float0 = NumberUtils.max(2000.0F, (float) (short)560, 0.0F);
  }

  //Test case number: 29
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(FFF)F: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.max(FFF)F: root-Branch in context: org.apache.commons.lang.math.NumberUtils:max(FFF)F
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max(FFF)F: Line 1367
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max(FFF)F
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(FFF)F
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(FFF)F:negative
   */

  @Test
  public void test029()  throws Throwable  {
      float float0 = NumberUtils.max((float) (byte) (-88), (-1.0F), (-2348.0F));
  }

  //Test case number: 30
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(DDD)D: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.max(DDD)D: root-Branch in context: org.apache.commons.lang.math.NumberUtils:max(DDD)D
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max(DDD)D: Line 1352
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max(DDD)D
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(DDD)D
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(DDD)D:zero
   */

  @Test
  public void test030()  throws Throwable  {
      double double0 = NumberUtils.max(0.0, 0.0, 0.0);
  }

  //Test case number: 31
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(DDD)D: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.max(DDD)D: root-Branch in context: org.apache.commons.lang.math.NumberUtils:max(DDD)D
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max(DDD)D: Line 1352
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max(DDD)D
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(DDD)D
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(DDD)D:positive
   */

  @Test
  public void test031()  throws Throwable  {
      double double0 = NumberUtils.max(3159.178, 41.70613795332, 0.0);
  }

  //Test case number: 32
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: I3 Branch 53 IFNONNULL L578 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: I3 Branch 53 IFNONNULL L578 - true in context: org.apache.commons.lang.math.NumberUtils:createFloat(Ljava/lang/String;)Ljava/lang/Float;
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: Line 578
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: Line 581
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;
   * Goal 7. Weak Mutation 148: org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;:578 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;:nonnull
   */

  @Test
  public void test032()  throws Throwable  {
      Float float0 = NumberUtils.createFloat("8.");
  }

  //Test case number: 33
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: I3 Branch 54 IFNONNULL L594 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: I3 Branch 54 IFNONNULL L594 - true in context: org.apache.commons.lang.math.NumberUtils:createDouble(Ljava/lang/String;)Ljava/lang/Double;
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: Line 594
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: Line 597
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;
   * Goal 7. Weak Mutation 149: org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;:594 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;:nonnull
   */

  @Test
  public void test033()  throws Throwable  {
      Double double0 = NumberUtils.createDouble("7");
  }

  //Test case number: 34
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I3 Branch 58 IFNONNULL L660 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I12 Branch 59 IFEQ L664 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I3 Branch 58 IFNONNULL L660 - true in context: org.apache.commons.lang.math.NumberUtils:createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I12 Branch 59 IFEQ L664 - true in context: org.apache.commons.lang.math.NumberUtils:createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 660
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 664
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 667
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 10. Weak Mutation 153: org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:660 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 154: org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:664 - ReplaceComparisonOperator == -> !=
   * Goal 12. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:nonnull
   */

  @Test
  public void test034()  throws Throwable  {
      BigDecimal bigDecimal0 = NumberUtils.createBigDecimal("7");
  }

  //Test case number: 35
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(BBB)B: I4 Branch 158 IF_ICMPLE L1331 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(BBB)B: I13 Branch 159 IF_ICMPLE L1334 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(BBB)B: I4 Branch 158 IF_ICMPLE L1331 - true in context: org.apache.commons.lang.math.NumberUtils:max(BBB)B
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(BBB)B: I13 Branch 159 IF_ICMPLE L1334 - true in context: org.apache.commons.lang.math.NumberUtils:max(BBB)B
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1331
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1334
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1337
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(BBB)B
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(BBB)B
   * Goal 10. Weak Mutation 1018: org.apache.commons.lang.math.NumberUtils.max(BBB)B:1331 - ReplaceComparisonOperator <= -> <
   * Goal 11. Weak Mutation 1036: org.apache.commons.lang.math.NumberUtils.max(BBB)B:1334 - ReplaceComparisonOperator <= -> <
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max(BBB)B:negative
   */

  @Test
  public void test035()  throws Throwable  {
      byte byte0 = NumberUtils.max((byte) (-64), (byte) (-64), (byte) (-64));
  }

  //Test case number: 36
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(SSS)S: I4 Branch 156 IF_ICMPLE L1313 - false
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(SSS)S: I13 Branch 157 IF_ICMPLE L1316 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(SSS)S: I4 Branch 156 IF_ICMPLE L1313 - false in context: org.apache.commons.lang.math.NumberUtils:max(SSS)S
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(SSS)S: I13 Branch 157 IF_ICMPLE L1316 - true in context: org.apache.commons.lang.math.NumberUtils:max(SSS)S
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1313
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1314
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1316
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1319
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(SSS)S
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max(SSS)S
   * Goal 11. Weak Mutation 976: org.apache.commons.lang.math.NumberUtils.max(SSS)S:1313 - ReplaceComparisonOperator <= -> -1
   * Goal 12. Weak Mutation 995: org.apache.commons.lang.math.NumberUtils.max(SSS)S:1316 - ReplaceComparisonOperator <= -> <
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max(SSS)S:positive
   */

  @Test
  public void test036()  throws Throwable  {
      short short0 = NumberUtils.max((short)0, (short)1189, (short)1189);
  }

  //Test case number: 37
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(SSS)S: I4 Branch 156 IF_ICMPLE L1313 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(SSS)S: I13 Branch 157 IF_ICMPLE L1316 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(SSS)S: I4 Branch 156 IF_ICMPLE L1313 - true in context: org.apache.commons.lang.math.NumberUtils:max(SSS)S
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(SSS)S: I13 Branch 157 IF_ICMPLE L1316 - true in context: org.apache.commons.lang.math.NumberUtils:max(SSS)S
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1313
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1316
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1319
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(SSS)S
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(SSS)S
   * Goal 10. Weak Mutation 978: org.apache.commons.lang.math.NumberUtils.max(SSS)S:1313 - ReplaceComparisonOperator <= -> ==
   * Goal 11. Weak Mutation 996: org.apache.commons.lang.math.NumberUtils.max(SSS)S:1316 - ReplaceComparisonOperator <= -> ==
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max(SSS)S:negative
   */

  @Test
  public void test037()  throws Throwable  {
      short short0 = NumberUtils.max((short) (-1602), (short) (-2008), (short) (-2008));
  }

  //Test case number: 38
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(III)I: I4 Branch 154 IF_ICMPLE L1295 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(III)I: I13 Branch 155 IF_ICMPLE L1298 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(III)I: I4 Branch 154 IF_ICMPLE L1295 - true in context: org.apache.commons.lang.math.NumberUtils:max(III)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(III)I: I13 Branch 155 IF_ICMPLE L1298 - true in context: org.apache.commons.lang.math.NumberUtils:max(III)I
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1295
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1298
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1301
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(III)I
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(III)I
   * Goal 10. Weak Mutation 937: org.apache.commons.lang.math.NumberUtils.max(III)I:1295 - ReplaceComparisonOperator <= -> ==
   * Goal 11. Weak Mutation 955: org.apache.commons.lang.math.NumberUtils.max(III)I:1298 - ReplaceComparisonOperator <= -> ==
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max(III)I:positive
   */

  @Test
  public void test038()  throws Throwable  {
      int int0 = NumberUtils.max(410, 0, 0);
  }

  //Test case number: 39
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I5 Branch 152 IFLE L1277 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I15 Branch 153 IFLE L1280 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I5 Branch 152 IFLE L1277 - true in context: org.apache.commons.lang.math.NumberUtils:max(JJJ)J
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I15 Branch 153 IFLE L1280 - true in context: org.apache.commons.lang.math.NumberUtils:max(JJJ)J
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1277
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1280
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1283
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(JJJ)J
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(JJJ)J
   * Goal 10. Weak Mutation 906: org.apache.commons.lang.math.NumberUtils.max(JJJ)J:1277 - ReplaceComparisonOperator <= -> <
   * Goal 11. Weak Mutation 918: org.apache.commons.lang.math.NumberUtils.max(JJJ)J:1280 - ReplaceComparisonOperator <= -> <
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max(JJJ)J:negative
   */

  @Test
  public void test039()  throws Throwable  {
      long long0 = NumberUtils.max((long) (-1370), (long) (-1370), (long) (-1370));
  }

  //Test case number: 40
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I5 Branch 152 IFLE L1277 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I15 Branch 153 IFLE L1280 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I5 Branch 152 IFLE L1277 - true in context: org.apache.commons.lang.math.NumberUtils:max(JJJ)J
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I15 Branch 153 IFLE L1280 - true in context: org.apache.commons.lang.math.NumberUtils:max(JJJ)J
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1277
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1280
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1283
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(JJJ)J
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(JJJ)J
   * Goal 10. Weak Mutation 905: org.apache.commons.lang.math.NumberUtils.max(JJJ)J:1277 - ReplaceComparisonOperator <= -> ==
   * Goal 11. Weak Mutation 917: org.apache.commons.lang.math.NumberUtils.max(JJJ)J:1280 - ReplaceComparisonOperator <= -> ==
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max(JJJ)J:positive
   */

  @Test
  public void test040()  throws Throwable  {
      long long0 = NumberUtils.max(523L, 0L, 0L);
  }

  //Test case number: 41
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(BBB)B: I4 Branch 150 IF_ICMPGE L1227 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(BBB)B: I13 Branch 151 IF_ICMPGE L1230 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(BBB)B: I4 Branch 150 IF_ICMPGE L1227 - true in context: org.apache.commons.lang.math.NumberUtils:min(BBB)B
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(BBB)B: I13 Branch 151 IF_ICMPGE L1230 - true in context: org.apache.commons.lang.math.NumberUtils:min(BBB)B
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1227
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1230
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1233
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(BBB)B
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(BBB)B
   * Goal 10. Weak Mutation 851: org.apache.commons.lang.math.NumberUtils.min(BBB)B:1227 - ReplaceComparisonOperator >= -> ==
   * Goal 11. Weak Mutation 868: org.apache.commons.lang.math.NumberUtils.min(BBB)B:1230 - ReplaceComparisonOperator >= -> >
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min(BBB)B:positive
   */

  @Test
  public void test041()  throws Throwable  {
      byte byte0 = NumberUtils.min((byte)53, (byte)69, (byte)53);
  }

  //Test case number: 42
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(SSS)S: I4 Branch 148 IF_ICMPGE L1209 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(SSS)S: I13 Branch 149 IF_ICMPGE L1212 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(SSS)S: I4 Branch 148 IF_ICMPGE L1209 - true in context: org.apache.commons.lang.math.NumberUtils:min(SSS)S
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(SSS)S: I13 Branch 149 IF_ICMPGE L1212 - true in context: org.apache.commons.lang.math.NumberUtils:min(SSS)S
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1209
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1212
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1215
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(SSS)S
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(SSS)S
   * Goal 10. Weak Mutation 809: org.apache.commons.lang.math.NumberUtils.min(SSS)S:1209 - ReplaceComparisonOperator >= -> >
   * Goal 11. Weak Mutation 827: org.apache.commons.lang.math.NumberUtils.min(SSS)S:1212 - ReplaceComparisonOperator >= -> >
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min(SSS)S:positive
   */

  @Test
  public void test042()  throws Throwable  {
      short short0 = NumberUtils.min((short)1, (short)1, (short)1);
  }

  //Test case number: 43
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(SSS)S: I4 Branch 148 IF_ICMPGE L1209 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(SSS)S: I13 Branch 149 IF_ICMPGE L1212 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(SSS)S: I4 Branch 148 IF_ICMPGE L1209 - true in context: org.apache.commons.lang.math.NumberUtils:min(SSS)S
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(SSS)S: I13 Branch 149 IF_ICMPGE L1212 - true in context: org.apache.commons.lang.math.NumberUtils:min(SSS)S
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1209
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1212
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1215
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(SSS)S
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(SSS)S
   * Goal 10. Weak Mutation 810: org.apache.commons.lang.math.NumberUtils.min(SSS)S:1209 - ReplaceComparisonOperator >= -> ==
   * Goal 11. Weak Mutation 828: org.apache.commons.lang.math.NumberUtils.min(SSS)S:1212 - ReplaceComparisonOperator >= -> ==
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min(SSS)S:negative
   */

  @Test
  public void test043()  throws Throwable  {
      short short0 = NumberUtils.min((short) (-3944), (short)3213, (short)3213);
  }

  //Test case number: 44
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(III)I: I4 Branch 146 IF_ICMPGE L1191 - false
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(III)I: I13 Branch 147 IF_ICMPGE L1194 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(III)I: I4 Branch 146 IF_ICMPGE L1191 - false in context: org.apache.commons.lang.math.NumberUtils:min(III)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(III)I: I13 Branch 147 IF_ICMPGE L1194 - true in context: org.apache.commons.lang.math.NumberUtils:min(III)I
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1191
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1192
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1194
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1197
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(III)I
   * Goal 10. org.apache.commons.lang.math.NumberUtils.min(III)I
   * Goal 11. Weak Mutation 767: org.apache.commons.lang.math.NumberUtils.min(III)I:1191 - ReplaceComparisonOperator >= -> -1
   * Goal 12. Weak Mutation 787: org.apache.commons.lang.math.NumberUtils.min(III)I:1194 - ReplaceComparisonOperator >= -> ==
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min(III)I:negative
   */

  @Test
  public void test044()  throws Throwable  {
      int int0 = NumberUtils.min(0, (-123), 0);
  }

  //Test case number: 45
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I5 Branch 144 IFGE L1173 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I15 Branch 145 IFGE L1176 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I5 Branch 144 IFGE L1173 - true in context: org.apache.commons.lang.math.NumberUtils:min(JJJ)J
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I15 Branch 145 IFGE L1176 - true in context: org.apache.commons.lang.math.NumberUtils:min(JJJ)J
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1173
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1176
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1179
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(JJJ)J
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(JJJ)J
   * Goal 10. Weak Mutation 737: org.apache.commons.lang.math.NumberUtils.min(JJJ)J:1173 - ReplaceComparisonOperator >= -> ==
   * Goal 11. Weak Mutation 749: org.apache.commons.lang.math.NumberUtils.min(JJJ)J:1176 - ReplaceComparisonOperator >= -> ==
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min(JJJ)J:zero
   */

  @Test
  public void test045()  throws Throwable  {
      long long0 = NumberUtils.min(0L, (long) (byte)45, 2061L);
  }

  //Test case number: 46
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([F)F: I3 Branch 140 IFNONNULL L1145 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([F)F: I28 Branch 141 IFNE L1147 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([F)F: I63 Branch 142 IF_ICMPGE L1153 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([F)F: I63 Branch 142 IF_ICMPGE L1153 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([F)F: I71 Branch 143 IFLE L1154 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([F)F: I71 Branch 143 IFLE L1154 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I3 Branch 140 IFNONNULL L1145 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I28 Branch 141 IFNE L1147 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I63 Branch 142 IF_ICMPGE L1153 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I63 Branch 142 IF_ICMPGE L1153 - false in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I71 Branch 143 IFLE L1154 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I71 Branch 143 IFLE L1154 - false in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1145
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1147
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1152
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1153
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1154
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1155
   * Goal 19. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1159
   * Goal 20. org.apache.commons.lang.math.NumberUtils.max([F)F
   * Goal 21. org.apache.commons.lang.math.NumberUtils.max([F)F
   * Goal 22. Weak Mutation 703: org.apache.commons.lang.math.NumberUtils.max([F)F:1145 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 707: org.apache.commons.lang.math.NumberUtils.max([F)F:1147 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 711: org.apache.commons.lang.math.NumberUtils.max([F)F:1152 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 712: org.apache.commons.lang.math.NumberUtils.max([F)F:1153 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 716: org.apache.commons.lang.math.NumberUtils.max([F)F:1153 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 717: org.apache.commons.lang.math.NumberUtils.max([F)F:1153 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 723: org.apache.commons.lang.math.NumberUtils.max([F)F:1154 - ReplaceComparisonOperator <= -> -1
   * Goal 29. Weak Mutation 724: org.apache.commons.lang.math.NumberUtils.max([F)F:1154 - ReplaceComparisonOperator <= -> ==
   * Goal 30. org.apache.commons.lang.math.NumberUtils.max([F)F:positive
   */

  @Test
  public void test046()  throws Throwable  {
      float[] floatArray0 = new float[3];
      floatArray0[1] = (float) 1L;
      float float0 = NumberUtils.max(floatArray0);
  }

  //Test case number: 47
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([I)I: I3 Branch 124 IFNONNULL L1037 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([I)I: I28 Branch 125 IFNE L1039 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 126 IF_ICMPGE L1045 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 126 IF_ICMPGE L1045 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([I)I: I70 Branch 127 IF_ICMPLE L1046 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I3 Branch 124 IFNONNULL L1037 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I28 Branch 125 IFNE L1039 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 126 IF_ICMPGE L1045 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 126 IF_ICMPGE L1045 - false in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I70 Branch 127 IF_ICMPLE L1046 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1037
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1039
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1044
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1045
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1046
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1051
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([I)I
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([I)I
   * Goal 19. Weak Mutation 578: org.apache.commons.lang.math.NumberUtils.max([I)I:1037 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 582: org.apache.commons.lang.math.NumberUtils.max([I)I:1039 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 586: org.apache.commons.lang.math.NumberUtils.max([I)I:1044 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 587: org.apache.commons.lang.math.NumberUtils.max([I)I:1045 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 592: org.apache.commons.lang.math.NumberUtils.max([I)I:1045 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 593: org.apache.commons.lang.math.NumberUtils.max([I)I:1045 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 605: org.apache.commons.lang.math.NumberUtils.max([I)I:1046 - ReplaceComparisonOperator <= -> ==
   * Goal 26. org.apache.commons.lang.math.NumberUtils.max([I)I:positive
   */

  @Test
  public void test047()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = 436;
      int int0 = NumberUtils.max(intArray0);
  }

  //Test case number: 48
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([F)F: I3 Branch 116 IFNONNULL L981 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([F)F: I28 Branch 117 IFNE L983 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 118 IF_ICMPGE L989 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 118 IF_ICMPGE L989 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([F)F: I71 Branch 119 IFGE L990 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I3 Branch 116 IFNONNULL L981 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I28 Branch 117 IFNE L983 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 118 IF_ICMPGE L989 - false in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 118 IF_ICMPGE L989 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I71 Branch 119 IFGE L990 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 981
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 983
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 988
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 989
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 990
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 995
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([F)F
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([F)F
   * Goal 19. Weak Mutation 524: org.apache.commons.lang.math.NumberUtils.min([F)F:981 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 528: org.apache.commons.lang.math.NumberUtils.min([F)F:983 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 532: org.apache.commons.lang.math.NumberUtils.min([F)F:988 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 533: org.apache.commons.lang.math.NumberUtils.min([F)F:989 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 537: org.apache.commons.lang.math.NumberUtils.min([F)F:989 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 538: org.apache.commons.lang.math.NumberUtils.min([F)F:989 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 545: org.apache.commons.lang.math.NumberUtils.min([F)F:990 - ReplaceComparisonOperator >= -> ==
   * Goal 26. org.apache.commons.lang.math.NumberUtils.min([F)F:negative
   */

  @Test
  public void test048()  throws Throwable  {
      float[] floatArray0 = new float[2];
      floatArray0[0] = (-1722.4851F);
      float float0 = NumberUtils.min(floatArray0);
  }

  //Test case number: 49
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([S)S: I3 Branch 104 IFNONNULL L900 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([S)S: I28 Branch 105 IFNE L902 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 106 IF_ICMPGE L908 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 106 IF_ICMPGE L908 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([S)S: I70 Branch 107 IF_ICMPGE L909 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I3 Branch 104 IFNONNULL L900 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I28 Branch 105 IFNE L902 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 106 IF_ICMPGE L908 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 106 IF_ICMPGE L908 - false in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I70 Branch 107 IF_ICMPGE L909 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 900
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 902
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 907
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 908
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 909
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 914
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([S)S
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([S)S
   * Goal 19. Weak Mutation 435: org.apache.commons.lang.math.NumberUtils.min([S)S:900 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 439: org.apache.commons.lang.math.NumberUtils.min([S)S:902 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 443: org.apache.commons.lang.math.NumberUtils.min([S)S:907 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 444: org.apache.commons.lang.math.NumberUtils.min([S)S:908 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 448: org.apache.commons.lang.math.NumberUtils.min([S)S:908 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 449: org.apache.commons.lang.math.NumberUtils.min([S)S:908 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 459: org.apache.commons.lang.math.NumberUtils.min([S)S:909 - ReplaceComparisonOperator >= -> ==
   * Goal 26. org.apache.commons.lang.math.NumberUtils.min([S)S:negative
   */

  @Test
  public void test049()  throws Throwable  {
      short[] shortArray0 = new short[2];
      shortArray0[0] = (short) (-4654);
      short short0 = NumberUtils.min(shortArray0);
  }

  //Test case number: 50
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([I)I: I3 Branch 100 IFNONNULL L873 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([I)I: I28 Branch 101 IFNE L875 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([I)I: I63 Branch 102 IF_ICMPGE L881 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([I)I: I63 Branch 102 IF_ICMPGE L881 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([I)I: I70 Branch 103 IF_ICMPGE L882 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I3 Branch 100 IFNONNULL L873 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I28 Branch 101 IFNE L875 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I63 Branch 102 IF_ICMPGE L881 - false in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I63 Branch 102 IF_ICMPGE L881 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I70 Branch 103 IF_ICMPGE L882 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 873
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 875
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 880
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 881
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 882
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 887
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([I)I
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([I)I
   * Goal 19. Weak Mutation 399: org.apache.commons.lang.math.NumberUtils.min([I)I:873 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 403: org.apache.commons.lang.math.NumberUtils.min([I)I:875 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 407: org.apache.commons.lang.math.NumberUtils.min([I)I:880 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 408: org.apache.commons.lang.math.NumberUtils.min([I)I:881 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 413: org.apache.commons.lang.math.NumberUtils.min([I)I:881 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 414: org.apache.commons.lang.math.NumberUtils.min([I)I:881 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 426: org.apache.commons.lang.math.NumberUtils.min([I)I:882 - ReplaceComparisonOperator >= -> ==
   * Goal 26. org.apache.commons.lang.math.NumberUtils.min([I)I:negative
   */

  @Test
  public void test050()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (int) (short) (-4654);
      int int0 = NumberUtils.min(intArray0);
  }

  //Test case number: 51
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I4 Branch 90 IF_ACMPNE L815 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I12 Branch 91 IFNULL L818 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I14 Branch 92 IFNONNULL L818 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I25 Branch 93 IF_ICMPEQ L821 - false
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I4 Branch 90 IF_ACMPNE L815 - true in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I14 Branch 92 IFNONNULL L818 - true in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I12 Branch 91 IFNULL L818 - false in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I25 Branch 93 IF_ICMPEQ L821 - false in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 815
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 818
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 821
   * Goal 12. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 822
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z
   * Goal 15. Weak Mutation 338: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:815 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 341: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:818 - ReplaceComparisonOperator = null -> != null
   * Goal 17. Weak Mutation 343: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:818 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 348: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:821 - ReplaceComparisonOperator == -> >=
   * Goal 19. Weak Mutation 350: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:822 - ReplaceConstant - 0 -> 1
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:false
   */

  @Test
  public void test051()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      double[] doubleArray1 = new double[4];
      boolean boolean0 = NumberUtils.equals(doubleArray0, doubleArray1);
  }

  //Test case number: 52
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I4 Branch 84 IF_ACMPNE L788 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I12 Branch 85 IFNULL L791 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I14 Branch 86 IFNONNULL L791 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I25 Branch 87 IF_ICMPEQ L794 - false
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I4 Branch 84 IF_ACMPNE L788 - true in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I12 Branch 85 IFNULL L791 - false in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I14 Branch 86 IFNONNULL L791 - true in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I25 Branch 87 IF_ICMPEQ L794 - false in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 788
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 791
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 794
   * Goal 12. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 795
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z
   * Goal 15. Weak Mutation 302: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:788 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 305: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:791 - ReplaceComparisonOperator = null -> != null
   * Goal 17. Weak Mutation 307: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:791 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 313: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:794 - ReplaceComparisonOperator == -> <=
   * Goal 19. Weak Mutation 314: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:795 - ReplaceConstant - 0 -> 1
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:false
   */

  @Test
  public void test052()  throws Throwable  {
      float[] floatArray0 = new float[2];
      float[] floatArray1 = new float[6];
      boolean boolean0 = NumberUtils.equals(floatArray0, floatArray1);
  }

  //Test case number: 53
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I4 Branch 78 IF_ACMPNE L761 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I12 Branch 79 IFNULL L764 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I14 Branch 80 IFNONNULL L764 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I25 Branch 81 IF_ICMPEQ L767 - false
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I4 Branch 78 IF_ACMPNE L761 - true in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I12 Branch 79 IFNULL L764 - false in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I14 Branch 80 IFNONNULL L764 - true in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I25 Branch 81 IF_ICMPEQ L767 - false in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 761
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 764
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 767
   * Goal 12. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 768
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z
   * Goal 15. Weak Mutation 266: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:761 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 269: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:764 - ReplaceComparisonOperator = null -> != null
   * Goal 17. Weak Mutation 271: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:764 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 277: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:767 - ReplaceComparisonOperator == -> <=
   * Goal 19. Weak Mutation 278: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:768 - ReplaceConstant - 0 -> 1
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:false
   */

  @Test
  public void test053()  throws Throwable  {
      long[] longArray0 = new long[5];
      long[] longArray1 = new long[9];
      boolean boolean0 = NumberUtils.equals(longArray0, longArray1);
  }

  //Test case number: 54
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I4 Branch 72 IF_ACMPNE L734 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I12 Branch 73 IFNULL L737 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I14 Branch 74 IFNONNULL L737 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I25 Branch 75 IF_ICMPEQ L740 - false
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I4 Branch 72 IF_ACMPNE L734 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I14 Branch 74 IFNONNULL L737 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I12 Branch 73 IFNULL L737 - false in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I25 Branch 75 IF_ICMPEQ L740 - false in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 734
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 737
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 740
   * Goal 12. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 741
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z
   * Goal 15. Weak Mutation 230: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:734 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 233: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:737 - ReplaceComparisonOperator = null -> != null
   * Goal 17. Weak Mutation 235: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:737 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 240: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:740 - ReplaceComparisonOperator == -> >=
   * Goal 19. Weak Mutation 242: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:741 - ReplaceConstant - 0 -> 1
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:false
   */

  @Test
  public void test054()  throws Throwable  {
      int[] intArray0 = new int[5];
      int[] intArray1 = new int[1];
      boolean boolean0 = NumberUtils.equals(intArray0, intArray1);
  }

  //Test case number: 55
  /*
   * 29 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I4 Branch 66 IF_ACMPNE L707 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I12 Branch 67 IFNULL L710 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I14 Branch 68 IFNONNULL L710 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I25 Branch 69 IF_ICMPEQ L713 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I38 Branch 70 IF_ICMPGE L717 - false
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I47 Branch 71 IF_ICMPEQ L718 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I4 Branch 66 IF_ACMPNE L707 - true in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I14 Branch 68 IFNONNULL L710 - true in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I12 Branch 67 IFNULL L710 - false in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I25 Branch 69 IF_ICMPEQ L713 - true in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I38 Branch 70 IF_ICMPGE L717 - false in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I47 Branch 71 IF_ICMPEQ L718 - false in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 707
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 710
   * Goal 15. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 713
   * Goal 16. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 717
   * Goal 17. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 718
   * Goal 18. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 719
   * Goal 19. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z
   * Goal 21. Weak Mutation 194: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:707 - ReplaceComparisonOperator != -> ==
   * Goal 22. Weak Mutation 197: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:710 - ReplaceComparisonOperator = null -> != null
   * Goal 23. Weak Mutation 199: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:710 - ReplaceComparisonOperator != null -> = null
   * Goal 24. Weak Mutation 203: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:713 - ReplaceComparisonOperator == -> -2
   * Goal 25. Weak Mutation 207: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:717 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 212: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:717 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 225: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:718 - ReplaceComparisonOperator == -> <=
   * Goal 28. Weak Mutation 226: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:719 - ReplaceConstant - 0 -> 1
   * Goal 29. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:false
   */

  @Test
  public void test055()  throws Throwable  {
      short[] shortArray0 = new short[2];
      short[] shortArray1 = new short[2];
      shortArray1[0] = (short)1;
      boolean boolean0 = NumberUtils.equals(shortArray0, shortArray1);
  }

  //Test case number: 56
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I4 Branch 66 IF_ACMPNE L707 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I12 Branch 67 IFNULL L710 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I14 Branch 68 IFNONNULL L710 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I25 Branch 69 IF_ICMPEQ L713 - false
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I4 Branch 66 IF_ACMPNE L707 - true in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I14 Branch 68 IFNONNULL L710 - true in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I12 Branch 67 IFNULL L710 - false in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I25 Branch 69 IF_ICMPEQ L713 - false in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 707
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 710
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 713
   * Goal 12. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 714
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z
   * Goal 15. Weak Mutation 194: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:707 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 197: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:710 - ReplaceComparisonOperator = null -> != null
   * Goal 17. Weak Mutation 199: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:710 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 204: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:713 - ReplaceComparisonOperator == -> >=
   * Goal 19. Weak Mutation 206: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:714 - ReplaceConstant - 0 -> 1
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:false
   */

  @Test
  public void test056()  throws Throwable  {
      short[] shortArray0 = new short[9];
      short[] shortArray1 = new short[0];
      boolean boolean0 = NumberUtils.equals(shortArray0, shortArray1);
  }

  //Test case number: 57
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I4 Branch 60 IF_ACMPNE L680 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I12 Branch 61 IFNULL L683 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I14 Branch 62 IFNONNULL L683 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I25 Branch 63 IF_ICMPEQ L686 - false
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I4 Branch 60 IF_ACMPNE L680 - true in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I12 Branch 61 IFNULL L683 - false in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I14 Branch 62 IFNONNULL L683 - true in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I25 Branch 63 IF_ICMPEQ L686 - false in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 680
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 683
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 686
   * Goal 12. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 687
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z
   * Goal 15. Weak Mutation 158: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:680 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 161: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:683 - ReplaceComparisonOperator = null -> != null
   * Goal 17. Weak Mutation 163: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:683 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 168: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:686 - ReplaceComparisonOperator == -> >=
   * Goal 19. Weak Mutation 170: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:687 - ReplaceConstant - 0 -> 1
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:false
   */

  @Test
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = new byte[3];
      boolean boolean0 = NumberUtils.equals(byteArray0, byteArray1);
  }

  //Test case number: 58
  /*
   * 122 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I136 Branch 13 IF_ICMPLE L433 - true
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I158 Branch 14 IFNE L440 - false
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I163 Branch 15 IF_ICMPLE L441 - true
   * Goal 10. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I202 Branch 17 IFEQ L448 - true
   * Goal 11. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 19 LOOKUPSWITCH L449 Case 68 - false
   * Goal 12. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 20 LOOKUPSWITCH L449 Case 70 - false
   * Goal 13. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 21 LOOKUPSWITCH L449 Case 76 - false
   * Goal 14. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 22 LOOKUPSWITCH L449 Case 100 - false
   * Goal 15. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 23 LOOKUPSWITCH L449 Case 102 - false
   * Goal 16. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 24 LOOKUPSWITCH L449 Case 108 - false
   * Goal 17. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 25 LOOKUPSWITCH L449 Default-Case - true
   * Goal 18. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 49 IFNONNULL L556 - true
   * Goal 19. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 50 IFLT L559 - false
   * Goal 20. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I24 Branch 51 IF_ICMPEQ L560 - false
   * Goal 21. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 22. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 25. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 26. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 27. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I136 Branch 13 IF_ICMPLE L433 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 28. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I158 Branch 14 IFNE L440 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 29. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I163 Branch 15 IF_ICMPLE L441 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 30. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I202 Branch 17 IFEQ L448 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 31. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 20 LOOKUPSWITCH L449 Case 70 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 32. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 19 LOOKUPSWITCH L449 Case 68 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 33. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 21 LOOKUPSWITCH L449 Case 76 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 34. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 24 LOOKUPSWITCH L449 Case 108 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 35. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 25 LOOKUPSWITCH L449 Default-Case - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 36. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 22 LOOKUPSWITCH L449 Case 100 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 37. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 23 LOOKUPSWITCH L449 Case 102 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 38. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 49 IFNONNULL L556 - true in context: 
   * Goal 39. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 50 IFLT L559 - false in context: 
   * Goal 40. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I24 Branch 51 IF_ICMPEQ L560 - false in context: 
   * Goal 41. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 42. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 43. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 44. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 404
   * Goal 45. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 411
   * Goal 46. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 414
   * Goal 47. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 418
   * Goal 48. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 419
   * Goal 49. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 421
   * Goal 50. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 433
   * Goal 51. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 436
   * Goal 52. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 438
   * Goal 53. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 440
   * Goal 54. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 441
   * Goal 55. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 444
   * Goal 56. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 447
   * Goal 57. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 448
   * Goal 58. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 449
   * Goal 59. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 496
   * Goal 60. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 556
   * Goal 61. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 559
   * Goal 62. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 560
   * Goal 63. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 561
   * Goal 64. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 65. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 66. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 67. Weak Mutation 29: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - -- -> 
   * Goal 68. Weak Mutation 30: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - 0 -> 1
   * Goal 69. Weak Mutation 32: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceComparisonOperator <= -> ==
   * Goal 70. Weak Mutation 34: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0x -> 
   * Goal 71. Weak Mutation 35: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 72. Weak Mutation 37: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator > -> !=
   * Goal 73. Weak Mutation 39: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - -0x -> 
   * Goal 74. Weak Mutation 40: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 75. Weak Mutation 42: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator <= -> ==
   * Goal 76. Weak Mutation 44: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceConstant - 1 -> 0
   * Goal 77. Weak Mutation 45: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> +
   * Goal 78. Weak Mutation 46: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> %
   * Goal 79. Weak Mutation 47: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> *
   * Goal 80. Weak Mutation 48: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> /
   * Goal 81. Weak Mutation 49: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 0
   * Goal 82. Weak Mutation 50: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 1
   * Goal 83. Weak Mutation 51: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> -1
   * Goal 84. Weak Mutation 52: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 45
   * Goal 85. Weak Mutation 53: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 47
   * Goal 86. Weak Mutation 54: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 0
   * Goal 87. Weak Mutation 55: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 1
   * Goal 88. Weak Mutation 56: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> -1
   * Goal 89. Weak Mutation 57: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 100
   * Goal 90. Weak Mutation 58: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 102
   * Goal 91. Weak Mutation 59: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 0
   * Goal 92. Weak Mutation 60: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 1
   * Goal 93. Weak Mutation 61: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> -1
   * Goal 94. Weak Mutation 62: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 68
   * Goal 95. Weak Mutation 63: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 70
   * Goal 96. Weak Mutation 64: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 97. Weak Mutation 65: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 98. Weak Mutation 66: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 99. Weak Mutation 67: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 100. Weak Mutation 68: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 1 -> 0
   * Goal 101. Weak Mutation 69: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 102. Weak Mutation 70: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 103. Weak Mutation 71: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 104. Weak Mutation 72: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 105. Weak Mutation 77: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 0
   * Goal 106. Weak Mutation 78: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 1
   * Goal 107. Weak Mutation 79: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> -2
   * Goal 108. Weak Mutation 81: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceComparisonOperator <= -> <
   * Goal 109. Weak Mutation 118: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:556 - ReplaceComparisonOperator != null -> = null
   * Goal 110. Weak Mutation 120: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceConstant - 1 -> 0
   * Goal 111. Weak Mutation 121: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> +
   * Goal 112. Weak Mutation 122: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> %
   * Goal 113. Weak Mutation 123: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> *
   * Goal 114. Weak Mutation 124: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> /
   * Goal 115. Weak Mutation 129: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceComparisonOperator < -> !=
   * Goal 116. Weak Mutation 134: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 0
   * Goal 117. Weak Mutation 135: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 1
   * Goal 118. Weak Mutation 136: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> -1
   * Goal 119. Weak Mutation 137: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 47
   * Goal 120. Weak Mutation 138: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 49
   * Goal 121. Weak Mutation 141: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceComparisonOperator == -> <=
   * Goal 122. Weak Mutation 142: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:561 - ReplaceConstant - 0 -> 1
   */

  @Test
  public void test058()  throws Throwable  {
      try { 
        NumberUtils.createNumber("v\"!t!}-");
      } catch(NumberFormatException e) {
         //
         // v\"!t!}- is not a valid number.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 59
  /*
   * 100 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I136 Branch 13 IF_ICMPLE L433 - true
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I158 Branch 14 IFNE L440 - true
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I349 Branch 37 IF_ICMPLE L502 - true
   * Goal 10. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I375 Branch 39 IFNONNULL L507 - false
   * Goal 11. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I377 Branch 40 IFNONNULL L507 - false
   * Goal 12. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: I3 Branch 55 IFNONNULL L611 - true
   * Goal 13. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: I3 Branch 56 IFNONNULL L628 - true
   * Goal 14. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: I3 Branch 57 IFNONNULL L644 - true
   * Goal 15. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 16. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 17. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 18. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 19. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 20. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 21. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I136 Branch 13 IF_ICMPLE L433 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 22. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I158 Branch 14 IFNE L440 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I349 Branch 37 IF_ICMPLE L502 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I375 Branch 39 IFNONNULL L507 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 25. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I377 Branch 40 IFNONNULL L507 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 26. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 27. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: Line 644
   * Goal 28. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: Line 647
   * Goal 29. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: Line 611
   * Goal 30. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: Line 615
   * Goal 31. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: Line 628
   * Goal 32. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: Line 631
   * Goal 33. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 34. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 35. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 404
   * Goal 36. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 411
   * Goal 37. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 414
   * Goal 38. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 418
   * Goal 39. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 419
   * Goal 40. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 421
   * Goal 41. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 433
   * Goal 42. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 436
   * Goal 43. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 438
   * Goal 44. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 440
   * Goal 45. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 502
   * Goal 46. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 505
   * Goal 47. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 507
   * Goal 48. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 510
   * Goal 49. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 511
   * Goal 50. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 515
   * Goal 51. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 516
   * Goal 52. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 519
   * Goal 53. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 54. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 55. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 56. Weak Mutation 29: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - -- -> 
   * Goal 57. Weak Mutation 30: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - 0 -> 1
   * Goal 58. Weak Mutation 32: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceComparisonOperator <= -> ==
   * Goal 59. Weak Mutation 34: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0x -> 
   * Goal 60. Weak Mutation 35: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 61. Weak Mutation 37: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator > -> !=
   * Goal 62. Weak Mutation 39: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - -0x -> 
   * Goal 63. Weak Mutation 40: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 64. Weak Mutation 42: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator <= -> ==
   * Goal 65. Weak Mutation 44: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceConstant - 1 -> 0
   * Goal 66. Weak Mutation 45: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> +
   * Goal 67. Weak Mutation 46: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> %
   * Goal 68. Weak Mutation 47: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> *
   * Goal 69. Weak Mutation 48: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> /
   * Goal 70. Weak Mutation 49: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 0
   * Goal 71. Weak Mutation 50: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 1
   * Goal 72. Weak Mutation 51: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> -1
   * Goal 73. Weak Mutation 52: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 45
   * Goal 74. Weak Mutation 53: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 47
   * Goal 75. Weak Mutation 54: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 0
   * Goal 76. Weak Mutation 55: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 1
   * Goal 77. Weak Mutation 56: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> -1
   * Goal 78. Weak Mutation 57: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 100
   * Goal 79. Weak Mutation 58: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 102
   * Goal 80. Weak Mutation 59: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 0
   * Goal 81. Weak Mutation 60: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 1
   * Goal 82. Weak Mutation 61: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> -1
   * Goal 83. Weak Mutation 62: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 68
   * Goal 84. Weak Mutation 63: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 70
   * Goal 85. Weak Mutation 64: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 86. Weak Mutation 65: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 87. Weak Mutation 66: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 88. Weak Mutation 67: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 89. Weak Mutation 68: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 1 -> 0
   * Goal 90. Weak Mutation 69: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 91. Weak Mutation 70: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 92. Weak Mutation 71: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 93. Weak Mutation 72: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 94. Weak Mutation 77: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 0
   * Goal 95. Weak Mutation 78: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 1
   * Goal 96. Weak Mutation 79: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> -2
   * Goal 97. Weak Mutation 81: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceComparisonOperator <= -> <
   * Goal 98. Weak Mutation 150: org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;:611 - ReplaceComparisonOperator != null -> = null
   * Goal 99. Weak Mutation 151: org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;:628 - ReplaceComparisonOperator != null -> = null
   * Goal 100. Weak Mutation 152: org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;:644 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test059()  throws Throwable  {
      try { 
        NumberUtils.createNumber("CVU>jC1#4");
      } catch(NumberFormatException e) {
         //
         // For input string: \"CVU>jC1#4\"
         //
         assertThrownBy("java.lang.NumberFormatException", e);
      }
  }

  //Test case number: 60
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: I3 Branch 55 IFNONNULL L611 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: I3 Branch 55 IFNONNULL L611 - true in context: org.apache.commons.lang.math.NumberUtils:createInteger(Ljava/lang/String;)Ljava/lang/Integer;
   * Goal 3. createInteger(Ljava/lang/String;)Ljava/lang/Integer;_java.lang.NumberFormatException_IMPLICIT
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: Line 611
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: Line 615
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;
   * Goal 7. Weak Mutation 150: org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;:611 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test060()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.createInteger("Ol[}6a#rR Nj06LnO");
      } catch(NumberFormatException e) {
         //
         // For input string: \"Ol[}6a#rR Nj06LnO\"
         //
         assertThrownBy("java.lang.NumberFormatException", e);
      }
  }

  //Test case number: 61
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.compare(FF)I: I5 Branch 164 IFGE L1467 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.compare(FF)I: I15 Branch 165 IFLE L1470 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.compare(FF)I: I34 Branch 166 IF_ICMPNE L1479 - false
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.compare(FF)I: I5 Branch 164 IFGE L1467 - true in context: org.apache.commons.lang.math.NumberUtils:compare(FF)I
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.compare(FF)I: I15 Branch 165 IFLE L1470 - true in context: org.apache.commons.lang.math.NumberUtils:compare(FF)I
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.compare(FF)I: I34 Branch 166 IF_ICMPNE L1479 - false in context: org.apache.commons.lang.math.NumberUtils:compare(FF)I
   * Goal 7. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1467
   * Goal 8. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1470
   * Goal 9. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1477
   * Goal 10. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1478
   * Goal 11. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1479
   * Goal 12. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1480
   * Goal 13. org.apache.commons.lang.math.NumberUtils.compare(FF)I
   * Goal 14. org.apache.commons.lang.math.NumberUtils.compare(FF)I
   * Goal 15. Weak Mutation 1113: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1467 - ReplaceComparisonOperator >= -> >
   * Goal 16. Weak Mutation 1123: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1470 - ReplaceComparisonOperator <= -> <
   * Goal 17. Weak Mutation 1137: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1479 - ReplaceComparisonOperator != -> -1
   * Goal 18. Weak Mutation 1140: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1480 - ReplaceConstant - 0 -> 1
   * Goal 19. org.apache.commons.lang.math.NumberUtils.compare(FF)I:zero
   */

  @Test
  public void test061()  throws Throwable  {
      int int0 = NumberUtils.compare(0.0F, 0.0F);
  }

  //Test case number: 62
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.compare(FF)I: I5 Branch 164 IFGE L1467 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.compare(FF)I: I5 Branch 164 IFGE L1467 - false in context: org.apache.commons.lang.math.NumberUtils:compare(FF)I
   * Goal 3. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1467
   * Goal 4. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1468
   * Goal 5. org.apache.commons.lang.math.NumberUtils.compare(FF)I
   * Goal 6. org.apache.commons.lang.math.NumberUtils.compare(FF)I
   * Goal 7. Weak Mutation 1111: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1467 - ReplaceComparisonOperator >= -> -1
   * Goal 8. Weak Mutation 1114: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1468 - ReplaceConstant - -1 -> 0
   * Goal 9. Weak Mutation 1115: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1468 - ReplaceConstant - -1 -> 1
   * Goal 10. Weak Mutation 1116: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1468 - ReplaceConstant - -1 -> -2
   * Goal 11. org.apache.commons.lang.math.NumberUtils.compare(FF)I:negative
   */

  @Test
  public void test062()  throws Throwable  {
      int int0 = NumberUtils.compare((float) (short) (-4654), (float) (short)0);
  }

  //Test case number: 63
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.compare(DD)I: I5 Branch 160 IFGE L1406 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.compare(DD)I: I15 Branch 161 IFLE L1409 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.compare(DD)I: I35 Branch 162 IFNE L1418 - false
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.compare(DD)I: I5 Branch 160 IFGE L1406 - true in context: org.apache.commons.lang.math.NumberUtils:compare(DD)I
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.compare(DD)I: I15 Branch 161 IFLE L1409 - true in context: org.apache.commons.lang.math.NumberUtils:compare(DD)I
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.compare(DD)I: I35 Branch 162 IFNE L1418 - false in context: org.apache.commons.lang.math.NumberUtils:compare(DD)I
   * Goal 7. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1406
   * Goal 8. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1409
   * Goal 9. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1416
   * Goal 10. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1417
   * Goal 11. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1418
   * Goal 12. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1419
   * Goal 13. org.apache.commons.lang.math.NumberUtils.compare(DD)I
   * Goal 14. org.apache.commons.lang.math.NumberUtils.compare(DD)I
   * Goal 15. Weak Mutation 1072: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1406 - ReplaceComparisonOperator >= -> >
   * Goal 16. Weak Mutation 1082: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1409 - ReplaceComparisonOperator <= -> <
   * Goal 17. Weak Mutation 1092: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1418 - ReplaceComparisonOperator != -> -1
   * Goal 18. Weak Mutation 1095: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1419 - ReplaceConstant - 0 -> 1
   * Goal 19. org.apache.commons.lang.math.NumberUtils.compare(DD)I:zero
   */

  @Test
  public void test063()  throws Throwable  {
      int int0 = NumberUtils.compare((double) (-1.0F), (-1.0));
  }

  //Test case number: 64
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.compare(DD)I: I5 Branch 160 IFGE L1406 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.compare(DD)I: I15 Branch 161 IFLE L1409 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.compare(DD)I: I5 Branch 160 IFGE L1406 - true in context: org.apache.commons.lang.math.NumberUtils:compare(DD)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.compare(DD)I: I15 Branch 161 IFLE L1409 - false in context: org.apache.commons.lang.math.NumberUtils:compare(DD)I
   * Goal 5. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1406
   * Goal 6. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1409
   * Goal 7. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1410
   * Goal 8. org.apache.commons.lang.math.NumberUtils.compare(DD)I
   * Goal 9. org.apache.commons.lang.math.NumberUtils.compare(DD)I
   * Goal 10. Weak Mutation 1071: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1406 - ReplaceComparisonOperator >= -> ==
   * Goal 11. Weak Mutation 1080: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1409 - ReplaceComparisonOperator <= -> -1
   * Goal 12. Weak Mutation 1083: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1410 - ReplaceConstant - 1 -> 0
   * Goal 13. org.apache.commons.lang.math.NumberUtils.compare(DD)I:positive
   */

  @Test
  public void test064()  throws Throwable  {
      int int0 = NumberUtils.compare(3780.0, 380.0162);
  }

  //Test case number: 65
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I3 Branch 58 IFNONNULL L660 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I12 Branch 59 IFEQ L664 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I3 Branch 58 IFNONNULL L660 - true in context: org.apache.commons.lang.math.NumberUtils:createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I12 Branch 59 IFEQ L664 - false in context: org.apache.commons.lang.math.NumberUtils:createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 5. createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;_java.lang.NumberFormatException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 660
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 664
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 665
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 10. Weak Mutation 153: org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:660 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 154: org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:664 - ReplaceComparisonOperator == -> !=
   * Goal 12. Weak Mutation 155: org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:665 - ReplaceConstant - A blank string is not a valid number -> 
   */

  @Test
  public void test065()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.createBigDecimal("");
      } catch(NumberFormatException e) {
         //
         // A blank string is not a valid number
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 66
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I3 Branch 58 IFNONNULL L660 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I12 Branch 59 IFEQ L664 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I3 Branch 58 IFNONNULL L660 - true in context: org.apache.commons.lang.math.NumberUtils:createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I12 Branch 59 IFEQ L664 - true in context: org.apache.commons.lang.math.NumberUtils:createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 5. createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;_java.lang.NumberFormatException_IMPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 660
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 664
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 667
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 10. Weak Mutation 153: org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:660 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 154: org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:664 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test066()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.createBigDecimal("+bQFE$E>I");
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.math.BigDecimal", e);
      }
  }

  //Test case number: 67
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: I3 Branch 55 IFNONNULL L611 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: I3 Branch 55 IFNONNULL L611 - true in context: org.apache.commons.lang.math.NumberUtils:createInteger(Ljava/lang/String;)Ljava/lang/Integer;
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: Line 611
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: Line 615
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;
   * Goal 7. Weak Mutation 150: org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;:611 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;:nonnull
   */

  @Test
  public void test067()  throws Throwable  {
      Integer integer0 = NumberUtils.createInteger("7");
  }

  //Test case number: 68
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: I3 Branch 54 IFNONNULL L594 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: I3 Branch 54 IFNONNULL L594 - true in context: org.apache.commons.lang.math.NumberUtils:createDouble(Ljava/lang/String;)Ljava/lang/Double;
   * Goal 3. createDouble(Ljava/lang/String;)Ljava/lang/Double;_java.lang.NumberFormatException_IMPLICIT
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: Line 594
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: Line 597
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;
   * Goal 7. Weak Mutation 149: org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;:594 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test068()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.createDouble("0x");
      } catch(NumberFormatException e) {
         //
         // For input string: \"0x\"
         //
         assertThrownBy("sun.misc.FloatingDecimal", e);
      }
  }

  //Test case number: 69
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: I3 Branch 53 IFNONNULL L578 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: I3 Branch 53 IFNONNULL L578 - true in context: org.apache.commons.lang.math.NumberUtils:createFloat(Ljava/lang/String;)Ljava/lang/Float;
   * Goal 3. createFloat(Ljava/lang/String;)Ljava/lang/Float;_java.lang.NumberFormatException_IMPLICIT
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: Line 578
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: Line 581
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;
   * Goal 7. Weak Mutation 148: org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;:578 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test069()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.createFloat("A blank string is not a valid number");
      } catch(NumberFormatException e) {
         //
         // For input string: \"A blank string is not a valid number\"
         //
         assertThrownBy("sun.misc.FloatingDecimal", e);
      }
  }

  //Test case number: 70
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: I3 Branch 4 IFNONNULL L325 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: I3 Branch 4 IFNONNULL L325 - true in context: org.apache.commons.lang.math.NumberUtils:toDouble(Ljava/lang/String;D)D
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 325
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 329
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 330
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 331
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D
   * Goal 9. Weak Mutation 23: org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D:325 - ReplaceComparisonOperator != null -> = null
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D:negative
   */

  @Test
  public void test070()  throws Throwable  {
      double double0 = NumberUtils.toDouble("The Array must not be null", (-277.884773562));
  }

  //Test case number: 71
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: I3 Branch 3 IFNONNULL L273 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: I3 Branch 3 IFNONNULL L273 - true in context: org.apache.commons.lang.math.NumberUtils:toFloat(Ljava/lang/String;F)F
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 273
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 277
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 278
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 279
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F
   * Goal 9. Weak Mutation 18: org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F:273 - ReplaceComparisonOperator != null -> = null
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F:negative
   */

  @Test
  public void test071()  throws Throwable  {
      float float0 = NumberUtils.toFloat("The Array must not be null", (-1167.0F));
  }

  //Test case number: 72
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: I3 Branch 2 IFNONNULL L221 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: I3 Branch 2 IFNONNULL L221 - true in context: org.apache.commons.lang.math.NumberUtils:toLong(Ljava/lang/String;J)J
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 221
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 225
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 226
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 227
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J
   * Goal 9. Weak Mutation 13: org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J:221 - ReplaceComparisonOperator != null -> = null
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J:positive
   */

  @Test
  public void test072()  throws Throwable  {
      long long0 = NumberUtils.toLong("", 2262L);
  }

  //Test case number: 73
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - false in context: org.apache.commons.lang.math.NumberUtils:toInt(Ljava/lang/String;I)I
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 172
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 173
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I
   * Goal 7. Weak Mutation 4: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:172 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:negative
   */

  @Test
  public void test073()  throws Throwable  {
      int int0 = NumberUtils.toInt((String) null, (-1914));
  }

  //Test case number: 74
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - true in context: org.apache.commons.lang.math.NumberUtils:toInt(Ljava/lang/String;I)I
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 172
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 176
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 177
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 178
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I
   * Goal 9. Weak Mutation 4: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:172 - ReplaceComparisonOperator != null -> = null
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:positive
   */

  @Test
  public void test074()  throws Throwable  {
      int int0 = NumberUtils.toInt("/3*8", 436);
  }

  //Test case number: 75
  /*
   * 55 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 171 IFEQ L1532 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 172 IF_ICMPNE L1542 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 173 IF_ICMPLE L1543 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 184 IF_ICMPLT L1565 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I152 Branch 185 IF_ICMPGE L1565 - false
   * Goal 6. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I154 Branch 186 IFEQ L1565 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I279 Branch 200 IF_ICMPGE L1598 - false
   * Goal 8. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I286 Branch 201 IF_ICMPLT L1599 - false
   * Goal 9. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I291 Branch 202 IF_ICMPGT L1599 - false
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 171 IFEQ L1532 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 172 IF_ICMPNE L1542 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 173 IF_ICMPLE L1543 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 13. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I152 Branch 185 IF_ICMPGE L1565 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I154 Branch 186 IFEQ L1565 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 15. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 184 IF_ICMPLT L1565 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 16. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I279 Branch 200 IF_ICMPGE L1598 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 17. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I291 Branch 202 IF_ICMPGT L1599 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 18. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I286 Branch 201 IF_ICMPLT L1599 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 19. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1532
   * Goal 20. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1535
   * Goal 21. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1536
   * Goal 22. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1537
   * Goal 23. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1538
   * Goal 24. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1539
   * Goal 25. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1540
   * Goal 26. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1542
   * Goal 27. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1543
   * Goal 28. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1560
   * Goal 29. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1562
   * Goal 30. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1565
   * Goal 31. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1598
   * Goal 32. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1599
   * Goal 33. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1601
   * Goal 34. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 35. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 36. Weak Mutation 1171: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1532 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 1173: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1537 - ReplaceConstant - 0 -> 1
   * Goal 38. Weak Mutation 1174: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1538 - ReplaceConstant - 0 -> 1
   * Goal 39. Weak Mutation 1175: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1539 - ReplaceConstant - 0 -> 1
   * Goal 40. Weak Mutation 1176: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1540 - ReplaceConstant - 0 -> 1
   * Goal 41. Weak Mutation 1177: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 0 -> 1
   * Goal 42. Weak Mutation 1178: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 0
   * Goal 43. Weak Mutation 1179: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 1
   * Goal 44. Weak Mutation 1180: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> -1
   * Goal 45. Weak Mutation 1181: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 44
   * Goal 46. Weak Mutation 1182: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 46
   * Goal 47. Weak Mutation 1184: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceComparisonOperator != -> <
   * Goal 48. Weak Mutation 1187: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 0 -> 1
   * Goal 49. Weak Mutation 1196: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceConstant - 1 -> 0
   * Goal 50. Weak Mutation 1197: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> %
   * Goal 51. Weak Mutation 1198: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> -
   * Goal 52. Weak Mutation 1199: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> *
   * Goal 53. Weak Mutation 1200: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> /
   * Goal 54. Weak Mutation 1202: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceComparisonOperator <= -> <
   * Goal 55. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:true
   */

  @Test
  public void test075()  throws Throwable  {
      boolean boolean0 = NumberUtils.isNumber("7");
  }

  //Test case number: 76
  /*
   * 76 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 171 IFEQ L1532 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 172 IF_ICMPNE L1542 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 173 IF_ICMPLE L1543 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 184 IF_ICMPLT L1565 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I152 Branch 185 IF_ICMPGE L1565 - false
   * Goal 6. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I154 Branch 186 IFEQ L1565 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I279 Branch 200 IF_ICMPGE L1598 - false
   * Goal 8. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I286 Branch 201 IF_ICMPLT L1599 - false
   * Goal 9. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I291 Branch 202 IF_ICMPGT L1599 - true
   * Goal 10. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I302 Branch 203 IF_ICMPEQ L1603 - false
   * Goal 11. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I307 Branch 204 IF_ICMPNE L1603 - true
   * Goal 12. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I315 Branch 205 IFNE L1607 - false
   * Goal 13. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I320 Branch 206 IF_ICMPEQ L1607 - false
   * Goal 14. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I325 Branch 207 IF_ICMPEQ L1607 - false
   * Goal 15. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I330 Branch 208 IF_ICMPEQ L1607 - false
   * Goal 16. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I335 Branch 209 IF_ICMPNE L1607 - true
   * Goal 17. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I346 Branch 210 IF_ICMPEQ L1614 - true
   * Goal 18. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I355 Branch 212 IFEQ L1617 - true
   * Goal 19. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 171 IFEQ L1532 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 20. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 172 IF_ICMPNE L1542 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 21. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 173 IF_ICMPLE L1543 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 22. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I152 Branch 185 IF_ICMPGE L1565 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I154 Branch 186 IFEQ L1565 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 184 IF_ICMPLT L1565 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 25. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I279 Branch 200 IF_ICMPGE L1598 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 26. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I286 Branch 201 IF_ICMPLT L1599 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 27. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I291 Branch 202 IF_ICMPGT L1599 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 28. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I307 Branch 204 IF_ICMPNE L1603 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 29. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I302 Branch 203 IF_ICMPEQ L1603 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 30. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I335 Branch 209 IF_ICMPNE L1607 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 31. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I325 Branch 207 IF_ICMPEQ L1607 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 32. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I330 Branch 208 IF_ICMPEQ L1607 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 33. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I320 Branch 206 IF_ICMPEQ L1607 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 34. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I315 Branch 205 IFNE L1607 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 35. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I346 Branch 210 IF_ICMPEQ L1614 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 36. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I355 Branch 212 IFEQ L1617 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 37. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1532
   * Goal 38. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1535
   * Goal 39. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1536
   * Goal 40. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1537
   * Goal 41. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1538
   * Goal 42. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1539
   * Goal 43. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1540
   * Goal 44. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1542
   * Goal 45. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1543
   * Goal 46. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1560
   * Goal 47. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1562
   * Goal 48. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1565
   * Goal 49. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1598
   * Goal 50. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1599
   * Goal 51. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1603
   * Goal 52. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1607
   * Goal 53. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1614
   * Goal 54. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1617
   * Goal 55. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 56. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 57. Weak Mutation 1171: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1532 - ReplaceComparisonOperator == -> !=
   * Goal 58. Weak Mutation 1173: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1537 - ReplaceConstant - 0 -> 1
   * Goal 59. Weak Mutation 1174: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1538 - ReplaceConstant - 0 -> 1
   * Goal 60. Weak Mutation 1175: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1539 - ReplaceConstant - 0 -> 1
   * Goal 61. Weak Mutation 1176: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1540 - ReplaceConstant - 0 -> 1
   * Goal 62. Weak Mutation 1177: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 0 -> 1
   * Goal 63. Weak Mutation 1178: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 0
   * Goal 64. Weak Mutation 1179: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 1
   * Goal 65. Weak Mutation 1180: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> -1
   * Goal 66. Weak Mutation 1181: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 44
   * Goal 67. Weak Mutation 1182: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 46
   * Goal 68. Weak Mutation 1184: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceComparisonOperator != -> <
   * Goal 69. Weak Mutation 1187: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 0 -> 1
   * Goal 70. Weak Mutation 1196: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceConstant - 1 -> 0
   * Goal 71. Weak Mutation 1197: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> %
   * Goal 72. Weak Mutation 1198: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> -
   * Goal 73. Weak Mutation 1199: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> *
   * Goal 74. Weak Mutation 1200: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> /
   * Goal 75. Weak Mutation 1202: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceComparisonOperator <= -> <
   * Goal 76. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:false
   */

  @Test
  public void test076()  throws Throwable  {
      boolean boolean0 = NumberUtils.isNumber("l");
  }

  //Test case number: 77
  /*
   * 67 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 171 IFEQ L1532 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 172 IF_ICMPNE L1542 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 173 IF_ICMPLE L1543 - false
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 174 IF_ICMPNE L1544 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 184 IF_ICMPLT L1565 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I163 Branch 188 IF_ICMPLT L1566 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I184 Branch 190 IF_ICMPNE L1570 - false
   * Goal 8. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I188 Branch 191 IFNE L1571 - true
   * Goal 9. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I188 Branch 191 IFNE L1571 - false
   * Goal 10. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I190 Branch 192 IFEQ L1571 - true
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 171 IFEQ L1532 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 172 IF_ICMPNE L1542 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 13. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 173 IF_ICMPLE L1543 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 174 IF_ICMPNE L1544 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 15. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 184 IF_ICMPLT L1565 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 16. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I163 Branch 188 IF_ICMPLT L1566 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 17. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I184 Branch 190 IF_ICMPNE L1570 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 18. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I188 Branch 191 IFNE L1571 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 19. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I188 Branch 191 IFNE L1571 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 20. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I190 Branch 192 IFEQ L1571 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 21. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1532
   * Goal 22. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1535
   * Goal 23. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1536
   * Goal 24. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1537
   * Goal 25. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1538
   * Goal 26. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1539
   * Goal 27. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1540
   * Goal 28. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1542
   * Goal 29. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1543
   * Goal 30. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1544
   * Goal 31. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1560
   * Goal 32. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1562
   * Goal 33. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1565
   * Goal 34. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1566
   * Goal 35. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1570
   * Goal 36. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1571
   * Goal 37. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1573
   * Goal 38. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1575
   * Goal 39. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1596
   * Goal 40. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 41. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 42. Weak Mutation 1171: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1532 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 1173: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1537 - ReplaceConstant - 0 -> 1
   * Goal 44. Weak Mutation 1174: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1538 - ReplaceConstant - 0 -> 1
   * Goal 45. Weak Mutation 1175: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1539 - ReplaceConstant - 0 -> 1
   * Goal 46. Weak Mutation 1176: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1540 - ReplaceConstant - 0 -> 1
   * Goal 47. Weak Mutation 1177: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 0 -> 1
   * Goal 48. Weak Mutation 1178: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 0
   * Goal 49. Weak Mutation 1179: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 1
   * Goal 50. Weak Mutation 1180: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> -1
   * Goal 51. Weak Mutation 1181: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 44
   * Goal 52. Weak Mutation 1182: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 46
   * Goal 53. Weak Mutation 1184: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceComparisonOperator != -> <
   * Goal 54. Weak Mutation 1187: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 0 -> 1
   * Goal 55. Weak Mutation 1196: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceConstant - 1 -> 0
   * Goal 56. Weak Mutation 1197: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> %
   * Goal 57. Weak Mutation 1198: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> -
   * Goal 58. Weak Mutation 1199: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> *
   * Goal 59. Weak Mutation 1200: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> /
   * Goal 60. Weak Mutation 1201: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceComparisonOperator <= -> -1
   * Goal 61. Weak Mutation 1208: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 0
   * Goal 62. Weak Mutation 1209: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 1
   * Goal 63. Weak Mutation 1210: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> -1
   * Goal 64. Weak Mutation 1211: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 47
   * Goal 65. Weak Mutation 1212: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 49
   * Goal 66. Weak Mutation 1215: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceComparisonOperator != -> >
   * Goal 67. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:false
   */

  @Test
  public void test077()  throws Throwable  {
      boolean boolean0 = NumberUtils.isNumber("...");
  }

  //Test case number: 78
  /*
   * 75 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 171 IFEQ L1532 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 172 IF_ICMPNE L1542 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 173 IF_ICMPLE L1543 - false
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 174 IF_ICMPNE L1544 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 184 IF_ICMPLT L1565 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I163 Branch 188 IF_ICMPLT L1566 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I163 Branch 188 IF_ICMPLT L1566 - false
   * Goal 8. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I168 Branch 189 IF_ICMPGT L1566 - false
   * Goal 9. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I184 Branch 190 IF_ICMPNE L1570 - true
   * Goal 10. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I206 Branch 193 IF_ICMPEQ L1576 - false
   * Goal 11. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I211 Branch 194 IF_ICMPNE L1576 - true
   * Goal 12. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I243 Branch 197 IF_ICMPEQ L1587 - false
   * Goal 13. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I248 Branch 198 IF_ICMPNE L1587 - true
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 171 IFEQ L1532 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 15. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 172 IF_ICMPNE L1542 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 16. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 173 IF_ICMPLE L1543 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 17. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 174 IF_ICMPNE L1544 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 18. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 184 IF_ICMPLT L1565 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 19. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I163 Branch 188 IF_ICMPLT L1566 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 20. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I168 Branch 189 IF_ICMPGT L1566 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 21. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I163 Branch 188 IF_ICMPLT L1566 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 22. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I184 Branch 190 IF_ICMPNE L1570 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I211 Branch 194 IF_ICMPNE L1576 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I206 Branch 193 IF_ICMPEQ L1576 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 25. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I243 Branch 197 IF_ICMPEQ L1587 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 26. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I248 Branch 198 IF_ICMPNE L1587 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 27. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1532
   * Goal 28. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1535
   * Goal 29. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1536
   * Goal 30. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1537
   * Goal 31. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1538
   * Goal 32. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1539
   * Goal 33. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1540
   * Goal 34. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1542
   * Goal 35. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1543
   * Goal 36. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1544
   * Goal 37. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1560
   * Goal 38. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1562
   * Goal 39. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1565
   * Goal 40. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1566
   * Goal 41. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1567
   * Goal 42. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1568
   * Goal 43. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1570
   * Goal 44. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1576
   * Goal 45. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1587
   * Goal 46. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1594
   * Goal 47. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1596
   * Goal 48. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 49. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 50. Weak Mutation 1171: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1532 - ReplaceComparisonOperator == -> !=
   * Goal 51. Weak Mutation 1173: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1537 - ReplaceConstant - 0 -> 1
   * Goal 52. Weak Mutation 1174: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1538 - ReplaceConstant - 0 -> 1
   * Goal 53. Weak Mutation 1175: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1539 - ReplaceConstant - 0 -> 1
   * Goal 54. Weak Mutation 1176: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1540 - ReplaceConstant - 0 -> 1
   * Goal 55. Weak Mutation 1177: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 0 -> 1
   * Goal 56. Weak Mutation 1178: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 0
   * Goal 57. Weak Mutation 1179: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 1
   * Goal 58. Weak Mutation 1180: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> -1
   * Goal 59. Weak Mutation 1181: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 44
   * Goal 60. Weak Mutation 1182: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 46
   * Goal 61. Weak Mutation 1184: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceComparisonOperator != -> <
   * Goal 62. Weak Mutation 1187: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 0 -> 1
   * Goal 63. Weak Mutation 1196: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceConstant - 1 -> 0
   * Goal 64. Weak Mutation 1197: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> %
   * Goal 65. Weak Mutation 1198: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> -
   * Goal 66. Weak Mutation 1199: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> *
   * Goal 67. Weak Mutation 1200: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> /
   * Goal 68. Weak Mutation 1201: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceComparisonOperator <= -> -1
   * Goal 69. Weak Mutation 1208: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 0
   * Goal 70. Weak Mutation 1209: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 1
   * Goal 71. Weak Mutation 1210: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> -1
   * Goal 72. Weak Mutation 1211: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 47
   * Goal 73. Weak Mutation 1212: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 49
   * Goal 74. Weak Mutation 1214: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceComparisonOperator != -> <
   * Goal 75. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:false
   */

  @Test
  public void test078()  throws Throwable  {
      boolean boolean0 = NumberUtils.isNumber("3%om@lcT4t+9^5");
  }

  //Test case number: 79
  /*
   * 71 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 171 IFEQ L1532 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 172 IF_ICMPNE L1542 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 173 IF_ICMPLE L1543 - false
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 174 IF_ICMPNE L1544 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 184 IF_ICMPLT L1565 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I163 Branch 188 IF_ICMPLT L1566 - false
   * Goal 7. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I168 Branch 189 IF_ICMPGT L1566 - true
   * Goal 8. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I184 Branch 190 IF_ICMPNE L1570 - true
   * Goal 9. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I206 Branch 193 IF_ICMPEQ L1576 - false
   * Goal 10. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I211 Branch 194 IF_ICMPNE L1576 - false
   * Goal 11. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I215 Branch 195 IFEQ L1578 - true
   * Goal 12. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I223 Branch 196 IFNE L1582 - false
   * Goal 13. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 171 IFEQ L1532 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 172 IF_ICMPNE L1542 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 15. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 173 IF_ICMPLE L1543 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 16. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 174 IF_ICMPNE L1544 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 17. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 184 IF_ICMPLT L1565 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 18. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I168 Branch 189 IF_ICMPGT L1566 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 19. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I163 Branch 188 IF_ICMPLT L1566 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 20. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I184 Branch 190 IF_ICMPNE L1570 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 21. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I211 Branch 194 IF_ICMPNE L1576 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 22. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I206 Branch 193 IF_ICMPEQ L1576 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I215 Branch 195 IFEQ L1578 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I223 Branch 196 IFNE L1582 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 25. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1532
   * Goal 26. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1535
   * Goal 27. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1536
   * Goal 28. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1537
   * Goal 29. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1538
   * Goal 30. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1539
   * Goal 31. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1540
   * Goal 32. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1542
   * Goal 33. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1543
   * Goal 34. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1544
   * Goal 35. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1560
   * Goal 36. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1562
   * Goal 37. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1565
   * Goal 38. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1566
   * Goal 39. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1570
   * Goal 40. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1576
   * Goal 41. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1578
   * Goal 42. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1582
   * Goal 43. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1583
   * Goal 44. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 45. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 46. Weak Mutation 1171: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1532 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 1173: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1537 - ReplaceConstant - 0 -> 1
   * Goal 48. Weak Mutation 1174: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1538 - ReplaceConstant - 0 -> 1
   * Goal 49. Weak Mutation 1175: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1539 - ReplaceConstant - 0 -> 1
   * Goal 50. Weak Mutation 1176: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1540 - ReplaceConstant - 0 -> 1
   * Goal 51. Weak Mutation 1177: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 0 -> 1
   * Goal 52. Weak Mutation 1178: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 0
   * Goal 53. Weak Mutation 1179: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 1
   * Goal 54. Weak Mutation 1180: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> -1
   * Goal 55. Weak Mutation 1181: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 44
   * Goal 56. Weak Mutation 1182: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 46
   * Goal 57. Weak Mutation 1184: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceComparisonOperator != -> <
   * Goal 58. Weak Mutation 1187: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 0 -> 1
   * Goal 59. Weak Mutation 1196: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceConstant - 1 -> 0
   * Goal 60. Weak Mutation 1197: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> %
   * Goal 61. Weak Mutation 1198: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> -
   * Goal 62. Weak Mutation 1199: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> *
   * Goal 63. Weak Mutation 1200: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> /
   * Goal 64. Weak Mutation 1201: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceComparisonOperator <= -> -1
   * Goal 65. Weak Mutation 1208: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 0
   * Goal 66. Weak Mutation 1209: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 1
   * Goal 67. Weak Mutation 1210: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> -1
   * Goal 68. Weak Mutation 1211: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 47
   * Goal 69. Weak Mutation 1212: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 49
   * Goal 70. Weak Mutation 1214: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceComparisonOperator != -> <
   * Goal 71. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:false
   */

  @Test
  public void test079()  throws Throwable  {
      boolean boolean0 = NumberUtils.isNumber("EWIO8>+>Pop6\"._");
  }

  //Test case number: 80
  /*
   * 114 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 171 IFEQ L1532 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 172 IF_ICMPNE L1542 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 173 IF_ICMPLE L1543 - false
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 174 IF_ICMPNE L1544 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I68 Branch 175 IF_ICMPNE L1544 - false
   * Goal 6. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I79 Branch 176 IF_ICMPNE L1546 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I89 Branch 177 IF_ICMPGE L1550 - false
   * Goal 8. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I96 Branch 178 IF_ICMPLT L1551 - false
   * Goal 9. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I101 Branch 179 IF_ICMPLE L1551 - false
   * Goal 10. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I107 Branch 180 IF_ICMPLT L1551 - false
   * Goal 11. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I112 Branch 181 IF_ICMPLE L1551 - false
   * Goal 12. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I118 Branch 182 IF_ICMPLT L1551 - false
   * Goal 13. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I123 Branch 183 IF_ICMPLE L1551 - false
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 171 IFEQ L1532 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 15. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 172 IF_ICMPNE L1542 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 16. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 173 IF_ICMPLE L1543 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 17. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I68 Branch 175 IF_ICMPNE L1544 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 18. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 174 IF_ICMPNE L1544 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 19. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I79 Branch 176 IF_ICMPNE L1546 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 20. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I89 Branch 177 IF_ICMPGE L1550 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 21. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I112 Branch 181 IF_ICMPLE L1551 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 22. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I96 Branch 178 IF_ICMPLT L1551 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I118 Branch 182 IF_ICMPLT L1551 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I123 Branch 183 IF_ICMPLE L1551 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 25. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I107 Branch 180 IF_ICMPLT L1551 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 26. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I101 Branch 179 IF_ICMPLE L1551 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 27. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1532
   * Goal 28. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1535
   * Goal 29. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1536
   * Goal 30. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1537
   * Goal 31. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1538
   * Goal 32. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1539
   * Goal 33. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1540
   * Goal 34. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1542
   * Goal 35. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1543
   * Goal 36. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1544
   * Goal 37. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1545
   * Goal 38. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1546
   * Goal 39. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1550
   * Goal 40. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1551
   * Goal 41. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1554
   * Goal 42. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 43. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 44. Weak Mutation 1171: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1532 - ReplaceComparisonOperator == -> !=
   * Goal 45. Weak Mutation 1173: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1537 - ReplaceConstant - 0 -> 1
   * Goal 46. Weak Mutation 1174: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1538 - ReplaceConstant - 0 -> 1
   * Goal 47. Weak Mutation 1175: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1539 - ReplaceConstant - 0 -> 1
   * Goal 48. Weak Mutation 1176: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1540 - ReplaceConstant - 0 -> 1
   * Goal 49. Weak Mutation 1177: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 0 -> 1
   * Goal 50. Weak Mutation 1178: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 0
   * Goal 51. Weak Mutation 1179: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 1
   * Goal 52. Weak Mutation 1180: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> -1
   * Goal 53. Weak Mutation 1181: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 44
   * Goal 54. Weak Mutation 1182: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 46
   * Goal 55. Weak Mutation 1184: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceComparisonOperator != -> <
   * Goal 56. Weak Mutation 1187: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 0 -> 1
   * Goal 57. Weak Mutation 1196: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceConstant - 1 -> 0
   * Goal 58. Weak Mutation 1197: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> %
   * Goal 59. Weak Mutation 1198: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> -
   * Goal 60. Weak Mutation 1199: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> *
   * Goal 61. Weak Mutation 1200: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> /
   * Goal 62. Weak Mutation 1201: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceComparisonOperator <= -> -1
   * Goal 63. Weak Mutation 1208: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 0
   * Goal 64. Weak Mutation 1209: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 1
   * Goal 65. Weak Mutation 1210: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> -1
   * Goal 66. Weak Mutation 1211: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 47
   * Goal 67. Weak Mutation 1212: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 49
   * Goal 68. Weak Mutation 1213: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceComparisonOperator != -> -1
   * Goal 69. Weak Mutation 1220: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 1 -> 0
   * Goal 70. Weak Mutation 1221: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceArithmeticOperator + -> %
   * Goal 71. Weak Mutation 1222: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceArithmeticOperator + -> -
   * Goal 72. Weak Mutation 1223: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceArithmeticOperator + -> *
   * Goal 73. Weak Mutation 1224: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceArithmeticOperator + -> /
   * Goal 74. Weak Mutation 1225: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 120 -> 0
   * Goal 75. Weak Mutation 1226: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 120 -> 1
   * Goal 76. Weak Mutation 1227: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 120 -> -1
   * Goal 77. Weak Mutation 1228: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 120 -> 119
   * Goal 78. Weak Mutation 1229: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 120 -> 121
   * Goal 79. Weak Mutation 1230: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceComparisonOperator != -> -1
   * Goal 80. Weak Mutation 1237: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceConstant - 2 -> 0
   * Goal 81. Weak Mutation 1238: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceConstant - 2 -> 1
   * Goal 82. Weak Mutation 1239: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceConstant - 2 -> -1
   * Goal 83. Weak Mutation 1240: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceConstant - 2 -> 3
   * Goal 84. Weak Mutation 1241: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceArithmeticOperator + -> %
   * Goal 85. Weak Mutation 1242: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceArithmeticOperator + -> -
   * Goal 86. Weak Mutation 1243: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceArithmeticOperator + -> *
   * Goal 87. Weak Mutation 1244: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceArithmeticOperator + -> /
   * Goal 88. Weak Mutation 1257: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1546 - ReplaceComparisonOperator != -> >
   * Goal 89. Weak Mutation 1264: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1550 - ReplaceComparisonOperator >= -> -1
   * Goal 90. Weak Mutation 1272: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 48 -> 0
   * Goal 91. Weak Mutation 1273: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 48 -> 1
   * Goal 92. Weak Mutation 1274: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 48 -> -1
   * Goal 93. Weak Mutation 1275: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 48 -> 47
   * Goal 94. Weak Mutation 1276: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 48 -> 49
   * Goal 95. Weak Mutation 1277: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceComparisonOperator < -> !=
   * Goal 96. Weak Mutation 1285: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 57 -> 0
   * Goal 97. Weak Mutation 1286: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 57 -> 1
   * Goal 98. Weak Mutation 1287: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 57 -> -1
   * Goal 99. Weak Mutation 1288: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 57 -> 56
   * Goal 100. Weak Mutation 1289: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 57 -> 58
   * Goal 101. Weak Mutation 1290: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceComparisonOperator <= -> -1
   * Goal 102. Weak Mutation 1298: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 97 -> 0
   * Goal 103. Weak Mutation 1299: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 97 -> 1
   * Goal 104. Weak Mutation 1300: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 97 -> -1
   * Goal 105. Weak Mutation 1301: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 97 -> 96
   * Goal 106. Weak Mutation 1302: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 97 -> 98
   * Goal 107. Weak Mutation 1303: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceComparisonOperator < -> !=
   * Goal 108. Weak Mutation 1311: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 102 -> 0
   * Goal 109. Weak Mutation 1312: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 102 -> 1
   * Goal 110. Weak Mutation 1313: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 102 -> -1
   * Goal 111. Weak Mutation 1314: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 102 -> 101
   * Goal 112. Weak Mutation 1315: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 102 -> 103
   * Goal 113. Weak Mutation 1316: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceComparisonOperator <= -> -1
   * Goal 114. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:false
   */

  @Test
  public void test080()  throws Throwable  {
      boolean boolean0 = NumberUtils.isNumber("0xv\"");
  }

  //Test case number: 81
  /*
   * 74 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 171 IFEQ L1532 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 172 IF_ICMPNE L1542 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 173 IF_ICMPLE L1543 - false
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 174 IF_ICMPNE L1544 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I68 Branch 175 IF_ICMPNE L1544 - false
   * Goal 6. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I79 Branch 176 IF_ICMPNE L1546 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 171 IFEQ L1532 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 172 IF_ICMPNE L1542 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 173 IF_ICMPLE L1543 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I68 Branch 175 IF_ICMPNE L1544 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 174 IF_ICMPNE L1544 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I79 Branch 176 IF_ICMPNE L1546 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 13. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1532
   * Goal 14. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1535
   * Goal 15. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1536
   * Goal 16. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1537
   * Goal 17. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1538
   * Goal 18. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1539
   * Goal 19. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1540
   * Goal 20. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1542
   * Goal 21. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1543
   * Goal 22. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1544
   * Goal 23. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1545
   * Goal 24. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1546
   * Goal 25. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1547
   * Goal 26. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 27. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 28. Weak Mutation 1171: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1532 - ReplaceComparisonOperator == -> !=
   * Goal 29. Weak Mutation 1173: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1537 - ReplaceConstant - 0 -> 1
   * Goal 30. Weak Mutation 1174: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1538 - ReplaceConstant - 0 -> 1
   * Goal 31. Weak Mutation 1175: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1539 - ReplaceConstant - 0 -> 1
   * Goal 32. Weak Mutation 1176: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1540 - ReplaceConstant - 0 -> 1
   * Goal 33. Weak Mutation 1177: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 0 -> 1
   * Goal 34. Weak Mutation 1178: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 0
   * Goal 35. Weak Mutation 1179: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 1
   * Goal 36. Weak Mutation 1180: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> -1
   * Goal 37. Weak Mutation 1181: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 44
   * Goal 38. Weak Mutation 1182: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 46
   * Goal 39. Weak Mutation 1184: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceComparisonOperator != -> <
   * Goal 40. Weak Mutation 1187: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 0 -> 1
   * Goal 41. Weak Mutation 1196: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceConstant - 1 -> 0
   * Goal 42. Weak Mutation 1197: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> %
   * Goal 43. Weak Mutation 1198: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> -
   * Goal 44. Weak Mutation 1199: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> *
   * Goal 45. Weak Mutation 1200: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> /
   * Goal 46. Weak Mutation 1201: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceComparisonOperator <= -> -1
   * Goal 47. Weak Mutation 1208: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 0
   * Goal 48. Weak Mutation 1209: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 1
   * Goal 49. Weak Mutation 1210: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> -1
   * Goal 50. Weak Mutation 1211: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 47
   * Goal 51. Weak Mutation 1212: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 49
   * Goal 52. Weak Mutation 1213: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceComparisonOperator != -> -1
   * Goal 53. Weak Mutation 1220: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 1 -> 0
   * Goal 54. Weak Mutation 1221: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceArithmeticOperator + -> %
   * Goal 55. Weak Mutation 1222: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceArithmeticOperator + -> -
   * Goal 56. Weak Mutation 1223: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceArithmeticOperator + -> *
   * Goal 57. Weak Mutation 1224: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceArithmeticOperator + -> /
   * Goal 58. Weak Mutation 1225: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 120 -> 0
   * Goal 59. Weak Mutation 1226: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 120 -> 1
   * Goal 60. Weak Mutation 1227: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 120 -> -1
   * Goal 61. Weak Mutation 1228: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 120 -> 119
   * Goal 62. Weak Mutation 1229: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 120 -> 121
   * Goal 63. Weak Mutation 1230: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceComparisonOperator != -> -1
   * Goal 64. Weak Mutation 1237: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceConstant - 2 -> 0
   * Goal 65. Weak Mutation 1238: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceConstant - 2 -> 1
   * Goal 66. Weak Mutation 1239: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceConstant - 2 -> -1
   * Goal 67. Weak Mutation 1240: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceConstant - 2 -> 3
   * Goal 68. Weak Mutation 1241: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceArithmeticOperator + -> %
   * Goal 69. Weak Mutation 1242: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceArithmeticOperator + -> -
   * Goal 70. Weak Mutation 1243: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceArithmeticOperator + -> *
   * Goal 71. Weak Mutation 1244: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceArithmeticOperator + -> /
   * Goal 72. Weak Mutation 1255: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1546 - ReplaceComparisonOperator != -> -1
   * Goal 73. Weak Mutation 1258: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1547 - ReplaceConstant - 0 -> 1
   * Goal 74. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:false
   */

  @Test
  public void test081()  throws Throwable  {
      boolean boolean0 = NumberUtils.isNumber("0x");
  }

  //Test case number: 82
  /*
   * 71 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 171 IFEQ L1532 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 172 IF_ICMPNE L1542 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 173 IF_ICMPLE L1543 - false
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 174 IF_ICMPNE L1544 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 184 IF_ICMPLT L1565 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I163 Branch 188 IF_ICMPLT L1566 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I184 Branch 190 IF_ICMPNE L1570 - true
   * Goal 8. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I206 Branch 193 IF_ICMPEQ L1576 - false
   * Goal 9. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I211 Branch 194 IF_ICMPNE L1576 - true
   * Goal 10. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I243 Branch 197 IF_ICMPEQ L1587 - false
   * Goal 11. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I248 Branch 198 IF_ICMPNE L1587 - false
   * Goal 12. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I252 Branch 199 IFNE L1588 - false
   * Goal 13. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 171 IFEQ L1532 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 172 IF_ICMPNE L1542 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 15. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 173 IF_ICMPLE L1543 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 16. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 174 IF_ICMPNE L1544 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 17. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 184 IF_ICMPLT L1565 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 18. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I163 Branch 188 IF_ICMPLT L1566 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 19. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I184 Branch 190 IF_ICMPNE L1570 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 20. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I211 Branch 194 IF_ICMPNE L1576 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 21. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I206 Branch 193 IF_ICMPEQ L1576 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 22. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I243 Branch 197 IF_ICMPEQ L1587 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I248 Branch 198 IF_ICMPNE L1587 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I252 Branch 199 IFNE L1588 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 25. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1532
   * Goal 26. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1535
   * Goal 27. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1536
   * Goal 28. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1537
   * Goal 29. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1538
   * Goal 30. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1539
   * Goal 31. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1540
   * Goal 32. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1542
   * Goal 33. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1543
   * Goal 34. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1544
   * Goal 35. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1560
   * Goal 36. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1562
   * Goal 37. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1565
   * Goal 38. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1566
   * Goal 39. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1570
   * Goal 40. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1576
   * Goal 41. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1587
   * Goal 42. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1588
   * Goal 43. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1589
   * Goal 44. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 45. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 46. Weak Mutation 1171: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1532 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 1173: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1537 - ReplaceConstant - 0 -> 1
   * Goal 48. Weak Mutation 1174: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1538 - ReplaceConstant - 0 -> 1
   * Goal 49. Weak Mutation 1175: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1539 - ReplaceConstant - 0 -> 1
   * Goal 50. Weak Mutation 1176: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1540 - ReplaceConstant - 0 -> 1
   * Goal 51. Weak Mutation 1177: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 0 -> 1
   * Goal 52. Weak Mutation 1178: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 0
   * Goal 53. Weak Mutation 1179: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 1
   * Goal 54. Weak Mutation 1180: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> -1
   * Goal 55. Weak Mutation 1181: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 44
   * Goal 56. Weak Mutation 1182: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 46
   * Goal 57. Weak Mutation 1183: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceComparisonOperator != -> -1
   * Goal 58. Weak Mutation 1186: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 1 -> 0
   * Goal 59. Weak Mutation 1196: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceConstant - 1 -> 0
   * Goal 60. Weak Mutation 1197: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> %
   * Goal 61. Weak Mutation 1198: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> -
   * Goal 62. Weak Mutation 1199: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> *
   * Goal 63. Weak Mutation 1200: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> /
   * Goal 64. Weak Mutation 1201: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceComparisonOperator <= -> -1
   * Goal 65. Weak Mutation 1208: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 0
   * Goal 66. Weak Mutation 1209: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 1
   * Goal 67. Weak Mutation 1210: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> -1
   * Goal 68. Weak Mutation 1211: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 47
   * Goal 69. Weak Mutation 1212: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 49
   * Goal 70. Weak Mutation 1215: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceComparisonOperator != -> >
   * Goal 71. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:false
   */

  @Test
  public void test082()  throws Throwable  {
      boolean boolean0 = NumberUtils.isNumber("--0x is not a valid number.");
  }

  //Test case number: 83
  /*
   * 106 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 171 IFEQ L1532 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 172 IF_ICMPNE L1542 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 173 IF_ICMPLE L1543 - false
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 174 IF_ICMPNE L1544 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I68 Branch 175 IF_ICMPNE L1544 - false
   * Goal 6. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I79 Branch 176 IF_ICMPNE L1546 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I89 Branch 177 IF_ICMPGE L1550 - false
   * Goal 8. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I96 Branch 178 IF_ICMPLT L1551 - false
   * Goal 9. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I101 Branch 179 IF_ICMPLE L1551 - false
   * Goal 10. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I107 Branch 180 IF_ICMPLT L1551 - true
   * Goal 11. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I118 Branch 182 IF_ICMPLT L1551 - false
   * Goal 12. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I123 Branch 183 IF_ICMPLE L1551 - false
   * Goal 13. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 171 IFEQ L1532 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 172 IF_ICMPNE L1542 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 15. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 173 IF_ICMPLE L1543 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 16. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I68 Branch 175 IF_ICMPNE L1544 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 17. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 174 IF_ICMPNE L1544 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 18. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I79 Branch 176 IF_ICMPNE L1546 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 19. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I89 Branch 177 IF_ICMPGE L1550 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 20. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I107 Branch 180 IF_ICMPLT L1551 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 21. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I96 Branch 178 IF_ICMPLT L1551 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 22. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I118 Branch 182 IF_ICMPLT L1551 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I123 Branch 183 IF_ICMPLE L1551 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I101 Branch 179 IF_ICMPLE L1551 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 25. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1532
   * Goal 26. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1535
   * Goal 27. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1536
   * Goal 28. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1537
   * Goal 29. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1538
   * Goal 30. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1539
   * Goal 31. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1540
   * Goal 32. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1542
   * Goal 33. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1543
   * Goal 34. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1544
   * Goal 35. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1545
   * Goal 36. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1546
   * Goal 37. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1550
   * Goal 38. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1551
   * Goal 39. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1554
   * Goal 40. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 41. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 42. Weak Mutation 1171: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1532 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 1173: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1537 - ReplaceConstant - 0 -> 1
   * Goal 44. Weak Mutation 1174: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1538 - ReplaceConstant - 0 -> 1
   * Goal 45. Weak Mutation 1175: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1539 - ReplaceConstant - 0 -> 1
   * Goal 46. Weak Mutation 1176: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1540 - ReplaceConstant - 0 -> 1
   * Goal 47. Weak Mutation 1177: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 0 -> 1
   * Goal 48. Weak Mutation 1178: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 0
   * Goal 49. Weak Mutation 1179: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 1
   * Goal 50. Weak Mutation 1180: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> -1
   * Goal 51. Weak Mutation 1181: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 44
   * Goal 52. Weak Mutation 1182: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 46
   * Goal 53. Weak Mutation 1183: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceComparisonOperator != -> -1
   * Goal 54. Weak Mutation 1186: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 1 -> 0
   * Goal 55. Weak Mutation 1196: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceConstant - 1 -> 0
   * Goal 56. Weak Mutation 1197: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> %
   * Goal 57. Weak Mutation 1198: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> -
   * Goal 58. Weak Mutation 1199: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> *
   * Goal 59. Weak Mutation 1200: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> /
   * Goal 60. Weak Mutation 1201: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceComparisonOperator <= -> -1
   * Goal 61. Weak Mutation 1208: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 0
   * Goal 62. Weak Mutation 1209: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 1
   * Goal 63. Weak Mutation 1210: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> -1
   * Goal 64. Weak Mutation 1211: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 47
   * Goal 65. Weak Mutation 1212: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 48 -> 49
   * Goal 66. Weak Mutation 1213: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceComparisonOperator != -> -1
   * Goal 67. Weak Mutation 1220: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 1 -> 0
   * Goal 68. Weak Mutation 1221: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceArithmeticOperator + -> %
   * Goal 69. Weak Mutation 1222: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceArithmeticOperator + -> -
   * Goal 70. Weak Mutation 1223: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceArithmeticOperator + -> *
   * Goal 71. Weak Mutation 1224: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceArithmeticOperator + -> /
   * Goal 72. Weak Mutation 1225: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 120 -> 0
   * Goal 73. Weak Mutation 1226: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 120 -> 1
   * Goal 74. Weak Mutation 1227: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 120 -> -1
   * Goal 75. Weak Mutation 1228: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 120 -> 119
   * Goal 76. Weak Mutation 1229: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceConstant - 120 -> 121
   * Goal 77. Weak Mutation 1230: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1544 - ReplaceComparisonOperator != -> -1
   * Goal 78. Weak Mutation 1237: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceConstant - 2 -> 0
   * Goal 79. Weak Mutation 1238: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceConstant - 2 -> 1
   * Goal 80. Weak Mutation 1239: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceConstant - 2 -> -1
   * Goal 81. Weak Mutation 1240: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceConstant - 2 -> 3
   * Goal 82. Weak Mutation 1241: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceArithmeticOperator + -> %
   * Goal 83. Weak Mutation 1242: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceArithmeticOperator + -> -
   * Goal 84. Weak Mutation 1243: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceArithmeticOperator + -> *
   * Goal 85. Weak Mutation 1244: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1545 - ReplaceArithmeticOperator + -> /
   * Goal 86. Weak Mutation 1257: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1546 - ReplaceComparisonOperator != -> >
   * Goal 87. Weak Mutation 1264: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1550 - ReplaceComparisonOperator >= -> -1
   * Goal 88. Weak Mutation 1272: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 48 -> 0
   * Goal 89. Weak Mutation 1273: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 48 -> 1
   * Goal 90. Weak Mutation 1274: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 48 -> -1
   * Goal 91. Weak Mutation 1275: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 48 -> 47
   * Goal 92. Weak Mutation 1276: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 48 -> 49
   * Goal 93. Weak Mutation 1277: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceComparisonOperator < -> !=
   * Goal 94. Weak Mutation 1285: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 57 -> 0
   * Goal 95. Weak Mutation 1286: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 57 -> 1
   * Goal 96. Weak Mutation 1287: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 57 -> -1
   * Goal 97. Weak Mutation 1288: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 57 -> 56
   * Goal 98. Weak Mutation 1289: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 57 -> 58
   * Goal 99. Weak Mutation 1290: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceComparisonOperator <= -> -1
   * Goal 100. Weak Mutation 1298: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 97 -> 0
   * Goal 101. Weak Mutation 1299: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 97 -> 1
   * Goal 102. Weak Mutation 1300: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 97 -> -1
   * Goal 103. Weak Mutation 1301: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 97 -> 96
   * Goal 104. Weak Mutation 1302: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 97 -> 98
   * Goal 105. Weak Mutation 1304: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceComparisonOperator < -> -2
   * Goal 106. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:false
   */

  @Test
  public void test083()  throws Throwable  {
      boolean boolean0 = NumberUtils.isNumber("-0xThe");
  }

  //Test case number: 84
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 171 IFEQ L1532 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 171 IFEQ L1532 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1532
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1533
   * Goal 5. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 6. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 7. Weak Mutation 1171: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1532 - ReplaceComparisonOperator == -> !=
   * Goal 8. Weak Mutation 1172: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1533 - ReplaceConstant - 0 -> 1
   * Goal 9. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:false
   */

  @Test
  public void test084()  throws Throwable  {
      boolean boolean0 = NumberUtils.isNumber((String) null);
  }

  //Test case number: 85
  /*
   * 74 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 171 IFEQ L1532 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 172 IF_ICMPNE L1542 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 173 IF_ICMPLE L1543 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 184 IF_ICMPLT L1565 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I152 Branch 185 IF_ICMPGE L1565 - false
   * Goal 6. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I154 Branch 186 IFEQ L1565 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I279 Branch 200 IF_ICMPGE L1598 - false
   * Goal 8. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I286 Branch 201 IF_ICMPLT L1599 - true
   * Goal 9. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I302 Branch 203 IF_ICMPEQ L1603 - false
   * Goal 10. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I307 Branch 204 IF_ICMPNE L1603 - true
   * Goal 11. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I315 Branch 205 IFNE L1607 - false
   * Goal 12. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I320 Branch 206 IF_ICMPEQ L1607 - false
   * Goal 13. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I325 Branch 207 IF_ICMPEQ L1607 - false
   * Goal 14. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I330 Branch 208 IF_ICMPEQ L1607 - false
   * Goal 15. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I335 Branch 209 IF_ICMPNE L1607 - true
   * Goal 16. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I346 Branch 210 IF_ICMPEQ L1614 - false
   * Goal 17. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I351 Branch 211 IF_ICMPNE L1614 - true
   * Goal 18. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 171 IFEQ L1532 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 19. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 172 IF_ICMPNE L1542 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 20. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 173 IF_ICMPLE L1543 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 21. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I152 Branch 185 IF_ICMPGE L1565 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 22. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I154 Branch 186 IFEQ L1565 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 184 IF_ICMPLT L1565 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I279 Branch 200 IF_ICMPGE L1598 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 25. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I286 Branch 201 IF_ICMPLT L1599 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 26. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I307 Branch 204 IF_ICMPNE L1603 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 27. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I302 Branch 203 IF_ICMPEQ L1603 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 28. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I335 Branch 209 IF_ICMPNE L1607 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 29. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I325 Branch 207 IF_ICMPEQ L1607 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 30. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I330 Branch 208 IF_ICMPEQ L1607 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 31. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I320 Branch 206 IF_ICMPEQ L1607 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 32. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I315 Branch 205 IFNE L1607 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 33. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I351 Branch 211 IF_ICMPNE L1614 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 34. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I346 Branch 210 IF_ICMPEQ L1614 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 35. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1532
   * Goal 36. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1535
   * Goal 37. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1536
   * Goal 38. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1537
   * Goal 39. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1538
   * Goal 40. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1539
   * Goal 41. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1540
   * Goal 42. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1542
   * Goal 43. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1543
   * Goal 44. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1560
   * Goal 45. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1562
   * Goal 46. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1565
   * Goal 47. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1598
   * Goal 48. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1599
   * Goal 49. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1603
   * Goal 50. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1607
   * Goal 51. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1614
   * Goal 52. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1620
   * Goal 53. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 54. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 55. Weak Mutation 1171: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1532 - ReplaceComparisonOperator == -> !=
   * Goal 56. Weak Mutation 1173: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1537 - ReplaceConstant - 0 -> 1
   * Goal 57. Weak Mutation 1174: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1538 - ReplaceConstant - 0 -> 1
   * Goal 58. Weak Mutation 1175: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1539 - ReplaceConstant - 0 -> 1
   * Goal 59. Weak Mutation 1176: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1540 - ReplaceConstant - 0 -> 1
   * Goal 60. Weak Mutation 1177: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 0 -> 1
   * Goal 61. Weak Mutation 1178: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 0
   * Goal 62. Weak Mutation 1179: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 1
   * Goal 63. Weak Mutation 1180: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> -1
   * Goal 64. Weak Mutation 1181: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 44
   * Goal 65. Weak Mutation 1182: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 45 -> 46
   * Goal 66. Weak Mutation 1185: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceComparisonOperator != -> >
   * Goal 67. Weak Mutation 1187: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1542 - ReplaceConstant - 0 -> 1
   * Goal 68. Weak Mutation 1196: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceConstant - 1 -> 0
   * Goal 69. Weak Mutation 1197: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> %
   * Goal 70. Weak Mutation 1198: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> -
   * Goal 71. Weak Mutation 1199: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> *
   * Goal 72. Weak Mutation 1200: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceArithmeticOperator + -> /
   * Goal 73. Weak Mutation 1202: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1543 - ReplaceComparisonOperator <= -> <
   * Goal 74. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:false
   */

  @Test
  public void test085()  throws Throwable  {
      boolean boolean0 = NumberUtils.isNumber("*");
  }

  //Test case number: 86
  /*
   * 18 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I4 Branch 168 IFEQ L1507 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I17 Branch 169 IF_ICMPGE L1510 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I24 Branch 170 IFNE L1511 - false
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I4 Branch 168 IFEQ L1507 - true in context: org.apache.commons.lang.math.NumberUtils:isDigits(Ljava/lang/String;)Z
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I17 Branch 169 IF_ICMPGE L1510 - false in context: org.apache.commons.lang.math.NumberUtils:isDigits(Ljava/lang/String;)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I24 Branch 170 IFNE L1511 - false in context: org.apache.commons.lang.math.NumberUtils:isDigits(Ljava/lang/String;)Z
   * Goal 7. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 1507
   * Goal 8. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 1510
   * Goal 9. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 1511
   * Goal 10. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 1512
   * Goal 11. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z
   * Goal 12. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z
   * Goal 13. Weak Mutation 1156: org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:1507 - ReplaceComparisonOperator == -> !=
   * Goal 14. Weak Mutation 1158: org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:1510 - ReplaceConstant - 0 -> 1
   * Goal 15. Weak Mutation 1162: org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:1510 - ReplaceComparisonOperator >= -> -1
   * Goal 16. Weak Mutation 1168: org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:1511 - ReplaceComparisonOperator != -> ==
   * Goal 17. Weak Mutation 1169: org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:1512 - ReplaceConstant - 0 -> 1
   * Goal 18. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:false
   */

  @Test
  public void test086()  throws Throwable  {
      boolean boolean0 = NumberUtils.isDigits("A blank string is not a valid number");
  }

  //Test case number: 87
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I4 Branch 168 IFEQ L1507 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I4 Branch 168 IFEQ L1507 - false in context: org.apache.commons.lang.math.NumberUtils:isDigits(Ljava/lang/String;)Z
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 1507
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 1508
   * Goal 5. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z
   * Goal 6. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z
   * Goal 7. Weak Mutation 1156: org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:1507 - ReplaceComparisonOperator == -> !=
   * Goal 8. Weak Mutation 1157: org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:1508 - ReplaceConstant - 0 -> 1
   * Goal 9. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:false
   */

  @Test
  public void test087()  throws Throwable  {
      boolean boolean0 = NumberUtils.isDigits("");
  }

  //Test case number: 88
  /*
   * 21 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I4 Branch 168 IFEQ L1507 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I17 Branch 169 IF_ICMPGE L1510 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I17 Branch 169 IF_ICMPGE L1510 - false
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I24 Branch 170 IFNE L1511 - true
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I4 Branch 168 IFEQ L1507 - true in context: org.apache.commons.lang.math.NumberUtils:isDigits(Ljava/lang/String;)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I17 Branch 169 IF_ICMPGE L1510 - false in context: org.apache.commons.lang.math.NumberUtils:isDigits(Ljava/lang/String;)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I17 Branch 169 IF_ICMPGE L1510 - true in context: org.apache.commons.lang.math.NumberUtils:isDigits(Ljava/lang/String;)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I24 Branch 170 IFNE L1511 - true in context: org.apache.commons.lang.math.NumberUtils:isDigits(Ljava/lang/String;)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 1507
   * Goal 10. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 1510
   * Goal 11. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 1511
   * Goal 12. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 1515
   * Goal 13. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z
   * Goal 15. Weak Mutation 1156: org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:1507 - ReplaceComparisonOperator == -> !=
   * Goal 16. Weak Mutation 1158: org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:1510 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 1162: org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:1510 - ReplaceComparisonOperator >= -> -1
   * Goal 18. Weak Mutation 1163: org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:1510 - ReplaceComparisonOperator >= -> >
   * Goal 19. Weak Mutation 1168: org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:1511 - ReplaceComparisonOperator != -> ==
   * Goal 20. Weak Mutation 1170: org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:1515 - ReplaceConstant - 1 -> 0
   * Goal 21. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:true
   */

  @Test
  public void test088()  throws Throwable  {
      boolean boolean0 = NumberUtils.isDigits("0");
  }

  //Test case number: 89
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.compare(FF)I: I5 Branch 164 IFGE L1467 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.compare(FF)I: I15 Branch 165 IFLE L1470 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.compare(FF)I: I5 Branch 164 IFGE L1467 - true in context: org.apache.commons.lang.math.NumberUtils:compare(FF)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.compare(FF)I: I15 Branch 165 IFLE L1470 - false in context: org.apache.commons.lang.math.NumberUtils:compare(FF)I
   * Goal 5. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1467
   * Goal 6. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1470
   * Goal 7. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1471
   * Goal 8. org.apache.commons.lang.math.NumberUtils.compare(FF)I
   * Goal 9. org.apache.commons.lang.math.NumberUtils.compare(FF)I
   * Goal 10. Weak Mutation 1112: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1467 - ReplaceComparisonOperator >= -> ==
   * Goal 11. Weak Mutation 1121: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1470 - ReplaceComparisonOperator <= -> -1
   * Goal 12. Weak Mutation 1124: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1471 - ReplaceConstant - 1 -> 0
   * Goal 13. org.apache.commons.lang.math.NumberUtils.compare(FF)I:positive
   */

  @Test
  public void test089()  throws Throwable  {
      int int0 = NumberUtils.compare((float) (short)0, (float) (-1));
  }

  //Test case number: 90
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.compare(DD)I: I5 Branch 160 IFGE L1406 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.compare(DD)I: I5 Branch 160 IFGE L1406 - false in context: org.apache.commons.lang.math.NumberUtils:compare(DD)I
   * Goal 3. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1406
   * Goal 4. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1407
   * Goal 5. org.apache.commons.lang.math.NumberUtils.compare(DD)I
   * Goal 6. org.apache.commons.lang.math.NumberUtils.compare(DD)I
   * Goal 7. Weak Mutation 1070: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1406 - ReplaceComparisonOperator >= -> -1
   * Goal 8. Weak Mutation 1073: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1407 - ReplaceConstant - -1 -> 0
   * Goal 9. Weak Mutation 1074: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1407 - ReplaceConstant - -1 -> 1
   * Goal 10. Weak Mutation 1075: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1407 - ReplaceConstant - -1 -> -2
   * Goal 11. org.apache.commons.lang.math.NumberUtils.compare(DD)I:negative
   */

  @Test
  public void test090()  throws Throwable  {
      int int0 = NumberUtils.compare((double) (short)0, 380.0162);
  }

  //Test case number: 91
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(BBB)B: I4 Branch 158 IF_ICMPLE L1331 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(BBB)B: I13 Branch 159 IF_ICMPLE L1334 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(BBB)B: I4 Branch 158 IF_ICMPLE L1331 - true in context: org.apache.commons.lang.math.NumberUtils:max(BBB)B
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(BBB)B: I13 Branch 159 IF_ICMPLE L1334 - false in context: org.apache.commons.lang.math.NumberUtils:max(BBB)B
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1331
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1334
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1335
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1337
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(BBB)B
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max(BBB)B
   * Goal 11. Weak Mutation 1018: org.apache.commons.lang.math.NumberUtils.max(BBB)B:1331 - ReplaceComparisonOperator <= -> <
   * Goal 12. Weak Mutation 1035: org.apache.commons.lang.math.NumberUtils.max(BBB)B:1334 - ReplaceComparisonOperator <= -> -1
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max(BBB)B:zero
   */

  @Test
  public void test091()  throws Throwable  {
      byte byte0 = NumberUtils.max((byte) (-64), (byte) (-64), (byte)0);
  }

  //Test case number: 92
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(BBB)B: I4 Branch 158 IF_ICMPLE L1331 - false
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(BBB)B: I13 Branch 159 IF_ICMPLE L1334 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(BBB)B: I4 Branch 158 IF_ICMPLE L1331 - false in context: org.apache.commons.lang.math.NumberUtils:max(BBB)B
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(BBB)B: I13 Branch 159 IF_ICMPLE L1334 - true in context: org.apache.commons.lang.math.NumberUtils:max(BBB)B
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1331
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1332
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1334
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1337
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(BBB)B
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max(BBB)B
   * Goal 11. Weak Mutation 1017: org.apache.commons.lang.math.NumberUtils.max(BBB)B:1331 - ReplaceComparisonOperator <= -> -1
   * Goal 12. Weak Mutation 1037: org.apache.commons.lang.math.NumberUtils.max(BBB)B:1334 - ReplaceComparisonOperator <= -> ==
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max(BBB)B:zero
   */

  @Test
  public void test092()  throws Throwable  {
      byte byte0 = NumberUtils.max((byte) (-26), (byte)0, (byte) (-26));
  }

  //Test case number: 93
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(BBB)B: I4 Branch 158 IF_ICMPLE L1331 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(BBB)B: I13 Branch 159 IF_ICMPLE L1334 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(BBB)B: I4 Branch 158 IF_ICMPLE L1331 - true in context: org.apache.commons.lang.math.NumberUtils:max(BBB)B
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(BBB)B: I13 Branch 159 IF_ICMPLE L1334 - true in context: org.apache.commons.lang.math.NumberUtils:max(BBB)B
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1331
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1334
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1337
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(BBB)B
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(BBB)B
   * Goal 10. Weak Mutation 1019: org.apache.commons.lang.math.NumberUtils.max(BBB)B:1331 - ReplaceComparisonOperator <= -> ==
   * Goal 11. Weak Mutation 1037: org.apache.commons.lang.math.NumberUtils.max(BBB)B:1334 - ReplaceComparisonOperator <= -> ==
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max(BBB)B:positive
   */

  @Test
  public void test093()  throws Throwable  {
      byte byte0 = NumberUtils.max((byte)1, (byte) (-82), (byte)0);
  }

  //Test case number: 94
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(SSS)S: I4 Branch 156 IF_ICMPLE L1313 - false
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(SSS)S: I13 Branch 157 IF_ICMPLE L1316 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(SSS)S: I4 Branch 156 IF_ICMPLE L1313 - false in context: org.apache.commons.lang.math.NumberUtils:max(SSS)S
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(SSS)S: I13 Branch 157 IF_ICMPLE L1316 - true in context: org.apache.commons.lang.math.NumberUtils:max(SSS)S
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1313
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1314
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1316
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1319
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(SSS)S
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max(SSS)S
   * Goal 11. Weak Mutation 976: org.apache.commons.lang.math.NumberUtils.max(SSS)S:1313 - ReplaceComparisonOperator <= -> -1
   * Goal 12. Weak Mutation 996: org.apache.commons.lang.math.NumberUtils.max(SSS)S:1316 - ReplaceComparisonOperator <= -> ==
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max(SSS)S:zero
   */

  @Test
  public void test094()  throws Throwable  {
      short short0 = NumberUtils.max((short) (byte) (-63), (short)0, (short) (byte) (-1));
  }

  //Test case number: 95
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(SSS)S: I4 Branch 156 IF_ICMPLE L1313 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(SSS)S: I13 Branch 157 IF_ICMPLE L1316 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(SSS)S: I4 Branch 156 IF_ICMPLE L1313 - true in context: org.apache.commons.lang.math.NumberUtils:max(SSS)S
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(SSS)S: I13 Branch 157 IF_ICMPLE L1316 - false in context: org.apache.commons.lang.math.NumberUtils:max(SSS)S
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1313
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1316
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1317
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1319
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(SSS)S
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max(SSS)S
   * Goal 11. Weak Mutation 977: org.apache.commons.lang.math.NumberUtils.max(SSS)S:1313 - ReplaceComparisonOperator <= -> <
   * Goal 12. Weak Mutation 994: org.apache.commons.lang.math.NumberUtils.max(SSS)S:1316 - ReplaceComparisonOperator <= -> -1
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max(SSS)S:positive
   */

  @Test
  public void test095()  throws Throwable  {
      short short0 = NumberUtils.max((short)0, (short)0, (short)1319);
  }

  //Test case number: 96
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(III)I: I4 Branch 154 IF_ICMPLE L1295 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(III)I: I13 Branch 155 IF_ICMPLE L1298 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(III)I: I4 Branch 154 IF_ICMPLE L1295 - true in context: org.apache.commons.lang.math.NumberUtils:max(III)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(III)I: I13 Branch 155 IF_ICMPLE L1298 - false in context: org.apache.commons.lang.math.NumberUtils:max(III)I
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1295
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1298
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1299
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1301
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(III)I
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max(III)I
   * Goal 11. Weak Mutation 936: org.apache.commons.lang.math.NumberUtils.max(III)I:1295 - ReplaceComparisonOperator <= -> <
   * Goal 12. Weak Mutation 953: org.apache.commons.lang.math.NumberUtils.max(III)I:1298 - ReplaceComparisonOperator <= -> -1
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max(III)I:zero
   */

  @Test
  public void test096()  throws Throwable  {
      int int0 = NumberUtils.max((-2122), (-2122), 0);
  }

  //Test case number: 97
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(III)I: I4 Branch 154 IF_ICMPLE L1295 - false
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(III)I: I13 Branch 155 IF_ICMPLE L1298 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(III)I: I4 Branch 154 IF_ICMPLE L1295 - false in context: org.apache.commons.lang.math.NumberUtils:max(III)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(III)I: I13 Branch 155 IF_ICMPLE L1298 - true in context: org.apache.commons.lang.math.NumberUtils:max(III)I
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1295
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1296
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1298
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1301
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(III)I
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max(III)I
   * Goal 11. Weak Mutation 935: org.apache.commons.lang.math.NumberUtils.max(III)I:1295 - ReplaceComparisonOperator <= -> -1
   * Goal 12. Weak Mutation 954: org.apache.commons.lang.math.NumberUtils.max(III)I:1298 - ReplaceComparisonOperator <= -> <
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max(III)I:zero
   */

  @Test
  public void test097()  throws Throwable  {
      int int0 = NumberUtils.max((-624), 0, 0);
  }

  //Test case number: 98
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I5 Branch 152 IFLE L1277 - false
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I15 Branch 153 IFLE L1280 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I5 Branch 152 IFLE L1277 - false in context: org.apache.commons.lang.math.NumberUtils:max(JJJ)J
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I15 Branch 153 IFLE L1280 - true in context: org.apache.commons.lang.math.NumberUtils:max(JJJ)J
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1277
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1278
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1280
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1283
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(JJJ)J
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max(JJJ)J
   * Goal 11. Weak Mutation 904: org.apache.commons.lang.math.NumberUtils.max(JJJ)J:1277 - ReplaceComparisonOperator <= -> -1
   * Goal 12. Weak Mutation 917: org.apache.commons.lang.math.NumberUtils.max(JJJ)J:1280 - ReplaceComparisonOperator <= -> ==
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max(JJJ)J:negative
   */

  @Test
  public void test098()  throws Throwable  {
      long long0 = NumberUtils.max((-21L), (-1L), (-1458L));
  }

  //Test case number: 99
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I5 Branch 152 IFLE L1277 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I15 Branch 153 IFLE L1280 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I5 Branch 152 IFLE L1277 - true in context: org.apache.commons.lang.math.NumberUtils:max(JJJ)J
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I15 Branch 153 IFLE L1280 - false in context: org.apache.commons.lang.math.NumberUtils:max(JJJ)J
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1277
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1280
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1281
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1283
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(JJJ)J
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max(JJJ)J
   * Goal 11. Weak Mutation 906: org.apache.commons.lang.math.NumberUtils.max(JJJ)J:1277 - ReplaceComparisonOperator <= -> <
   * Goal 12. Weak Mutation 916: org.apache.commons.lang.math.NumberUtils.max(JJJ)J:1280 - ReplaceComparisonOperator <= -> -1
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max(JJJ)J:positive
   */

  @Test
  public void test099()  throws Throwable  {
      long long0 = NumberUtils.max((-72L), (-72L), (long) 436);
  }

  //Test case number: 100
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(BBB)B: I4 Branch 150 IF_ICMPGE L1227 - false
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(BBB)B: I13 Branch 151 IF_ICMPGE L1230 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(BBB)B: I4 Branch 150 IF_ICMPGE L1227 - false in context: org.apache.commons.lang.math.NumberUtils:min(BBB)B
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(BBB)B: I13 Branch 151 IF_ICMPGE L1230 - false in context: org.apache.commons.lang.math.NumberUtils:min(BBB)B
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1227
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1228
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1230
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1231
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1233
   * Goal 10. org.apache.commons.lang.math.NumberUtils.min(BBB)B
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min(BBB)B
   * Goal 12. Weak Mutation 849: org.apache.commons.lang.math.NumberUtils.min(BBB)B:1227 - ReplaceComparisonOperator >= -> -1
   * Goal 13. Weak Mutation 867: org.apache.commons.lang.math.NumberUtils.min(BBB)B:1230 - ReplaceComparisonOperator >= -> -1
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min(BBB)B:negative
   */

  @Test
  public void test100()  throws Throwable  {
      byte byte0 = NumberUtils.min((byte)100, (byte)28, (byte) (-26));
  }

  //Test case number: 101
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(BBB)B: I4 Branch 150 IF_ICMPGE L1227 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(BBB)B: I13 Branch 151 IF_ICMPGE L1230 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(BBB)B: I4 Branch 150 IF_ICMPGE L1227 - true in context: org.apache.commons.lang.math.NumberUtils:min(BBB)B
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(BBB)B: I13 Branch 151 IF_ICMPGE L1230 - true in context: org.apache.commons.lang.math.NumberUtils:min(BBB)B
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1227
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1230
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1233
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(BBB)B
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(BBB)B
   * Goal 10. Weak Mutation 850: org.apache.commons.lang.math.NumberUtils.min(BBB)B:1227 - ReplaceComparisonOperator >= -> >
   * Goal 11. Weak Mutation 869: org.apache.commons.lang.math.NumberUtils.min(BBB)B:1230 - ReplaceComparisonOperator >= -> ==
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min(BBB)B:negative
   */

  @Test
  public void test101()  throws Throwable  {
      byte byte0 = NumberUtils.min((byte) (-104), (byte) (-104), (byte)0);
  }

  //Test case number: 102
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(SSS)S: I4 Branch 148 IF_ICMPGE L1209 - false
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(SSS)S: I13 Branch 149 IF_ICMPGE L1212 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(SSS)S: I4 Branch 148 IF_ICMPGE L1209 - false in context: org.apache.commons.lang.math.NumberUtils:min(SSS)S
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(SSS)S: I13 Branch 149 IF_ICMPGE L1212 - true in context: org.apache.commons.lang.math.NumberUtils:min(SSS)S
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1209
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1210
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1212
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1215
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(SSS)S
   * Goal 10. org.apache.commons.lang.math.NumberUtils.min(SSS)S
   * Goal 11. Weak Mutation 808: org.apache.commons.lang.math.NumberUtils.min(SSS)S:1209 - ReplaceComparisonOperator >= -> -1
   * Goal 12. Weak Mutation 828: org.apache.commons.lang.math.NumberUtils.min(SSS)S:1212 - ReplaceComparisonOperator >= -> ==
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min(SSS)S:zero
   */

  @Test
  public void test102()  throws Throwable  {
      short short0 = NumberUtils.min((short)2974, (short)0, (short)398);
  }

  //Test case number: 103
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(SSS)S: I4 Branch 148 IF_ICMPGE L1209 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(SSS)S: I13 Branch 149 IF_ICMPGE L1212 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(SSS)S: I4 Branch 148 IF_ICMPGE L1209 - true in context: org.apache.commons.lang.math.NumberUtils:min(SSS)S
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(SSS)S: I13 Branch 149 IF_ICMPGE L1212 - false in context: org.apache.commons.lang.math.NumberUtils:min(SSS)S
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1209
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1212
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1213
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1215
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(SSS)S
   * Goal 10. org.apache.commons.lang.math.NumberUtils.min(SSS)S
   * Goal 11. Weak Mutation 809: org.apache.commons.lang.math.NumberUtils.min(SSS)S:1209 - ReplaceComparisonOperator >= -> >
   * Goal 12. Weak Mutation 826: org.apache.commons.lang.math.NumberUtils.min(SSS)S:1212 - ReplaceComparisonOperator >= -> -1
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min(SSS)S:positive
   */

  @Test
  public void test103()  throws Throwable  {
      short short0 = NumberUtils.min((short)2974, (short)2974, (short)398);
  }

  //Test case number: 104
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(III)I: I4 Branch 146 IF_ICMPGE L1191 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(III)I: I13 Branch 147 IF_ICMPGE L1194 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(III)I: I4 Branch 146 IF_ICMPGE L1191 - true in context: org.apache.commons.lang.math.NumberUtils:min(III)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(III)I: I13 Branch 147 IF_ICMPGE L1194 - false in context: org.apache.commons.lang.math.NumberUtils:min(III)I
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1191
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1194
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1195
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1197
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(III)I
   * Goal 10. org.apache.commons.lang.math.NumberUtils.min(III)I
   * Goal 11. Weak Mutation 769: org.apache.commons.lang.math.NumberUtils.min(III)I:1191 - ReplaceComparisonOperator >= -> ==
   * Goal 12. Weak Mutation 785: org.apache.commons.lang.math.NumberUtils.min(III)I:1194 - ReplaceComparisonOperator >= -> -1
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min(III)I:negative
   */

  @Test
  public void test104()  throws Throwable  {
      int int0 = NumberUtils.min((int) (short)1319, 2058, (-2717));
  }

  //Test case number: 105
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(III)I: I4 Branch 146 IF_ICMPGE L1191 - false
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(III)I: I13 Branch 147 IF_ICMPGE L1194 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(III)I: I4 Branch 146 IF_ICMPGE L1191 - false in context: org.apache.commons.lang.math.NumberUtils:min(III)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(III)I: I13 Branch 147 IF_ICMPGE L1194 - true in context: org.apache.commons.lang.math.NumberUtils:min(III)I
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1191
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1192
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1194
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1197
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(III)I
   * Goal 10. org.apache.commons.lang.math.NumberUtils.min(III)I
   * Goal 11. Weak Mutation 767: org.apache.commons.lang.math.NumberUtils.min(III)I:1191 - ReplaceComparisonOperator >= -> -1
   * Goal 12. Weak Mutation 786: org.apache.commons.lang.math.NumberUtils.min(III)I:1194 - ReplaceComparisonOperator >= -> >
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min(III)I:zero
   */

  @Test
  public void test105()  throws Throwable  {
      int int0 = NumberUtils.min(68, (int) (short)0, 0);
  }

  //Test case number: 106
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(III)I: I4 Branch 146 IF_ICMPGE L1191 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(III)I: I13 Branch 147 IF_ICMPGE L1194 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(III)I: I4 Branch 146 IF_ICMPGE L1191 - true in context: org.apache.commons.lang.math.NumberUtils:min(III)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(III)I: I13 Branch 147 IF_ICMPGE L1194 - true in context: org.apache.commons.lang.math.NumberUtils:min(III)I
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1191
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1194
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1197
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(III)I
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(III)I
   * Goal 10. Weak Mutation 768: org.apache.commons.lang.math.NumberUtils.min(III)I:1191 - ReplaceComparisonOperator >= -> >
   * Goal 11. Weak Mutation 786: org.apache.commons.lang.math.NumberUtils.min(III)I:1194 - ReplaceComparisonOperator >= -> >
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min(III)I:positive
   */

  @Test
  public void test106()  throws Throwable  {
      int int0 = NumberUtils.min(3902, 3902, 3902);
  }

  //Test case number: 107
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I5 Branch 144 IFGE L1173 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I15 Branch 145 IFGE L1176 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I5 Branch 144 IFGE L1173 - true in context: org.apache.commons.lang.math.NumberUtils:min(JJJ)J
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I15 Branch 145 IFGE L1176 - false in context: org.apache.commons.lang.math.NumberUtils:min(JJJ)J
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1173
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1176
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1177
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1179
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(JJJ)J
   * Goal 10. org.apache.commons.lang.math.NumberUtils.min(JJJ)J
   * Goal 11. Weak Mutation 738: org.apache.commons.lang.math.NumberUtils.min(JJJ)J:1173 - ReplaceComparisonOperator >= -> >
   * Goal 12. Weak Mutation 748: org.apache.commons.lang.math.NumberUtils.min(JJJ)J:1176 - ReplaceComparisonOperator >= -> -1
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min(JJJ)J:negative
   */

  @Test
  public void test107()  throws Throwable  {
      long long0 = NumberUtils.min(0L, 0L, (-637L));
  }

  //Test case number: 108
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I5 Branch 144 IFGE L1173 - false
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I15 Branch 145 IFGE L1176 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I5 Branch 144 IFGE L1173 - false in context: org.apache.commons.lang.math.NumberUtils:min(JJJ)J
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I15 Branch 145 IFGE L1176 - true in context: org.apache.commons.lang.math.NumberUtils:min(JJJ)J
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1173
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1174
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1176
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1179
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(JJJ)J
   * Goal 10. org.apache.commons.lang.math.NumberUtils.min(JJJ)J
   * Goal 11. Weak Mutation 736: org.apache.commons.lang.math.NumberUtils.min(JJJ)J:1173 - ReplaceComparisonOperator >= -> -1
   * Goal 12. Weak Mutation 749: org.apache.commons.lang.math.NumberUtils.min(JJJ)J:1176 - ReplaceComparisonOperator >= -> ==
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min(JJJ)J:zero
   */

  @Test
  public void test108()  throws Throwable  {
      long long0 = NumberUtils.min((long) (short)1189, 0L, 1110L);
  }

  //Test case number: 109
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I5 Branch 144 IFGE L1173 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I15 Branch 145 IFGE L1176 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I5 Branch 144 IFGE L1173 - true in context: org.apache.commons.lang.math.NumberUtils:min(JJJ)J
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I15 Branch 145 IFGE L1176 - true in context: org.apache.commons.lang.math.NumberUtils:min(JJJ)J
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1173
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1176
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1179
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(JJJ)J
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(JJJ)J
   * Goal 10. Weak Mutation 738: org.apache.commons.lang.math.NumberUtils.min(JJJ)J:1173 - ReplaceComparisonOperator >= -> >
   * Goal 11. Weak Mutation 750: org.apache.commons.lang.math.NumberUtils.min(JJJ)J:1176 - ReplaceComparisonOperator >= -> >
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min(JJJ)J:positive
   */

  @Test
  public void test109()  throws Throwable  {
      long long0 = NumberUtils.min(1L, 1L, 1L);
  }

  //Test case number: 110
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([F)F: I3 Branch 140 IFNONNULL L1145 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([F)F: I28 Branch 141 IFNE L1147 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([F)F: I63 Branch 142 IF_ICMPGE L1153 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([F)F: I63 Branch 142 IF_ICMPGE L1153 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([F)F: I71 Branch 143 IFLE L1154 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([F)F: I71 Branch 143 IFLE L1154 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I3 Branch 140 IFNONNULL L1145 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I28 Branch 141 IFNE L1147 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I63 Branch 142 IF_ICMPGE L1153 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I63 Branch 142 IF_ICMPGE L1153 - false in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I71 Branch 143 IFLE L1154 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I71 Branch 143 IFLE L1154 - false in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1145
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1147
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1152
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1153
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1154
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1155
   * Goal 19. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1159
   * Goal 20. org.apache.commons.lang.math.NumberUtils.max([F)F
   * Goal 21. org.apache.commons.lang.math.NumberUtils.max([F)F
   * Goal 22. Weak Mutation 703: org.apache.commons.lang.math.NumberUtils.max([F)F:1145 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 707: org.apache.commons.lang.math.NumberUtils.max([F)F:1147 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 711: org.apache.commons.lang.math.NumberUtils.max([F)F:1152 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 712: org.apache.commons.lang.math.NumberUtils.max([F)F:1153 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 716: org.apache.commons.lang.math.NumberUtils.max([F)F:1153 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 717: org.apache.commons.lang.math.NumberUtils.max([F)F:1153 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 723: org.apache.commons.lang.math.NumberUtils.max([F)F:1154 - ReplaceComparisonOperator <= -> -1
   * Goal 29. Weak Mutation 725: org.apache.commons.lang.math.NumberUtils.max([F)F:1154 - ReplaceComparisonOperator <= -> <
   * Goal 30. org.apache.commons.lang.math.NumberUtils.max([F)F:zero
   */

  @Test
  public void test110()  throws Throwable  {
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) (-3617L);
      float float0 = NumberUtils.max(floatArray0);
  }

  //Test case number: 111
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([F)F: I3 Branch 140 IFNONNULL L1145 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([F)F: I28 Branch 141 IFNE L1147 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I3 Branch 140 IFNONNULL L1145 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I28 Branch 141 IFNE L1147 - false in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 5. max([F)F_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1145
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1147
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1148
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max([F)F
   * Goal 10. Weak Mutation 703: org.apache.commons.lang.math.NumberUtils.max([F)F:1145 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 706: org.apache.commons.lang.math.NumberUtils.max([F)F:1147 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 709: org.apache.commons.lang.math.NumberUtils.max([F)F:1148 - ReplaceConstant - Array cannot be empty. -> 
   * Goal 13. Weak Mutation 710: org.apache.commons.lang.math.NumberUtils.max([F)F:1148 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test111()  throws Throwable  {
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(floatArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 112
  /*
   * 31 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([D)D: I3 Branch 136 IFNONNULL L1118 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([D)D: I28 Branch 137 IFNE L1120 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([D)D: I63 Branch 138 IF_ICMPGE L1126 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([D)D: I63 Branch 138 IF_ICMPGE L1126 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([D)D: I71 Branch 139 IFLE L1127 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([D)D: I71 Branch 139 IFLE L1127 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I3 Branch 136 IFNONNULL L1118 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I28 Branch 137 IFNE L1120 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I63 Branch 138 IF_ICMPGE L1126 - false in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I63 Branch 138 IF_ICMPGE L1126 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I71 Branch 139 IFLE L1127 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I71 Branch 139 IFLE L1127 - false in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1118
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1120
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1125
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1126
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1127
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1128
   * Goal 19. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1132
   * Goal 20. org.apache.commons.lang.math.NumberUtils.max([D)D
   * Goal 21. org.apache.commons.lang.math.NumberUtils.max([D)D
   * Goal 22. Weak Mutation 676: org.apache.commons.lang.math.NumberUtils.max([D)D:1118 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 680: org.apache.commons.lang.math.NumberUtils.max([D)D:1120 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 684: org.apache.commons.lang.math.NumberUtils.max([D)D:1125 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 685: org.apache.commons.lang.math.NumberUtils.max([D)D:1126 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 689: org.apache.commons.lang.math.NumberUtils.max([D)D:1126 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 690: org.apache.commons.lang.math.NumberUtils.max([D)D:1126 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 696: org.apache.commons.lang.math.NumberUtils.max([D)D:1127 - ReplaceComparisonOperator <= -> -1
   * Goal 29. Weak Mutation 697: org.apache.commons.lang.math.NumberUtils.max([D)D:1127 - ReplaceComparisonOperator <= -> ==
   * Goal 30. Weak Mutation 698: org.apache.commons.lang.math.NumberUtils.max([D)D:1127 - ReplaceComparisonOperator <= -> <
   * Goal 31. org.apache.commons.lang.math.NumberUtils.max([D)D:positive
   */

  @Test
  public void test112()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[2] = 1.0;
      double double0 = NumberUtils.max(doubleArray0);
  }

  //Test case number: 113
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([D)D: I3 Branch 136 IFNONNULL L1118 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([D)D: I28 Branch 137 IFNE L1120 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([D)D: I63 Branch 138 IF_ICMPGE L1126 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([D)D: I63 Branch 138 IF_ICMPGE L1126 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([D)D: I71 Branch 139 IFLE L1127 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I3 Branch 136 IFNONNULL L1118 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I28 Branch 137 IFNE L1120 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I63 Branch 138 IF_ICMPGE L1126 - false in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I63 Branch 138 IF_ICMPGE L1126 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I71 Branch 139 IFLE L1127 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1118
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1120
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1125
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1126
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1127
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1132
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([D)D
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([D)D
   * Goal 19. Weak Mutation 676: org.apache.commons.lang.math.NumberUtils.max([D)D:1118 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 680: org.apache.commons.lang.math.NumberUtils.max([D)D:1120 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 684: org.apache.commons.lang.math.NumberUtils.max([D)D:1125 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 685: org.apache.commons.lang.math.NumberUtils.max([D)D:1126 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 689: org.apache.commons.lang.math.NumberUtils.max([D)D:1126 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 690: org.apache.commons.lang.math.NumberUtils.max([D)D:1126 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 698: org.apache.commons.lang.math.NumberUtils.max([D)D:1127 - ReplaceComparisonOperator <= -> <
   * Goal 26. org.apache.commons.lang.math.NumberUtils.max([D)D:zero
   */

  @Test
  public void test113()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      double double0 = NumberUtils.max(doubleArray0);
  }

  //Test case number: 114
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([D)D: I3 Branch 136 IFNONNULL L1118 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I3 Branch 136 IFNONNULL L1118 - false in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 3. max([D)D_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1118
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1119
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([D)D
   * Goal 7. Weak Mutation 676: org.apache.commons.lang.math.NumberUtils.max([D)D:1118 - ReplaceComparisonOperator != null -> = null
   * Goal 8. Weak Mutation 677: org.apache.commons.lang.math.NumberUtils.max([D)D:1119 - ReplaceConstant - The Array must not be null -> 
   * Goal 9. Weak Mutation 678: org.apache.commons.lang.math.NumberUtils.max([D)D:1119 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test114()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.max((double[]) null);
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 115
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([D)D: I3 Branch 136 IFNONNULL L1118 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([D)D: I28 Branch 137 IFNE L1120 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I3 Branch 136 IFNONNULL L1118 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I28 Branch 137 IFNE L1120 - false in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 5. max([D)D_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1118
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1120
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1121
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max([D)D
   * Goal 10. Weak Mutation 676: org.apache.commons.lang.math.NumberUtils.max([D)D:1118 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 679: org.apache.commons.lang.math.NumberUtils.max([D)D:1120 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 682: org.apache.commons.lang.math.NumberUtils.max([D)D:1121 - ReplaceConstant - Array cannot be empty. -> 
   * Goal 13. Weak Mutation 683: org.apache.commons.lang.math.NumberUtils.max([D)D:1121 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test115()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(doubleArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 116
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([B)B: I3 Branch 132 IFNONNULL L1091 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([B)B: I28 Branch 133 IFNE L1093 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([B)B: I63 Branch 134 IF_ICMPGE L1099 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([B)B: I63 Branch 134 IF_ICMPGE L1099 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([B)B: I70 Branch 135 IF_ICMPLE L1100 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([B)B: I70 Branch 135 IF_ICMPLE L1100 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I3 Branch 132 IFNONNULL L1091 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I28 Branch 133 IFNE L1093 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I63 Branch 134 IF_ICMPGE L1099 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I63 Branch 134 IF_ICMPGE L1099 - false in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I70 Branch 135 IF_ICMPLE L1100 - false in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I70 Branch 135 IF_ICMPLE L1100 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1091
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1093
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1098
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1099
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1100
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1101
   * Goal 19. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1105
   * Goal 20. org.apache.commons.lang.math.NumberUtils.max([B)B
   * Goal 21. org.apache.commons.lang.math.NumberUtils.max([B)B
   * Goal 22. Weak Mutation 645: org.apache.commons.lang.math.NumberUtils.max([B)B:1091 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 649: org.apache.commons.lang.math.NumberUtils.max([B)B:1093 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 653: org.apache.commons.lang.math.NumberUtils.max([B)B:1098 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 654: org.apache.commons.lang.math.NumberUtils.max([B)B:1099 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 658: org.apache.commons.lang.math.NumberUtils.max([B)B:1099 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 659: org.apache.commons.lang.math.NumberUtils.max([B)B:1099 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 667: org.apache.commons.lang.math.NumberUtils.max([B)B:1100 - ReplaceComparisonOperator <= -> -1
   * Goal 29. Weak Mutation 669: org.apache.commons.lang.math.NumberUtils.max([B)B:1100 - ReplaceComparisonOperator <= -> ==
   * Goal 30. org.apache.commons.lang.math.NumberUtils.max([B)B:positive
   */

  @Test
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)19;
      byte byte0 = NumberUtils.max(byteArray0);
  }

  //Test case number: 117
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([B)B: I3 Branch 132 IFNONNULL L1091 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([B)B: I28 Branch 133 IFNE L1093 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I3 Branch 132 IFNONNULL L1091 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I28 Branch 133 IFNE L1093 - false in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 5. max([B)B_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1091
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1093
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1094
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max([B)B
   * Goal 10. Weak Mutation 645: org.apache.commons.lang.math.NumberUtils.max([B)B:1091 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 648: org.apache.commons.lang.math.NumberUtils.max([B)B:1093 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 651: org.apache.commons.lang.math.NumberUtils.max([B)B:1094 - ReplaceConstant - Array cannot be empty. -> 
   * Goal 13. Weak Mutation 652: org.apache.commons.lang.math.NumberUtils.max([B)B:1094 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(byteArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 118
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([B)B: I3 Branch 132 IFNONNULL L1091 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I3 Branch 132 IFNONNULL L1091 - false in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 3. max([B)B_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1091
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1092
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([B)B
   * Goal 7. Weak Mutation 645: org.apache.commons.lang.math.NumberUtils.max([B)B:1091 - ReplaceComparisonOperator != null -> = null
   * Goal 8. Weak Mutation 646: org.apache.commons.lang.math.NumberUtils.max([B)B:1092 - ReplaceConstant - The Array must not be null -> 
   * Goal 9. Weak Mutation 647: org.apache.commons.lang.math.NumberUtils.max([B)B:1092 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test118()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.max((byte[]) null);
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 119
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([B)B: I3 Branch 132 IFNONNULL L1091 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([B)B: I28 Branch 133 IFNE L1093 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([B)B: I63 Branch 134 IF_ICMPGE L1099 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([B)B: I63 Branch 134 IF_ICMPGE L1099 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([B)B: I70 Branch 135 IF_ICMPLE L1100 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I3 Branch 132 IFNONNULL L1091 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I28 Branch 133 IFNE L1093 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I63 Branch 134 IF_ICMPGE L1099 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I63 Branch 134 IF_ICMPGE L1099 - false in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I70 Branch 135 IF_ICMPLE L1100 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1091
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1093
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1098
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1099
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1100
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1105
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([B)B
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([B)B
   * Goal 19. Weak Mutation 645: org.apache.commons.lang.math.NumberUtils.max([B)B:1091 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 649: org.apache.commons.lang.math.NumberUtils.max([B)B:1093 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 653: org.apache.commons.lang.math.NumberUtils.max([B)B:1098 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 654: org.apache.commons.lang.math.NumberUtils.max([B)B:1099 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 658: org.apache.commons.lang.math.NumberUtils.max([B)B:1099 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 659: org.apache.commons.lang.math.NumberUtils.max([B)B:1099 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 668: org.apache.commons.lang.math.NumberUtils.max([B)B:1100 - ReplaceComparisonOperator <= -> <
   * Goal 26. org.apache.commons.lang.math.NumberUtils.max([B)B:zero
   */

  @Test
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = NumberUtils.max(byteArray0);
  }

  //Test case number: 120
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([S)S: I3 Branch 128 IFNONNULL L1064 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([S)S: I28 Branch 129 IFNE L1066 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([S)S: I63 Branch 130 IF_ICMPGE L1072 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([S)S: I63 Branch 130 IF_ICMPGE L1072 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([S)S: I70 Branch 131 IF_ICMPLE L1073 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([S)S: I70 Branch 131 IF_ICMPLE L1073 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I3 Branch 128 IFNONNULL L1064 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I28 Branch 129 IFNE L1066 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I63 Branch 130 IF_ICMPGE L1072 - false in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I63 Branch 130 IF_ICMPGE L1072 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I70 Branch 131 IF_ICMPLE L1073 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I70 Branch 131 IF_ICMPLE L1073 - false in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1064
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1066
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1071
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1072
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1073
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1074
   * Goal 19. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1078
   * Goal 20. org.apache.commons.lang.math.NumberUtils.max([S)S
   * Goal 21. org.apache.commons.lang.math.NumberUtils.max([S)S
   * Goal 22. Weak Mutation 614: org.apache.commons.lang.math.NumberUtils.max([S)S:1064 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 618: org.apache.commons.lang.math.NumberUtils.max([S)S:1066 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 622: org.apache.commons.lang.math.NumberUtils.max([S)S:1071 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 623: org.apache.commons.lang.math.NumberUtils.max([S)S:1072 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 627: org.apache.commons.lang.math.NumberUtils.max([S)S:1072 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 628: org.apache.commons.lang.math.NumberUtils.max([S)S:1072 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 636: org.apache.commons.lang.math.NumberUtils.max([S)S:1073 - ReplaceComparisonOperator <= -> -1
   * Goal 29. Weak Mutation 638: org.apache.commons.lang.math.NumberUtils.max([S)S:1073 - ReplaceComparisonOperator <= -> ==
   * Goal 30. org.apache.commons.lang.math.NumberUtils.max([S)S:positive
   */

  @Test
  public void test120()  throws Throwable  {
      short[] shortArray0 = new short[3];
      shortArray0[1] = (short)560;
      short short0 = NumberUtils.max(shortArray0);
  }

  //Test case number: 121
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([S)S: I3 Branch 128 IFNONNULL L1064 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([S)S: I28 Branch 129 IFNE L1066 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I3 Branch 128 IFNONNULL L1064 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I28 Branch 129 IFNE L1066 - false in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 5. max([S)S_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1064
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1066
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1067
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max([S)S
   * Goal 10. Weak Mutation 614: org.apache.commons.lang.math.NumberUtils.max([S)S:1064 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 617: org.apache.commons.lang.math.NumberUtils.max([S)S:1066 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 620: org.apache.commons.lang.math.NumberUtils.max([S)S:1067 - ReplaceConstant - Array cannot be empty. -> 
   * Goal 13. Weak Mutation 621: org.apache.commons.lang.math.NumberUtils.max([S)S:1067 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test121()  throws Throwable  {
      short[] shortArray0 = new short[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(shortArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 122
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([S)S: I3 Branch 128 IFNONNULL L1064 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([S)S: I28 Branch 129 IFNE L1066 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([S)S: I63 Branch 130 IF_ICMPGE L1072 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([S)S: I63 Branch 130 IF_ICMPGE L1072 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([S)S: I70 Branch 131 IF_ICMPLE L1073 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I3 Branch 128 IFNONNULL L1064 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I28 Branch 129 IFNE L1066 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I63 Branch 130 IF_ICMPGE L1072 - false in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I63 Branch 130 IF_ICMPGE L1072 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I70 Branch 131 IF_ICMPLE L1073 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1064
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1066
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1071
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1072
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1073
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1078
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([S)S
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([S)S
   * Goal 19. Weak Mutation 614: org.apache.commons.lang.math.NumberUtils.max([S)S:1064 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 618: org.apache.commons.lang.math.NumberUtils.max([S)S:1066 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 622: org.apache.commons.lang.math.NumberUtils.max([S)S:1071 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 623: org.apache.commons.lang.math.NumberUtils.max([S)S:1072 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 627: org.apache.commons.lang.math.NumberUtils.max([S)S:1072 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 628: org.apache.commons.lang.math.NumberUtils.max([S)S:1072 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 637: org.apache.commons.lang.math.NumberUtils.max([S)S:1073 - ReplaceComparisonOperator <= -> <
   * Goal 26. org.apache.commons.lang.math.NumberUtils.max([S)S:zero
   */

  @Test
  public void test122()  throws Throwable  {
      short[] shortArray0 = new short[3];
      short short0 = NumberUtils.max(shortArray0);
  }

  //Test case number: 123
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([I)I: I3 Branch 124 IFNONNULL L1037 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([I)I: I28 Branch 125 IFNE L1039 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 126 IF_ICMPGE L1045 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 126 IF_ICMPGE L1045 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([I)I: I70 Branch 127 IF_ICMPLE L1046 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([I)I: I70 Branch 127 IF_ICMPLE L1046 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I3 Branch 124 IFNONNULL L1037 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I28 Branch 125 IFNE L1039 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 126 IF_ICMPGE L1045 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 126 IF_ICMPGE L1045 - false in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I70 Branch 127 IF_ICMPLE L1046 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I70 Branch 127 IF_ICMPLE L1046 - false in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1037
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1039
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1044
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1045
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1046
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1047
   * Goal 19. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1051
   * Goal 20. org.apache.commons.lang.math.NumberUtils.max([I)I
   * Goal 21. org.apache.commons.lang.math.NumberUtils.max([I)I
   * Goal 22. Weak Mutation 578: org.apache.commons.lang.math.NumberUtils.max([I)I:1037 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 582: org.apache.commons.lang.math.NumberUtils.max([I)I:1039 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 586: org.apache.commons.lang.math.NumberUtils.max([I)I:1044 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 587: org.apache.commons.lang.math.NumberUtils.max([I)I:1045 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 592: org.apache.commons.lang.math.NumberUtils.max([I)I:1045 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 593: org.apache.commons.lang.math.NumberUtils.max([I)I:1045 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 603: org.apache.commons.lang.math.NumberUtils.max([I)I:1046 - ReplaceComparisonOperator <= -> -1
   * Goal 29. Weak Mutation 604: org.apache.commons.lang.math.NumberUtils.max([I)I:1046 - ReplaceComparisonOperator <= -> <
   * Goal 30. org.apache.commons.lang.math.NumberUtils.max([I)I:positive
   */

  @Test
  public void test123()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[2] = 2278;
      int int0 = NumberUtils.max(intArray0);
  }

  //Test case number: 124
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([I)I: I3 Branch 124 IFNONNULL L1037 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([I)I: I28 Branch 125 IFNE L1039 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 126 IF_ICMPGE L1045 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 126 IF_ICMPGE L1045 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([I)I: I70 Branch 127 IF_ICMPLE L1046 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I3 Branch 124 IFNONNULL L1037 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I28 Branch 125 IFNE L1039 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 126 IF_ICMPGE L1045 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 126 IF_ICMPGE L1045 - false in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I70 Branch 127 IF_ICMPLE L1046 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1037
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1039
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1044
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1045
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1046
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1051
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([I)I
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([I)I
   * Goal 19. Weak Mutation 578: org.apache.commons.lang.math.NumberUtils.max([I)I:1037 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 582: org.apache.commons.lang.math.NumberUtils.max([I)I:1039 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 586: org.apache.commons.lang.math.NumberUtils.max([I)I:1044 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 587: org.apache.commons.lang.math.NumberUtils.max([I)I:1045 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 592: org.apache.commons.lang.math.NumberUtils.max([I)I:1045 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 593: org.apache.commons.lang.math.NumberUtils.max([I)I:1045 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 604: org.apache.commons.lang.math.NumberUtils.max([I)I:1046 - ReplaceComparisonOperator <= -> <
   * Goal 26. org.apache.commons.lang.math.NumberUtils.max([I)I:zero
   */

  @Test
  public void test124()  throws Throwable  {
      int[] intArray0 = new int[7];
      int int0 = NumberUtils.max(intArray0);
  }

  //Test case number: 125
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([I)I: I3 Branch 124 IFNONNULL L1037 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([I)I: I28 Branch 125 IFNE L1039 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I3 Branch 124 IFNONNULL L1037 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I28 Branch 125 IFNE L1039 - false in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 5. max([I)I_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1037
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1039
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1040
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max([I)I
   * Goal 10. Weak Mutation 578: org.apache.commons.lang.math.NumberUtils.max([I)I:1037 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 581: org.apache.commons.lang.math.NumberUtils.max([I)I:1039 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 584: org.apache.commons.lang.math.NumberUtils.max([I)I:1040 - ReplaceConstant - Array cannot be empty. -> 
   * Goal 13. Weak Mutation 585: org.apache.commons.lang.math.NumberUtils.max([I)I:1040 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test125()  throws Throwable  {
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(intArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 126
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([I)I: I3 Branch 124 IFNONNULL L1037 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I3 Branch 124 IFNONNULL L1037 - false in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 3. max([I)I_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1037
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1038
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([I)I
   * Goal 7. Weak Mutation 578: org.apache.commons.lang.math.NumberUtils.max([I)I:1037 - ReplaceComparisonOperator != null -> = null
   * Goal 8. Weak Mutation 579: org.apache.commons.lang.math.NumberUtils.max([I)I:1038 - ReplaceConstant - The Array must not be null -> 
   * Goal 9. Weak Mutation 580: org.apache.commons.lang.math.NumberUtils.max([I)I:1038 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test126()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.max((int[]) null);
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 127
  /*
   * 31 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([J)J: I3 Branch 120 IFNONNULL L1010 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([J)J: I28 Branch 121 IFNE L1012 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([J)J: I63 Branch 122 IF_ICMPGE L1018 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([J)J: I63 Branch 122 IF_ICMPGE L1018 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([J)J: I71 Branch 123 IFLE L1019 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([J)J: I71 Branch 123 IFLE L1019 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I3 Branch 120 IFNONNULL L1010 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I28 Branch 121 IFNE L1012 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I63 Branch 122 IF_ICMPGE L1018 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I63 Branch 122 IF_ICMPGE L1018 - false in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I71 Branch 123 IFLE L1019 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I71 Branch 123 IFLE L1019 - false in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1010
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1012
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1017
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1018
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1019
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1020
   * Goal 19. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1024
   * Goal 20. org.apache.commons.lang.math.NumberUtils.max([J)J
   * Goal 21. org.apache.commons.lang.math.NumberUtils.max([J)J
   * Goal 22. Weak Mutation 551: org.apache.commons.lang.math.NumberUtils.max([J)J:1010 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 555: org.apache.commons.lang.math.NumberUtils.max([J)J:1012 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 559: org.apache.commons.lang.math.NumberUtils.max([J)J:1017 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 560: org.apache.commons.lang.math.NumberUtils.max([J)J:1018 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 564: org.apache.commons.lang.math.NumberUtils.max([J)J:1018 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 565: org.apache.commons.lang.math.NumberUtils.max([J)J:1018 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 571: org.apache.commons.lang.math.NumberUtils.max([J)J:1019 - ReplaceComparisonOperator <= -> -1
   * Goal 29. Weak Mutation 572: org.apache.commons.lang.math.NumberUtils.max([J)J:1019 - ReplaceComparisonOperator <= -> ==
   * Goal 30. Weak Mutation 573: org.apache.commons.lang.math.NumberUtils.max([J)J:1019 - ReplaceComparisonOperator <= -> <
   * Goal 31. org.apache.commons.lang.math.NumberUtils.max([J)J:positive
   */

  @Test
  public void test127()  throws Throwable  {
      long[] longArray0 = new long[4];
      longArray0[2] = 2158L;
      long long0 = NumberUtils.max(longArray0);
  }

  //Test case number: 128
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([J)J: I3 Branch 120 IFNONNULL L1010 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([J)J: I28 Branch 121 IFNE L1012 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([J)J: I63 Branch 122 IF_ICMPGE L1018 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([J)J: I63 Branch 122 IF_ICMPGE L1018 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([J)J: I71 Branch 123 IFLE L1019 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I3 Branch 120 IFNONNULL L1010 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I28 Branch 121 IFNE L1012 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I63 Branch 122 IF_ICMPGE L1018 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I63 Branch 122 IF_ICMPGE L1018 - false in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I71 Branch 123 IFLE L1019 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1010
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1012
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1017
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1018
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1019
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1024
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([J)J
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([J)J
   * Goal 19. Weak Mutation 551: org.apache.commons.lang.math.NumberUtils.max([J)J:1010 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 555: org.apache.commons.lang.math.NumberUtils.max([J)J:1012 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 559: org.apache.commons.lang.math.NumberUtils.max([J)J:1017 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 560: org.apache.commons.lang.math.NumberUtils.max([J)J:1018 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 564: org.apache.commons.lang.math.NumberUtils.max([J)J:1018 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 565: org.apache.commons.lang.math.NumberUtils.max([J)J:1018 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 573: org.apache.commons.lang.math.NumberUtils.max([J)J:1019 - ReplaceComparisonOperator <= -> <
   * Goal 26. org.apache.commons.lang.math.NumberUtils.max([J)J:zero
   */

  @Test
  public void test128()  throws Throwable  {
      long[] longArray0 = new long[2];
      long long0 = NumberUtils.max(longArray0);
  }

  //Test case number: 129
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([J)J: I3 Branch 120 IFNONNULL L1010 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([J)J: I28 Branch 121 IFNE L1012 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I3 Branch 120 IFNONNULL L1010 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I28 Branch 121 IFNE L1012 - false in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 5. max([J)J_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1010
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1012
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1013
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max([J)J
   * Goal 10. Weak Mutation 551: org.apache.commons.lang.math.NumberUtils.max([J)J:1010 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 554: org.apache.commons.lang.math.NumberUtils.max([J)J:1012 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 557: org.apache.commons.lang.math.NumberUtils.max([J)J:1013 - ReplaceConstant - Array cannot be empty. -> 
   * Goal 13. Weak Mutation 558: org.apache.commons.lang.math.NumberUtils.max([J)J:1013 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test129()  throws Throwable  {
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(longArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 130
  /*
   * 27 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([F)F: I3 Branch 116 IFNONNULL L981 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([F)F: I28 Branch 117 IFNE L983 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 118 IF_ICMPGE L989 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 118 IF_ICMPGE L989 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([F)F: I71 Branch 119 IFGE L990 - false
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I3 Branch 116 IFNONNULL L981 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I28 Branch 117 IFNE L983 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 118 IF_ICMPGE L989 - false in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 118 IF_ICMPGE L989 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I71 Branch 119 IFGE L990 - false in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 981
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 983
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 988
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 989
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 990
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 991
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 995
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([F)F
   * Goal 19. org.apache.commons.lang.math.NumberUtils.min([F)F
   * Goal 20. Weak Mutation 524: org.apache.commons.lang.math.NumberUtils.min([F)F:981 - ReplaceComparisonOperator != null -> = null
   * Goal 21. Weak Mutation 528: org.apache.commons.lang.math.NumberUtils.min([F)F:983 - ReplaceComparisonOperator != -> <
   * Goal 22. Weak Mutation 532: org.apache.commons.lang.math.NumberUtils.min([F)F:988 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 533: org.apache.commons.lang.math.NumberUtils.min([F)F:989 - ReplaceConstant - 1 -> 0
   * Goal 24. Weak Mutation 537: org.apache.commons.lang.math.NumberUtils.min([F)F:989 - ReplaceComparisonOperator >= -> -1
   * Goal 25. Weak Mutation 538: org.apache.commons.lang.math.NumberUtils.min([F)F:989 - ReplaceComparisonOperator >= -> >
   * Goal 26. Weak Mutation 544: org.apache.commons.lang.math.NumberUtils.min([F)F:990 - ReplaceComparisonOperator >= -> -1
   * Goal 27. org.apache.commons.lang.math.NumberUtils.min([F)F:zero
   */

  @Test
  public void test130()  throws Throwable  {
      float[] floatArray0 = new float[2];
      floatArray0[0] = 1097.0F;
      float float0 = NumberUtils.min(floatArray0);
  }

  //Test case number: 131
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([F)F: I3 Branch 116 IFNONNULL L981 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([F)F: I28 Branch 117 IFNE L983 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I3 Branch 116 IFNONNULL L981 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I28 Branch 117 IFNE L983 - false in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 5. min([F)F_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 981
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 983
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 984
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min([F)F
   * Goal 10. Weak Mutation 524: org.apache.commons.lang.math.NumberUtils.min([F)F:981 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 527: org.apache.commons.lang.math.NumberUtils.min([F)F:983 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 530: org.apache.commons.lang.math.NumberUtils.min([F)F:984 - ReplaceConstant - Array cannot be empty. -> 
   * Goal 13. Weak Mutation 531: org.apache.commons.lang.math.NumberUtils.min([F)F:984 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test131()  throws Throwable  {
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        NumberUtils.min(floatArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 132
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([F)F: I3 Branch 116 IFNONNULL L981 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I3 Branch 116 IFNONNULL L981 - false in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 3. min([F)F_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 981
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 982
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([F)F
   * Goal 7. Weak Mutation 524: org.apache.commons.lang.math.NumberUtils.min([F)F:981 - ReplaceComparisonOperator != null -> = null
   * Goal 8. Weak Mutation 525: org.apache.commons.lang.math.NumberUtils.min([F)F:982 - ReplaceConstant - The Array must not be null -> 
   * Goal 9. Weak Mutation 526: org.apache.commons.lang.math.NumberUtils.min([F)F:982 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test132()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.min((float[]) null);
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 133
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([F)F: I3 Branch 116 IFNONNULL L981 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([F)F: I28 Branch 117 IFNE L983 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 118 IF_ICMPGE L989 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 118 IF_ICMPGE L989 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([F)F: I71 Branch 119 IFGE L990 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I3 Branch 116 IFNONNULL L981 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I28 Branch 117 IFNE L983 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 118 IF_ICMPGE L989 - false in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 118 IF_ICMPGE L989 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I71 Branch 119 IFGE L990 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 981
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 983
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 988
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 989
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 990
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 995
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([F)F
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([F)F
   * Goal 19. Weak Mutation 524: org.apache.commons.lang.math.NumberUtils.min([F)F:981 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 528: org.apache.commons.lang.math.NumberUtils.min([F)F:983 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 532: org.apache.commons.lang.math.NumberUtils.min([F)F:988 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 533: org.apache.commons.lang.math.NumberUtils.min([F)F:989 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 537: org.apache.commons.lang.math.NumberUtils.min([F)F:989 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 538: org.apache.commons.lang.math.NumberUtils.min([F)F:989 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 546: org.apache.commons.lang.math.NumberUtils.min([F)F:990 - ReplaceComparisonOperator >= -> >
   * Goal 26. org.apache.commons.lang.math.NumberUtils.min([F)F:zero
   */

  @Test
  public void test133()  throws Throwable  {
      float[] floatArray0 = new float[5];
      float float0 = NumberUtils.min(floatArray0);
  }

  //Test case number: 134
  /*
   * 31 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([D)D: I3 Branch 112 IFNONNULL L954 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([D)D: I28 Branch 113 IFNE L956 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([D)D: I63 Branch 114 IF_ICMPGE L962 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([D)D: I63 Branch 114 IF_ICMPGE L962 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([D)D: I71 Branch 115 IFGE L963 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([D)D: I71 Branch 115 IFGE L963 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I3 Branch 112 IFNONNULL L954 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I28 Branch 113 IFNE L956 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I63 Branch 114 IF_ICMPGE L962 - false in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I63 Branch 114 IF_ICMPGE L962 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I71 Branch 115 IFGE L963 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I71 Branch 115 IFGE L963 - false in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 954
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 956
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 961
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 962
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 963
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 964
   * Goal 19. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 968
   * Goal 20. org.apache.commons.lang.math.NumberUtils.min([D)D
   * Goal 21. org.apache.commons.lang.math.NumberUtils.min([D)D
   * Goal 22. Weak Mutation 497: org.apache.commons.lang.math.NumberUtils.min([D)D:954 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 501: org.apache.commons.lang.math.NumberUtils.min([D)D:956 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 505: org.apache.commons.lang.math.NumberUtils.min([D)D:961 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 506: org.apache.commons.lang.math.NumberUtils.min([D)D:962 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 510: org.apache.commons.lang.math.NumberUtils.min([D)D:962 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 511: org.apache.commons.lang.math.NumberUtils.min([D)D:962 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 517: org.apache.commons.lang.math.NumberUtils.min([D)D:963 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 518: org.apache.commons.lang.math.NumberUtils.min([D)D:963 - ReplaceComparisonOperator >= -> ==
   * Goal 30. Weak Mutation 519: org.apache.commons.lang.math.NumberUtils.min([D)D:963 - ReplaceComparisonOperator >= -> >
   * Goal 31. org.apache.commons.lang.math.NumberUtils.min([D)D:negative
   */

  @Test
  public void test134()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[4] = (double) (-1100.9692F);
      double double0 = NumberUtils.min(doubleArray0);
  }

  //Test case number: 135
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([D)D: I3 Branch 112 IFNONNULL L954 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([D)D: I28 Branch 113 IFNE L956 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I3 Branch 112 IFNONNULL L954 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I28 Branch 113 IFNE L956 - false in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 5. min([D)D_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 954
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 956
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 957
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min([D)D
   * Goal 10. Weak Mutation 497: org.apache.commons.lang.math.NumberUtils.min([D)D:954 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 500: org.apache.commons.lang.math.NumberUtils.min([D)D:956 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 503: org.apache.commons.lang.math.NumberUtils.min([D)D:957 - ReplaceConstant - Array cannot be empty. -> 
   * Goal 13. Weak Mutation 504: org.apache.commons.lang.math.NumberUtils.min([D)D:957 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test135()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        NumberUtils.min(doubleArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 136
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([D)D: I3 Branch 112 IFNONNULL L954 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I3 Branch 112 IFNONNULL L954 - false in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 3. min([D)D_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 954
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 955
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([D)D
   * Goal 7. Weak Mutation 497: org.apache.commons.lang.math.NumberUtils.min([D)D:954 - ReplaceComparisonOperator != null -> = null
   * Goal 8. Weak Mutation 498: org.apache.commons.lang.math.NumberUtils.min([D)D:955 - ReplaceConstant - The Array must not be null -> 
   * Goal 9. Weak Mutation 499: org.apache.commons.lang.math.NumberUtils.min([D)D:955 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test136()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.min((double[]) null);
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 137
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([D)D: I3 Branch 112 IFNONNULL L954 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([D)D: I28 Branch 113 IFNE L956 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([D)D: I63 Branch 114 IF_ICMPGE L962 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([D)D: I63 Branch 114 IF_ICMPGE L962 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([D)D: I71 Branch 115 IFGE L963 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I3 Branch 112 IFNONNULL L954 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I28 Branch 113 IFNE L956 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I63 Branch 114 IF_ICMPGE L962 - false in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I63 Branch 114 IF_ICMPGE L962 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I71 Branch 115 IFGE L963 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 954
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 956
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 961
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 962
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 963
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 968
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([D)D
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([D)D
   * Goal 19. Weak Mutation 497: org.apache.commons.lang.math.NumberUtils.min([D)D:954 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 501: org.apache.commons.lang.math.NumberUtils.min([D)D:956 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 505: org.apache.commons.lang.math.NumberUtils.min([D)D:961 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 506: org.apache.commons.lang.math.NumberUtils.min([D)D:962 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 510: org.apache.commons.lang.math.NumberUtils.min([D)D:962 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 511: org.apache.commons.lang.math.NumberUtils.min([D)D:962 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 519: org.apache.commons.lang.math.NumberUtils.min([D)D:963 - ReplaceComparisonOperator >= -> >
   * Goal 26. org.apache.commons.lang.math.NumberUtils.min([D)D:zero
   */

  @Test
  public void test137()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      double double0 = NumberUtils.min(doubleArray0);
  }

  //Test case number: 138
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([B)B: I3 Branch 108 IFNONNULL L927 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([B)B: I28 Branch 109 IFNE L929 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 110 IF_ICMPGE L935 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 110 IF_ICMPGE L935 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([B)B: I70 Branch 111 IF_ICMPGE L936 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([B)B: I70 Branch 111 IF_ICMPGE L936 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I3 Branch 108 IFNONNULL L927 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I28 Branch 109 IFNE L929 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 110 IF_ICMPGE L935 - false in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 110 IF_ICMPGE L935 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I70 Branch 111 IF_ICMPGE L936 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I70 Branch 111 IF_ICMPGE L936 - false in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 927
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 929
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 934
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 935
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 936
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 937
   * Goal 19. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 941
   * Goal 20. org.apache.commons.lang.math.NumberUtils.min([B)B
   * Goal 21. org.apache.commons.lang.math.NumberUtils.min([B)B
   * Goal 22. Weak Mutation 466: org.apache.commons.lang.math.NumberUtils.min([B)B:927 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 470: org.apache.commons.lang.math.NumberUtils.min([B)B:929 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 474: org.apache.commons.lang.math.NumberUtils.min([B)B:934 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 475: org.apache.commons.lang.math.NumberUtils.min([B)B:935 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 479: org.apache.commons.lang.math.NumberUtils.min([B)B:935 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 480: org.apache.commons.lang.math.NumberUtils.min([B)B:935 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 488: org.apache.commons.lang.math.NumberUtils.min([B)B:936 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 490: org.apache.commons.lang.math.NumberUtils.min([B)B:936 - ReplaceComparisonOperator >= -> ==
   * Goal 30. org.apache.commons.lang.math.NumberUtils.min([B)B:negative
   */

  @Test
  public void test138()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-92);
      byte byte0 = NumberUtils.min(byteArray0);
  }

  //Test case number: 139
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([B)B: I3 Branch 108 IFNONNULL L927 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([B)B: I28 Branch 109 IFNE L929 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 110 IF_ICMPGE L935 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 110 IF_ICMPGE L935 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([B)B: I70 Branch 111 IF_ICMPGE L936 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I3 Branch 108 IFNONNULL L927 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I28 Branch 109 IFNE L929 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 110 IF_ICMPGE L935 - false in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 110 IF_ICMPGE L935 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I70 Branch 111 IF_ICMPGE L936 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 927
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 929
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 934
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 935
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 936
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 941
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([B)B
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([B)B
   * Goal 19. Weak Mutation 466: org.apache.commons.lang.math.NumberUtils.min([B)B:927 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 470: org.apache.commons.lang.math.NumberUtils.min([B)B:929 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 474: org.apache.commons.lang.math.NumberUtils.min([B)B:934 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 475: org.apache.commons.lang.math.NumberUtils.min([B)B:935 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 479: org.apache.commons.lang.math.NumberUtils.min([B)B:935 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 480: org.apache.commons.lang.math.NumberUtils.min([B)B:935 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 489: org.apache.commons.lang.math.NumberUtils.min([B)B:936 - ReplaceComparisonOperator >= -> >
   * Goal 26. org.apache.commons.lang.math.NumberUtils.min([B)B:zero
   */

  @Test
  public void test139()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = NumberUtils.min(byteArray0);
  }

  //Test case number: 140
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([B)B: I3 Branch 108 IFNONNULL L927 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([B)B: I28 Branch 109 IFNE L929 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I3 Branch 108 IFNONNULL L927 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I28 Branch 109 IFNE L929 - false in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 5. min([B)B_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 927
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 929
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 930
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min([B)B
   * Goal 10. Weak Mutation 466: org.apache.commons.lang.math.NumberUtils.min([B)B:927 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 469: org.apache.commons.lang.math.NumberUtils.min([B)B:929 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 472: org.apache.commons.lang.math.NumberUtils.min([B)B:930 - ReplaceConstant - Array cannot be empty. -> 
   * Goal 13. Weak Mutation 473: org.apache.commons.lang.math.NumberUtils.min([B)B:930 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test140()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        NumberUtils.min(byteArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 141
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([S)S: I3 Branch 104 IFNONNULL L900 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([S)S: I28 Branch 105 IFNE L902 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 106 IF_ICMPGE L908 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 106 IF_ICMPGE L908 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([S)S: I70 Branch 107 IF_ICMPGE L909 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([S)S: I70 Branch 107 IF_ICMPGE L909 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I3 Branch 104 IFNONNULL L900 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I28 Branch 105 IFNE L902 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 106 IF_ICMPGE L908 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 106 IF_ICMPGE L908 - false in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I70 Branch 107 IF_ICMPGE L909 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I70 Branch 107 IF_ICMPGE L909 - false in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 900
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 902
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 907
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 908
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 909
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 910
   * Goal 19. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 914
   * Goal 20. org.apache.commons.lang.math.NumberUtils.min([S)S
   * Goal 21. org.apache.commons.lang.math.NumberUtils.min([S)S
   * Goal 22. Weak Mutation 435: org.apache.commons.lang.math.NumberUtils.min([S)S:900 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 439: org.apache.commons.lang.math.NumberUtils.min([S)S:902 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 443: org.apache.commons.lang.math.NumberUtils.min([S)S:907 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 444: org.apache.commons.lang.math.NumberUtils.min([S)S:908 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 448: org.apache.commons.lang.math.NumberUtils.min([S)S:908 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 449: org.apache.commons.lang.math.NumberUtils.min([S)S:908 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 457: org.apache.commons.lang.math.NumberUtils.min([S)S:909 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 458: org.apache.commons.lang.math.NumberUtils.min([S)S:909 - ReplaceComparisonOperator >= -> >
   * Goal 30. org.apache.commons.lang.math.NumberUtils.min([S)S:zero
   */

  @Test
  public void test141()  throws Throwable  {
      short[] shortArray0 = new short[3];
      shortArray0[0] = (short) (byte)1;
      short short0 = NumberUtils.min(shortArray0);
  }

  //Test case number: 142
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([S)S: I3 Branch 104 IFNONNULL L900 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([S)S: I28 Branch 105 IFNE L902 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I3 Branch 104 IFNONNULL L900 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I28 Branch 105 IFNE L902 - false in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 5. min([S)S_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 900
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 902
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 903
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min([S)S
   * Goal 10. Weak Mutation 435: org.apache.commons.lang.math.NumberUtils.min([S)S:900 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 438: org.apache.commons.lang.math.NumberUtils.min([S)S:902 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 441: org.apache.commons.lang.math.NumberUtils.min([S)S:903 - ReplaceConstant - Array cannot be empty. -> 
   * Goal 13. Weak Mutation 442: org.apache.commons.lang.math.NumberUtils.min([S)S:903 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test142()  throws Throwable  {
      short[] shortArray0 = new short[0];
      // Undeclared exception!
      try { 
        NumberUtils.min(shortArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 143
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([I)I: I3 Branch 100 IFNONNULL L873 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([I)I: I28 Branch 101 IFNE L875 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([I)I: I63 Branch 102 IF_ICMPGE L881 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([I)I: I63 Branch 102 IF_ICMPGE L881 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([I)I: I70 Branch 103 IF_ICMPGE L882 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([I)I: I70 Branch 103 IF_ICMPGE L882 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I3 Branch 100 IFNONNULL L873 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I28 Branch 101 IFNE L875 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I63 Branch 102 IF_ICMPGE L881 - false in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I63 Branch 102 IF_ICMPGE L881 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I70 Branch 103 IF_ICMPGE L882 - false in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I70 Branch 103 IF_ICMPGE L882 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 873
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 875
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 880
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 881
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 882
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 883
   * Goal 19. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 887
   * Goal 20. org.apache.commons.lang.math.NumberUtils.min([I)I
   * Goal 21. org.apache.commons.lang.math.NumberUtils.min([I)I
   * Goal 22. Weak Mutation 399: org.apache.commons.lang.math.NumberUtils.min([I)I:873 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 403: org.apache.commons.lang.math.NumberUtils.min([I)I:875 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 407: org.apache.commons.lang.math.NumberUtils.min([I)I:880 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 408: org.apache.commons.lang.math.NumberUtils.min([I)I:881 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 413: org.apache.commons.lang.math.NumberUtils.min([I)I:881 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 414: org.apache.commons.lang.math.NumberUtils.min([I)I:881 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 424: org.apache.commons.lang.math.NumberUtils.min([I)I:882 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 425: org.apache.commons.lang.math.NumberUtils.min([I)I:882 - ReplaceComparisonOperator >= -> >
   * Goal 30. org.apache.commons.lang.math.NumberUtils.min([I)I:zero
   */

  @Test
  public void test143()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = (int) (short)560;
      int int0 = NumberUtils.min(intArray0);
  }

  //Test case number: 144
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([I)I: I3 Branch 100 IFNONNULL L873 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([I)I: I28 Branch 101 IFNE L875 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I3 Branch 100 IFNONNULL L873 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I28 Branch 101 IFNE L875 - false in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 5. min([I)I_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 873
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 875
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 876
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min([I)I
   * Goal 10. Weak Mutation 399: org.apache.commons.lang.math.NumberUtils.min([I)I:873 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 402: org.apache.commons.lang.math.NumberUtils.min([I)I:875 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 405: org.apache.commons.lang.math.NumberUtils.min([I)I:876 - ReplaceConstant - Array cannot be empty. -> 
   * Goal 13. Weak Mutation 406: org.apache.commons.lang.math.NumberUtils.min([I)I:876 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test144()  throws Throwable  {
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        NumberUtils.min(intArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 145
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([I)I: I3 Branch 100 IFNONNULL L873 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I3 Branch 100 IFNONNULL L873 - false in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 3. min([I)I_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 873
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 874
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([I)I
   * Goal 7. Weak Mutation 399: org.apache.commons.lang.math.NumberUtils.min([I)I:873 - ReplaceComparisonOperator != null -> = null
   * Goal 8. Weak Mutation 400: org.apache.commons.lang.math.NumberUtils.min([I)I:874 - ReplaceConstant - The Array must not be null -> 
   * Goal 9. Weak Mutation 401: org.apache.commons.lang.math.NumberUtils.min([I)I:874 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test145()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.min((int[]) null);
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 146
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([J)J: I3 Branch 96 IFNONNULL L846 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([J)J: I28 Branch 97 IFNE L848 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 98 IF_ICMPGE L854 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 98 IF_ICMPGE L854 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([J)J: I71 Branch 99 IFGE L855 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([J)J: I71 Branch 99 IFGE L855 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I3 Branch 96 IFNONNULL L846 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I28 Branch 97 IFNE L848 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 98 IF_ICMPGE L854 - false in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 98 IF_ICMPGE L854 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I71 Branch 99 IFGE L855 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I71 Branch 99 IFGE L855 - false in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 846
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 848
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 853
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 854
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 855
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 856
   * Goal 19. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 860
   * Goal 20. org.apache.commons.lang.math.NumberUtils.min([J)J
   * Goal 21. org.apache.commons.lang.math.NumberUtils.min([J)J
   * Goal 22. Weak Mutation 372: org.apache.commons.lang.math.NumberUtils.min([J)J:846 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 376: org.apache.commons.lang.math.NumberUtils.min([J)J:848 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 380: org.apache.commons.lang.math.NumberUtils.min([J)J:853 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 381: org.apache.commons.lang.math.NumberUtils.min([J)J:854 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 385: org.apache.commons.lang.math.NumberUtils.min([J)J:854 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 386: org.apache.commons.lang.math.NumberUtils.min([J)J:854 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 392: org.apache.commons.lang.math.NumberUtils.min([J)J:855 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 393: org.apache.commons.lang.math.NumberUtils.min([J)J:855 - ReplaceComparisonOperator >= -> ==
   * Goal 30. org.apache.commons.lang.math.NumberUtils.min([J)J:negative
   */

  @Test
  public void test146()  throws Throwable  {
      long[] longArray0 = new long[3];
      longArray0[1] = (long) (byte) (-63);
      long long0 = NumberUtils.min(longArray0);
  }

  //Test case number: 147
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([J)J: I3 Branch 96 IFNONNULL L846 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([J)J: I28 Branch 97 IFNE L848 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 98 IF_ICMPGE L854 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 98 IF_ICMPGE L854 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([J)J: I71 Branch 99 IFGE L855 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I3 Branch 96 IFNONNULL L846 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I28 Branch 97 IFNE L848 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 98 IF_ICMPGE L854 - false in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 98 IF_ICMPGE L854 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I71 Branch 99 IFGE L855 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 846
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 848
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 853
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 854
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 855
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 860
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([J)J
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([J)J
   * Goal 19. Weak Mutation 372: org.apache.commons.lang.math.NumberUtils.min([J)J:846 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 376: org.apache.commons.lang.math.NumberUtils.min([J)J:848 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 380: org.apache.commons.lang.math.NumberUtils.min([J)J:853 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 381: org.apache.commons.lang.math.NumberUtils.min([J)J:854 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 385: org.apache.commons.lang.math.NumberUtils.min([J)J:854 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 386: org.apache.commons.lang.math.NumberUtils.min([J)J:854 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 394: org.apache.commons.lang.math.NumberUtils.min([J)J:855 - ReplaceComparisonOperator >= -> >
   * Goal 26. org.apache.commons.lang.math.NumberUtils.min([J)J:zero
   */

  @Test
  public void test147()  throws Throwable  {
      long[] longArray0 = new long[3];
      long long0 = NumberUtils.min(longArray0);
  }

  //Test case number: 148
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([J)J: I3 Branch 96 IFNONNULL L846 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([J)J: I28 Branch 97 IFNE L848 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I3 Branch 96 IFNONNULL L846 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I28 Branch 97 IFNE L848 - false in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 5. min([J)J_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 846
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 848
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 849
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min([J)J
   * Goal 10. Weak Mutation 372: org.apache.commons.lang.math.NumberUtils.min([J)J:846 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 375: org.apache.commons.lang.math.NumberUtils.min([J)J:848 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 378: org.apache.commons.lang.math.NumberUtils.min([J)J:849 - ReplaceConstant - Array cannot be empty. -> 
   * Goal 13. Weak Mutation 379: org.apache.commons.lang.math.NumberUtils.min([J)J:849 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test148()  throws Throwable  {
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        NumberUtils.min(longArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 149
  /*
   * 37 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I4 Branch 90 IF_ACMPNE L815 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I12 Branch 91 IFNULL L818 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I14 Branch 92 IFNONNULL L818 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I25 Branch 93 IF_ICMPEQ L821 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I38 Branch 94 IF_ICMPGE L825 - false
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I48 Branch 95 IFEQ L826 - false
   * Goal 7. org.apache.commons.lang.math.NumberUtils.compare(DD)I: I5 Branch 160 IFGE L1406 - true
   * Goal 8. org.apache.commons.lang.math.NumberUtils.compare(DD)I: I15 Branch 161 IFLE L1409 - false
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I4 Branch 90 IF_ACMPNE L815 - true in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I14 Branch 92 IFNONNULL L818 - true in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I12 Branch 91 IFNULL L818 - false in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I25 Branch 93 IF_ICMPEQ L821 - true in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 13. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I38 Branch 94 IF_ICMPGE L825 - false in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I48 Branch 95 IFEQ L826 - false in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 15. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1406
   * Goal 16. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1409
   * Goal 17. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1410
   * Goal 18. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 815
   * Goal 19. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 818
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 821
   * Goal 21. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 825
   * Goal 22. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 826
   * Goal 23. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 827
   * Goal 24. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z
   * Goal 25. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z
   * Goal 26. Weak Mutation 338: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:815 - ReplaceComparisonOperator != -> ==
   * Goal 27. Weak Mutation 341: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:818 - ReplaceComparisonOperator = null -> != null
   * Goal 28. Weak Mutation 343: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:818 - ReplaceComparisonOperator != null -> = null
   * Goal 29. Weak Mutation 347: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:821 - ReplaceComparisonOperator == -> -2
   * Goal 30. Weak Mutation 351: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:825 - ReplaceConstant - 0 -> 1
   * Goal 31. Weak Mutation 356: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:825 - ReplaceComparisonOperator >= -> -1
   * Goal 32. Weak Mutation 368: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:826 - ReplaceComparisonOperator == -> >=
   * Goal 33. Weak Mutation 370: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:827 - ReplaceConstant - 0 -> 1
   * Goal 34. Weak Mutation 1071: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1406 - ReplaceComparisonOperator >= -> ==
   * Goal 35. Weak Mutation 1080: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1409 - ReplaceComparisonOperator <= -> -1
   * Goal 36. Weak Mutation 1083: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1410 - ReplaceConstant - 1 -> 0
   * Goal 37. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:false
   */

  @Test
  public void test149()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 1.0;
      double[] doubleArray1 = new double[2];
      boolean boolean0 = NumberUtils.equals(doubleArray0, doubleArray1);
  }

  //Test case number: 150
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I4 Branch 90 IF_ACMPNE L815 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I12 Branch 91 IFNULL L818 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I14 Branch 92 IFNONNULL L818 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I25 Branch 93 IF_ICMPEQ L821 - false
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I4 Branch 90 IF_ACMPNE L815 - true in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I14 Branch 92 IFNONNULL L818 - true in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I12 Branch 91 IFNULL L818 - false in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I25 Branch 93 IF_ICMPEQ L821 - false in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 815
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 818
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 821
   * Goal 12. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 822
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z
   * Goal 15. Weak Mutation 338: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:815 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 341: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:818 - ReplaceComparisonOperator = null -> != null
   * Goal 17. Weak Mutation 343: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:818 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 349: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:821 - ReplaceComparisonOperator == -> <=
   * Goal 19. Weak Mutation 350: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:822 - ReplaceConstant - 0 -> 1
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:false
   */

  @Test
  public void test150()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = new double[3];
      boolean boolean0 = NumberUtils.equals(doubleArray0, doubleArray1);
  }

  //Test case number: 151
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I4 Branch 90 IF_ACMPNE L815 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I12 Branch 91 IFNULL L818 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I14 Branch 92 IFNONNULL L818 - false
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I4 Branch 90 IF_ACMPNE L815 - true in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I14 Branch 92 IFNONNULL L818 - false in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I12 Branch 91 IFNULL L818 - false in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 7. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 815
   * Goal 8. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 818
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 819
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z
   * Goal 12. Weak Mutation 338: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:815 - ReplaceComparisonOperator != -> ==
   * Goal 13. Weak Mutation 341: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:818 - ReplaceComparisonOperator = null -> != null
   * Goal 14. Weak Mutation 343: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:818 - ReplaceComparisonOperator != null -> = null
   * Goal 15. Weak Mutation 344: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:819 - ReplaceConstant - 0 -> 1
   * Goal 16. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:false
   */

  @Test
  public void test151()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      boolean boolean0 = NumberUtils.equals(doubleArray0, (double[]) null);
  }

  //Test case number: 152
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I4 Branch 90 IF_ACMPNE L815 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I4 Branch 90 IF_ACMPNE L815 - false in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 815
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 816
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z
   * Goal 7. Weak Mutation 338: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:815 - ReplaceComparisonOperator != -> ==
   * Goal 8. Weak Mutation 339: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:816 - ReplaceConstant - 1 -> 0
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:true
   */

  @Test
  public void test152()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      boolean boolean0 = NumberUtils.equals(doubleArray0, doubleArray0);
  }

  //Test case number: 153
  /*
   * 45 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I4 Branch 90 IF_ACMPNE L815 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I12 Branch 91 IFNULL L818 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I14 Branch 92 IFNONNULL L818 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I25 Branch 93 IF_ICMPEQ L821 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I38 Branch 94 IF_ICMPGE L825 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I38 Branch 94 IF_ICMPGE L825 - false
   * Goal 7. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I48 Branch 95 IFEQ L826 - true
   * Goal 8. org.apache.commons.lang.math.NumberUtils.compare(DD)I: I5 Branch 160 IFGE L1406 - true
   * Goal 9. org.apache.commons.lang.math.NumberUtils.compare(DD)I: I15 Branch 161 IFLE L1409 - true
   * Goal 10. org.apache.commons.lang.math.NumberUtils.compare(DD)I: I35 Branch 162 IFNE L1418 - false
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I4 Branch 90 IF_ACMPNE L815 - true in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I14 Branch 92 IFNONNULL L818 - true in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 13. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I12 Branch 91 IFNULL L818 - false in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I25 Branch 93 IF_ICMPEQ L821 - true in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 15. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I38 Branch 94 IF_ICMPGE L825 - true in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 16. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I38 Branch 94 IF_ICMPGE L825 - false in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 17. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I48 Branch 95 IFEQ L826 - true in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 18. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1406
   * Goal 19. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1409
   * Goal 20. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1416
   * Goal 21. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1417
   * Goal 22. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1418
   * Goal 23. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1419
   * Goal 24. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 815
   * Goal 25. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 818
   * Goal 26. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 821
   * Goal 27. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 825
   * Goal 28. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 826
   * Goal 29. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 831
   * Goal 30. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z
   * Goal 31. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z
   * Goal 32. Weak Mutation 338: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:815 - ReplaceComparisonOperator != -> ==
   * Goal 33. Weak Mutation 341: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:818 - ReplaceComparisonOperator = null -> != null
   * Goal 34. Weak Mutation 343: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:818 - ReplaceComparisonOperator != null -> = null
   * Goal 35. Weak Mutation 347: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:821 - ReplaceComparisonOperator == -> -2
   * Goal 36. Weak Mutation 351: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:825 - ReplaceConstant - 0 -> 1
   * Goal 37. Weak Mutation 356: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:825 - ReplaceComparisonOperator >= -> -1
   * Goal 38. Weak Mutation 357: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:825 - ReplaceComparisonOperator >= -> >
   * Goal 39. Weak Mutation 367: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:826 - ReplaceComparisonOperator == -> -2
   * Goal 40. Weak Mutation 371: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:831 - ReplaceConstant - 1 -> 0
   * Goal 41. Weak Mutation 1072: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1406 - ReplaceComparisonOperator >= -> >
   * Goal 42. Weak Mutation 1082: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1409 - ReplaceComparisonOperator <= -> <
   * Goal 43. Weak Mutation 1092: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1418 - ReplaceComparisonOperator != -> -1
   * Goal 44. Weak Mutation 1095: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1419 - ReplaceConstant - 0 -> 1
   * Goal 45. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:true
   */

  @Test
  public void test153()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      double[] doubleArray1 = new double[2];
      boolean boolean0 = NumberUtils.equals(doubleArray0, doubleArray1);
  }

  //Test case number: 154
  /*
   * 36 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I4 Branch 84 IF_ACMPNE L788 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I12 Branch 85 IFNULL L791 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I14 Branch 86 IFNONNULL L791 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I25 Branch 87 IF_ICMPEQ L794 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I38 Branch 88 IF_ICMPGE L798 - false
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I48 Branch 89 IFEQ L799 - false
   * Goal 7. org.apache.commons.lang.math.NumberUtils.compare(FF)I: I5 Branch 164 IFGE L1467 - false
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I4 Branch 84 IF_ACMPNE L788 - true in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I12 Branch 85 IFNULL L791 - false in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I14 Branch 86 IFNONNULL L791 - true in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I25 Branch 87 IF_ICMPEQ L794 - true in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I38 Branch 88 IF_ICMPGE L798 - false in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 13. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I48 Branch 89 IFEQ L799 - false in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1467
   * Goal 15. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1468
   * Goal 16. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 788
   * Goal 17. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 791
   * Goal 18. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 794
   * Goal 19. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 798
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 799
   * Goal 21. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 800
   * Goal 22. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z
   * Goal 23. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z
   * Goal 24. Weak Mutation 302: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:788 - ReplaceComparisonOperator != -> ==
   * Goal 25. Weak Mutation 305: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:791 - ReplaceComparisonOperator = null -> != null
   * Goal 26. Weak Mutation 307: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:791 - ReplaceComparisonOperator != null -> = null
   * Goal 27. Weak Mutation 311: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:794 - ReplaceComparisonOperator == -> -2
   * Goal 28. Weak Mutation 315: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:798 - ReplaceConstant - 0 -> 1
   * Goal 29. Weak Mutation 320: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:798 - ReplaceComparisonOperator >= -> -1
   * Goal 30. Weak Mutation 333: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:799 - ReplaceComparisonOperator == -> <=
   * Goal 31. Weak Mutation 334: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:800 - ReplaceConstant - 0 -> 1
   * Goal 32. Weak Mutation 1111: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1467 - ReplaceComparisonOperator >= -> -1
   * Goal 33. Weak Mutation 1114: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1468 - ReplaceConstant - -1 -> 0
   * Goal 34. Weak Mutation 1115: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1468 - ReplaceConstant - -1 -> 1
   * Goal 35. Weak Mutation 1116: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1468 - ReplaceConstant - -1 -> -2
   * Goal 36. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:false
   */

  @Test
  public void test154()  throws Throwable  {
      float[] floatArray0 = new float[4];
      floatArray0[0] = (-486.7917F);
      float[] floatArray1 = new float[4];
      boolean boolean0 = NumberUtils.equals(floatArray0, floatArray1);
  }

  //Test case number: 155
  /*
   * 45 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I4 Branch 84 IF_ACMPNE L788 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I12 Branch 85 IFNULL L791 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I14 Branch 86 IFNONNULL L791 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I25 Branch 87 IF_ICMPEQ L794 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I38 Branch 88 IF_ICMPGE L798 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I38 Branch 88 IF_ICMPGE L798 - false
   * Goal 7. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I48 Branch 89 IFEQ L799 - true
   * Goal 8. org.apache.commons.lang.math.NumberUtils.compare(FF)I: I5 Branch 164 IFGE L1467 - true
   * Goal 9. org.apache.commons.lang.math.NumberUtils.compare(FF)I: I15 Branch 165 IFLE L1470 - true
   * Goal 10. org.apache.commons.lang.math.NumberUtils.compare(FF)I: I34 Branch 166 IF_ICMPNE L1479 - false
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I4 Branch 84 IF_ACMPNE L788 - true in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I12 Branch 85 IFNULL L791 - false in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 13. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I14 Branch 86 IFNONNULL L791 - true in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I25 Branch 87 IF_ICMPEQ L794 - true in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 15. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I38 Branch 88 IF_ICMPGE L798 - false in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 16. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I38 Branch 88 IF_ICMPGE L798 - true in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 17. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I48 Branch 89 IFEQ L799 - true in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 18. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1467
   * Goal 19. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1470
   * Goal 20. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1477
   * Goal 21. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1478
   * Goal 22. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1479
   * Goal 23. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1480
   * Goal 24. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 788
   * Goal 25. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 791
   * Goal 26. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 794
   * Goal 27. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 798
   * Goal 28. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 799
   * Goal 29. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 804
   * Goal 30. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z
   * Goal 31. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z
   * Goal 32. Weak Mutation 302: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:788 - ReplaceComparisonOperator != -> ==
   * Goal 33. Weak Mutation 305: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:791 - ReplaceComparisonOperator = null -> != null
   * Goal 34. Weak Mutation 307: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:791 - ReplaceComparisonOperator != null -> = null
   * Goal 35. Weak Mutation 311: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:794 - ReplaceComparisonOperator == -> -2
   * Goal 36. Weak Mutation 315: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:798 - ReplaceConstant - 0 -> 1
   * Goal 37. Weak Mutation 320: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:798 - ReplaceComparisonOperator >= -> -1
   * Goal 38. Weak Mutation 321: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:798 - ReplaceComparisonOperator >= -> >
   * Goal 39. Weak Mutation 331: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:799 - ReplaceComparisonOperator == -> -2
   * Goal 40. Weak Mutation 335: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:804 - ReplaceConstant - 1 -> 0
   * Goal 41. Weak Mutation 1113: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1467 - ReplaceComparisonOperator >= -> >
   * Goal 42. Weak Mutation 1123: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1470 - ReplaceComparisonOperator <= -> <
   * Goal 43. Weak Mutation 1137: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1479 - ReplaceComparisonOperator != -> -1
   * Goal 44. Weak Mutation 1140: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1480 - ReplaceConstant - 0 -> 1
   * Goal 45. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:true
   */

  @Test
  public void test155()  throws Throwable  {
      float[] floatArray0 = new float[4];
      float[] floatArray1 = new float[4];
      boolean boolean0 = NumberUtils.equals(floatArray0, floatArray1);
  }

  //Test case number: 156
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I4 Branch 84 IF_ACMPNE L788 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I4 Branch 84 IF_ACMPNE L788 - false in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 788
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 789
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z
   * Goal 7. Weak Mutation 302: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:788 - ReplaceComparisonOperator != -> ==
   * Goal 8. Weak Mutation 303: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:789 - ReplaceConstant - 1 -> 0
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:true
   */

  @Test
  public void test156()  throws Throwable  {
      float[] floatArray0 = new float[7];
      boolean boolean0 = NumberUtils.equals(floatArray0, floatArray0);
  }

  //Test case number: 157
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I4 Branch 84 IF_ACMPNE L788 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I12 Branch 85 IFNULL L791 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I14 Branch 86 IFNONNULL L791 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I25 Branch 87 IF_ICMPEQ L794 - false
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I4 Branch 84 IF_ACMPNE L788 - true in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I12 Branch 85 IFNULL L791 - false in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I14 Branch 86 IFNONNULL L791 - true in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I25 Branch 87 IF_ICMPEQ L794 - false in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 788
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 791
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 794
   * Goal 12. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 795
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z
   * Goal 15. Weak Mutation 302: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:788 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 305: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:791 - ReplaceComparisonOperator = null -> != null
   * Goal 17. Weak Mutation 307: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:791 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 312: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:794 - ReplaceComparisonOperator == -> >=
   * Goal 19. Weak Mutation 314: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:795 - ReplaceConstant - 0 -> 1
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:false
   */

  @Test
  public void test157()  throws Throwable  {
      float[] floatArray0 = new float[2];
      float[] floatArray1 = new float[1];
      boolean boolean0 = NumberUtils.equals(floatArray0, floatArray1);
  }

  //Test case number: 158
  /*
   * 29 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I4 Branch 78 IF_ACMPNE L761 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I12 Branch 79 IFNULL L764 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I14 Branch 80 IFNONNULL L764 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I25 Branch 81 IF_ICMPEQ L767 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I38 Branch 82 IF_ICMPGE L771 - false
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I48 Branch 83 IFEQ L772 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I4 Branch 78 IF_ACMPNE L761 - true in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I12 Branch 79 IFNULL L764 - false in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I14 Branch 80 IFNONNULL L764 - true in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I25 Branch 81 IF_ICMPEQ L767 - true in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I38 Branch 82 IF_ICMPGE L771 - false in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I48 Branch 83 IFEQ L772 - false in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 761
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 764
   * Goal 15. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 767
   * Goal 16. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 771
   * Goal 17. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 772
   * Goal 18. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 773
   * Goal 19. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z
   * Goal 21. Weak Mutation 266: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:761 - ReplaceComparisonOperator != -> ==
   * Goal 22. Weak Mutation 269: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:764 - ReplaceComparisonOperator = null -> != null
   * Goal 23. Weak Mutation 271: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:764 - ReplaceComparisonOperator != null -> = null
   * Goal 24. Weak Mutation 275: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:767 - ReplaceComparisonOperator == -> -2
   * Goal 25. Weak Mutation 279: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:771 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 284: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:771 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 296: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:772 - ReplaceComparisonOperator == -> >=
   * Goal 28. Weak Mutation 298: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:773 - ReplaceConstant - 0 -> 1
   * Goal 29. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:false
   */

  @Test
  public void test158()  throws Throwable  {
      long[] longArray0 = new long[4];
      longArray0[0] = 4607182418800017408L;
      long[] longArray1 = new long[4];
      boolean boolean0 = NumberUtils.equals(longArray0, longArray1);
  }

  //Test case number: 159
  /*
   * 32 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I4 Branch 78 IF_ACMPNE L761 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I12 Branch 79 IFNULL L764 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I14 Branch 80 IFNONNULL L764 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I25 Branch 81 IF_ICMPEQ L767 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I38 Branch 82 IF_ICMPGE L771 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I38 Branch 82 IF_ICMPGE L771 - false
   * Goal 7. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I48 Branch 83 IFEQ L772 - true
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I4 Branch 78 IF_ACMPNE L761 - true in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I12 Branch 79 IFNULL L764 - false in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I14 Branch 80 IFNONNULL L764 - true in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I25 Branch 81 IF_ICMPEQ L767 - true in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I38 Branch 82 IF_ICMPGE L771 - false in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 13. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I38 Branch 82 IF_ICMPGE L771 - true in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I48 Branch 83 IFEQ L772 - true in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 15. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 761
   * Goal 16. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 764
   * Goal 17. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 767
   * Goal 18. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 771
   * Goal 19. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 772
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 777
   * Goal 21. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z
   * Goal 22. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z
   * Goal 23. Weak Mutation 266: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:761 - ReplaceComparisonOperator != -> ==
   * Goal 24. Weak Mutation 269: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:764 - ReplaceComparisonOperator = null -> != null
   * Goal 25. Weak Mutation 271: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:764 - ReplaceComparisonOperator != null -> = null
   * Goal 26. Weak Mutation 275: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:767 - ReplaceComparisonOperator == -> -2
   * Goal 27. Weak Mutation 279: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:771 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 284: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:771 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 285: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:771 - ReplaceComparisonOperator >= -> >
   * Goal 30. Weak Mutation 295: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:772 - ReplaceComparisonOperator == -> -2
   * Goal 31. Weak Mutation 299: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:777 - ReplaceConstant - 1 -> 0
   * Goal 32. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:true
   */

  @Test
  public void test159()  throws Throwable  {
      long[] longArray0 = new long[4];
      long[] longArray1 = new long[4];
      boolean boolean0 = NumberUtils.equals(longArray0, longArray1);
  }

  //Test case number: 160
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I4 Branch 78 IF_ACMPNE L761 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I4 Branch 78 IF_ACMPNE L761 - false in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 761
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 762
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z
   * Goal 7. Weak Mutation 266: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:761 - ReplaceComparisonOperator != -> ==
   * Goal 8. Weak Mutation 267: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:762 - ReplaceConstant - 1 -> 0
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:true
   */

  @Test
  public void test160()  throws Throwable  {
      long[] longArray0 = new long[2];
      boolean boolean0 = NumberUtils.equals(longArray0, longArray0);
  }

  //Test case number: 161
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I4 Branch 78 IF_ACMPNE L761 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I12 Branch 79 IFNULL L764 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I14 Branch 80 IFNONNULL L764 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I25 Branch 81 IF_ICMPEQ L767 - false
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I4 Branch 78 IF_ACMPNE L761 - true in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I12 Branch 79 IFNULL L764 - false in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I14 Branch 80 IFNONNULL L764 - true in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I25 Branch 81 IF_ICMPEQ L767 - false in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 761
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 764
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 767
   * Goal 12. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 768
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z
   * Goal 15. Weak Mutation 266: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:761 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 269: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:764 - ReplaceComparisonOperator = null -> != null
   * Goal 17. Weak Mutation 271: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:764 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 276: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:767 - ReplaceComparisonOperator == -> >=
   * Goal 19. Weak Mutation 278: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:768 - ReplaceConstant - 0 -> 1
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:false
   */

  @Test
  public void test161()  throws Throwable  {
      long[] longArray0 = new long[9];
      long[] longArray1 = new long[8];
      boolean boolean0 = NumberUtils.equals(longArray0, longArray1);
  }

  //Test case number: 162
  /*
   * 32 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I4 Branch 72 IF_ACMPNE L734 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I12 Branch 73 IFNULL L737 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I14 Branch 74 IFNONNULL L737 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I25 Branch 75 IF_ICMPEQ L740 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I38 Branch 76 IF_ICMPGE L744 - false
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I47 Branch 77 IF_ICMPEQ L745 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I47 Branch 77 IF_ICMPEQ L745 - false
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I4 Branch 72 IF_ACMPNE L734 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I14 Branch 74 IFNONNULL L737 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I12 Branch 73 IFNULL L737 - false in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I25 Branch 75 IF_ICMPEQ L740 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I38 Branch 76 IF_ICMPGE L744 - false in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 13. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I47 Branch 77 IF_ICMPEQ L745 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I47 Branch 77 IF_ICMPEQ L745 - false in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 15. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 734
   * Goal 16. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 737
   * Goal 17. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 740
   * Goal 18. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 744
   * Goal 19. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 745
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 746
   * Goal 21. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z
   * Goal 22. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z
   * Goal 23. Weak Mutation 230: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:734 - ReplaceComparisonOperator != -> ==
   * Goal 24. Weak Mutation 233: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:737 - ReplaceComparisonOperator = null -> != null
   * Goal 25. Weak Mutation 235: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:737 - ReplaceComparisonOperator != null -> = null
   * Goal 26. Weak Mutation 239: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:740 - ReplaceComparisonOperator == -> -2
   * Goal 27. Weak Mutation 243: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:744 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 248: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:744 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 259: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:745 - ReplaceComparisonOperator == -> -2
   * Goal 30. Weak Mutation 260: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:745 - ReplaceComparisonOperator == -> >=
   * Goal 31. Weak Mutation 262: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:746 - ReplaceConstant - 0 -> 1
   * Goal 32. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:false
   */

  @Test
  public void test162()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[2] = 1329;
      int[] intArray1 = new int[4];
      boolean boolean0 = NumberUtils.equals(intArray0, intArray1);
  }

  //Test case number: 163
  /*
   * 32 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I4 Branch 72 IF_ACMPNE L734 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I12 Branch 73 IFNULL L737 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I14 Branch 74 IFNONNULL L737 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I25 Branch 75 IF_ICMPEQ L740 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I38 Branch 76 IF_ICMPGE L744 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I38 Branch 76 IF_ICMPGE L744 - false
   * Goal 7. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I47 Branch 77 IF_ICMPEQ L745 - true
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I4 Branch 72 IF_ACMPNE L734 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I14 Branch 74 IFNONNULL L737 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I12 Branch 73 IFNULL L737 - false in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I25 Branch 75 IF_ICMPEQ L740 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I38 Branch 76 IF_ICMPGE L744 - false in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 13. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I38 Branch 76 IF_ICMPGE L744 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I47 Branch 77 IF_ICMPEQ L745 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 15. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 734
   * Goal 16. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 737
   * Goal 17. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 740
   * Goal 18. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 744
   * Goal 19. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 745
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 750
   * Goal 21. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z
   * Goal 22. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z
   * Goal 23. Weak Mutation 230: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:734 - ReplaceComparisonOperator != -> ==
   * Goal 24. Weak Mutation 233: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:737 - ReplaceComparisonOperator = null -> != null
   * Goal 25. Weak Mutation 235: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:737 - ReplaceComparisonOperator != null -> = null
   * Goal 26. Weak Mutation 239: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:740 - ReplaceComparisonOperator == -> -2
   * Goal 27. Weak Mutation 243: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:744 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 248: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:744 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 249: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:744 - ReplaceComparisonOperator >= -> >
   * Goal 30. Weak Mutation 259: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:745 - ReplaceComparisonOperator == -> -2
   * Goal 31. Weak Mutation 263: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:750 - ReplaceConstant - 1 -> 0
   * Goal 32. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:true
   */

  @Test
  public void test163()  throws Throwable  {
      int[] intArray0 = new int[4];
      int[] intArray1 = new int[4];
      boolean boolean0 = NumberUtils.equals(intArray0, intArray1);
  }

  //Test case number: 164
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I4 Branch 72 IF_ACMPNE L734 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I12 Branch 73 IFNULL L737 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I4 Branch 72 IF_ACMPNE L734 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I12 Branch 73 IFNULL L737 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 734
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 737
   * Goal 7. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 738
   * Goal 8. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z
   * Goal 10. Weak Mutation 230: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:734 - ReplaceComparisonOperator != -> ==
   * Goal 11. Weak Mutation 233: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:737 - ReplaceComparisonOperator = null -> != null
   * Goal 12. Weak Mutation 236: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:738 - ReplaceConstant - 0 -> 1
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:false
   */

  @Test
  public void test164()  throws Throwable  {
      int[] intArray0 = new int[3];
      boolean boolean0 = NumberUtils.equals((int[]) null, intArray0);
  }

  //Test case number: 165
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I4 Branch 72 IF_ACMPNE L734 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I4 Branch 72 IF_ACMPNE L734 - false in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 734
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 735
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z
   * Goal 7. Weak Mutation 230: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:734 - ReplaceComparisonOperator != -> ==
   * Goal 8. Weak Mutation 231: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:735 - ReplaceConstant - 1 -> 0
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:true
   */

  @Test
  public void test165()  throws Throwable  {
      int[] intArray0 = new int[1];
      boolean boolean0 = NumberUtils.equals(intArray0, intArray0);
  }

  //Test case number: 166
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I4 Branch 72 IF_ACMPNE L734 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I12 Branch 73 IFNULL L737 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I14 Branch 74 IFNONNULL L737 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I25 Branch 75 IF_ICMPEQ L740 - false
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I4 Branch 72 IF_ACMPNE L734 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I14 Branch 74 IFNONNULL L737 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I12 Branch 73 IFNULL L737 - false in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I25 Branch 75 IF_ICMPEQ L740 - false in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 734
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 737
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 740
   * Goal 12. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 741
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z
   * Goal 15. Weak Mutation 230: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:734 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 233: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:737 - ReplaceComparisonOperator = null -> != null
   * Goal 17. Weak Mutation 235: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:737 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 241: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:740 - ReplaceComparisonOperator == -> <=
   * Goal 19. Weak Mutation 242: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:741 - ReplaceConstant - 0 -> 1
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:false
   */

  @Test
  public void test166()  throws Throwable  {
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[0];
      boolean boolean0 = NumberUtils.equals(intArray1, intArray0);
  }

  //Test case number: 167
  /*
   * 29 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I4 Branch 66 IF_ACMPNE L707 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I12 Branch 67 IFNULL L710 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I14 Branch 68 IFNONNULL L710 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I25 Branch 69 IF_ICMPEQ L713 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I38 Branch 70 IF_ICMPGE L717 - false
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I47 Branch 71 IF_ICMPEQ L718 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I4 Branch 66 IF_ACMPNE L707 - true in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I14 Branch 68 IFNONNULL L710 - true in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I12 Branch 67 IFNULL L710 - false in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I25 Branch 69 IF_ICMPEQ L713 - true in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I38 Branch 70 IF_ICMPGE L717 - false in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I47 Branch 71 IF_ICMPEQ L718 - false in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 707
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 710
   * Goal 15. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 713
   * Goal 16. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 717
   * Goal 17. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 718
   * Goal 18. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 719
   * Goal 19. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z
   * Goal 21. Weak Mutation 194: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:707 - ReplaceComparisonOperator != -> ==
   * Goal 22. Weak Mutation 197: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:710 - ReplaceComparisonOperator = null -> != null
   * Goal 23. Weak Mutation 199: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:710 - ReplaceComparisonOperator != null -> = null
   * Goal 24. Weak Mutation 203: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:713 - ReplaceComparisonOperator == -> -2
   * Goal 25. Weak Mutation 207: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:717 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 212: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:717 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 224: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:718 - ReplaceComparisonOperator == -> >=
   * Goal 28. Weak Mutation 226: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:719 - ReplaceConstant - 0 -> 1
   * Goal 29. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:false
   */

  @Test
  public void test167()  throws Throwable  {
      short[] shortArray0 = new short[2];
      shortArray0[0] = (short)1;
      short[] shortArray1 = new short[2];
      boolean boolean0 = NumberUtils.equals(shortArray0, shortArray1);
  }

  //Test case number: 168
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I4 Branch 66 IF_ACMPNE L707 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I12 Branch 67 IFNULL L710 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I14 Branch 68 IFNONNULL L710 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I25 Branch 69 IF_ICMPEQ L713 - false
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I4 Branch 66 IF_ACMPNE L707 - true in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I14 Branch 68 IFNONNULL L710 - true in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I12 Branch 67 IFNULL L710 - false in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I25 Branch 69 IF_ICMPEQ L713 - false in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 707
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 710
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 713
   * Goal 12. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 714
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z
   * Goal 15. Weak Mutation 194: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:707 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 197: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:710 - ReplaceComparisonOperator = null -> != null
   * Goal 17. Weak Mutation 199: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:710 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 205: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:713 - ReplaceComparisonOperator == -> <=
   * Goal 19. Weak Mutation 206: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:714 - ReplaceConstant - 0 -> 1
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:false
   */

  @Test
  public void test168()  throws Throwable  {
      short[] shortArray0 = new short[1];
      short[] shortArray1 = new short[5];
      boolean boolean0 = NumberUtils.equals(shortArray0, shortArray1);
  }

  //Test case number: 169
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I4 Branch 66 IF_ACMPNE L707 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I4 Branch 66 IF_ACMPNE L707 - false in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 707
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 708
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z
   * Goal 7. Weak Mutation 194: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:707 - ReplaceComparisonOperator != -> ==
   * Goal 8. Weak Mutation 195: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:708 - ReplaceConstant - 1 -> 0
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:true
   */

  @Test
  public void test169()  throws Throwable  {
      short[] shortArray0 = new short[2];
      boolean boolean0 = NumberUtils.equals(shortArray0, shortArray0);
  }

  //Test case number: 170
  /*
   * 32 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I4 Branch 66 IF_ACMPNE L707 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I12 Branch 67 IFNULL L710 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I14 Branch 68 IFNONNULL L710 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I25 Branch 69 IF_ICMPEQ L713 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I38 Branch 70 IF_ICMPGE L717 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I38 Branch 70 IF_ICMPGE L717 - false
   * Goal 7. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I47 Branch 71 IF_ICMPEQ L718 - true
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I4 Branch 66 IF_ACMPNE L707 - true in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I14 Branch 68 IFNONNULL L710 - true in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I12 Branch 67 IFNULL L710 - false in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I25 Branch 69 IF_ICMPEQ L713 - true in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I38 Branch 70 IF_ICMPGE L717 - true in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 13. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I38 Branch 70 IF_ICMPGE L717 - false in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I47 Branch 71 IF_ICMPEQ L718 - true in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 15. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 707
   * Goal 16. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 710
   * Goal 17. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 713
   * Goal 18. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 717
   * Goal 19. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 718
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 723
   * Goal 21. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z
   * Goal 22. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z
   * Goal 23. Weak Mutation 194: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:707 - ReplaceComparisonOperator != -> ==
   * Goal 24. Weak Mutation 197: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:710 - ReplaceComparisonOperator = null -> != null
   * Goal 25. Weak Mutation 199: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:710 - ReplaceComparisonOperator != null -> = null
   * Goal 26. Weak Mutation 203: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:713 - ReplaceComparisonOperator == -> -2
   * Goal 27. Weak Mutation 207: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:717 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 212: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:717 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 213: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:717 - ReplaceComparisonOperator >= -> >
   * Goal 30. Weak Mutation 223: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:718 - ReplaceComparisonOperator == -> -2
   * Goal 31. Weak Mutation 227: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:723 - ReplaceConstant - 1 -> 0
   * Goal 32. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:true
   */

  @Test
  public void test170()  throws Throwable  {
      short[] shortArray0 = new short[2];
      short[] shortArray1 = new short[2];
      boolean boolean0 = NumberUtils.equals(shortArray0, shortArray1);
  }

  //Test case number: 171
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I4 Branch 60 IF_ACMPNE L680 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I12 Branch 61 IFNULL L683 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I14 Branch 62 IFNONNULL L683 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I25 Branch 63 IF_ICMPEQ L686 - false
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I4 Branch 60 IF_ACMPNE L680 - true in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I12 Branch 61 IFNULL L683 - false in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I14 Branch 62 IFNONNULL L683 - true in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I25 Branch 63 IF_ICMPEQ L686 - false in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 680
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 683
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 686
   * Goal 12. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 687
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z
   * Goal 15. Weak Mutation 158: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:680 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 161: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:683 - ReplaceComparisonOperator = null -> != null
   * Goal 17. Weak Mutation 163: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:683 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 169: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:686 - ReplaceComparisonOperator == -> <=
   * Goal 19. Weak Mutation 170: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:687 - ReplaceConstant - 0 -> 1
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:false
   */

  @Test
  public void test171()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = new byte[2];
      boolean boolean0 = NumberUtils.equals(byteArray1, byteArray0);
  }

  //Test case number: 172
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I4 Branch 60 IF_ACMPNE L680 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I4 Branch 60 IF_ACMPNE L680 - false in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 680
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 681
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z
   * Goal 7. Weak Mutation 158: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:680 - ReplaceComparisonOperator != -> ==
   * Goal 8. Weak Mutation 159: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:681 - ReplaceConstant - 1 -> 0
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:true
   */

  @Test
  public void test172()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      boolean boolean0 = NumberUtils.equals(byteArray0, byteArray0);
  }

  //Test case number: 173
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I4 Branch 60 IF_ACMPNE L680 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I12 Branch 61 IFNULL L683 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I14 Branch 62 IFNONNULL L683 - false
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I4 Branch 60 IF_ACMPNE L680 - true in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I14 Branch 62 IFNONNULL L683 - false in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I12 Branch 61 IFNULL L683 - false in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 7. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 680
   * Goal 8. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 683
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 684
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z
   * Goal 12. Weak Mutation 158: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:680 - ReplaceComparisonOperator != -> ==
   * Goal 13. Weak Mutation 161: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:683 - ReplaceComparisonOperator = null -> != null
   * Goal 14. Weak Mutation 163: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:683 - ReplaceComparisonOperator != null -> = null
   * Goal 15. Weak Mutation 164: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:684 - ReplaceConstant - 0 -> 1
   * Goal 16. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:false
   */

  @Test
  public void test173()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      boolean boolean0 = NumberUtils.equals(byteArray0, (byte[]) null);
  }

  //Test case number: 174
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I3 Branch 58 IFNONNULL L660 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I3 Branch 58 IFNONNULL L660 - false in context: org.apache.commons.lang.math.NumberUtils:createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 660
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 661
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 7. Weak Mutation 153: org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:660 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:null
   */

  @Test
  public void test174()  throws Throwable  {
      BigDecimal bigDecimal0 = NumberUtils.createBigDecimal((String) null);
  }

  //Test case number: 175
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: I3 Branch 57 IFNONNULL L644 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: I3 Branch 57 IFNONNULL L644 - false in context: org.apache.commons.lang.math.NumberUtils:createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: Line 644
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: Line 645
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;
   * Goal 7. Weak Mutation 152: org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;:644 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;:null
   */

  @Test
  public void test175()  throws Throwable  {
      BigInteger bigInteger0 = NumberUtils.createBigInteger((String) null);
  }

  //Test case number: 176
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: I3 Branch 57 IFNONNULL L644 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: I3 Branch 57 IFNONNULL L644 - true in context: org.apache.commons.lang.math.NumberUtils:createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;
   * Goal 3. createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;_java.lang.NumberFormatException_IMPLICIT
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: Line 644
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: Line 647
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;
   * Goal 7. Weak Mutation 152: org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;:644 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test176()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.createBigInteger("85vv333Ri0t/O");
      } catch(NumberFormatException e) {
         //
         // For input string: \"85vv\"
         //
         assertThrownBy("java.lang.NumberFormatException", e);
      }
  }

  //Test case number: 177
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: I3 Branch 56 IFNONNULL L628 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: I3 Branch 56 IFNONNULL L628 - false in context: org.apache.commons.lang.math.NumberUtils:createLong(Ljava/lang/String;)Ljava/lang/Long;
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: Line 628
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: Line 629
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;
   * Goal 7. Weak Mutation 151: org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;:628 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;:null
   */

  @Test
  public void test177()  throws Throwable  {
      Long long0 = NumberUtils.createLong((String) null);
  }

  //Test case number: 178
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: I3 Branch 56 IFNONNULL L628 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: I3 Branch 56 IFNONNULL L628 - true in context: org.apache.commons.lang.math.NumberUtils:createLong(Ljava/lang/String;)Ljava/lang/Long;
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: Line 628
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: Line 631
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;
   * Goal 7. Weak Mutation 151: org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;:628 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;:nonnull
   */

  @Test
  public void test178()  throws Throwable  {
      Long long0 = NumberUtils.createLong("7");
  }

  //Test case number: 179
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: I3 Branch 55 IFNONNULL L611 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: I3 Branch 55 IFNONNULL L611 - false in context: org.apache.commons.lang.math.NumberUtils:createInteger(Ljava/lang/String;)Ljava/lang/Integer;
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: Line 611
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: Line 612
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;
   * Goal 7. Weak Mutation 150: org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;:611 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;:null
   */

  @Test
  public void test179()  throws Throwable  {
      Integer integer0 = NumberUtils.createInteger((String) null);
  }

  //Test case number: 180
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: I3 Branch 54 IFNONNULL L594 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: I3 Branch 54 IFNONNULL L594 - false in context: org.apache.commons.lang.math.NumberUtils:createDouble(Ljava/lang/String;)Ljava/lang/Double;
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: Line 594
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: Line 595
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;
   * Goal 7. Weak Mutation 149: org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;:594 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;:null
   */

  @Test
  public void test180()  throws Throwable  {
      Double double0 = NumberUtils.createDouble((String) null);
  }

  //Test case number: 181
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: I3 Branch 53 IFNONNULL L578 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: I3 Branch 53 IFNONNULL L578 - false in context: org.apache.commons.lang.math.NumberUtils:createFloat(Ljava/lang/String;)Ljava/lang/Float;
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: Line 578
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: Line 579
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;
   * Goal 7. Weak Mutation 148: org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;:578 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;:null
   */

  @Test
  public void test181()  throws Throwable  {
      Float float0 = NumberUtils.createFloat((String) null);
  }

  //Test case number: 182
  /*
   * 132 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I136 Branch 13 IF_ICMPLE L433 - false
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I158 Branch 14 IFNE L440 - true
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I349 Branch 37 IF_ICMPLE L502 - false
   * Goal 10. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I355 Branch 38 IF_ICMPGE L502 - false
   * Goal 11. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I375 Branch 39 IFNONNULL L507 - false
   * Goal 12. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I377 Branch 40 IFNONNULL L507 - true
   * Goal 13. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I405 Branch 41 IFEQ L523 - true
   * Goal 14. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 49 IFNONNULL L556 - true
   * Goal 15. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 50 IFLT L559 - false
   * Goal 16. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I24 Branch 51 IF_ICMPEQ L560 - false
   * Goal 17. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: I3 Branch 53 IFNONNULL L578 - true
   * Goal 18. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: I3 Branch 54 IFNONNULL L594 - true
   * Goal 19. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I3 Branch 58 IFNONNULL L660 - true
   * Goal 20. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I12 Branch 59 IFEQ L664 - true
   * Goal 21. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 22. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 25. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 26. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 27. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I136 Branch 13 IF_ICMPLE L433 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 28. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I158 Branch 14 IFNE L440 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 29. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I349 Branch 37 IF_ICMPLE L502 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 30. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I355 Branch 38 IF_ICMPGE L502 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 31. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I377 Branch 40 IFNONNULL L507 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 32. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I375 Branch 39 IFNONNULL L507 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 33. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I405 Branch 41 IFEQ L523 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 34. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 49 IFNONNULL L556 - true in context: 
   * Goal 35. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 50 IFLT L559 - false in context: 
   * Goal 36. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I24 Branch 51 IF_ICMPEQ L560 - false in context: 
   * Goal 37. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 38. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 660
   * Goal 39. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 664
   * Goal 40. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 667
   * Goal 41. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: Line 594
   * Goal 42. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: Line 597
   * Goal 43. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: Line 578
   * Goal 44. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: Line 581
   * Goal 45. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 46. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 47. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 404
   * Goal 48. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 411
   * Goal 49. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 414
   * Goal 50. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 418
   * Goal 51. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 419
   * Goal 52. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 421
   * Goal 53. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 433
   * Goal 54. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 434
   * Goal 55. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 438
   * Goal 56. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 440
   * Goal 57. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 502
   * Goal 58. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 503
   * Goal 59. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 507
   * Goal 60. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 523
   * Goal 61. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 525
   * Goal 62. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 529
   * Goal 63. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 533
   * Goal 64. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 537
   * Goal 65. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 541
   * Goal 66. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 556
   * Goal 67. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 559
   * Goal 68. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 560
   * Goal 69. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 561
   * Goal 70. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 71. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 72. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 73. Weak Mutation 29: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - -- -> 
   * Goal 74. Weak Mutation 30: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - 0 -> 1
   * Goal 75. Weak Mutation 32: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceComparisonOperator <= -> ==
   * Goal 76. Weak Mutation 34: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0x -> 
   * Goal 77. Weak Mutation 35: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 78. Weak Mutation 37: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator > -> !=
   * Goal 79. Weak Mutation 39: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - -0x -> 
   * Goal 80. Weak Mutation 40: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 81. Weak Mutation 42: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator <= -> ==
   * Goal 82. Weak Mutation 44: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceConstant - 1 -> 0
   * Goal 83. Weak Mutation 45: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> +
   * Goal 84. Weak Mutation 46: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> %
   * Goal 85. Weak Mutation 47: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> *
   * Goal 86. Weak Mutation 48: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> /
   * Goal 87. Weak Mutation 49: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 0
   * Goal 88. Weak Mutation 50: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 1
   * Goal 89. Weak Mutation 51: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> -1
   * Goal 90. Weak Mutation 52: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 45
   * Goal 91. Weak Mutation 53: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 47
   * Goal 92. Weak Mutation 54: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 0
   * Goal 93. Weak Mutation 55: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 1
   * Goal 94. Weak Mutation 56: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> -1
   * Goal 95. Weak Mutation 57: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 100
   * Goal 96. Weak Mutation 58: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 102
   * Goal 97. Weak Mutation 59: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 0
   * Goal 98. Weak Mutation 60: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 1
   * Goal 99. Weak Mutation 61: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> -1
   * Goal 100. Weak Mutation 62: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 68
   * Goal 101. Weak Mutation 63: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 70
   * Goal 102. Weak Mutation 64: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 103. Weak Mutation 65: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 104. Weak Mutation 66: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 105. Weak Mutation 67: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 106. Weak Mutation 68: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 1 -> 0
   * Goal 107. Weak Mutation 69: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 108. Weak Mutation 70: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 109. Weak Mutation 71: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 110. Weak Mutation 72: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 111. Weak Mutation 77: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 0
   * Goal 112. Weak Mutation 78: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 1
   * Goal 113. Weak Mutation 79: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> -2
   * Goal 114. Weak Mutation 81: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceComparisonOperator <= -> <
   * Goal 115. Weak Mutation 118: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:556 - ReplaceComparisonOperator != null -> = null
   * Goal 116. Weak Mutation 120: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceConstant - 1 -> 0
   * Goal 117. Weak Mutation 121: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> +
   * Goal 118. Weak Mutation 122: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> %
   * Goal 119. Weak Mutation 123: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> *
   * Goal 120. Weak Mutation 124: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> /
   * Goal 121. Weak Mutation 129: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceComparisonOperator < -> !=
   * Goal 122. Weak Mutation 134: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 0
   * Goal 123. Weak Mutation 135: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 1
   * Goal 124. Weak Mutation 136: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> -1
   * Goal 125. Weak Mutation 137: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 47
   * Goal 126. Weak Mutation 138: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 49
   * Goal 127. Weak Mutation 140: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceComparisonOperator == -> >=
   * Goal 128. Weak Mutation 142: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:561 - ReplaceConstant - 0 -> 1
   * Goal 129. Weak Mutation 148: org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;:578 - ReplaceComparisonOperator != null -> = null
   * Goal 130. Weak Mutation 149: org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;:594 - ReplaceComparisonOperator != null -> = null
   * Goal 131. Weak Mutation 153: org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:660 - ReplaceComparisonOperator != null -> = null
   * Goal 132. Weak Mutation 154: org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:664 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test182()  throws Throwable  {
      try { 
        NumberUtils.createNumber("['>EUWDDR\"iK1YGwtR3");
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.math.BigDecimal", e);
      }
  }

  //Test case number: 183
  /*
   * 129 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I136 Branch 13 IF_ICMPLE L433 - false
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I158 Branch 14 IFNE L440 - false
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I163 Branch 15 IF_ICMPLE L441 - false
   * Goal 10. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I169 Branch 16 IF_ICMPGE L441 - false
   * Goal 11. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I202 Branch 17 IFEQ L448 - true
   * Goal 12. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 19 LOOKUPSWITCH L449 Case 68 - false
   * Goal 13. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 20 LOOKUPSWITCH L449 Case 70 - false
   * Goal 14. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 21 LOOKUPSWITCH L449 Case 76 - false
   * Goal 15. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 22 LOOKUPSWITCH L449 Case 100 - false
   * Goal 16. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 23 LOOKUPSWITCH L449 Case 102 - false
   * Goal 17. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 24 LOOKUPSWITCH L449 Case 108 - true
   * Goal 18. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 25 LOOKUPSWITCH L449 Default-Case - false
   * Goal 19. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I219 Branch 26 IFNONNULL L452 - false
   * Goal 20. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I221 Branch 27 IFNONNULL L452 - true
   * Goal 21. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 49 IFNONNULL L556 - true
   * Goal 22. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 50 IFLT L559 - false
   * Goal 23. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I24 Branch 51 IF_ICMPEQ L560 - false
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 25. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 26. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 27. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 28. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 29. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 30. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I136 Branch 13 IF_ICMPLE L433 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 31. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I158 Branch 14 IFNE L440 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 32. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I163 Branch 15 IF_ICMPLE L441 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 33. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I169 Branch 16 IF_ICMPGE L441 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 34. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I202 Branch 17 IFEQ L448 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 35. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 20 LOOKUPSWITCH L449 Case 70 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 36. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 19 LOOKUPSWITCH L449 Case 68 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 37. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 21 LOOKUPSWITCH L449 Case 76 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 38. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 22 LOOKUPSWITCH L449 Case 100 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 39. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 24 LOOKUPSWITCH L449 Case 108 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 40. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 23 LOOKUPSWITCH L449 Case 102 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 41. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 25 LOOKUPSWITCH L449 Default-Case - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 42. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I221 Branch 27 IFNONNULL L452 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 43. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I219 Branch 26 IFNONNULL L452 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 44. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 49 IFNONNULL L556 - true in context: 
   * Goal 45. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 50 IFLT L559 - false in context: 
   * Goal 46. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I24 Branch 51 IF_ICMPEQ L560 - false in context: 
   * Goal 47. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 48. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 49. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 50. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 404
   * Goal 51. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 411
   * Goal 52. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 414
   * Goal 53. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 418
   * Goal 54. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 419
   * Goal 55. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 421
   * Goal 56. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 433
   * Goal 57. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 434
   * Goal 58. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 438
   * Goal 59. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 440
   * Goal 60. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 441
   * Goal 61. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 442
   * Goal 62. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 447
   * Goal 63. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 448
   * Goal 64. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 449
   * Goal 65. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 452
   * Goal 66. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 464
   * Goal 67. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 556
   * Goal 68. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 559
   * Goal 69. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 560
   * Goal 70. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 561
   * Goal 71. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 72. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 73. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 74. Weak Mutation 29: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - -- -> 
   * Goal 75. Weak Mutation 30: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - 0 -> 1
   * Goal 76. Weak Mutation 32: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceComparisonOperator <= -> ==
   * Goal 77. Weak Mutation 34: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0x -> 
   * Goal 78. Weak Mutation 35: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 79. Weak Mutation 37: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator > -> !=
   * Goal 80. Weak Mutation 39: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - -0x -> 
   * Goal 81. Weak Mutation 40: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 82. Weak Mutation 42: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator <= -> ==
   * Goal 83. Weak Mutation 44: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceConstant - 1 -> 0
   * Goal 84. Weak Mutation 45: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> +
   * Goal 85. Weak Mutation 46: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> %
   * Goal 86. Weak Mutation 47: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> *
   * Goal 87. Weak Mutation 48: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> /
   * Goal 88. Weak Mutation 49: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 0
   * Goal 89. Weak Mutation 50: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 1
   * Goal 90. Weak Mutation 51: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> -1
   * Goal 91. Weak Mutation 52: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 45
   * Goal 92. Weak Mutation 53: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 47
   * Goal 93. Weak Mutation 54: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 0
   * Goal 94. Weak Mutation 55: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 1
   * Goal 95. Weak Mutation 56: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> -1
   * Goal 96. Weak Mutation 57: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 100
   * Goal 97. Weak Mutation 58: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 102
   * Goal 98. Weak Mutation 59: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 0
   * Goal 99. Weak Mutation 60: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 1
   * Goal 100. Weak Mutation 61: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> -1
   * Goal 101. Weak Mutation 62: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 68
   * Goal 102. Weak Mutation 63: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 70
   * Goal 103. Weak Mutation 64: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 104. Weak Mutation 65: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 105. Weak Mutation 66: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 106. Weak Mutation 67: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 107. Weak Mutation 68: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 1 -> 0
   * Goal 108. Weak Mutation 69: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 109. Weak Mutation 70: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 110. Weak Mutation 71: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 111. Weak Mutation 72: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 112. Weak Mutation 77: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 0
   * Goal 113. Weak Mutation 78: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 1
   * Goal 114. Weak Mutation 79: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> -2
   * Goal 115. Weak Mutation 81: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceComparisonOperator <= -> <
   * Goal 116. Weak Mutation 118: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:556 - ReplaceComparisonOperator != null -> = null
   * Goal 117. Weak Mutation 120: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceConstant - 1 -> 0
   * Goal 118. Weak Mutation 121: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> +
   * Goal 119. Weak Mutation 122: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> %
   * Goal 120. Weak Mutation 123: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> *
   * Goal 121. Weak Mutation 124: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> /
   * Goal 122. Weak Mutation 129: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceComparisonOperator < -> !=
   * Goal 123. Weak Mutation 134: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 0
   * Goal 124. Weak Mutation 135: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 1
   * Goal 125. Weak Mutation 136: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> -1
   * Goal 126. Weak Mutation 137: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 47
   * Goal 127. Weak Mutation 138: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 49
   * Goal 128. Weak Mutation 140: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceComparisonOperator == -> >=
   * Goal 129. Weak Mutation 142: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:561 - ReplaceConstant - 0 -> 1
   */

  @Test
  public void test183()  throws Throwable  {
      try { 
        NumberUtils.createNumber("The Array must not be null");
      } catch(NumberFormatException e) {
         //
         // The Array must not be null is not a valid number.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 184
  /*
   * 136 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I136 Branch 13 IF_ICMPLE L433 - true
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I158 Branch 14 IFNE L440 - false
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I163 Branch 15 IF_ICMPLE L441 - true
   * Goal 10. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I202 Branch 17 IFEQ L448 - true
   * Goal 11. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 19 LOOKUPSWITCH L449 Case 68 - true
   * Goal 12. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 20 LOOKUPSWITCH L449 Case 70 - false
   * Goal 13. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 21 LOOKUPSWITCH L449 Case 76 - false
   * Goal 14. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 22 LOOKUPSWITCH L449 Case 100 - false
   * Goal 15. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 23 LOOKUPSWITCH L449 Case 102 - false
   * Goal 16. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 24 LOOKUPSWITCH L449 Case 108 - false
   * Goal 17. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 25 LOOKUPSWITCH L449 Default-Case - false
   * Goal 18. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 49 IFNONNULL L556 - true
   * Goal 19. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 50 IFLT L559 - false
   * Goal 20. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I24 Branch 51 IF_ICMPEQ L560 - false
   * Goal 21. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: I3 Branch 54 IFNONNULL L594 - true
   * Goal 22. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I3 Branch 58 IFNONNULL L660 - true
   * Goal 23. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I12 Branch 59 IFEQ L664 - false
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 25. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 26. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 27. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 28. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 29. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 30. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I136 Branch 13 IF_ICMPLE L433 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 31. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I158 Branch 14 IFNE L440 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 32. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I163 Branch 15 IF_ICMPLE L441 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 33. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I202 Branch 17 IFEQ L448 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 34. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 20 LOOKUPSWITCH L449 Case 70 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 35. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 19 LOOKUPSWITCH L449 Case 68 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 36. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 21 LOOKUPSWITCH L449 Case 76 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 37. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 24 LOOKUPSWITCH L449 Case 108 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 38. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 22 LOOKUPSWITCH L449 Case 100 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 39. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 23 LOOKUPSWITCH L449 Case 102 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 40. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 25 LOOKUPSWITCH L449 Default-Case - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 41. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 49 IFNONNULL L556 - true in context: 
   * Goal 42. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 50 IFLT L559 - false in context: 
   * Goal 43. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I24 Branch 51 IF_ICMPEQ L560 - false in context: 
   * Goal 44. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 45. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 660
   * Goal 46. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 664
   * Goal 47. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 665
   * Goal 48. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: Line 594
   * Goal 49. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: Line 597
   * Goal 50. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 51. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 52. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 404
   * Goal 53. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 411
   * Goal 54. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 414
   * Goal 55. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 418
   * Goal 56. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 419
   * Goal 57. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 421
   * Goal 58. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 433
   * Goal 59. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 436
   * Goal 60. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 438
   * Goal 61. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 440
   * Goal 62. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 441
   * Goal 63. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 444
   * Goal 64. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 447
   * Goal 65. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 448
   * Goal 66. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 449
   * Goal 67. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 482
   * Goal 68. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 486
   * Goal 69. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 490
   * Goal 70. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 491
   * Goal 71. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 496
   * Goal 72. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 556
   * Goal 73. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 559
   * Goal 74. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 560
   * Goal 75. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 561
   * Goal 76. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 77. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 78. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 79. Weak Mutation 29: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - -- -> 
   * Goal 80. Weak Mutation 30: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - 0 -> 1
   * Goal 81. Weak Mutation 32: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceComparisonOperator <= -> ==
   * Goal 82. Weak Mutation 34: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0x -> 
   * Goal 83. Weak Mutation 35: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 84. Weak Mutation 37: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator > -> !=
   * Goal 85. Weak Mutation 39: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - -0x -> 
   * Goal 86. Weak Mutation 40: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 87. Weak Mutation 42: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator <= -> ==
   * Goal 88. Weak Mutation 44: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceConstant - 1 -> 0
   * Goal 89. Weak Mutation 45: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> +
   * Goal 90. Weak Mutation 47: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> *
   * Goal 91. Weak Mutation 48: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> /
   * Goal 92. Weak Mutation 49: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 0
   * Goal 93. Weak Mutation 50: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 1
   * Goal 94. Weak Mutation 51: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> -1
   * Goal 95. Weak Mutation 52: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 45
   * Goal 96. Weak Mutation 53: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 47
   * Goal 97. Weak Mutation 54: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 0
   * Goal 98. Weak Mutation 55: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 1
   * Goal 99. Weak Mutation 56: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> -1
   * Goal 100. Weak Mutation 57: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 100
   * Goal 101. Weak Mutation 58: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 102
   * Goal 102. Weak Mutation 59: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 0
   * Goal 103. Weak Mutation 60: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 1
   * Goal 104. Weak Mutation 61: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> -1
   * Goal 105. Weak Mutation 62: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 68
   * Goal 106. Weak Mutation 63: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 70
   * Goal 107. Weak Mutation 64: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 108. Weak Mutation 65: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 109. Weak Mutation 66: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 110. Weak Mutation 67: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 111. Weak Mutation 68: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 1 -> 0
   * Goal 112. Weak Mutation 69: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 113. Weak Mutation 70: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 114. Weak Mutation 71: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 115. Weak Mutation 72: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 116. Weak Mutation 77: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 0
   * Goal 117. Weak Mutation 78: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 1
   * Goal 118. Weak Mutation 79: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> -2
   * Goal 119. Weak Mutation 81: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceComparisonOperator <= -> <
   * Goal 120. Weak Mutation 118: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:556 - ReplaceComparisonOperator != null -> = null
   * Goal 121. Weak Mutation 120: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceConstant - 1 -> 0
   * Goal 122. Weak Mutation 121: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> +
   * Goal 123. Weak Mutation 123: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> *
   * Goal 124. Weak Mutation 124: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> /
   * Goal 125. Weak Mutation 130: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceComparisonOperator < -> <=
   * Goal 126. Weak Mutation 134: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 0
   * Goal 127. Weak Mutation 135: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 1
   * Goal 128. Weak Mutation 136: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> -1
   * Goal 129. Weak Mutation 137: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 47
   * Goal 130. Weak Mutation 138: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 49
   * Goal 131. Weak Mutation 140: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceComparisonOperator == -> >=
   * Goal 132. Weak Mutation 142: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:561 - ReplaceConstant - 0 -> 1
   * Goal 133. Weak Mutation 149: org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;:594 - ReplaceComparisonOperator != null -> = null
   * Goal 134. Weak Mutation 153: org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:660 - ReplaceComparisonOperator != null -> = null
   * Goal 135. Weak Mutation 154: org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:664 - ReplaceComparisonOperator == -> !=
   * Goal 136. Weak Mutation 155: org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:665 - ReplaceConstant - A blank string is not a valid number -> 
   */

  @Test
  public void test184()  throws Throwable  {
      try { 
        NumberUtils.createNumber("D");
      } catch(NumberFormatException e) {
         //
         // D is not a valid number.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 185
  /*
   * 88 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I136 Branch 13 IF_ICMPLE L433 - true
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I158 Branch 14 IFNE L440 - true
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I349 Branch 37 IF_ICMPLE L502 - true
   * Goal 10. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I375 Branch 39 IFNONNULL L507 - false
   * Goal 11. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I377 Branch 40 IFNONNULL L507 - false
   * Goal 12. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: I3 Branch 55 IFNONNULL L611 - true
   * Goal 13. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 15. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 16. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 17. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 18. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 19. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I136 Branch 13 IF_ICMPLE L433 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 20. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I158 Branch 14 IFNE L440 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 21. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I349 Branch 37 IF_ICMPLE L502 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 22. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I375 Branch 39 IFNONNULL L507 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I377 Branch 40 IFNONNULL L507 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 24. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: Line 611
   * Goal 25. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: Line 615
   * Goal 26. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 27. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 28. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 404
   * Goal 29. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 411
   * Goal 30. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 414
   * Goal 31. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 418
   * Goal 32. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 419
   * Goal 33. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 421
   * Goal 34. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 433
   * Goal 35. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 436
   * Goal 36. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 438
   * Goal 37. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 440
   * Goal 38. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 502
   * Goal 39. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 505
   * Goal 40. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 507
   * Goal 41. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 510
   * Goal 42. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 43. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 44. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 45. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 46. Weak Mutation 29: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - -- -> 
   * Goal 47. Weak Mutation 30: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - 0 -> 1
   * Goal 48. Weak Mutation 32: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceComparisonOperator <= -> ==
   * Goal 49. Weak Mutation 34: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0x -> 
   * Goal 50. Weak Mutation 35: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 51. Weak Mutation 37: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator > -> !=
   * Goal 52. Weak Mutation 39: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - -0x -> 
   * Goal 53. Weak Mutation 40: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 54. Weak Mutation 42: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator <= -> ==
   * Goal 55. Weak Mutation 44: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceConstant - 1 -> 0
   * Goal 56. Weak Mutation 45: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> +
   * Goal 57. Weak Mutation 47: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> *
   * Goal 58. Weak Mutation 48: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> /
   * Goal 59. Weak Mutation 49: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 0
   * Goal 60. Weak Mutation 50: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 1
   * Goal 61. Weak Mutation 51: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> -1
   * Goal 62. Weak Mutation 52: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 45
   * Goal 63. Weak Mutation 53: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 47
   * Goal 64. Weak Mutation 54: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 0
   * Goal 65. Weak Mutation 55: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 1
   * Goal 66. Weak Mutation 56: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> -1
   * Goal 67. Weak Mutation 57: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 100
   * Goal 68. Weak Mutation 58: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 102
   * Goal 69. Weak Mutation 59: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 0
   * Goal 70. Weak Mutation 60: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 1
   * Goal 71. Weak Mutation 61: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> -1
   * Goal 72. Weak Mutation 62: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 68
   * Goal 73. Weak Mutation 63: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 70
   * Goal 74. Weak Mutation 64: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 75. Weak Mutation 65: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 76. Weak Mutation 66: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 77. Weak Mutation 67: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 78. Weak Mutation 68: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 1 -> 0
   * Goal 79. Weak Mutation 69: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 80. Weak Mutation 70: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 81. Weak Mutation 71: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 82. Weak Mutation 72: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 83. Weak Mutation 77: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 0
   * Goal 84. Weak Mutation 78: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 1
   * Goal 85. Weak Mutation 79: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> -2
   * Goal 86. Weak Mutation 81: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceComparisonOperator <= -> <
   * Goal 87. Weak Mutation 150: org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;:611 - ReplaceComparisonOperator != null -> = null
   * Goal 88. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:nonnull
   */

  @Test
  public void test185()  throws Throwable  {
      Integer integer0 = (Integer)NumberUtils.createNumber("7");
  }

  //Test case number: 186
  /*
   * 79 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - false
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I84 Branch 11 IF_ICMPLE L423 - false
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I89 Branch 12 IF_ICMPGE L424 - false
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 13. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 15. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I84 Branch 11 IF_ICMPLE L423 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 16. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I89 Branch 12 IF_ICMPGE L424 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 17. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 18. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 19. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 20. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 404
   * Goal 21. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 411
   * Goal 22. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 414
   * Goal 23. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 418
   * Goal 24. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 419
   * Goal 25. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 421
   * Goal 26. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 423
   * Goal 27. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 424
   * Goal 28. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 425
   * Goal 29. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 30. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 31. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 32. Weak Mutation 29: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - -- -> 
   * Goal 33. Weak Mutation 30: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - 0 -> 1
   * Goal 34. Weak Mutation 32: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceComparisonOperator <= -> ==
   * Goal 35. Weak Mutation 34: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0x -> 
   * Goal 36. Weak Mutation 35: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 37. Weak Mutation 37: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator > -> !=
   * Goal 38. Weak Mutation 39: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - -0x -> 
   * Goal 39. Weak Mutation 40: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 40. Weak Mutation 42: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator <= -> ==
   * Goal 41. Weak Mutation 44: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceConstant - 1 -> 0
   * Goal 42. Weak Mutation 45: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> +
   * Goal 43. Weak Mutation 46: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> %
   * Goal 44. Weak Mutation 47: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> *
   * Goal 45. Weak Mutation 48: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> /
   * Goal 46. Weak Mutation 49: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 0
   * Goal 47. Weak Mutation 50: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 1
   * Goal 48. Weak Mutation 51: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> -1
   * Goal 49. Weak Mutation 52: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 45
   * Goal 50. Weak Mutation 53: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 47
   * Goal 51. Weak Mutation 54: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 0
   * Goal 52. Weak Mutation 55: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 1
   * Goal 53. Weak Mutation 56: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> -1
   * Goal 54. Weak Mutation 57: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 100
   * Goal 55. Weak Mutation 58: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 102
   * Goal 56. Weak Mutation 59: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 0
   * Goal 57. Weak Mutation 60: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 1
   * Goal 58. Weak Mutation 61: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> -1
   * Goal 59. Weak Mutation 62: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 68
   * Goal 60. Weak Mutation 63: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 70
   * Goal 61. Weak Mutation 64: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 62. Weak Mutation 65: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 63. Weak Mutation 66: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 64. Weak Mutation 67: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 65. Weak Mutation 68: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 1 -> 0
   * Goal 66. Weak Mutation 69: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 67. Weak Mutation 70: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 68. Weak Mutation 71: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 69. Weak Mutation 72: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 70. Weak Mutation 77: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 0
   * Goal 71. Weak Mutation 78: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 1
   * Goal 72. Weak Mutation 79: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> -2
   * Goal 73. Weak Mutation 80: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceComparisonOperator <= -> -1
   * Goal 74. Weak Mutation 87: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceConstant - -1 -> 0
   * Goal 75. Weak Mutation 88: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceConstant - -1 -> 1
   * Goal 76. Weak Mutation 89: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceConstant - -1 -> -2
   * Goal 77. Weak Mutation 90: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceComparisonOperator <= -> -1
   * Goal 78. Weak Mutation 101: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:424 - ReplaceComparisonOperator >= -> -1
   * Goal 79. Weak Mutation 104: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:425 - ReplaceConstant -  is not a valid number. -> 
   */

  @Test
  public void test186()  throws Throwable  {
      try { 
        NumberUtils.createNumber(" is not a valid number.");
      } catch(NumberFormatException e) {
         //
         //  is not a valid number. is not a valid number.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 187
  /*
   * 120 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - false
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I84 Branch 11 IF_ICMPLE L423 - true
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I158 Branch 14 IFNE L440 - false
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I163 Branch 15 IF_ICMPLE L441 - true
   * Goal 10. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I202 Branch 17 IFEQ L448 - true
   * Goal 11. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 19 LOOKUPSWITCH L449 Case 68 - false
   * Goal 12. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 20 LOOKUPSWITCH L449 Case 70 - false
   * Goal 13. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 21 LOOKUPSWITCH L449 Case 76 - false
   * Goal 14. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 22 LOOKUPSWITCH L449 Case 100 - false
   * Goal 15. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 23 LOOKUPSWITCH L449 Case 102 - false
   * Goal 16. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 24 LOOKUPSWITCH L449 Case 108 - false
   * Goal 17. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 25 LOOKUPSWITCH L449 Default-Case - true
   * Goal 18. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 49 IFNONNULL L556 - true
   * Goal 19. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 50 IFLT L559 - true
   * Goal 20. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I37 Branch 52 IFLE L564 - true
   * Goal 21. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 22. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 25. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 26. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 27. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I84 Branch 11 IF_ICMPLE L423 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 28. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I158 Branch 14 IFNE L440 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 29. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I163 Branch 15 IF_ICMPLE L441 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 30. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I202 Branch 17 IFEQ L448 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 31. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 20 LOOKUPSWITCH L449 Case 70 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 32. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 19 LOOKUPSWITCH L449 Case 68 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 33. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 21 LOOKUPSWITCH L449 Case 76 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 34. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 24 LOOKUPSWITCH L449 Case 108 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 35. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 25 LOOKUPSWITCH L449 Default-Case - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 36. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 22 LOOKUPSWITCH L449 Case 100 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 37. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 23 LOOKUPSWITCH L449 Case 102 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 38. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 49 IFNONNULL L556 - true in context: 
   * Goal 39. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 50 IFLT L559 - true in context: 
   * Goal 40. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I37 Branch 52 IFLE L564 - true in context: 
   * Goal 41. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 42. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 43. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 44. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 404
   * Goal 45. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 411
   * Goal 46. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 414
   * Goal 47. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 418
   * Goal 48. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 419
   * Goal 49. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 421
   * Goal 50. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 423
   * Goal 51. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 429
   * Goal 52. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 431
   * Goal 53. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 440
   * Goal 54. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 441
   * Goal 55. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 444
   * Goal 56. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 447
   * Goal 57. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 448
   * Goal 58. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 449
   * Goal 59. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 496
   * Goal 60. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 556
   * Goal 61. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 559
   * Goal 62. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 564
   * Goal 63. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 64. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 65. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 66. Weak Mutation 29: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - -- -> 
   * Goal 67. Weak Mutation 30: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - 0 -> 1
   * Goal 68. Weak Mutation 32: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceComparisonOperator <= -> ==
   * Goal 69. Weak Mutation 34: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0x -> 
   * Goal 70. Weak Mutation 35: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 71. Weak Mutation 37: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator > -> !=
   * Goal 72. Weak Mutation 39: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - -0x -> 
   * Goal 73. Weak Mutation 40: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 74. Weak Mutation 42: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator <= -> ==
   * Goal 75. Weak Mutation 44: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceConstant - 1 -> 0
   * Goal 76. Weak Mutation 45: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> +
   * Goal 77. Weak Mutation 46: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> %
   * Goal 78. Weak Mutation 47: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> *
   * Goal 79. Weak Mutation 48: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> /
   * Goal 80. Weak Mutation 49: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 0
   * Goal 81. Weak Mutation 50: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 1
   * Goal 82. Weak Mutation 51: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> -1
   * Goal 83. Weak Mutation 52: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 45
   * Goal 84. Weak Mutation 53: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 47
   * Goal 85. Weak Mutation 54: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 0
   * Goal 86. Weak Mutation 55: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 1
   * Goal 87. Weak Mutation 56: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> -1
   * Goal 88. Weak Mutation 57: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 100
   * Goal 89. Weak Mutation 58: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 102
   * Goal 90. Weak Mutation 59: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 0
   * Goal 91. Weak Mutation 60: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 1
   * Goal 92. Weak Mutation 61: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> -1
   * Goal 93. Weak Mutation 62: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 68
   * Goal 94. Weak Mutation 63: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 70
   * Goal 95. Weak Mutation 64: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 96. Weak Mutation 65: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 97. Weak Mutation 66: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 98. Weak Mutation 67: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 99. Weak Mutation 68: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 1 -> 0
   * Goal 100. Weak Mutation 69: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 101. Weak Mutation 70: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 102. Weak Mutation 71: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 103. Weak Mutation 72: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 104. Weak Mutation 77: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 0
   * Goal 105. Weak Mutation 78: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 1
   * Goal 106. Weak Mutation 79: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> -2
   * Goal 107. Weak Mutation 80: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceComparisonOperator <= -> -1
   * Goal 108. Weak Mutation 87: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceConstant - -1 -> 0
   * Goal 109. Weak Mutation 88: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceConstant - -1 -> 1
   * Goal 110. Weak Mutation 89: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceConstant - -1 -> -2
   * Goal 111. Weak Mutation 91: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceComparisonOperator <= -> <
   * Goal 112. Weak Mutation 118: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:556 - ReplaceComparisonOperator != null -> = null
   * Goal 113. Weak Mutation 120: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceConstant - 1 -> 0
   * Goal 114. Weak Mutation 121: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> +
   * Goal 115. Weak Mutation 122: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> %
   * Goal 116. Weak Mutation 123: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> *
   * Goal 117. Weak Mutation 124: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> /
   * Goal 118. Weak Mutation 128: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceComparisonOperator < -> -2
   * Goal 119. Weak Mutation 145: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:564 - ReplaceComparisonOperator <= -> <
   * Goal 120. Weak Mutation 147: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:564 - ReplaceConstant - 0 -> 1
   */

  @Test
  public void test187()  throws Throwable  {
      try { 
        NumberUtils.createNumber("...");
      } catch(NumberFormatException e) {
         //
         // ... is not a valid number.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 188
  /*
   * 137 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - false
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I84 Branch 11 IF_ICMPLE L423 - false
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I89 Branch 12 IF_ICMPGE L424 - true
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I158 Branch 14 IFNE L440 - false
   * Goal 10. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I163 Branch 15 IF_ICMPLE L441 - false
   * Goal 11. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I169 Branch 16 IF_ICMPGE L441 - false
   * Goal 12. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I202 Branch 17 IFEQ L448 - true
   * Goal 13. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 19 LOOKUPSWITCH L449 Case 68 - false
   * Goal 14. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 20 LOOKUPSWITCH L449 Case 70 - false
   * Goal 15. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 21 LOOKUPSWITCH L449 Case 76 - false
   * Goal 16. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 22 LOOKUPSWITCH L449 Case 100 - false
   * Goal 17. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 23 LOOKUPSWITCH L449 Case 102 - false
   * Goal 18. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 24 LOOKUPSWITCH L449 Case 108 - false
   * Goal 19. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 25 LOOKUPSWITCH L449 Default-Case - true
   * Goal 20. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 49 IFNONNULL L556 - true
   * Goal 21. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 50 IFLT L559 - false
   * Goal 22. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I24 Branch 51 IF_ICMPEQ L560 - false
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 25. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 26. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 27. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 28. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 29. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I84 Branch 11 IF_ICMPLE L423 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 30. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I89 Branch 12 IF_ICMPGE L424 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 31. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I158 Branch 14 IFNE L440 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 32. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I163 Branch 15 IF_ICMPLE L441 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 33. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I169 Branch 16 IF_ICMPGE L441 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 34. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I202 Branch 17 IFEQ L448 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 35. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 20 LOOKUPSWITCH L449 Case 70 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 36. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 19 LOOKUPSWITCH L449 Case 68 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 37. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 21 LOOKUPSWITCH L449 Case 76 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 38. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 24 LOOKUPSWITCH L449 Case 108 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 39. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 25 LOOKUPSWITCH L449 Default-Case - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 40. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 22 LOOKUPSWITCH L449 Case 100 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 41. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 23 LOOKUPSWITCH L449 Case 102 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 42. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 49 IFNONNULL L556 - true in context: 
   * Goal 43. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 50 IFLT L559 - false in context: 
   * Goal 44. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I24 Branch 51 IF_ICMPEQ L560 - false in context: 
   * Goal 45. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 46. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 47. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 48. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 404
   * Goal 49. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 411
   * Goal 50. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 414
   * Goal 51. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 418
   * Goal 52. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 419
   * Goal 53. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 421
   * Goal 54. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 423
   * Goal 55. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 424
   * Goal 56. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 427
   * Goal 57. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 431
   * Goal 58. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 440
   * Goal 59. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 441
   * Goal 60. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 442
   * Goal 61. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 447
   * Goal 62. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 448
   * Goal 63. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 449
   * Goal 64. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 496
   * Goal 65. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 556
   * Goal 66. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 559
   * Goal 67. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 560
   * Goal 68. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 561
   * Goal 69. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 70. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 71. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 72. Weak Mutation 29: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - -- -> 
   * Goal 73. Weak Mutation 30: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - 0 -> 1
   * Goal 74. Weak Mutation 32: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceComparisonOperator <= -> ==
   * Goal 75. Weak Mutation 34: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0x -> 
   * Goal 76. Weak Mutation 35: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 77. Weak Mutation 37: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator > -> !=
   * Goal 78. Weak Mutation 39: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - -0x -> 
   * Goal 79. Weak Mutation 40: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 80. Weak Mutation 42: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator <= -> ==
   * Goal 81. Weak Mutation 44: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceConstant - 1 -> 0
   * Goal 82. Weak Mutation 45: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> +
   * Goal 83. Weak Mutation 46: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> %
   * Goal 84. Weak Mutation 47: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> *
   * Goal 85. Weak Mutation 48: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> /
   * Goal 86. Weak Mutation 49: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 0
   * Goal 87. Weak Mutation 50: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 1
   * Goal 88. Weak Mutation 51: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> -1
   * Goal 89. Weak Mutation 52: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 45
   * Goal 90. Weak Mutation 53: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 47
   * Goal 91. Weak Mutation 54: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 0
   * Goal 92. Weak Mutation 55: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 1
   * Goal 93. Weak Mutation 56: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> -1
   * Goal 94. Weak Mutation 57: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 100
   * Goal 95. Weak Mutation 58: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 102
   * Goal 96. Weak Mutation 59: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 0
   * Goal 97. Weak Mutation 60: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 1
   * Goal 98. Weak Mutation 61: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> -1
   * Goal 99. Weak Mutation 62: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 68
   * Goal 100. Weak Mutation 63: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 70
   * Goal 101. Weak Mutation 64: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 102. Weak Mutation 65: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 103. Weak Mutation 66: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 104. Weak Mutation 67: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 105. Weak Mutation 68: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 1 -> 0
   * Goal 106. Weak Mutation 69: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 107. Weak Mutation 70: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 108. Weak Mutation 71: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 109. Weak Mutation 72: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 110. Weak Mutation 77: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 0
   * Goal 111. Weak Mutation 78: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 1
   * Goal 112. Weak Mutation 79: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> -2
   * Goal 113. Weak Mutation 80: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceComparisonOperator <= -> -1
   * Goal 114. Weak Mutation 87: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceConstant - -1 -> 0
   * Goal 115. Weak Mutation 88: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceConstant - -1 -> 1
   * Goal 116. Weak Mutation 89: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceConstant - -1 -> -2
   * Goal 117. Weak Mutation 90: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceComparisonOperator <= -> -1
   * Goal 118. Weak Mutation 103: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:424 - ReplaceComparisonOperator >= -> ==
   * Goal 119. Weak Mutation 109: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:427 - ReplaceConstant - 1 -> 0
   * Goal 120. Weak Mutation 110: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:427 - ReplaceArithmeticOperator + -> %
   * Goal 121. Weak Mutation 111: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:427 - ReplaceArithmeticOperator + -> -
   * Goal 122. Weak Mutation 112: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:427 - ReplaceArithmeticOperator + -> *
   * Goal 123. Weak Mutation 113: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:427 - ReplaceArithmeticOperator + -> /
   * Goal 124. Weak Mutation 118: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:556 - ReplaceComparisonOperator != null -> = null
   * Goal 125. Weak Mutation 120: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceConstant - 1 -> 0
   * Goal 126. Weak Mutation 121: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> +
   * Goal 127. Weak Mutation 122: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> %
   * Goal 128. Weak Mutation 123: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> *
   * Goal 129. Weak Mutation 124: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> /
   * Goal 130. Weak Mutation 129: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceComparisonOperator < -> !=
   * Goal 131. Weak Mutation 134: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 0
   * Goal 132. Weak Mutation 135: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 1
   * Goal 133. Weak Mutation 136: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> -1
   * Goal 134. Weak Mutation 137: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 47
   * Goal 135. Weak Mutation 138: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 49
   * Goal 136. Weak Mutation 140: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceComparisonOperator == -> >=
   * Goal 137. Weak Mutation 142: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:561 - ReplaceConstant - 0 -> 1
   */

  @Test
  public void test188()  throws Throwable  {
      try { 
        NumberUtils.createNumber("org.apache.commons.lang.math.NumberUtils");
      } catch(NumberFormatException e) {
         //
         // org.apache.commons.lang.math.NumberUtils is not a valid number.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 189
  /*
   * 32 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - false
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: I3 Branch 55 IFNONNULL L611 - true
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 12. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 13. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: Line 611
   * Goal 14. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: Line 615
   * Goal 15. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 16. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 17. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 404
   * Goal 18. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 411
   * Goal 19. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 412
   * Goal 20. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 21. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 22. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 23. Weak Mutation 29: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - -- -> 
   * Goal 24. Weak Mutation 30: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 32: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceComparisonOperator <= -> ==
   * Goal 26. Weak Mutation 34: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0x -> 
   * Goal 27. Weak Mutation 35: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 37: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator > -> !=
   * Goal 29. Weak Mutation 39: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - -0x -> 
   * Goal 30. Weak Mutation 40: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 31. Weak Mutation 41: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator <= -> -1
   * Goal 32. Weak Mutation 150: org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;:611 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test189()  throws Throwable  {
      try { 
        NumberUtils.createNumber("-0x1=#decN}c");
      } catch(NumberFormatException e) {
         //
         // For input string: \"-1=#decN}c\"
         //
         assertThrownBy("java.lang.NumberFormatException", e);
      }
  }

  //Test case number: 190
  /*
   * 27 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: I3 Branch 55 IFNONNULL L611 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 10. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 11. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: Line 611
   * Goal 12. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: Line 615
   * Goal 13. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 14. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 15. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 404
   * Goal 16. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 411
   * Goal 17. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 412
   * Goal 18. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 19. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 21. Weak Mutation 29: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - -- -> 
   * Goal 22. Weak Mutation 30: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 32: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceComparisonOperator <= -> ==
   * Goal 24. Weak Mutation 34: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0x -> 
   * Goal 25. Weak Mutation 35: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 36: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator > -> -2
   * Goal 27. Weak Mutation 150: org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;:611 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test190()  throws Throwable  {
      try { 
        NumberUtils.createNumber("0xv\"");
      } catch(NumberFormatException e) {
         //
         // For input string: \"v\"\"
         //
         assertThrownBy("java.lang.NumberFormatException", e);
      }
  }

  //Test case number: 191
  /*
   * 18 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - false
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 404
   * Goal 10. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 409
   * Goal 11. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 12. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 13. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 14. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 15. Weak Mutation 29: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - -- -> 
   * Goal 16. Weak Mutation 30: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 31: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceComparisonOperator <= -> -1
   * Goal 18. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:null
   */

  @Test
  public void test191()  throws Throwable  {
      Number number0 = NumberUtils.createNumber("--");
  }

  //Test case number: 192
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 5. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 402
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 10. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 12. Weak Mutation 28: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:402 - ReplaceConstant - A blank string is not a valid number -> 
   */

  @Test
  public void test192()  throws Throwable  {
      try { 
        NumberUtils.createNumber("");
      } catch(NumberFormatException e) {
         //
         // A blank string is not a valid number
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 193
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 399
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 7. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:null
   */

  @Test
  public void test193()  throws Throwable  {
      Number number0 = NumberUtils.createNumber((String) null);
  }

  //Test case number: 194
  /*
   * 124 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I136 Branch 13 IF_ICMPLE L433 - false
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I158 Branch 14 IFNE L440 - false
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I163 Branch 15 IF_ICMPLE L441 - false
   * Goal 10. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I169 Branch 16 IF_ICMPGE L441 - true
   * Goal 11. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I202 Branch 17 IFEQ L448 - true
   * Goal 12. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 19 LOOKUPSWITCH L449 Case 68 - false
   * Goal 13. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 20 LOOKUPSWITCH L449 Case 70 - false
   * Goal 14. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 21 LOOKUPSWITCH L449 Case 76 - false
   * Goal 15. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 22 LOOKUPSWITCH L449 Case 100 - false
   * Goal 16. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 23 LOOKUPSWITCH L449 Case 102 - false
   * Goal 17. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 24 LOOKUPSWITCH L449 Case 108 - false
   * Goal 18. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 25 LOOKUPSWITCH L449 Default-Case - true
   * Goal 19. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 49 IFNONNULL L556 - true
   * Goal 20. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 50 IFLT L559 - false
   * Goal 21. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I24 Branch 51 IF_ICMPEQ L560 - false
   * Goal 22. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 25. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 26. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 27. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 28. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I136 Branch 13 IF_ICMPLE L433 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 29. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I158 Branch 14 IFNE L440 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 30. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I169 Branch 16 IF_ICMPGE L441 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 31. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I163 Branch 15 IF_ICMPLE L441 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 32. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I202 Branch 17 IFEQ L448 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 33. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 20 LOOKUPSWITCH L449 Case 70 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 34. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 19 LOOKUPSWITCH L449 Case 68 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 35. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 21 LOOKUPSWITCH L449 Case 76 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 36. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 24 LOOKUPSWITCH L449 Case 108 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 37. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 25 LOOKUPSWITCH L449 Default-Case - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 38. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 22 LOOKUPSWITCH L449 Case 100 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 39. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 23 LOOKUPSWITCH L449 Case 102 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 40. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 49 IFNONNULL L556 - true in context: 
   * Goal 41. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 50 IFLT L559 - false in context: 
   * Goal 42. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I24 Branch 51 IF_ICMPEQ L560 - false in context: 
   * Goal 43. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 44. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 45. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 46. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 404
   * Goal 47. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 411
   * Goal 48. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 414
   * Goal 49. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 418
   * Goal 50. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 419
   * Goal 51. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 421
   * Goal 52. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 433
   * Goal 53. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 434
   * Goal 54. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 438
   * Goal 55. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 440
   * Goal 56. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 441
   * Goal 57. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 444
   * Goal 58. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 447
   * Goal 59. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 448
   * Goal 60. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 449
   * Goal 61. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 496
   * Goal 62. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 556
   * Goal 63. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 559
   * Goal 64. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 560
   * Goal 65. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 561
   * Goal 66. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 67. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 68. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 69. Weak Mutation 29: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - -- -> 
   * Goal 70. Weak Mutation 30: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - 0 -> 1
   * Goal 71. Weak Mutation 32: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceComparisonOperator <= -> ==
   * Goal 72. Weak Mutation 34: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0x -> 
   * Goal 73. Weak Mutation 35: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 74. Weak Mutation 37: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator > -> !=
   * Goal 75. Weak Mutation 39: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - -0x -> 
   * Goal 76. Weak Mutation 40: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 77. Weak Mutation 42: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator <= -> ==
   * Goal 78. Weak Mutation 44: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceConstant - 1 -> 0
   * Goal 79. Weak Mutation 45: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> +
   * Goal 80. Weak Mutation 46: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> %
   * Goal 81. Weak Mutation 47: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> *
   * Goal 82. Weak Mutation 48: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> /
   * Goal 83. Weak Mutation 49: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 0
   * Goal 84. Weak Mutation 50: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 1
   * Goal 85. Weak Mutation 51: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> -1
   * Goal 86. Weak Mutation 52: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 45
   * Goal 87. Weak Mutation 53: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 47
   * Goal 88. Weak Mutation 54: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 0
   * Goal 89. Weak Mutation 55: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 1
   * Goal 90. Weak Mutation 56: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> -1
   * Goal 91. Weak Mutation 57: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 100
   * Goal 92. Weak Mutation 58: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 102
   * Goal 93. Weak Mutation 59: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 0
   * Goal 94. Weak Mutation 60: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 1
   * Goal 95. Weak Mutation 61: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> -1
   * Goal 96. Weak Mutation 62: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 68
   * Goal 97. Weak Mutation 63: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 70
   * Goal 98. Weak Mutation 64: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 99. Weak Mutation 65: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 100. Weak Mutation 66: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 101. Weak Mutation 67: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 102. Weak Mutation 68: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 1 -> 0
   * Goal 103. Weak Mutation 69: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 104. Weak Mutation 70: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 105. Weak Mutation 71: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 106. Weak Mutation 72: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 107. Weak Mutation 77: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 0
   * Goal 108. Weak Mutation 78: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 1
   * Goal 109. Weak Mutation 79: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> -2
   * Goal 110. Weak Mutation 81: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceComparisonOperator <= -> <
   * Goal 111. Weak Mutation 118: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:556 - ReplaceComparisonOperator != null -> = null
   * Goal 112. Weak Mutation 120: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceConstant - 1 -> 0
   * Goal 113. Weak Mutation 121: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> +
   * Goal 114. Weak Mutation 122: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> %
   * Goal 115. Weak Mutation 123: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> *
   * Goal 116. Weak Mutation 124: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceArithmeticOperator - -> /
   * Goal 117. Weak Mutation 129: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:559 - ReplaceComparisonOperator < -> !=
   * Goal 118. Weak Mutation 134: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 0
   * Goal 119. Weak Mutation 135: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 1
   * Goal 120. Weak Mutation 136: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> -1
   * Goal 121. Weak Mutation 137: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 47
   * Goal 122. Weak Mutation 138: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceConstant - 48 -> 49
   * Goal 123. Weak Mutation 140: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:560 - ReplaceComparisonOperator == -> >=
   * Goal 124. Weak Mutation 142: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:561 - ReplaceConstant - 0 -> 1
   */

  @Test
  public void test194()  throws Throwable  {
      try { 
        NumberUtils.createNumber("The");
      } catch(NumberFormatException e) {
         //
         // The is not a valid number.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 195
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: I3 Branch 4 IFNONNULL L325 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: I3 Branch 4 IFNONNULL L325 - false in context: org.apache.commons.lang.math.NumberUtils:toDouble(Ljava/lang/String;D)D
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 325
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 326
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D
   * Goal 7. Weak Mutation 23: org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D:325 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D:zero
   */

  @Test
  public void test195()  throws Throwable  {
      double double0 = NumberUtils.toDouble((String) null, 0.0);
  }

  //Test case number: 196
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: I3 Branch 3 IFNONNULL L273 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: I3 Branch 3 IFNONNULL L273 - false in context: org.apache.commons.lang.math.NumberUtils:toFloat(Ljava/lang/String;F)F
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 273
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 274
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F
   * Goal 7. Weak Mutation 18: org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F:273 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F:zero
   */

  @Test
  public void test196()  throws Throwable  {
      float float0 = NumberUtils.toFloat((String) null, 0.0F);
  }

  //Test case number: 197
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: I3 Branch 2 IFNONNULL L221 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: I3 Branch 2 IFNONNULL L221 - false in context: org.apache.commons.lang.math.NumberUtils:toLong(Ljava/lang/String;J)J
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 221
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 222
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J
   * Goal 7. Weak Mutation 13: org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J:221 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J:negative
   */

  @Test
  public void test197()  throws Throwable  {
      long long0 = NumberUtils.toLong((String) null, (long) (short) (-4654));
  }

  //Test case number: 198
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I: root-Branch
   * Goal 2. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I: root-Branch in context: org.apache.commons.lang.math.NumberUtils:toInt(Ljava/lang/String;)I
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I: Line 129
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 172
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 173
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I
   * Goal 9. Weak Mutation 0: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I:129 - ReplaceConstant - 0 -> 1
   * Goal 10. Weak Mutation 4: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:172 - ReplaceComparisonOperator != null -> = null
   * Goal 11. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I:zero
   */

  @Test
  public void test198()  throws Throwable  {
      int int0 = NumberUtils.toInt((String) null);
  }

  //Test case number: 199
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(FFF)F: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.max(FFF)F: root-Branch in context: org.apache.commons.lang.math.NumberUtils:max(FFF)F
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max(FFF)F: Line 1367
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max(FFF)F
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(FFF)F
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(FFF)F:zero
   */

  @Test
  public void test199()  throws Throwable  {
      float float0 = NumberUtils.max((float) (short)0, (float) (short)0, (float) (short) (-1));
  }

  //Test case number: 200
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;)J: root-Branch
   * Goal 2. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: I3 Branch 2 IFNONNULL L221 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;)J: root-Branch in context: org.apache.commons.lang.math.NumberUtils:toLong(Ljava/lang/String;)J
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;)J: Line 200
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 221
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 225
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 226
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 227
   * Goal 9. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;)J
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;)J
   * Goal 11. Weak Mutation 11: org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;)J:200 - ReplaceConstant - 0 -> 1
   * Goal 12. Weak Mutation 12: org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;)J:200 - ReplaceConstant - 0 -> -1
   * Goal 13. Weak Mutation 13: org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J:221 - ReplaceComparisonOperator != null -> = null
   * Goal 14. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;)J:zero
   */

  @Test
  public void test200()  throws Throwable  {
      long long0 = NumberUtils.toLong("A blank string is not a valid number");
  }

  //Test case number: 201
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(DDD)D: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.max(DDD)D: root-Branch in context: org.apache.commons.lang.math.NumberUtils:max(DDD)D
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max(DDD)D: Line 1352
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max(DDD)D
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(DDD)D
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(DDD)D:negative
   */

  @Test
  public void test201()  throws Throwable  {
      double double0 = NumberUtils.max((-1.0), (-1.0), (-277.884773562));
  }

  //Test case number: 202
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(DDD)D: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.min(DDD)D: root-Branch in context: org.apache.commons.lang.math.NumberUtils:min(DDD)D
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min(DDD)D: Line 1248
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min(DDD)D
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(DDD)D
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(DDD)D:zero
   */

  @Test
  public void test202()  throws Throwable  {
      double double0 = NumberUtils.min(1617.82171, (double) (byte)0, 1617.82171);
  }

  //Test case number: 203
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(FFF)F: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.min(FFF)F: root-Branch in context: org.apache.commons.lang.math.NumberUtils:min(FFF)F
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min(FFF)F: Line 1263
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min(FFF)F
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(FFF)F
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(FFF)F:negative
   */

  @Test
  public void test203()  throws Throwable  {
      float float0 = NumberUtils.min((float) (byte)0, (float) (byte)0, (-1.0F));
  }

  //Test case number: 204
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;)F: root-Branch
   * Goal 2. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: I3 Branch 3 IFNONNULL L273 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;)F: root-Branch in context: org.apache.commons.lang.math.NumberUtils:toFloat(Ljava/lang/String;)F
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;)F: Line 250
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 273
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 277
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 278
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 279
   * Goal 9. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;)F
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;)F
   * Goal 11. Weak Mutation 16: org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;)F:250 - ReplaceConstant - 0.0 -> 1.0
   * Goal 12. Weak Mutation 17: org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;)F:250 - ReplaceConstant - 0.0 -> -1.0
   * Goal 13. Weak Mutation 18: org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F:273 - ReplaceComparisonOperator != null -> = null
   * Goal 14. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;)F:zero
   */

  @Test
  public void test204()  throws Throwable  {
      float float0 = NumberUtils.toFloat("/3*8");
  }

  //Test case number: 205
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D: root-Branch
   * Goal 2. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: I3 Branch 4 IFNONNULL L325 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D: root-Branch in context: org.apache.commons.lang.math.NumberUtils:toDouble(Ljava/lang/String;)D
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D: Line 302
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 325
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 329
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 330
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 331
   * Goal 9. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D
   * Goal 11. Weak Mutation 21: org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D:302 - ReplaceConstant - 0.0 -> 1.0
   * Goal 12. Weak Mutation 22: org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D:302 - ReplaceConstant - 0.0 -> -1.0
   * Goal 13. Weak Mutation 23: org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D:325 - ReplaceComparisonOperator != null -> = null
   * Goal 14. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D:zero
   */

  @Test
  public void test205()  throws Throwable  {
      double double0 = NumberUtils.toDouble(",@'nSV#{0");
  }

  //Test case number: 206
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I: root-Branch
   * Goal 2. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I: root-Branch in context: org.apache.commons.lang.math.NumberUtils:stringToInt(Ljava/lang/String;I)I
   * Goal 4. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I: Line 151
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 172
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 176
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 177
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 178
   * Goal 9. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I
   * Goal 10. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I
   * Goal 11. Weak Mutation 4: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:172 - ReplaceComparisonOperator != null -> = null
   * Goal 12. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I:zero
   */

  @Test
  public void test206()  throws Throwable  {
      int int0 = NumberUtils.stringToInt("jYj(7LD$3u<xb", 0);
  }

  //Test case number: 207
  /*
   * 5 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.<init>()V: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.<init>()V: root-Branch in context: org.apache.commons.lang.math.NumberUtils:<init>()V
   * Goal 3. org.apache.commons.lang.math.NumberUtils.<init>()V: Line 86
   * Goal 4. org.apache.commons.lang.math.NumberUtils.<init>()V
   * Goal 5. org.apache.commons.lang.math.NumberUtils.<init>()V
   */

  @Test
  public void test207()  throws Throwable  {
      NumberUtils numberUtils0 = new NumberUtils();
  }

  //Test case number: 208
  /*
   * 15 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;)I: root-Branch
   * Goal 2. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I: root-Branch
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - true
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;)I: root-Branch in context: org.apache.commons.lang.math.NumberUtils:stringToInt(Ljava/lang/String;)I
   * Goal 5. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;)I: Line 108
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I: Line 129
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 172
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 176
   * Goal 9. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 177
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 178
   * Goal 11. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;)I
   * Goal 12. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;)I
   * Goal 13. Weak Mutation 0: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I:129 - ReplaceConstant - 0 -> 1
   * Goal 14. Weak Mutation 4: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:172 - ReplaceComparisonOperator != null -> = null
   * Goal 15. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;)I:zero
   */

  @Test
  public void test208()  throws Throwable  {
      int int0 = NumberUtils.stringToInt("w6){)J.Z");
  }
}
