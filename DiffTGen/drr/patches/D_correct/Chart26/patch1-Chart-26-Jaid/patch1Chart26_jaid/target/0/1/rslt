* EvoSuite 1.0.2
* Going to generate test cases for class: org.jfree.chart.axis.Axis
* Starting client
* Connecting to master process on port 11156
* Analyzing classpath: 
  - /home/wasp/Desktop/ICSE18/DiffTGen/drr/patches/D_correct/Chart26/patch1-Chart-26-Jaid/patch1Chart26_jaid/target/build/classes
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/myprinter.jar
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.jfree.chart.axis.Axis
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 317
  - Branch 170
  - Exception 0
  - MutationFactory 451
  - Output 112
  - Method 57
  - MethodNoException 57
  - CBranchFitnessFactory 170
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1552156952975
* Starting evolution
[Progress:=>                            5%] [Cov:>                                  1%][Progress:=>                            5%] [Cov:====>                              14%][Progress:=>                            6%] [Cov:>                                  1%][Progress:=>                            6%] [Cov:>                                  2%][Progress:=>                            6%] [Cov:====>                              14%][Progress:=>                            6%] [Cov:=====>                             15%][Progress:===>                          10%] [Cov:>                                  1%][Progress:===>                          10%] [Cov:>                                  2%][Progress:===>                          10%] [Cov:=====>                             15%][Progress:===>                          10%] [Cov:=====>                             16%][Progress:===>                          11%] [Cov:>                                  1%][Progress:===>                          11%] [Cov:>                                  2%][Progress:===>                          11%] [Cov:====>                              14%][Progress:===>                          11%] [Cov:=====>                             15%][Progress:===>                          11%] [Cov:=====>                             16%][Progress:===>                          11%] [Cov:======>                            18%][Progress:===>                          11%] [Cov:======>                            19%][Progress:===>                          11%] [Cov:=======>                           20%][Progress:===>                          13%] [Cov:>                                  1%][Progress:===>                          13%] [Cov:====>                              14%][Progress:===>                          13%] [Cov:=====>                             15%][Progress:===>                          13%] [Cov:=====>                             16%][Progress:===>                          13%] [Cov:=====>                             17%][Progress:===>                          13%] [Cov:======>                            18%][Progress:=====>                        18%] [Cov:>                                  2%][Progress:=====>                        18%] [Cov:=>                                 4%][Progress:=====>                        18%] [Cov:=====>                             16%][Progress:=====>                        18%] [Cov:======>                            18%][Progress:=====>                        18%] [Cov:======>                            19%][Progress:======>                       20%] [Cov:>                                  1%][Progress:======>                       20%] [Cov:>                                  2%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:=====>                             16%][Progress:======>                       20%] [Cov:=====>                             17%][Progress:======>                       21%] [Cov:====>                              13%][Progress:======>                       21%] [Cov:====>                              14%][Progress:======>                       21%] [Cov:=====>                             15%][Progress:======>                       21%] [Cov:======>                            19%][Progress:======>                       23%] [Cov:=====>                             15%][Progress:======>                       23%] [Cov:=====>                             17%][Progress:======>                       23%] [Cov:======>                            18%][Progress:======>                       23%] [Cov:===============>                   44%][Progress:=======>                      25%] [Cov:===============>                   44%][Progress:=======>                      25%] [Cov:===============>                   44%][Progress:=======>                      26%] [Cov:===============>                   43%][Progress:=======>                      26%] [Cov:===============>                   45%][Progress:========>                     28%] [Cov:===============>                   44%][Progress:========>                     28%] [Cov:===============>                   45%][Progress:========>                     28%] [Cov:================>                  46%][Progress:=========>                    30%] [Cov:===============>                   44%][Progress:=========>                    30%] [Cov:===============>                   45%][Progress:=========>                    30%] [Cov:================>                  47%][Progress:==========>                   35%] [Cov:================>                  47%][Progress:==========>                   35%] [Cov:================>                  48%][Progress:============>                 40%] [Cov:================>                  47%][Progress:============>                 40%] [Cov:================>                  48%][Progress:=============>                45%] [Cov:================>                  47%][Progress:=============>                45%] [Cov:================>                  48%][Progress:=============>                45%] [Cov:=================>                 49%][Progress:===============>              50%] [Cov:================>                  48%][Progress:===============>              50%] [Cov:=================>                 49%][Progress:================>             55%] [Cov:================>                  48%][Progress:================>             55%] [Cov:=================>                 49%][Progress:================>             55%] [Cov:=================>                 49%][Progress:==================>           60%] [Cov:=================>                 49%][Progress:==================>           60%] [Cov:=================>                 50%][Progress:==================>           61%] [Cov:=================>                 50%][Progress:===================>          66%] [Cov:=================>                 50%][Progress:===================>          66%] [Cov:=================>                 50%][Progress:=====================>        70%] [Cov:=================>                 50%][Progress:=====================>        71%] [Cov:=================>                 50%][Progress:======================>       75%] [Cov:=================>                 50%][Progress:========================>     80%] [Cov:=================>                 50%][Progress:========================>     80%] [Cov:=================>                 50%][Progress:=========================>    85%] [Cov:=================>                 50%][Progress:==========================>   88%] [Cov:=================>                 50%][Progress:===========================>  93%] [Cov:=================>                 50%][Progress:=============================>98%] [Cov:=================>                 50%][MASTER] 19:43:48.796 [logback-1] WARN  ResetExecutor - Stopped resetting of classes due to timeout
[Progress:==============================100%] [Cov:=================>                 50%][Progress:==============================100%] [Cov:=================>                 51%][Progress:==============================100%] [Cov:===================>               55%]
* Search finished after 63s and 12 generations, 10981 statements, best individual has fitness: 1328.624999999518
* Minimizing test suite
[MASTER] 19:44:55.143 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 51%
* Total number of goals: 317
* Number of covered goals: 161
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 44%
* Total number of goals: 170
* Number of covered goals: 75
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 7
* Number of covered goals: 7
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 56%
* Total number of goals: 451
* Number of covered goals: 252
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 19%
* Total number of goals: 112
* Number of covered goals: 21
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 79%
* Total number of goals: 57
* Number of covered goals: 45
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 79%
* Total number of goals: 57
* Number of covered goals: 45
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 42%
* Total number of goals: 170
* Number of covered goals: 71
* Generated 60 tests with total length 714
* Resulting test suite's coverage: 55% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 19:45:16.441 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in sun.reflect.NativeConstructorAccessorImpl
[MASTER] 19:45:16.442 [logback-1] WARN  JUnitAnalyzer - Failing test: NumberAxis numberAxis0 = new NumberAxis((String) null);
numberAxis0.addChangeListener((AxisChangeListener) null);
CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
JFreeChart jFreeChart0 = new JFreeChart("", (Plot) combinedDomainCategoryPlot0);
RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);

[MASTER] 19:45:22.744 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test51 -> class java.lang.AssertionError: Exception was not thrown in sun.reflect.NativeConstructorAccessorImpl
[MASTER] 19:45:22.745 [logback-1] WARN  JUnitAnalyzer - Failing test: NumberAxis numberAxis0 = new NumberAxis((String) null);
numberAxis0.addChangeListener((AxisChangeListener) null);
CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
JFreeChart jFreeChart0 = new JFreeChart("", (Plot) combinedDomainCategoryPlot0);
RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);

[MASTER] 19:45:28.600 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test08 -> class java.lang.AssertionError: Exception was not thrown in sun.reflect.NativeConstructorAccessorImpl
[MASTER] 19:45:28.600 [logback-1] WARN  JUnitAnalyzer - Failing test: NumberAxis numberAxis0 = new NumberAxis((String) null);
numberAxis0.addChangeListener((AxisChangeListener) null);
CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
JFreeChart jFreeChart0 = new JFreeChart("", (Plot) combinedDomainCategoryPlot0);
RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);

* Permissions denied during test execution: 
  - java.io.FilePermission: 
         write /tmp/+~JT5202064653909354479.tmp: 1
  - java.lang.RuntimePermission: 
         loadLibrary.javalcms: 1
* Writing JUnit test case 'Axis_ESTest' to evosuite-tests
* Done!

* Computation finished
