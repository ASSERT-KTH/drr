* EvoSuite 1.0.2
* Going to generate test cases for class: org.apache.commons.lang3.StringUtils
* Starting client
* Connecting to master process on port 10627
* Analyzing classpath: 
  - /home/wasp/Desktop/ICSE18/DiffTGen/drr/patches/D_correct/Lang20/patch1-Lang-20-Arja/patch1Lang20_arja/target/build/classes
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/myprinter.jar
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang3.StringUtils
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 1251
  - Branch 1187
  - Exception 0
  - MutationFactory 1002
  - Output 376
  - Method 155
  - MethodNoException 155
  - CBranchFitnessFactory 1187
* Using seed 1552261256212
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:>                             1%] [Cov:>                                  1%][Progress:>                             1%] [Cov:=>                                 3%][Progress:>                             1%] [Cov:=====>                             15%][Progress:>                             1%] [Cov:=====>                             16%][Progress:>                             1%] [Cov:=====>                             17%][Progress:>                             1%] [Cov:======>                            19%][Progress:>                             1%] [Cov:=======>                           20%][Progress:>                             3%] [Cov:>                                  2%][Progress:>                             3%] [Cov:=>                                 3%][Progress:>                             3%] [Cov:=====>                             16%][Progress:>                             3%] [Cov:=====>                             17%][Progress:>                             3%] [Cov:======>                            18%][Progress:>                             3%] [Cov:=======>                           21%][Progress:>                             3%] [Cov:========>                          24%][Progress:=>                            5%] [Cov:>                                  0%][Progress:=>                            5%] [Cov:>                                  1%][Progress:=>                            5%] [Cov:====>                              14%][Progress:=>                            6%] [Cov:>                                  2%][Progress:=>                            6%] [Cov:=>                                 4%][Progress:=>                            6%] [Cov:=====>                             16%][Progress:=>                            6%] [Cov:======>                            18%][Progress:=>                            6%] [Cov:======>                            19%][Progress:=>                            6%] [Cov:=======>                           21%][Progress:=>                            6%] [Cov:========>                          24%][Progress:==>                           8%] [Cov:>                                  2%][Progress:==>                           8%] [Cov:=>                                 4%][Progress:==>                           8%] [Cov:=====>                             16%][Progress:==>                           8%] [Cov:=====>                             17%][Progress:==>                           8%] [Cov:======>                            19%][Progress:==>                           8%] [Cov:=======>                           21%][Progress:==>                           8%] [Cov:========>                          24%][Progress:===>                          10%] [Cov:>                                  1%][Progress:===>                          10%] [Cov:=>                                 3%][Progress:===>                          10%] [Cov:=====>                             16%][Progress:===>                          10%] [Cov:=====>                             17%][Progress:===>                          10%] [Cov:======>                            18%][Progress:===>                          10%] [Cov:=======>                           20%][Progress:===>                          10%] [Cov:=======>                           22%][Progress:===>                          10%] [Cov:========>                          23%][Progress:===>                          10%] [Cov:========>                          24%][Progress:===>                          10%] [Cov:=========>                         27%][Progress:===>                          11%] [Cov:>                                  2%][Progress:===>                          11%] [Cov:=>                                 3%][Progress:===>                          11%] [Cov:=====>                             16%][Progress:===>                          11%] [Cov:=====>                             17%][Progress:===>                          11%] [Cov:======>                            18%][Progress:===>                          11%] [Cov:=======>                           21%][Progress:===>                          11%] [Cov:========>                          23%][Progress:===>                          11%] [Cov:========>                          24%][Progress:===>                          13%] [Cov:>                                  2%][Progress:===>                          13%] [Cov:=>                                 4%][Progress:===>                          13%] [Cov:=====>                             17%][Progress:===>                          13%] [Cov:======>                            19%][Progress:===>                          13%] [Cov:=======>                           20%][Progress:===>                          13%] [Cov:========>                          23%][Progress:===>                          13%] [Cov:=========>                         27%][Progress:====>                         15%] [Cov:>                                  1%][Progress:====>                         15%] [Cov:>                                  2%][Progress:====>                         15%] [Cov:====>                              14%][Progress:====>                         15%] [Cov:=====>                             15%][Progress:====>                         15%] [Cov:=====>                             16%][Progress:====>                         15%] [Cov:=====>                             17%][Progress:====>                         15%] [Cov:======>                            18%][Progress:======>                       20%] [Cov:>                                  2%][Progress:======>                       20%] [Cov:=>                                 4%][Progress:======>                       20%] [Cov:=====>                             17%][Progress:======>                       20%] [Cov:======>                            19%][Progress:======>                       20%] [Cov:=======>                           20%][Progress:======>                       20%] [Cov:=======>                           22%][Progress:======>                       20%] [Cov:========>                          25%][Progress:======>                       21%] [Cov:>                                  2%][Progress:======>                       21%] [Cov:=>                                 3%][Progress:======>                       21%] [Cov:=====>                             16%][Progress:======>                       21%] [Cov:=====>                             17%][Progress:======>                       21%] [Cov:======>                            19%][Progress:======>                       21%] [Cov:=======>                           21%][Progress:======>                       21%] [Cov:========>                          23%][Progress:=======>                      26%] [Cov:>                                  2%][Progress:=======>                      26%] [Cov:=>                                 4%][Progress:=======>                      26%] [Cov:=====>                             17%][Progress:=======>                      26%] [Cov:======>                            19%][Progress:=======>                      26%] [Cov:=======>                           21%][Progress:=======>                      26%] [Cov:========>                          24%][Progress:=======>                      26%] [Cov:=========>                         27%][Progress:========>                     28%] [Cov:>                                  2%][Progress:========>                     28%] [Cov:=>                                 4%][Progress:========>                     28%] [Cov:=====>                             16%][Progress:========>                     28%] [Cov:======>                            18%][Progress:========>                     28%] [Cov:======>                            19%][Progress:========>                     28%] [Cov:=======>                           21%][Progress:========>                     28%] [Cov:========>                          23%][Progress:========>                     28%] [Cov:========>                          24%][Progress:=========>                    30%] [Cov:>                                  2%][Progress:=========>                    30%] [Cov:=>                                 4%][Progress:=========>                    30%] [Cov:=====>                             16%][Progress:=========>                    30%] [Cov:======>                            18%][Progress:=========>                    30%] [Cov:=======>                           20%][Progress:=========>                    30%] [Cov:========>                          23%][Progress:=========>                    30%] [Cov:=========>                         27%][Progress:=========>                    31%] [Cov:=>                                 3%][Progress:=========>                    31%] [Cov:==>                                6%][Progress:=========>                    31%] [Cov:======>                            19%][Progress:=========>                    31%] [Cov:=======>                           22%][Progress:=========>                    31%] [Cov:========>                          23%][Progress:=========>                    31%] [Cov:========>                          25%][Progress:=========>                    31%] [Cov:=========>                         27%][Progress:=========>                    33%] [Cov:=====>                             16%][Progress:=========>                    33%] [Cov:=====>                             17%][Progress:=========>                    33%] [Cov:=======>                           20%][Progress:=========>                    33%] [Cov:=======>                           22%][Progress:=========>                    33%] [Cov:========>                          24%][Progress:==========>                   35%] [Cov:>                                  2%][Progress:==========>                   35%] [Cov:=>                                 4%][Progress:==========>                   35%] [Cov:=====>                             16%][Progress:==========>                   35%] [Cov:======>                            18%][Progress:==========>                   35%] [Cov:======>                            19%][Progress:==========>                   35%] [Cov:========>                          23%][Progress:==========>                   35%] [Cov:=========>                         26%][Progress:===========>                  38%] [Cov:=>                                 3%][Progress:===========>                  38%] [Cov:==>                                6%][Progress:===========>                  38%] [Cov:======>                            19%][Progress:===========>                  38%] [Cov:=======>                           22%][Progress:===========>                  38%] [Cov:========>                          24%][Progress:===========>                  38%] [Cov:==========>                        29%][Progress:===========>                  38%] [Cov:===========>                       33%][Progress:============>                 40%] [Cov:>                                  2%][Progress:============>                 40%] [Cov:=>                                 4%][Progress:============>                 40%] [Cov:=====>                             17%][Progress:============>                 40%] [Cov:======>                            18%][Progress:============>                 40%] [Cov:=======>                           20%][Progress:============>                 40%] [Cov:=======>                           22%][Progress:============>                 40%] [Cov:========>                          25%][Progress:============>                 40%] [Cov:=========>                         26%][Progress:============>                 40%] [Cov:===========>                       33%][Progress:============>                 41%] [Cov:=========>                         27%][Progress:============>                 41%] [Cov:===========>                       34%][Progress:============>                 43%] [Cov:===========>                       33%][Progress:=============>                45%] [Cov:======>                            19%][Progress:=============>                45%] [Cov:==========>                        30%][Progress:=============>                45%] [Cov:===========>                       34%][Progress:=============>                46%] [Cov:=========>                         27%][Progress:==============>               48%] [Cov:=======>                           20%][Progress:==============>               48%] [Cov:=======>                           22%][Progress:==============>               48%] [Cov:========>                          23%][Progress:==============>               48%] [Cov:===========================>       78%][Progress:===============>              50%] [Cov:==========================>        77%][Progress:===============>              50%] [Cov:===========================>       78%][Progress:===============>              51%] [Cov:==========================>        77%][Progress:===============>              51%] [Cov:===========================>       78%][Progress:===============>              53%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:===========================>       78%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:===========================>       78%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:===========================>       78%][Progress:==================>           61%] [Cov:==========================>        77%][Progress:==================>           61%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:===================>          65%] [Cov:===========================>       78%][Progress:===================>          65%] [Cov:===========================>       79%][Progress:===================>          65%] [Cov:===========================>       79%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       78%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        73%] [Cov:===========================>       79%][Progress:======================>       75%] [Cov:===========================>       79%][Progress:======================>       76%] [Cov:===========================>       79%][Progress:=======================>      78%] [Cov:===========================>       79%][Progress:=======================>      78%] [Cov:============================>      80%][Progress:========================>     80%] [Cov:===========================>       79%][Progress:========================>     80%] [Cov:============================>      80%][Progress:========================>     81%] [Cov:===========================>       79%][Progress:========================>     81%] [Cov:============================>      80%][Progress:========================>     83%] [Cov:===========================>       79%][Progress:========================>     83%] [Cov:============================>      80%][Progress:=========================>    85%] [Cov:===========================>       79%][Progress:=========================>    85%] [Cov:============================>      80%][Progress:=========================>    86%] [Cov:===========================>       79%][Progress:=========================>    86%] [Cov:============================>      80%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:============================>      80%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:============================>      80%][Progress:===========================>  93%] [Cov:============================>      80%][Progress:============================> 95%] [Cov:===========================>       79%][Progress:============================> 95%] [Cov:============================>      80%][Progress:============================> 95%] [Cov:============================>      80%][Progress:============================> 96%] [Cov:============================>      80%][Progress:=============================>98%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][MASTER] 00:42:02.016 [logback-1] WARN  ResetExecutor - Stopped resetting of classes due to timeout
[MASTER] 00:42:15.667 [logback-1] WARN  TimeController - Operation 'update from archive' took too long: 14056ms
[Progress:==============================100%] [Cov:==============================>    86%]
* Search finished after 76s and 10 generations, 13977 statements, best individual has fitness: 6432.347645938636
[MASTER] 00:42:17.272 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 16 seconds more than allowed.
* Minimizing test suite
[MASTER] 00:43:31.639 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 1251
* Number of covered goals: 1092
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 83%
* Total number of goals: 1187
* Number of covered goals: 989
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 10
* Number of covered goals: 10
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 72%
* Total number of goals: 1002
* Number of covered goals: 725
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 77%
* Total number of goals: 376
* Number of covered goals: 291
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 155
* Number of covered goals: 155
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 155
* Number of covered goals: 155
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 71%
* Total number of goals: 1187
* Number of covered goals: 848
* Generated 207 tests with total length 2328
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 00:44:02.459 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 00:44:02.461 [logback-1] WARN  JUnitAnalyzer - Failing test: String string0 = StringUtils.repeat("za_>", 0);
int int0 = StringUtils.lastIndexOf((CharSequence) "", (CharSequence) "");
Locale locale0 = Locale.KOREAN;
String string1 = StringUtils.upperCase("za_>", locale0);
String string2 = StringUtils.substring("ZA_>", 0, 0);
String string3 = StringUtils.reverse("Xk@qcN");
Locale locale1 = locale0.stripExtensions();
boolean boolean0 = StringUtils.endsWith("", "");
String string4 = StringUtils.removeEndIgnoreCase("ZA_>", "wMLq!;M1xOVmZ>Ci");
String string5 = "org.apache.commons.lang3.StringUtils";
int int1 = Integer.MAX_VALUE;
String string6 = StringUtils.leftPad(string5, int1);
String string7 = StringUtils.lowerCase(string2);
int int2 = 3216;
int int3 = StringUtils.lastIndexOf((CharSequence) string0, int0, int2);

[MASTER] 00:44:07.129 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Requested array size exceeds VM limit
[MASTER] 00:44:07.130 [logback-1] WARN  JUnitAnalyzer - Failing test: String string0 = "";
int int0 = Integer.MAX_VALUE;
char char0 = '$';
String string1 = StringUtils.rightPad(string0, int0, char0);
String[] stringArray0 = new String[2];
String string2 = StringUtils.swapCase(string0);
char char1 = '@';
String string3 = StringUtils.reverseDelimited(string0, char1);
int int1 = StringUtils.lastIndexOfIgnoreCase((CharSequence) string0, (CharSequence) string3, int0);

* Writing JUnit test case 'StringUtils_ESTest' to evosuite-tests
* Done!

* Computation finished
