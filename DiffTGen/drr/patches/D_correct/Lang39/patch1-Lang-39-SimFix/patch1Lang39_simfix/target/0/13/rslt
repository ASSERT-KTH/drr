* EvoSuite 1.0.2
* Going to generate test cases for class: org.apache.commons.lang3.StringUtils
* Starting client
* Connecting to master process on port 16875
* Analyzing classpath: 
  - /home/wasp/Desktop/ICSE18/DiffTGen/drr/patches/D_correct/Lang39/patch1-Lang-39-SimFix/patch1Lang39_simfix/target/build/classes
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/myprinter.jar
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang3.StringUtils
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 1112
  - Branch 1040
  - Exception 0
  - MutationFactory 874
  - Output 341
  - Method 143
  - MethodNoException 143
  - CBranchFitnessFactory 1040
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1552246331936
* Starting evolution
[Progress:>                             0%] [Cov:>                                  2%][Progress:>                             0%] [Cov:=>                                 4%][Progress:>                             0%] [Cov:=====>                             16%][Progress:>                             0%] [Cov:======>                            18%][Progress:>                             0%] [Cov:======>                            19%][Progress:>                             0%] [Cov:=======>                           22%][Progress:>                             0%] [Cov:=========>                         26%][Progress:>                             1%] [Cov:=========>                         26%][Progress:=>                            5%] [Cov:>                                  2%][Progress:=>                            5%] [Cov:=>                                 4%][Progress:=>                            5%] [Cov:=====>                             16%][Progress:=>                            5%] [Cov:======>                            18%][Progress:=>                            5%] [Cov:======>                            19%][Progress:=>                            5%] [Cov:=======>                           22%][Progress:=>                            5%] [Cov:========>                          24%][Progress:=>                            6%] [Cov:>                                  2%][Progress:=>                            6%] [Cov:=>                                 4%][Progress:=>                            6%] [Cov:=====>                             17%][Progress:=>                            6%] [Cov:======>                            19%][Progress:=>                            6%] [Cov:=======>                           20%][Progress:=>                            6%] [Cov:========>                          23%][Progress:=>                            6%] [Cov:=========>                         26%][Progress:==>                           8%] [Cov:=>                                 3%][Progress:==>                           8%] [Cov:=>                                 5%][Progress:==>                           8%] [Cov:======>                            18%][Progress:==>                           8%] [Cov:=======>                           20%][Progress:==>                           8%] [Cov:=======>                           21%][Progress:==>                           8%] [Cov:========>                          24%][Progress:==>                           8%] [Cov:=========>                         26%][Progress:==>                           8%] [Cov:=========>                         27%][Progress:===>                          10%] [Cov:=>                                 3%][Progress:===>                          10%] [Cov:=>                                 5%][Progress:===>                          10%] [Cov:=====>                             17%][Progress:===>                          10%] [Cov:=======>                           20%][Progress:===>                          10%] [Cov:=======>                           21%][Progress:===>                          10%] [Cov:========>                          24%][Progress:===>                          10%] [Cov:=========>                         28%][Progress:===>                          11%] [Cov:>                                  2%][Progress:===>                          11%] [Cov:=>                                 4%][Progress:===>                          11%] [Cov:=====>                             16%][Progress:===>                          11%] [Cov:=====>                             17%][Progress:===>                          11%] [Cov:======>                            19%][Progress:===>                          11%] [Cov:=======>                           22%][Progress:===>                          11%] [Cov:=========>                         26%][Progress:===>                          13%] [Cov:>                                  1%][Progress:===>                          13%] [Cov:=>                                 3%][Progress:===>                          13%] [Cov:=====>                             15%][Progress:===>                          13%] [Cov:=====>                             16%][Progress:===>                          13%] [Cov:=====>                             17%][Progress:===>                          13%] [Cov:======>                            18%][Progress:===>                          13%] [Cov:======>                            19%][Progress:===>                          13%] [Cov:=======>                           20%][Progress:===>                          13%] [Cov:=======>                           21%][Progress:===>                          13%] [Cov:========>                          25%][Progress:===>                          13%] [Cov:=========>                         28%][Progress:===>                          13%] [Cov:==========>                        29%][Progress:====>                         15%] [Cov:>                                  1%][Progress:====>                         15%] [Cov:=>                                 3%][Progress:====>                         15%] [Cov:=====>                             15%][Progress:====>                         15%] [Cov:=====>                             16%][Progress:====>                         15%] [Cov:=====>                             17%][Progress:====>                         15%] [Cov:======>                            18%][Progress:====>                         15%] [Cov:======>                            19%][Progress:====>                         15%] [Cov:=======>                           20%][Progress:====>                         16%] [Cov:>                                  2%][Progress:====>                         16%] [Cov:=>                                 4%][Progress:====>                         16%] [Cov:=====>                             17%][Progress:====>                         16%] [Cov:======>                            18%][Progress:====>                         16%] [Cov:=======>                           20%][Progress:====>                         16%] [Cov:=======>                           22%][Progress:====>                         16%] [Cov:========>                          25%][Progress:====>                         16%] [Cov:=========>                         26%][Progress:====>                         16%] [Cov:==========>                        30%][Progress:=====>                        18%] [Cov:=>                                 3%][Progress:=====>                        18%] [Cov:==>                                6%][Progress:=====>                        18%] [Cov:======>                            18%][Progress:=====>                        18%] [Cov:=======>                           21%][Progress:=====>                        18%] [Cov:========>                          23%][Progress:=====>                        18%] [Cov:=========>                         27%][Progress:=====>                        18%] [Cov:==========>                        31%][Progress:=====>                        18%] [Cov:===========>                       32%][Progress:======>                       20%] [Cov:>                                  2%][Progress:======>                       20%] [Cov:=>                                 3%][Progress:======>                       20%] [Cov:=====>                             16%][Progress:======>                       20%] [Cov:=====>                             17%][Progress:======>                       20%] [Cov:======>                            18%][Progress:======>                       20%] [Cov:=======>                           20%][Progress:======>                       20%] [Cov:=======>                           21%][Progress:======>                       20%] [Cov:=======>                           22%][Progress:======>                       20%] [Cov:========>                          23%][Progress:======>                       20%] [Cov:=========>                         27%][Progress:======>                       20%] [Cov:===========>                       32%][Progress:======>                       20%] [Cov:===========>                       33%][Progress:======>                       21%] [Cov:>                                  2%][Progress:======>                       21%] [Cov:=>                                 4%][Progress:======>                       21%] [Cov:=====>                             17%][Progress:======>                       21%] [Cov:======>                            19%][Progress:======>                       21%] [Cov:=======>                           20%][Progress:======>                       21%] [Cov:========>                          23%][Progress:======>                       21%] [Cov:=========>                         26%][Progress:======>                       21%] [Cov:==========>                        29%][Progress:=======>                      26%] [Cov:=>                                 3%][Progress:=======>                      26%] [Cov:=>                                 5%][Progress:=======>                      26%] [Cov:=====>                             17%][Progress:=======>                      26%] [Cov:=======>                           20%][Progress:=======>                      26%] [Cov:=======>                           21%][Progress:=======>                      26%] [Cov:========>                          24%][Progress:=======>                      26%] [Cov:=========>                         28%][Progress:========>                     28%] [Cov:======>                            19%][Progress:========>                     28%] [Cov:=======>                           22%][Progress:========>                     28%] [Cov:========>                          25%][Progress:=========>                    30%] [Cov:=>                                 4%][Progress:=========>                    30%] [Cov:==>                                8%][Progress:=========>                    30%] [Cov:=======>                           20%][Progress:=========>                    30%] [Cov:========>                          25%][Progress:=========>                    30%] [Cov:=========>                         27%][Progress:=========>                    30%] [Cov:===========>                       32%][Progress:=========>                    30%] [Cov:============>                      36%][Progress:=========>                    30%] [Cov:============>                      37%][Progress:=========>                    31%] [Cov:>                                  2%][Progress:=========>                    31%] [Cov:=>                                 3%][Progress:=========>                    31%] [Cov:=====>                             16%][Progress:=========>                    31%] [Cov:=====>                             17%][Progress:=========>                    31%] [Cov:======>                            18%][Progress:=========>                    31%] [Cov:=======>                           21%][Progress:=========>                    31%] [Cov:========>                          24%][Progress:=========>                    31%] [Cov:========>                          25%][Progress:=========>                    31%] [Cov:============>                      37%][Progress:=========>                    33%] [Cov:=========>                         26%][Progress:=========>                    33%] [Cov:=========>                         27%][Progress:=========>                    33%] [Cov:=========>                         28%][Progress:=========>                    33%] [Cov:==========>                        29%][Progress:=========>                    33%] [Cov:==========>                        30%][Progress:=========>                    33%] [Cov:==========>                        31%][Progress:=========>                    33%] [Cov:===========>                       32%][Progress:=========>                    33%] [Cov:============>                      35%][Progress:=========>                    33%] [Cov:============>                      36%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:===========================>       79%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:===========================>       79%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      80%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      80%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      82%][Progress:==============>               48%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      82%][Progress:===============>              51%] [Cov:============================>      82%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      82%][Progress:================>             55%] [Cov:============================>      82%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      82%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      82%][Progress:=================>            58%] [Cov:============================>      82%][Progress:==================>           63%] [Cov:============================>      82%][Progress:===================>          65%] [Cov:============================>      82%][Progress:===================>          66%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      80%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:=============================>     83%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        73%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       76%] [Cov:============================>      82%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:=============================>     83%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][MASTER] 20:33:18.016 [logback-1] WARN  ResetExecutor - Stopped resetting of classes due to timeout
[MASTER] 20:33:28.564 [logback-1] WARN  TimeController - Operation 'update from archive' took too long: 10757ms
[Progress:==============================100%] [Cov:===============================>   89%]
* Search finished after 74s and 12 generations, 18124 statements, best individual has fitness: 5048.125793854415
[MASTER] 20:33:29.703 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 13 seconds more than allowed.
* Minimizing test suite
[MASTER] 20:34:41.476 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 1112
* Number of covered goals: 1015
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 1040
* Number of covered goals: 923
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 77%
* Total number of goals: 874
* Number of covered goals: 670
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 82%
* Total number of goals: 341
* Number of covered goals: 278
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 143
* Number of covered goals: 143
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 143
* Number of covered goals: 143
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 76%
* Total number of goals: 1040
* Number of covered goals: 792
* Generated 219 tests with total length 2575
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 20:35:21.454 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 20:35:21.455 [logback-1] WARN  JUnitAnalyzer - Failing test: String string0 = "G&Z,x!==Z^cE]9[K.N7qA/\\G&Z,x!==Z^cE]9[K.N7qA/\\G&Z,x!==Z^cE]9[K.N7qA/\\G&Z,x!==Z^cE]9[K.N7qA/\\G&Z,x!==Z^cE]9[K.N7qA/\\G&Z,x!==Z^cE]9[K.N7qA/\\G&Z,x!==Z^cE]9[K.N7qA/\\G&Z,x!==Z^cE]9[K.N7qA/\\G&Z,x!==Z^cE]9[K.N7qA/\\G&Z,x!==Z^cE]9[K.N7qA/\\G&Z,x!==Z^cE]9[K.N7qA/\\G&Z,x!==Z^cE]9[K.N7qA/\\G&Z,x!==Z^cE]9[K.N7qA/\\G&Z,x!==Z^cE]9[K.N7qA/\\x!==Z^cE]9[K.N7qA/\\";
int int0 = Integer.MAX_VALUE;
char char0 = 'H';
String string1 = StringUtils.leftPad(string0, int0, char0);
String[] stringArray0 = new String[9];
stringArray0[0] = string1;
stringArray0[1] = string1;
stringArray0[2] = string1;
stringArray0[3] = string1;
stringArray0[4] = string0;
stringArray0[5] = string0;
stringArray0[6] = string0;
stringArray0[7] = string1;
String string2 = "JAVA_1_6";
stringArray0[8] = string2;
int int1 = StringUtils.indexOfDifference(stringArray0);
String string3 = StringUtils.stripAccents(string1);
boolean boolean0 = StringUtils.isAlphaSpace(string3);
String string4 = "FmBx5s^P";
int int2 = StringUtils.countMatches(string4, stringArray0[5]);
boolean boolean1 = StringUtils.isAlphaSpace(string0);
String string5 = "s2Q,v}0kNeDo<Y41$y";
String string6 = StringUtils.substringBeforeLast(stringArray0[2], string5);
int int3 = StringUtils.lastIndexOf(stringArray0[5], char0, int1);
String string7 = StringUtils.replace(stringArray0[7], stringArray0[1], stringArray0[6], int0);
String string8 = "The Character must not be null";
int int4 = 24;
String[] stringArray1 = StringUtils.splitByWholeSeparatorPreserveAllTokens(string8, stringArray0[4], int4);
String string9 = "(jNTT=<7{kEo=";
String[] stringArray2 = new String[6];
stringArray2[0] = string7;
stringArray2[1] = string9;
stringArray2[2] = string0;
stringArray2[3] = string4;
stringArray2[4] = string3;
stringArray2[5] = string3;
boolean boolean2 = StringUtils.startsWithAny(string9, stringArray2);

* Writing JUnit test case 'StringUtils_ESTest' to evosuite-tests
* Done!

* Computation finished
