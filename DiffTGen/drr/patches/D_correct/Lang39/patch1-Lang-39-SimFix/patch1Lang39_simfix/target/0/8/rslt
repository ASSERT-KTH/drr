* EvoSuite 1.0.2
* Going to generate test cases for class: org.apache.commons.lang3.StringUtils
* Starting client
* Connecting to master process on port 14683
* Analyzing classpath: 
  - /home/wasp/Desktop/ICSE18/DiffTGen/drr/patches/D_correct/Lang39/patch1-Lang-39-SimFix/patch1Lang39_simfix/target/build/classes
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/myprinter.jar
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang3.StringUtils
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 1112
  - Branch 1040
  - Exception 0
  - MutationFactory 874
  - Output 341
  - Method 143
  - MethodNoException 143
  - CBranchFitnessFactory 1040
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1552245251258
* Starting evolution
[Progress:>                             0%] [Cov:====>                              13%][Progress:>                             1%] [Cov:>                                  0%][Progress:>                             1%] [Cov:>                                  1%][Progress:>                             1%] [Cov:====>                              13%][Progress:>                             1%] [Cov:====>                              14%][Progress:>                             1%] [Cov:=====>                             15%][Progress:>                             3%] [Cov:=>                                 3%][Progress:>                             3%] [Cov:==>                                6%][Progress:>                             3%] [Cov:======>                            18%][Progress:>                             3%] [Cov:=======>                           21%][Progress:>                             3%] [Cov:========>                          23%][Progress:>                             3%] [Cov:=========>                         26%][Progress:>                             3%] [Cov:==========>                        29%][Progress:>                             3%] [Cov:==========>                        30%][Progress:=>                            5%] [Cov:>                                  2%][Progress:=>                            5%] [Cov:=>                                 3%][Progress:=>                            5%] [Cov:=====>                             16%][Progress:=>                            5%] [Cov:=====>                             17%][Progress:=>                            5%] [Cov:======>                            18%][Progress:=>                            5%] [Cov:=======>                           20%][Progress:=>                            5%] [Cov:=======>                           22%][Progress:=>                            6%] [Cov:>                                  2%][Progress:=>                            6%] [Cov:=>                                 5%][Progress:=>                            6%] [Cov:=====>                             17%][Progress:=>                            6%] [Cov:======>                            19%][Progress:=>                            6%] [Cov:=======>                           21%][Progress:=>                            6%] [Cov:========>                          24%][Progress:=>                            6%] [Cov:=========>                         27%][Progress:==>                           8%] [Cov:=>                                 4%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:======>                            19%][Progress:==>                           8%] [Cov:========>                          23%][Progress:==>                           8%] [Cov:========>                          25%][Progress:==>                           8%] [Cov:=========>                         26%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:==>                           8%] [Cov:==========>                        29%][Progress:==>                           8%] [Cov:===========>                       33%][Progress:==>                           8%] [Cov:===========>                       34%][Progress:===>                          10%] [Cov:>                                  2%][Progress:===>                          10%] [Cov:=>                                 4%][Progress:===>                          10%] [Cov:=====>                             17%][Progress:===>                          10%] [Cov:======>                            19%][Progress:===>                          10%] [Cov:=======>                           20%][Progress:===>                          10%] [Cov:========>                          24%][Progress:===>                          10%] [Cov:==========>                        29%][Progress:===>                          11%] [Cov:>                                  2%][Progress:===>                          11%] [Cov:=>                                 3%][Progress:===>                          11%] [Cov:=====>                             16%][Progress:===>                          11%] [Cov:=====>                             17%][Progress:===>                          11%] [Cov:======>                            18%][Progress:===>                          11%] [Cov:=======>                           21%][Progress:===>                          11%] [Cov:========>                          24%][Progress:===>                          11%] [Cov:========>                          25%][Progress:===>                          13%] [Cov:>                                  2%][Progress:===>                          13%] [Cov:=>                                 4%][Progress:===>                          13%] [Cov:=====>                             17%][Progress:===>                          13%] [Cov:======>                            19%][Progress:===>                          13%] [Cov:=======>                           20%][Progress:===>                          13%] [Cov:========>                          23%][Progress:===>                          13%] [Cov:=========>                         26%][Progress:===>                          13%] [Cov:=========>                         28%][Progress:=====>                        18%] [Cov:>                                  1%][Progress:=====>                        18%] [Cov:>                                  2%][Progress:=====>                        18%] [Cov:=====>                             15%][Progress:=====>                        18%] [Cov:=====>                             16%][Progress:=====>                        18%] [Cov:=====>                             17%][Progress:=====>                        18%] [Cov:======>                            19%][Progress:=====>                        18%] [Cov:=======>                           20%][Progress:=====>                        18%] [Cov:=======>                           22%][Progress:======>                       20%] [Cov:=>                                 3%][Progress:======>                       20%] [Cov:==>                                6%][Progress:======>                       20%] [Cov:======>                            19%][Progress:======>                       20%] [Cov:=======>                           22%][Progress:======>                       20%] [Cov:========>                          24%][Progress:======>                       20%] [Cov:==========>                        29%][Progress:======>                       20%] [Cov:===========>                       33%][Progress:======>                       21%] [Cov:>                                  1%][Progress:======>                       21%] [Cov:=>                                 3%][Progress:======>                       21%] [Cov:=====>                             15%][Progress:======>                       21%] [Cov:=====>                             16%][Progress:======>                       21%] [Cov:======>                            18%][Progress:======>                       21%] [Cov:=======>                           21%][Progress:======>                       21%] [Cov:========>                          24%][Progress:======>                       21%] [Cov:=========>                         26%][Progress:======>                       21%] [Cov:=========>                         27%][Progress:======>                       23%] [Cov:>                                  1%][Progress:======>                       23%] [Cov:=>                                 3%][Progress:======>                       23%] [Cov:=====>                             15%][Progress:======>                       23%] [Cov:=====>                             16%][Progress:======>                       23%] [Cov:======>                            18%][Progress:======>                       23%] [Cov:======>                            19%][Progress:======>                       23%] [Cov:=======>                           20%][Progress:=======>                      25%] [Cov:>                                  1%][Progress:=======>                      25%] [Cov:=>                                 3%][Progress:=======>                      25%] [Cov:=====>                             15%][Progress:=======>                      25%] [Cov:=====>                             16%][Progress:=======>                      25%] [Cov:======>                            18%][Progress:=======>                      25%] [Cov:=======>                           20%][Progress:=======>                      25%] [Cov:=======>                           21%][Progress:=======>                      25%] [Cov:========>                          24%][Progress:=======>                      25%] [Cov:========>                          25%][Progress:=======>                      25%] [Cov:=========>                         26%][Progress:=======>                      25%] [Cov:==========>                        29%][Progress:=======>                      26%] [Cov:=>                                 3%][Progress:=======>                      26%] [Cov:=>                                 5%][Progress:=======>                      26%] [Cov:======>                            18%][Progress:=======>                      26%] [Cov:=======>                           20%][Progress:=======>                      26%] [Cov:=======>                           21%][Progress:=======>                      26%] [Cov:========>                          24%][Progress:=======>                      26%] [Cov:=========>                         27%][Progress:=========>                    30%] [Cov:>                                  1%][Progress:=========>                    30%] [Cov:=>                                 3%][Progress:=========>                    30%] [Cov:=====>                             15%][Progress:=========>                    30%] [Cov:=====>                             16%][Progress:=========>                    30%] [Cov:=====>                             17%][Progress:=========>                    30%] [Cov:======>                            19%][Progress:=========>                    30%] [Cov:=======>                           22%][Progress:=========>                    30%] [Cov:========>                          24%][Progress:=========>                    30%] [Cov:=========>                         27%][Progress:=========>                    30%] [Cov:===========>                       32%][Progress:=========>                    30%] [Cov:=============>                     38%][Progress:=========>                    30%] [Cov:=============>                     39%][Progress:=========>                    31%] [Cov:>                                  1%][Progress:=========>                    31%] [Cov:=>                                 3%][Progress:=========>                    31%] [Cov:=====>                             15%][Progress:=========>                    31%] [Cov:=====>                             16%][Progress:=========>                    31%] [Cov:=====>                             17%][Progress:=========>                    31%] [Cov:======>                            19%][Progress:=========>                    31%] [Cov:=======>                           21%][Progress:=========>                    33%] [Cov:=>                                 4%][Progress:=========>                    33%] [Cov:==>                                7%][Progress:=========>                    33%] [Cov:=======>                           20%][Progress:=========>                    33%] [Cov:========>                          23%][Progress:=========>                    33%] [Cov:========>                          25%][Progress:=========>                    33%] [Cov:==========>                        29%][Progress:=========>                    33%] [Cov:===========>                       34%][Progress:=========>                    33%] [Cov:============>                      35%][Progress:==========>                   35%] [Cov:=>                                 4%][Progress:==========>                   35%] [Cov:==>                                7%][Progress:==========>                   35%] [Cov:======>                            19%][Progress:==========>                   35%] [Cov:=======>                           22%][Progress:==========>                   35%] [Cov:========>                          24%][Progress:==========>                   35%] [Cov:==========>                        29%][Progress:==========>                   35%] [Cov:===========>                       33%][Progress:==========>                   35%] [Cov:=============>                     39%][Progress:==========>                   36%] [Cov:==========>                        30%][Progress:==========>                   36%] [Cov:============>                      35%][Progress:==========>                   36%] [Cov:=============>                     38%][Progress:==========>                   36%] [Cov:=============>                     39%][Progress:==========>                   36%] [Cov:==============>                    40%][Progress:===========>                  38%] [Cov:=======>                           22%][Progress:===========>                  38%] [Cov:=========>                         27%][Progress:===========>                  38%] [Cov:===========>                       33%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:===========================>       79%][Progress:============>                 40%] [Cov:============================>      80%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      80%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      82%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      82%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      82%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      82%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      82%][Progress:=================>            58%] [Cov:============================>      82%][Progress:==================>           60%] [Cov:============================>      82%][Progress:==================>           61%] [Cov:============================>      82%][Progress:==================>           61%] [Cov:=============================>     83%][Progress:==================>           63%] [Cov:=============================>     83%][Progress:===================>          65%] [Cov:=============================>     83%][Progress:===================>          66%] [Cov:============================>      82%][Progress:===================>          66%] [Cov:=============================>     83%][Progress:===================>          66%] [Cov:============================>      82%][Progress:===================>          66%] [Cov:=============================>     83%][Progress:====================>         68%] [Cov:=============================>     83%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:=============================>     83%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        71%] [Cov:=============================>     83%][Progress:=====================>        71%] [Cov:=============================>     83%][Progress:=======================>      78%] [Cov:=============================>     83%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     81%] [Cov:=============================>     83%][Progress:========================>     81%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     84%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     84%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     84%][Progress:==============================100%] [Cov:=============================>     84%][MASTER] 20:15:16.111 [logback-1] WARN  ResetExecutor - Stopped resetting of classes due to timeout
[Progress:==============================100%] [Cov:=============================>     84%][Progress:==============================100%] [Cov:=============================>     84%][Progress:==============================100%] [Cov:===============================>   89%][MASTER] 20:15:30.714 [logback-1] WARN  TimeController - Operation 'update from archive' took too long: 13904ms

* Search finished after 76s and 13 generations, 18741 statements, best individual has fitness: 5030.506627458871
[MASTER] 20:15:31.714 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 16 seconds more than allowed.
* Minimizing test suite
[MASTER] 20:16:45.731 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 1112
* Number of covered goals: 1015
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 1040
* Number of covered goals: 914
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 77%
* Total number of goals: 874
* Number of covered goals: 674
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 83%
* Total number of goals: 341
* Number of covered goals: 282
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 143
* Number of covered goals: 143
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 143
* Number of covered goals: 143
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 77%
* Total number of goals: 1040
* Number of covered goals: 798
* Generated 208 tests with total length 2236
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 20:17:31.061 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 20:17:31.062 [logback-1] WARN  JUnitAnalyzer - Failing test: String string0 = StringUtils.leftPad((String) null, 647, "Z");
String string1 = StringUtils.stripEnd("Search and Replace array lengths don't match: ", "Search and Replace array lengths don't match: ");
boolean boolean0 = StringUtils.endsWith("Search and Replace array lengths don't match: ", "");
String string2 = StringUtils.substringBefore("NFD", "_|n}(");
String[] stringArray0 = StringUtils.splitByWholeSeparatorPreserveAllTokens("Z", "NFD");
String string3 = StringUtils.stripAccents("YsY4_u<2)c");
int int0 = StringUtils.lastIndexOf((String) null, "LqKW~");
String string4 = StringUtils.trim("YsY4_u<2)c");
String string5 = StringUtils.replaceEach("cZz\"tH/HU-m", stringArray0, stringArray0);
char char0 = 'J';
String string6 = StringUtils.center("YsY4_u<2)c", 1128, 'J');
String string7 = StringUtils.remove("NFD", (String) null);
boolean boolean1 = StringUtils.isNumericSpace("");
String string8 = StringUtils.swapCase("cZz\"tH/HU-m");
String string9 = StringUtils.overlay("NFD", "NFD", 8, 128);
String string10 = StringUtils.reverse((String) null);
String string11 = StringUtils.substringBeforeLast("S:#rErq-D6", "");
String string12 = " ";
int int1 = 2147483645;
String string13 = StringUtils.rightPad(string12, int1, char0);
String string14 = "tnw5";
Locale locale0 = null;
String string15 = StringUtils.upperCase(string14, locale0);

* Writing JUnit test case 'StringUtils_ESTest' to evosuite-tests
* Done!

* Computation finished
