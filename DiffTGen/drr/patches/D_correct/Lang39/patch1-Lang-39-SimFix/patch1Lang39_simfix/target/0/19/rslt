* EvoSuite 1.0.2
* Going to generate test cases for class: org.apache.commons.lang3.StringUtils
* Starting client
* Connecting to master process on port 14118
* Analyzing classpath: 
  - /home/wasp/Desktop/ICSE18/DiffTGen/drr/patches/D_correct/Lang39/patch1-Lang-39-SimFix/patch1Lang39_simfix/target/build/classes
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/myprinter.jar
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang3.StringUtils
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 1112
  - Branch 1040
  - Exception 0
  - MutationFactory 874
  - Output 341
  - Method 143
  - MethodNoException 143
  - CBranchFitnessFactory 1040
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1552247637602
* Starting evolution
[Progress:>                             3%] [Cov:>                                  1%][Progress:>                             3%] [Cov:>                                  2%][Progress:>                             3%] [Cov:=====>                             15%][Progress:>                             3%] [Cov:=====>                             16%][Progress:>                             3%] [Cov:======>                            18%][Progress:=>                            5%] [Cov:>                                  2%][Progress:=>                            5%] [Cov:=>                                 3%][Progress:=>                            5%] [Cov:=====>                             16%][Progress:=>                            5%] [Cov:=====>                             17%][Progress:=>                            5%] [Cov:======>                            18%][Progress:=>                            5%] [Cov:=======>                           21%][Progress:=>                            5%] [Cov:========>                          23%][Progress:=>                            5%] [Cov:========>                          24%][Progress:=>                            5%] [Cov:========>                          25%][Progress:=>                            6%] [Cov:>                                  2%][Progress:=>                            6%] [Cov:=>                                 4%][Progress:=>                            6%] [Cov:=====>                             17%][Progress:=>                            6%] [Cov:======>                            19%][Progress:=>                            6%] [Cov:=======>                           20%][Progress:=>                            6%] [Cov:========>                          24%][Progress:=>                            6%] [Cov:=========>                         27%][Progress:==>                           8%] [Cov:=>                                 3%][Progress:==>                           8%] [Cov:==>                                6%][Progress:==>                           8%] [Cov:======>                            18%][Progress:==>                           8%] [Cov:=======>                           21%][Progress:==>                           8%] [Cov:=======>                           22%][Progress:==>                           8%] [Cov:========>                          25%][Progress:==>                           8%] [Cov:=========>                         28%][Progress:===>                          10%] [Cov:=>                                 3%][Progress:===>                          10%] [Cov:==>                                6%][Progress:===>                          10%] [Cov:======>                            18%][Progress:===>                          10%] [Cov:=======>                           21%][Progress:===>                          10%] [Cov:=======>                           22%][Progress:===>                          10%] [Cov:========>                          25%][Progress:===>                          10%] [Cov:=========>                         28%][Progress:===>                          11%] [Cov:>                                  2%][Progress:===>                          11%] [Cov:=>                                 4%][Progress:===>                          11%] [Cov:=====>                             17%][Progress:===>                          11%] [Cov:======>                            18%][Progress:===>                          11%] [Cov:======>                            19%][Progress:===>                          11%] [Cov:=======>                           22%][Progress:===>                          11%] [Cov:========>                          25%][Progress:===>                          13%] [Cov:=>                                 5%][Progress:===>                          13%] [Cov:===>                               9%][Progress:===>                          13%] [Cov:=======>                           21%][Progress:===>                          13%] [Cov:=========>                         26%][Progress:===>                          13%] [Cov:==========>                        29%][Progress:===>                          13%] [Cov:============>                      35%][Progress:===>                          13%] [Cov:==============>                    41%][Progress:===>                          13%] [Cov:==============>                    42%][Progress:====>                         15%] [Cov:>                                  2%][Progress:====>                         15%] [Cov:=>                                 4%][Progress:====>                         15%] [Cov:=====>                             17%][Progress:====>                         15%] [Cov:======>                            19%][Progress:====>                         15%] [Cov:=======>                           20%][Progress:====>                         15%] [Cov:=======>                           21%][Progress:====>                         15%] [Cov:========>                          23%][Progress:====>                         16%] [Cov:=>                                 3%][Progress:====>                         16%] [Cov:==>                                6%][Progress:====>                         16%] [Cov:======>                            19%][Progress:====>                         16%] [Cov:=======>                           22%][Progress:====>                         16%] [Cov:========>                          23%][Progress:====>                         16%] [Cov:=========>                         27%][Progress:====>                         16%] [Cov:===========>                       32%][Progress:=====>                        18%] [Cov:>                                  1%][Progress:=====>                        18%] [Cov:=>                                 3%][Progress:=====>                        18%] [Cov:=====>                             15%][Progress:=====>                        18%] [Cov:=====>                             17%][Progress:=====>                        18%] [Cov:======>                            18%][Progress:=====>                        18%] [Cov:=======>                           20%][Progress:=====>                        18%] [Cov:========>                          23%][Progress:=====>                        18%] [Cov:========>                          25%][Progress:=====>                        18%] [Cov:=========>                         28%][Progress:=====>                        18%] [Cov:==========>                        29%][Progress:======>                       20%] [Cov:>                                  2%][Progress:======>                       20%] [Cov:=>                                 5%][Progress:======>                       20%] [Cov:=====>                             17%][Progress:======>                       20%] [Cov:======>                            19%][Progress:======>                       20%] [Cov:=======>                           21%][Progress:======>                       20%] [Cov:========>                          24%][Progress:======>                       20%] [Cov:=========>                         27%][Progress:======>                       21%] [Cov:>                                  0%][Progress:======>                       21%] [Cov:>                                  1%][Progress:======>                       21%] [Cov:====>                              13%][Progress:======>                       21%] [Cov:====>                              14%][Progress:======>                       21%] [Cov:=====>                             15%][Progress:=======>                      25%] [Cov:>                                  2%][Progress:=======>                      25%] [Cov:=>                                 4%][Progress:=======>                      25%] [Cov:=====>                             17%][Progress:=======>                      25%] [Cov:======>                            18%][Progress:=======>                      25%] [Cov:=======>                           20%][Progress:=======>                      25%] [Cov:=======>                           22%][Progress:=======>                      25%] [Cov:========>                          24%][Progress:=======>                      26%] [Cov:=>                                 3%][Progress:=======>                      26%] [Cov:=>                                 5%][Progress:=======>                      26%] [Cov:=====>                             17%][Progress:=======>                      26%] [Cov:=======>                           20%][Progress:=======>                      26%] [Cov:=======>                           21%][Progress:=======>                      26%] [Cov:========>                          24%][Progress:=======>                      26%] [Cov:=========>                         27%][Progress:=======>                      26%] [Cov:==========>                        30%][Progress:=======>                      26%] [Cov:============>                      35%][Progress:=======>                      26%] [Cov:============>                      36%][Progress:========>                     28%] [Cov:>                                  2%][Progress:========>                     28%] [Cov:=>                                 5%][Progress:========>                     28%] [Cov:=====>                             17%][Progress:========>                     28%] [Cov:=======>                           20%][Progress:========>                     28%] [Cov:=======>                           21%][Progress:========>                     28%] [Cov:========>                          24%][Progress:========>                     28%] [Cov:=========>                         26%][Progress:========>                     28%] [Cov:=========>                         27%][Progress:========>                     28%] [Cov:==========>                        29%][Progress:=========>                    30%] [Cov:===========>                       33%][Progress:=========>                    30%] [Cov:===========>                       34%][Progress:=========>                    30%] [Cov:==============>                    42%][Progress:=========>                    31%] [Cov:=====>                             15%][Progress:=========>                    31%] [Cov:=====>                             16%][Progress:=========>                    31%] [Cov:=====>                             17%][Progress:=========>                    31%] [Cov:======>                            18%][Progress:=========>                    31%] [Cov:=======>                           22%][Progress:=========>                    31%] [Cov:========>                          24%][Progress:=========>                    31%] [Cov:========>                          25%][Progress:=========>                    31%] [Cov:=========>                         28%][Progress:=========>                    31%] [Cov:==============>                    41%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:==========>                   35%] [Cov:===========================>       78%][Progress:==========>                   35%] [Cov:===========================>       79%][Progress:==========>                   35%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:===========================>       79%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      80%][Progress:============>                 43%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:===========================>       79%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                45%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      80%][Progress:==============>               48%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      80%][Progress:===============>              51%] [Cov:============================>      80%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      80%][Progress:===============>              53%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      82%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      82%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      82%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      82%][Progress:==================>           61%] [Cov:============================>      82%][Progress:==================>           63%] [Cov:============================>      82%][Progress:===================>          66%] [Cov:============================>      82%][Progress:===================>          66%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        73%] [Cov:============================>      82%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][MASTER] 20:55:07.287 [logback-1] WARN  ResetExecutor - Stopped resetting of classes due to timeout
[Progress:==============================100%] [Cov:==============================>    88%][MASTER] 20:55:15.741 [logback-1] WARN  TimeController - Operation 'update from archive' took too long: 12171ms

* Search finished after 75s and 13 generations, 18390 statements, best individual has fitness: 5203.033454871711
[MASTER] 20:55:16.694 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 14 seconds more than allowed.
* Minimizing test suite
[MASTER] 20:56:30.605 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 89%
* Total number of goals: 1112
* Number of covered goals: 995
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 87%
* Total number of goals: 1040
* Number of covered goals: 902
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 76%
* Total number of goals: 874
* Number of covered goals: 662
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 81%
* Total number of goals: 341
* Number of covered goals: 275
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 143
* Number of covered goals: 143
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 143
* Number of covered goals: 143
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 76%
* Total number of goals: 1040
* Number of covered goals: 788
* Generated 217 tests with total length 2570
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 20:57:06.265 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 20:57:06.266 [logback-1] WARN  JUnitAnalyzer - Failing test: String string0 = "ny_$\\LH^'To1F+Y*@";
String[] stringArray0 = StringUtils.splitByCharacterTypeCamelCase("ny_$LH^'To1F+Y*@");
String string1 = StringUtils.replaceChars("TcQs\"", 'f', '6');
int int0 = Integer.MAX_VALUE;
char char0 = '+';
String string2 = StringUtils.rightPad(string0, int0, char0);
int int1 = StringUtils.indexOf(string0, string0);
String string3 = null;
int int2 = 5;
String string4 = StringUtils.abbreviate(string3, int0, int2);
String string5 = StringUtils.stripToNull(string3);
String string6 = "t2>^}mFk&>w";
String string7 = "";
String string8 = StringUtils.defaultIfEmpty(string6, string7);
String string9 = "`XXXAb-oQ-axG2sJ";
String string10 = "Rk%=11bv*F]&|{fqT";
String string11 = StringUtils.chomp(string9, string10);
String string12 = "=>Wt%wou^P#?";
boolean boolean0 = StringUtils.isAlphanumericSpace(string12);
String string13 = "Minimum abbreviation width with offset is 7";
String[] stringArray1 = StringUtils.split(string13, string6);
String string14 = "shi0W{Nkpkx|N\"";
String[] stringArray2 = StringUtils.stripAll(stringArray0, string14);
boolean boolean1 = StringUtils.isNumeric(string2);

[MASTER] 20:57:16.558 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000
[MASTER] 20:57:16.558 [logback-1] WARN  JUnitAnalyzer - Failing test: int int0 = Integer.MAX_VALUE;
String string0 = StringUtils.abbreviate(" ", Integer.MAX_VALUE, Integer.MAX_VALUE);
String string1 = StringUtils.center(string0, int0, string0);
char char0 = '\\';
String string2 = StringUtils.leftPad(string0, int0, char0);
String string3 = "N6tVhex}!;^0eX";
String string4 = StringUtils.removeStart(string3, string3);
String string5 = StringUtils.trimToEmpty(string3);

* Writing JUnit test case 'StringUtils_ESTest' to evosuite-tests
* Done!

* Computation finished
