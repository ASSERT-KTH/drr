* EvoSuite 1.0.2
* Going to generate test cases for class: org.apache.commons.lang3.StringUtils
* Starting client
* Connecting to master process on port 9161
* Analyzing classpath: 
  - /home/wasp/Desktop/ICSE18/DiffTGen/drr/patches/D_correct/Lang39/patch1-Lang-39-SimFix/patch1Lang39_simfix/target/build/classes
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/myprinter.jar
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang3.StringUtils
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 1112
  - Branch 1040
  - Exception 0
  - MutationFactory 874
  - Output 341
  - Method 143
  - MethodNoException 143
  - CBranchFitnessFactory 1040
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1552247208765
* Starting evolution
[Progress:>                             1%] [Cov:>                                  2%][Progress:>                             1%] [Cov:=>                                 4%][Progress:>                             1%] [Cov:=====>                             17%][Progress:>                             1%] [Cov:======>                            19%][Progress:>                             1%] [Cov:=======>                           21%][Progress:>                             1%] [Cov:========>                          23%][Progress:>                             1%] [Cov:=========>                         26%][Progress:=>                            5%] [Cov:>                                  1%][Progress:=>                            5%] [Cov:=>                                 3%][Progress:=>                            5%] [Cov:=====>                             16%][Progress:=>                            5%] [Cov:=====>                             17%][Progress:=>                            5%] [Cov:======>                            18%][Progress:=>                            5%] [Cov:=======>                           20%][Progress:=>                            5%] [Cov:=======>                           22%][Progress:=>                            5%] [Cov:========>                          23%][Progress:=>                            6%] [Cov:>                                  0%][Progress:=>                            6%] [Cov:====>                              13%][Progress:=>                            6%] [Cov:====>                              14%][Progress:=>                            6%] [Cov:=====>                             15%][Progress:==>                           8%] [Cov:>                                  1%][Progress:==>                           8%] [Cov:>                                  2%][Progress:==>                           8%] [Cov:====>                              14%][Progress:==>                           8%] [Cov:=====>                             15%][Progress:==>                           8%] [Cov:=====>                             16%][Progress:==>                           8%] [Cov:======>                            18%][Progress:==>                           8%] [Cov:======>                            19%][Progress:==>                           8%] [Cov:=======>                           21%][Progress:==>                           8%] [Cov:========>                          25%][Progress:==>                           8%] [Cov:==========>                        29%][Progress:==>                           8%] [Cov:==========>                        30%][Progress:===>                          10%] [Cov:>                                  1%][Progress:===>                          10%] [Cov:=>                                 3%][Progress:===>                          10%] [Cov:=====>                             15%][Progress:===>                          10%] [Cov:=====>                             16%][Progress:===>                          10%] [Cov:=====>                             17%][Progress:===>                          10%] [Cov:======>                            19%][Progress:===>                          10%] [Cov:=======>                           21%][Progress:===>                          10%] [Cov:=======>                           22%][Progress:===>                          13%] [Cov:>                                  1%][Progress:===>                          13%] [Cov:>                                  2%][Progress:===>                          13%] [Cov:=====>                             15%][Progress:===>                          13%] [Cov:=====>                             16%][Progress:===>                          13%] [Cov:=====>                             17%][Progress:===>                          13%] [Cov:======>                            18%][Progress:===>                          13%] [Cov:=======>                           20%][Progress:====>                         15%] [Cov:>                                  2%][Progress:====>                         15%] [Cov:=>                                 5%][Progress:====>                         15%] [Cov:=====>                             17%][Progress:====>                         15%] [Cov:=======>                           20%][Progress:====>                         15%] [Cov:=======>                           21%][Progress:====>                         15%] [Cov:========>                          24%][Progress:====>                         15%] [Cov:=========>                         27%][Progress:====>                         15%] [Cov:=========>                         28%][Progress:====>                         15%] [Cov:==========>                        31%][Progress:====>                         16%] [Cov:>                                  2%][Progress:====>                         16%] [Cov:=>                                 3%][Progress:====>                         16%] [Cov:=====>                             16%][Progress:====>                         16%] [Cov:=====>                             17%][Progress:====>                         16%] [Cov:======>                            18%][Progress:====>                         16%] [Cov:=======>                           20%][Progress:====>                         16%] [Cov:=======>                           22%][Progress:====>                         16%] [Cov:========>                          24%][Progress:====>                         16%] [Cov:=========>                         28%][Progress:====>                         16%] [Cov:===========>                       33%][Progress:=====>                        18%] [Cov:>                                  1%][Progress:=====>                        18%] [Cov:>                                  2%][Progress:=====>                        18%] [Cov:=====>                             15%][Progress:=====>                        18%] [Cov:=====>                             16%][Progress:=====>                        18%] [Cov:=====>                             17%][Progress:=====>                        18%] [Cov:======>                            19%][Progress:======>                       20%] [Cov:=>                                 3%][Progress:======>                       20%] [Cov:==>                                6%][Progress:======>                       20%] [Cov:======>                            18%][Progress:======>                       20%] [Cov:=======>                           21%][Progress:======>                       20%] [Cov:========>                          23%][Progress:======>                       20%] [Cov:=========>                         27%][Progress:======>                       20%] [Cov:===========>                       32%][Progress:======>                       23%] [Cov:>                                  2%][Progress:======>                       23%] [Cov:=>                                 4%][Progress:======>                       23%] [Cov:=====>                             16%][Progress:======>                       23%] [Cov:======>                            18%][Progress:======>                       23%] [Cov:======>                            19%][Progress:======>                       23%] [Cov:=======>                           21%][Progress:======>                       23%] [Cov:========>                          23%][Progress:======>                       23%] [Cov:========>                          24%][Progress:======>                       23%] [Cov:=========>                         26%][Progress:======>                       23%] [Cov:==========>                        30%][Progress:======>                       23%] [Cov:============>                      35%][Progress:=======>                      25%] [Cov:>                                  1%][Progress:=======>                      25%] [Cov:====>                              14%][Progress:=======>                      25%] [Cov:=====>                             15%][Progress:=======>                      25%] [Cov:=====>                             16%][Progress:=======>                      25%] [Cov:======>                            18%][Progress:=======>                      25%] [Cov:======>                            19%][Progress:=======>                      26%] [Cov:=>                                 4%][Progress:=======>                      26%] [Cov:==>                                8%][Progress:=======>                      26%] [Cov:=======>                           20%][Progress:=======>                      26%] [Cov:========>                          24%][Progress:=======>                      26%] [Cov:=========>                         27%][Progress:=======>                      26%] [Cov:==========>                        31%][Progress:=======>                      26%] [Cov:============>                      35%][Progress:=======>                      26%] [Cov:============>                      36%][Progress:========>                     28%] [Cov:=>                                 4%][Progress:========>                     28%] [Cov:=====>                             17%][Progress:========>                     28%] [Cov:======>                            18%][Progress:========>                     28%] [Cov:=======>                           20%][Progress:========>                     28%] [Cov:========>                          23%][Progress:========>                     28%] [Cov:========>                          25%][Progress:========>                     28%] [Cov:=========>                         26%][Progress:=========>                    30%] [Cov:>                                  2%][Progress:=========>                    30%] [Cov:=>                                 4%][Progress:=========>                    30%] [Cov:=====>                             16%][Progress:=========>                    30%] [Cov:======>                            18%][Progress:=========>                    30%] [Cov:======>                            19%][Progress:=========>                    30%] [Cov:=======>                           21%][Progress:=========>                    30%] [Cov:========>                          24%][Progress:=========>                    30%] [Cov:=========>                         27%][Progress:=========>                    30%] [Cov:===========>                       32%][Progress:==========>                   35%] [Cov:>                                  2%][Progress:==========>                   35%] [Cov:=>                                 4%][Progress:==========>                   35%] [Cov:=====>                             16%][Progress:==========>                   35%] [Cov:======>                            18%][Progress:==========>                   35%] [Cov:======>                            19%][Progress:==========>                   35%] [Cov:=======>                           22%][Progress:==========>                   35%] [Cov:========>                          24%][Progress:==========>                   35%] [Cov:========>                          25%][Progress:==========>                   35%] [Cov:==========>                        29%][Progress:==========>                   36%] [Cov:=====>                             16%][Progress:==========>                   36%] [Cov:======>                            18%][Progress:==========>                   36%] [Cov:=======>                           20%][Progress:==========>                   36%] [Cov:=======>                           21%][Progress:==========>                   36%] [Cov:========>                          23%][Progress:==========>                   36%] [Cov:=========>                         27%][Progress:==========>                   36%] [Cov:==========>                        30%][Progress:==========>                   36%] [Cov:==========>                        31%][Progress:==========>                   36%] [Cov:============>                      36%][Progress:===========>                  38%] [Cov:=========>                         28%][Progress:===========>                  38%] [Cov:============>                      36%][Progress:===========>                  38%] [Cov:============>                      37%][Progress:============>                 40%] [Cov:====>                              12%][Progress:============>                 40%] [Cov:=========>                         28%][Progress:============>                 40%] [Cov:============>                      35%][Progress:============>                 41%] [Cov:=======>                           20%][Progress:============>                 41%] [Cov:=======>                           21%][Progress:============>                 41%] [Cov:=======>                           22%][Progress:============>                 41%] [Cov:===========>                       32%][Progress:============>                 41%] [Cov:===========>                       33%][Progress:============>                 41%] [Cov:============>                      35%][Progress:============>                 41%] [Cov:============================>      80%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:============================>      80%][Progress:============>                 43%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:===========================>       79%][Progress:===============>              50%] [Cov:============================>      80%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      80%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      80%][Progress:===============>              53%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:===========================>       78%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      80%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      80%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      80%][Progress:===================>          66%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      80%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        73%] [Cov:============================>      82%][Progress:=====================>        73%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       76%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:============================>      82%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][MASTER] 20:47:58.562 [logback-1] WARN  ResetExecutor - Stopped resetting of classes due to timeout
[MASTER] 20:48:08.511 [logback-1] WARN  TimeController - Operation 'update from archive' took too long: 13712ms
[Progress:==============================100%] [Cov:===============================>   89%]
* Search finished after 77s and 14 generations, 20675 statements, best individual has fitness: 5176.968725679221
[MASTER] 20:48:09.699 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 16 seconds more than allowed.
* Minimizing test suite
[MASTER] 20:49:25.171 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 89%
* Total number of goals: 1112
* Number of covered goals: 994
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 86%
* Total number of goals: 1040
* Number of covered goals: 897
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 77%
* Total number of goals: 874
* Number of covered goals: 674
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 84%
* Total number of goals: 341
* Number of covered goals: 285
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 143
* Number of covered goals: 143
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 143
* Number of covered goals: 143
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 77%
* Total number of goals: 1040
* Number of covered goals: 801
* Generated 203 tests with total length 2351
* Resulting test suite's coverage: 89% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 20:50:01.329 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Requested array size exceeds VM limit
[MASTER] 20:50:01.330 [logback-1] WARN  JUnitAnalyzer - Failing test: String string0 = StringUtils.reverse("NFD");
ArrayDeque<JavaVersion> arrayDeque0 = new ArrayDeque<JavaVersion>();
ArrayList<Object> arrayList0 = new ArrayList<Object>((Collection<?>) arrayDeque0);
boolean boolean0 = arrayList0.add((Object) "NFD");
JavaVersion javaVersion0 = JavaVersion.JAVA_1_8;
boolean boolean1 = arrayDeque0.add(javaVersion0);
boolean boolean2 = arrayList0.addAll((Collection<?>) arrayDeque0);
Iterator<Object> iterator0 = arrayList0.iterator();
boolean boolean3 = arrayList0.add((Object) "DFN");
String string1 = StringUtils.join((Iterable<?>) arrayList0, 'b');
String string2 = "Sa^`Zz=C0";
boolean boolean4 = StringUtils.containsAny("Sa^`Zz=C0", "NFDb1.8bDFN");
String string3 = "8yL}qvav{a!]5(f";
boolean boolean5 = StringUtils.isAlpha("8yL}qvav{a!]5(f");
String string4 = StringUtils.leftPad("NoSuchFieldException occurred during 1.6 backcompat code", 861, '?');
int int0 = StringUtils.indexOfAny("", "DFN");
String string5 = "";
boolean boolean6 = StringUtils.startsWithIgnoreCase("Sa^`Zz=C0", "");
String string6 = "";
int int1 = Integer.MAX_VALUE;
String string7 = StringUtils.rightPad(string6, int1);
String[] stringArray0 = StringUtils.splitByCharacterTypeCamelCase(string2);
String string8 = StringUtils.remove(string2, string5);
int int2 = StringUtils.indexOfDifference(stringArray0);
String string9 = StringUtils.swapCase(string5);
String string10 = "";
String string11 = null;
String[] stringArray1 = StringUtils.splitByWholeSeparatorPreserveAllTokens(string10, string11);
char char0 = 'X';
String[] stringArray2 = StringUtils.split(string3, char0);
String[] stringArray3 = StringUtils.stripAll(stringArray2);
String string12 = "Z<x=}i,g$B47{q4";
String[] stringArray4 = StringUtils.splitByWholeSeparatorPreserveAllTokens(string12, string0, int1);

* Writing JUnit test case 'StringUtils_ESTest' to evosuite-tests
* Done!

* Computation finished
