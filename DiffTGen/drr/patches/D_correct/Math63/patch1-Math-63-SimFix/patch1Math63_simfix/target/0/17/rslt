* EvoSuite 1.0.2
* Going to generate test cases for class: org.apache.commons.math.util.MathUtils
* Starting client
* Connecting to master process on port 12678
* Analyzing classpath: 
  - /home/wasp/Desktop/ICSE18/DiffTGen/drr/patches/D_correct/Math63/patch1-Math-63-SimFix/patch1Math63_simfix/target/build/classes
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/myprinter.jar
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.util.MathUtils
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 480
  - Branch 465
  - Exception 0
  - MutationFactory 928
  - Output 184
  - Method 65
  - MethodNoException 65
  - CBranchFitnessFactory 465
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1552381513651
* Starting evolution
[Progress:>                             0%] [Cov:>                                  1%][Progress:>                             0%] [Cov:====>                              13%][Progress:>                             1%] [Cov:>                                  0%][Progress:>                             1%] [Cov:====>                              13%][Progress:>                             1%] [Cov:====>                              14%][Progress:>                             1%] [Cov:=====>                             15%][Progress:>                             1%] [Cov:=====>                             16%][Progress:>                             1%] [Cov:=====>                             17%][Progress:>                             1%] [Cov:======>                            18%][Progress:>                             1%] [Cov:=======>                           20%][Progress:>                             1%] [Cov:=======>                           22%][Progress:>                             1%] [Cov:========>                          23%][Progress:>                             1%] [Cov:========>                          25%][Progress:>                             1%] [Cov:=========>                         26%][Progress:>                             3%] [Cov:>                                  2%][Progress:>                             3%] [Cov:=>                                 4%][Progress:=>                            5%] [Cov:=====>                             17%][Progress:=>                            5%] [Cov:======>                            19%][Progress:=>                            5%] [Cov:=======>                           20%][Progress:=>                            5%] [Cov:=======>                           22%][Progress:=>                            5%] [Cov:========>                          24%][Progress:=>                            5%] [Cov:========>                          25%][Progress:=>                            5%] [Cov:=========>                         26%][Progress:=>                            5%] [Cov:=========>                         27%][Progress:=>                            6%] [Cov:===>                               9%][Progress:=>                            6%] [Cov:=======>                           21%][Progress:=>                            6%] [Cov:=========>                         26%][Progress:=>                            6%] [Cov:=========>                         28%][Progress:=>                            6%] [Cov:==========>                        31%][Progress:=>                            6%] [Cov:===========>                       34%][Progress:=>                            6%] [Cov:============>                      35%][Progress:====>                         15%] [Cov:>                                  2%][Progress:====>                         15%] [Cov:=>                                 3%][Progress:====>                         15%] [Cov:=====>                             15%][Progress:====>                         15%] [Cov:=====>                             16%][Progress:====>                         15%] [Cov:=====>                             17%][Progress:====>                         15%] [Cov:======>                            18%][Progress:====>                         15%] [Cov:=======>                           21%][Progress:====>                         15%] [Cov:=======>                           22%][Progress:====>                         15%] [Cov:========>                          25%][Progress:====>                         15%] [Cov:=========>                         28%][Progress:====>                         15%] [Cov:==========>                        29%][Progress:====>                         16%] [Cov:>                                  2%][Progress:====>                         16%] [Cov:=>                                 3%][Progress:====>                         16%] [Cov:=====>                             16%][Progress:====>                         16%] [Cov:=====>                             17%][Progress:====>                         16%] [Cov:======>                            19%][Progress:====>                         16%] [Cov:=======>                           21%][Progress:=======>                      25%] [Cov:=>                                 3%][Progress:=======>                      25%] [Cov:==>                                6%][Progress:=======>                      25%] [Cov:======>                            19%][Progress:=======>                      25%] [Cov:=======>                           21%][Progress:=======>                      25%] [Cov:=======>                           22%][Progress:=======>                      25%] [Cov:========>                          23%][Progress:=========>                    33%] [Cov:>                                  1%][Progress:=========>                    33%] [Cov:=>                                 3%][Progress:=========>                    33%] [Cov:=====>                             16%][Progress:=========>                    33%] [Cov:=====>                             17%][Progress:=========>                    33%] [Cov:======>                            19%][Progress:=========>                    33%] [Cov:=======>                           20%][Progress:=========>                    33%] [Cov:=======>                           21%][Progress:=========>                    33%] [Cov:=======>                           22%][Progress:=========>                    33%] [Cov:========>                          24%][Progress:=========>                    33%] [Cov:========>                          25%][Progress:=========>                    33%] [Cov:=========>                         27%][Progress:=========>                    33%] [Cov:=========>                         28%][Progress:==========>                   35%] [Cov:=>                                 3%][Progress:==========>                   35%] [Cov:==>                                6%][Progress:==========>                   35%] [Cov:======>                            18%][Progress:==========>                   35%] [Cov:=======>                           21%][Progress:==========>                   35%] [Cov:========>                          23%][Progress:==========>                   35%] [Cov:========>                          24%][Progress:==========>                   35%] [Cov:=========>                         26%][Progress:==========>                   35%] [Cov:=========>                         27%][Progress:============>                 43%] [Cov:=>                                 4%][Progress:============>                 43%] [Cov:==>                                7%][Progress:============>                 43%] [Cov:=======>                           20%][Progress:============>                 43%] [Cov:========>                          23%][Progress:============>                 43%] [Cov:========>                          25%][Progress:============>                 43%] [Cov:==========>                        29%][Progress:============>                 43%] [Cov:===========>                       32%][Progress:============>                 43%] [Cov:===========>                       33%][Progress:==============>               48%] [Cov:=>                                 4%][Progress:==============>               48%] [Cov:==>                                7%][Progress:==============>               48%] [Cov:=======>                           20%][Progress:==============>               48%] [Cov:========>                          23%][Progress:==============>               48%] [Cov:========>                          25%][Progress:==============>               48%] [Cov:=========>                         28%][Progress:==============>               48%] [Cov:==========>                        31%][Progress:==============>               48%] [Cov:===========>                       32%][Progress:==============>               48%] [Cov:============>                      35%][Progress:==============>               48%] [Cov:============>                      36%][Progress:==============>               48%] [Cov:============>                      35%][Progress:===============>              50%] [Cov:=======>                           22%][Progress:===============>              50%] [Cov:========>                          23%][Progress:===============>              50%] [Cov:========>                          24%][Progress:===============>              50%] [Cov:=========>                         28%][Progress:===============>              50%] [Cov:==========>                        29%][Progress:===============>              50%] [Cov:============>                      35%][Progress:===============>              50%] [Cov:============>                      36%][Progress:===============>              50%] [Cov:===========================>       79%][Progress:===============>              51%] [Cov:===========================>       78%][Progress:===============>              51%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:==========================>        77%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             56%] [Cov:===========================>       78%][Progress:================>             56%] [Cov:===========================>       79%][Progress:================>             56%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:============================>      80%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:============================>      80%][Progress:==================>           61%] [Cov:============================>      80%][Progress:==================>           61%] [Cov:============================>      80%][Progress:==================>           63%] [Cov:============================>      80%][Progress:==================>           63%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      80%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      80%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%][Progress:==============================100%] [Cov:==============================>    86%]
* Search finished after 64s and 21 generations, 19838 statements, best individual has fitness: 1028.0071591013743
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 480
* Number of covered goals: 407
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 82%
* Total number of goals: 465
* Number of covered goals: 379
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 39
* Number of covered goals: 39
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 76%
* Total number of goals: 928
* Number of covered goals: 706
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 74%
* Total number of goals: 184
* Number of covered goals: 136
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 65
* Number of covered goals: 65
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 65
* Number of covered goals: 65
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 78%
* Total number of goals: 465
* Number of covered goals: 365
* Generated 232 tests with total length 344
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'MathUtils_ESTest' to evosuite-tests
* Done!

* Computation finished
