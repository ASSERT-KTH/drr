/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 12 08:59:14 GMT 2019
 */

package org.apache.commons.math.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import org.apache.commons.math.util.MathUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class MathUtils_ESTest extends MathUtils_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 246 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I70 Branch 14 IF_ICMPGT L215 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I25 Branch 21 IF_ICMPNE L275 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I37 Branch 22 IF_ICMPLE L278 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I50 Branch 23 IF_ICMPGE L281 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 24 IF_ICMPGT L286 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I20 Branch 20 IF_ICMPEQ L275 - false
   * Goal 41. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 24 IF_ICMPGT L286 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false
   * Goal 44. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I49 Branch 30 IF_ICMPGE L332 - false
   * Goal 45. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false
   * Goal 46. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - false
   * Goal 47. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 48. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 49. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 50. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false
   * Goal 51. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - false
   * Goal 52. org.apache.commons.math.util.MathUtils.gcd(II)I: I81 Branch 91 IF_ICMPGE L711 - false
   * Goal 53. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 54. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 55. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 56. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 57. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false
   * Goal 58. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 59. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 60. Weak Mutation 51: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> <
   * Goal 61. Weak Mutation 122: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> %
   * Goal 62. Weak Mutation 124: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> /
   * Goal 63. Weak Mutation 126: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceComparisonOperator > -> !=
   * Goal 64. Weak Mutation 132: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> %
   * Goal 65. Weak Mutation 135: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> /
   * Goal 66. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 67. Weak Mutation 2674: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> /
   * Goal 68. Weak Mutation 2682: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator < -> !=
   * Goal 69. Weak Mutation 2691: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator <= -> ==
   * Goal 70. Weak Mutation 166: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> >=
   * Goal 71. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 72. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 73. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 74. Weak Mutation 9: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> -
   * Goal 75. Weak Mutation 10: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> *
   * Goal 76. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 77. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 78. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 79. Weak Mutation 174: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator != -> >
   * Goal 80. Weak Mutation 183: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator == -> !=
   * Goal 81. Weak Mutation 193: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> +
   * Goal 82. Weak Mutation 194: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> %
   * Goal 83. Weak Mutation 195: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> *
   * Goal 84. Weak Mutation 196: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> /
   * Goal 85. Weak Mutation 199: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator != -> >
   * Goal 86. Weak Mutation 216: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> +
   * Goal 87. Weak Mutation 218: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> -
   * Goal 88. Weak Mutation 222: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceComparisonOperator <= -> ==
   * Goal 89. Weak Mutation 251: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:212 - ReplaceComparisonOperator > -> !=
   * Goal 90. Weak Mutation 262: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> +
   * Goal 91. Weak Mutation 263: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> %
   * Goal 92. Weak Mutation 264: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> *
   * Goal 93. Weak Mutation 265: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> /
   * Goal 94. Weak Mutation 267: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> %
   * Goal 95. Weak Mutation 268: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> -
   * Goal 96. Weak Mutation 269: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> *
   * Goal 97. Weak Mutation 270: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> /
   * Goal 98. Weak Mutation 285: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:215 - ReplaceComparisonOperator > -> -2
   * Goal 99. Weak Mutation 570: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator == -> >=
   * Goal 100. Weak Mutation 586: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator == -> !=
   * Goal 101. Weak Mutation 596: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> +
   * Goal 102. Weak Mutation 597: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> %
   * Goal 103. Weak Mutation 598: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> *
   * Goal 104. Weak Mutation 599: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> /
   * Goal 105. Weak Mutation 602: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator != -> >
   * Goal 106. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 107. Weak Mutation 1739: org.apache.commons.math.util.MathUtils.indicator(D)D:880 - ReplaceComparisonOperator < -> -2
   * Goal 108. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 109. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 110. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 111. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 112. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 113. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 114. Weak Mutation 1440: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 115. Weak Mutation 1451: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 116. Weak Mutation 1452: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 117. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 118. Weak Mutation 1803: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> >=
   * Goal 119. Weak Mutation 1810: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator != -> <
   * Goal 120. Weak Mutation 1825: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> +
   * Goal 121. Weak Mutation 1826: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> %
   * Goal 122. Weak Mutation 1827: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> -
   * Goal 123. Weak Mutation 1844: org.apache.commons.math.util.MathUtils.lcm(II)I:956 - ReplaceComparisonOperator != -> <
   * Goal 124. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 125. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 126. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 127. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 128. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 129. Weak Mutation 2832: org.apache.commons.math.util.MathUtils.pow(IJ)I:1551 - ReplaceComparisonOperator >= -> -1
   * Goal 130. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 131. Weak Mutation 1828: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> *
   * Goal 132. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 133. Weak Mutation 2671: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> +
   * Goal 134. Weak Mutation 2673: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> *
   * Goal 135. Weak Mutation 1453: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 136. Weak Mutation 1468: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator >= -> -1
   * Goal 137. Weak Mutation 1482: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> +
   * Goal 138. Weak Mutation 1483: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> %
   * Goal 139. Weak Mutation 1484: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> -
   * Goal 140. Weak Mutation 1485: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> *
   * Goal 141. Weak Mutation 1497: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> +
   * Goal 142. Weak Mutation 1498: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> %
   * Goal 143. Weak Mutation 1499: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> -
   * Goal 144. Weak Mutation 1500: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> *
   * Goal 145. Weak Mutation 121: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> +
   * Goal 146. Weak Mutation 123: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> *
   * Goal 147. Weak Mutation 133: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> -
   * Goal 148. Weak Mutation 134: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> *
   * Goal 149. Weak Mutation 2574: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> >
   * Goal 150. Weak Mutation 2581: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator <= -> ==
   * Goal 151. Weak Mutation 388: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> >=
   * Goal 152. Weak Mutation 405: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator == -> !=
   * Goal 153. Weak Mutation 415: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> +
   * Goal 154. Weak Mutation 416: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> %
   * Goal 155. Weak Mutation 417: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> *
   * Goal 156. Weak Mutation 418: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> /
   * Goal 157. Weak Mutation 421: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator != -> >
   * Goal 158. Weak Mutation 438: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> +
   * Goal 159. Weak Mutation 440: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> -
   * Goal 160. Weak Mutation 444: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceComparisonOperator <= -> ==
   * Goal 161. Weak Mutation 439: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> %
   * Goal 162. Weak Mutation 441: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> *
   * Goal 163. Weak Mutation 472: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:281 - ReplaceComparisonOperator >= -> ==
   * Goal 164. Weak Mutation 496: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:286 - ReplaceComparisonOperator > -> -2
   * Goal 165. Weak Mutation 549: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> %
   * Goal 166. Weak Mutation 551: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> *
   * Goal 167. Weak Mutation 552: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> /
   * Goal 168. Weak Mutation 217: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> %
   * Goal 169. Weak Mutation 219: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> *
   * Goal 170. Weak Mutation 395: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator != -> <
   * Goal 171. Weak Mutation 495: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:286 - ReplaceComparisonOperator > -> !=
   * Goal 172. Weak Mutation 497: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:286 - ReplaceComparisonOperator > -> >=
   * Goal 173. Weak Mutation 512: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> +
   * Goal 174. Weak Mutation 513: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> %
   * Goal 175. Weak Mutation 514: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> *
   * Goal 176. Weak Mutation 515: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> /
   * Goal 177. Weak Mutation 521: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> %
   * Goal 178. Weak Mutation 522: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> -
   * Goal 179. Weak Mutation 523: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> *
   * Goal 180. Weak Mutation 524: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> /
   * Goal 181. Weak Mutation 530: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> +
   * Goal 182. Weak Mutation 531: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> %
   * Goal 183. Weak Mutation 532: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> -
   * Goal 184. Weak Mutation 533: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> *
   * Goal 185. Weak Mutation 534: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> +
   * Goal 186. Weak Mutation 535: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> %
   * Goal 187. Weak Mutation 536: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> -
   * Goal 188. Weak Mutation 537: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> /
   * Goal 189. Weak Mutation 61: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> ==
   * Goal 190. Weak Mutation 577: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator != -> <
   * Goal 191. Weak Mutation 618: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:324 - ReplaceComparisonOperator >= -> ==
   * Goal 192. Weak Mutation 636: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:332 - ReplaceComparisonOperator >= -> -1
   * Goal 193. org.apache.commons.math.util.MathUtils.subAndCheck(II)I:zero
   * Goal 194. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:positive
   * Goal 195. org.apache.commons.math.util.MathUtils.indicator(D)D:negative
   * Goal 196. org.apache.commons.math.util.MathUtils.lcm(II)I:positive
   * Goal 197. org.apache.commons.math.util.MathUtils.sign(F)F:negative
   * Goal 198. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J:positive
   * Goal 199. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:negative
   * Goal 200. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:positive
   * Goal 201. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 202. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 203. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 204. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 205. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 206. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 207. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 208. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 209. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 210. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 211. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 212. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 213. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 214. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 215. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 216. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 217. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 218. Branch org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch in context: org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J
   * Goal 219. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 220. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 221. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 222. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 223. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 224. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 225. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 226. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 227. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 228. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 229. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 230. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 231. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 232. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 233. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 234. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 235. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 236. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 237. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 238. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 239. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 240. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 241. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 242. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 243. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 244. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I49 Branch 30 IF_ICMPGE L332 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 245. pow(IJ)I_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   * Goal 246. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I70 Branch 14 IF_ICMPGT L215 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   */

  @Test
  public void test000()  throws Throwable  {
      double double0 = MathUtils.indicator((-22.278543230712337));
      int int0 = MathUtils.subAndCheck(1030, 1030);
      int int1 = MathUtils.lcm(1030, 1402);
      double double1 = MathUtils.binomialCoefficientLog(612, 13);
      int int2 = MathUtils.addAndCheck((-73), (-2274));
      long long0 = MathUtils.binomialCoefficient(13, (-1700));
      long long1 = MathUtils.addAndCheck(1995L, 1995L);
      float float0 = MathUtils.sign((-1235.0F));
      Integer integer0 = new Integer((-2347));
      try { 
        MathUtils.pow((-2347), (-29L));
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (-2,347^-29)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 1
  /*
   * 213 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 317
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 10. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 30. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 35. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true
   * Goal 40. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false
   * Goal 41. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true
   * Goal 43. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 44. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 45. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - true
   * Goal 46. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 47. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - true
   * Goal 48. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I71 Branch 131 IFLE L1062 - false
   * Goal 49. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I79 Branch 132 IFGT L1064 - false
   * Goal 50. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 51. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 52. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - false
   * Goal 53. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - true
   * Goal 54. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 55. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 56. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 57. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 58. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 59. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 60. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 61. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 62. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 63. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 64. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 65. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 66. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 67. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 68. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 69. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 70. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 71. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 72. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 73. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 74. Weak Mutation 2651: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> +
   * Goal 75. Weak Mutation 2652: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> %
   * Goal 76. Weak Mutation 2653: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> *
   * Goal 77. Weak Mutation 2654: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> /
   * Goal 78. Weak Mutation 2660: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> %
   * Goal 79. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 80. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 81. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 82. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 83. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 84. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 85. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 86. Weak Mutation 823: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:391 - ReplaceComparisonOperator >= -> -1
   * Goal 87. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 88. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 89. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 90. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 91. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 92. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 93. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 94. Weak Mutation 51: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> <
   * Goal 95. Weak Mutation 122: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> %
   * Goal 96. Weak Mutation 124: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> /
   * Goal 97. Weak Mutation 126: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceComparisonOperator > -> !=
   * Goal 98. Weak Mutation 132: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> %
   * Goal 99. Weak Mutation 135: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> /
   * Goal 100. Weak Mutation 1718: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> !=
   * Goal 101. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 102. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 103. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 104. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 105. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 106. Weak Mutation 570: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator == -> >=
   * Goal 107. Weak Mutation 578: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator != -> >
   * Goal 108. Weak Mutation 586: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator == -> !=
   * Goal 109. Weak Mutation 596: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> +
   * Goal 110. Weak Mutation 597: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> %
   * Goal 111. Weak Mutation 598: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> *
   * Goal 112. Weak Mutation 599: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> /
   * Goal 113. Weak Mutation 786: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> >
   * Goal 114. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 115. Weak Mutation 969: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> +
   * Goal 116. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 117. Weak Mutation 971: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> *
   * Goal 118. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 119. Weak Mutation 979: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> -2
   * Goal 120. Weak Mutation 1558: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> >
   * Goal 121. Weak Mutation 1629: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> ==
   * Goal 122. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 123. Weak Mutation 1988: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> ==
   * Goal 124. Weak Mutation 2019: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1062 - ReplaceComparisonOperator <= -> -1
   * Goal 125. Weak Mutation 2029: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> +
   * Goal 126. Weak Mutation 2030: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> %
   * Goal 127. Weak Mutation 2031: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> -
   * Goal 128. Weak Mutation 2032: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> *
   * Goal 129. Weak Mutation 2036: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceComparisonOperator > -> !=
   * Goal 130. Weak Mutation 2042: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> +
   * Goal 131. Weak Mutation 2043: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> %
   * Goal 132. Weak Mutation 2044: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> -
   * Goal 133. Weak Mutation 2045: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> /
   * Goal 134. Weak Mutation 1202: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> >
   * Goal 135. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> ==
   * Goal 136. Weak Mutation 121: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> +
   * Goal 137. Weak Mutation 123: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> *
   * Goal 138. Weak Mutation 133: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> -
   * Goal 139. Weak Mutation 134: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> *
   * Goal 140. Weak Mutation 1274: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> -1
   * Goal 141. Weak Mutation 2659: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> +
   * Goal 142. Weak Mutation 2661: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> -
   * Goal 143. Weak Mutation 2662: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> *
   * Goal 144. Weak Mutation 1262: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> >
   * Goal 145. Weak Mutation 61: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> ==
   * Goal 146. Weak Mutation 1549: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> <=
   * Goal 147. Weak Mutation 1616: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> ==
   * Goal 148. org.apache.commons.math.util.MathUtils.sinh(D)D:negative
   * Goal 149. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:negative
   * Goal 150. org.apache.commons.math.util.MathUtils.indicator(B)B:positive
   * Goal 151. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:false
   * Goal 152. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:negative
   * Goal 153. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 154. org.apache.commons.math.util.MathUtils.hash([D)I:negative
   * Goal 155. org.apache.commons.math.util.MathUtils.factorialLog(I)D:zero
   * Goal 156. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J:positive
   * Goal 157. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:negative
   * Goal 158. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 159. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 160. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 161. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 162. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 163. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 164. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 165. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 166. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 167. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 168. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 169. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 170. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 171. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 172. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 173. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 174. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 175. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 176. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 177. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 178. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 179. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 180. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 181. Branch org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash([D)I
   * Goal 182. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - false in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 183. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 184. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 185. Branch org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch in context: org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J
   * Goal 186. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 187. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 188. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 189. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 190. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 191. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 192. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 193. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 194. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 195. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 196. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 197. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 198. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 199. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 200. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 201. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 202. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 203. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 204. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 205. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 206. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 207. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 208. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 209. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 210. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - false
   * Goal 211. Weak Mutation 600: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator != -> -1
   * Goal 212. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:negative
   * Goal 213. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   */

  @Test
  public void test001()  throws Throwable  {
      long long0 = MathUtils.addAndCheck(4095L, 4095L);
      double double0 = MathUtils.SAFE_MIN;
      int int0 = MathUtils.compareTo((-97.1904640573934), (-2.6033824355191673E-8), 2.2250738585072014E-308);
      int int1 = MathUtils.addAndCheck((-1), 0);
      double double1 = MathUtils.factorialLog(0);
      byte byte0 = MathUtils.indicator((byte)10);
      double double2 = MathUtils.sinh((-97.1904640573934));
      long long1 = MathUtils.mulAndCheck(8190L, (long) (-1));
      MathUtils.OrderDirection[] mathUtils_OrderDirectionArray0 = MathUtils.OrderDirection.values();
      long long2 = MathUtils.gcd((long) (-1), (-494L));
      long long3 = MathUtils.mulAndCheck((long) (byte)10, (-1105L));
      boolean boolean0 = MathUtils.equalsIncludingNaN((-2278.18590881687), 0.08713622391223907, (double) (-494L));
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) (-1);
      doubleArray0[1] = (-2278.18590881687);
      doubleArray0[2] = 2.2250738585072014E-308;
      int int2 = MathUtils.hash(doubleArray0);
      double double3 = MathUtils.binomialCoefficientLog(0, (-1));
  }

  //Test case number: 2
  /*
   * 254 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1190
   * Goal 2. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 28. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch
   * Goal 31. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true
   * Goal 37. org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch
   * Goal 39. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true
   * Goal 40. org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch
   * Goal 41. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 42. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 44. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 45. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true
   * Goal 46. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false
   * Goal 47. org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - false
   * Goal 48. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - true
   * Goal 49. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - false
   * Goal 50. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true
   * Goal 51. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true
   * Goal 52. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false
   * Goal 53. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true
   * Goal 54. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - false
   * Goal 55. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I7 Branch 42 IFNE L429 - true
   * Goal 56. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - true
   * Goal 57. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 58. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 59. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 60. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 61. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 62. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 63. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 64. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 65. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 66. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 67. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 68. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 69. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 70. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 71. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 72. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 73. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 74. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 75. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 76. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 77. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 78. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 79. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 80. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 81. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 82. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 83. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 84. Weak Mutation 1154: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator = null -> != null
   * Goal 85. Weak Mutation 1156: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator != null -> = null
   * Goal 86. Weak Mutation 1174: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:551 - ReplaceComparisonOperator == -> -2
   * Goal 87. Weak Mutation 1183: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> -1
   * Goal 88. Weak Mutation 1184: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> >
   * Goal 89. Weak Mutation 1194: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:555 - ReplaceComparisonOperator != -> ==
   * Goal 90. Weak Mutation 2174: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1165 - ReplaceComparisonOperator == -> !=
   * Goal 91. Weak Mutation 2180: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1169 - ReplaceComparisonOperator == -> !=
   * Goal 92. Weak Mutation 2196: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> -1
   * Goal 93. Weak Mutation 2197: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> >
   * Goal 94. Weak Mutation 2204: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1177 - ReplaceComparisonOperator == -> !=
   * Goal 95. Weak Mutation 2223: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1181 - ReplaceComparisonOperator != -> ==
   * Goal 96. Weak Mutation 2234: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> %
   * Goal 97. Weak Mutation 2237: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> /
   * Goal 98. Weak Mutation 2651: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> +
   * Goal 99. Weak Mutation 2652: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> %
   * Goal 100. Weak Mutation 2653: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> *
   * Goal 101. Weak Mutation 2654: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> /
   * Goal 102. Weak Mutation 2660: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> %
   * Goal 103. Weak Mutation 3354: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> -1
   * Goal 104. Weak Mutation 3355: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> >
   * Goal 105. Weak Mutation 3371: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> +
   * Goal 106. Weak Mutation 3373: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> *
   * Goal 107. Weak Mutation 3374: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> /
   * Goal 108. Weak Mutation 3372: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> %
   * Goal 109. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 110. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 111. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 112. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 113. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 114. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 115. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 116. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 117. Weak Mutation 3190: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1735 - ReplaceComparisonOperator >= -> -1
   * Goal 118. Weak Mutation 3191: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1735 - ReplaceComparisonOperator >= -> >
   * Goal 119. Weak Mutation 3208: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> %
   * Goal 120. Weak Mutation 3210: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> /
   * Goal 121. Weak Mutation 3211: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> %
   * Goal 122. Weak Mutation 3214: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> /
   * Goal 123. Weak Mutation 1927: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> +
   * Goal 124. Weak Mutation 1928: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> %
   * Goal 125. Weak Mutation 1929: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> -
   * Goal 126. Weak Mutation 1930: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> *
   * Goal 127. Weak Mutation 3227: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> >
   * Goal 128. Weak Mutation 3207: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> +
   * Goal 129. Weak Mutation 3209: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> *
   * Goal 130. Weak Mutation 838: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> %
   * Goal 131. Weak Mutation 839: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> -
   * Goal 132. Weak Mutation 840: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> *
   * Goal 133. Weak Mutation 841: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> /
   * Goal 134. Weak Mutation 846: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> +
   * Goal 135. Weak Mutation 847: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> %
   * Goal 136. Weak Mutation 848: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> -
   * Goal 137. Weak Mutation 849: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> *
   * Goal 138. Weak Mutation 3226: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> -1
   * Goal 139. Weak Mutation 3237: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> +
   * Goal 140. Weak Mutation 3239: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> *
   * Goal 141. Weak Mutation 3240: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> /
   * Goal 142. Weak Mutation 3257: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> %
   * Goal 143. Weak Mutation 3259: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> /
   * Goal 144. Weak Mutation 3260: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> %
   * Goal 145. Weak Mutation 3263: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> /
   * Goal 146. Weak Mutation 1202: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> >
   * Goal 147. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> ==
   * Goal 148. Weak Mutation 3324: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> -1
   * Goal 149. Weak Mutation 3325: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> >
   * Goal 150. Weak Mutation 3339: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> +
   * Goal 151. Weak Mutation 3341: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> *
   * Goal 152. Weak Mutation 3342: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> /
   * Goal 153. Weak Mutation 3238: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> %
   * Goal 154. Weak Mutation 3256: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> +
   * Goal 155. Weak Mutation 3258: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> -
   * Goal 156. Weak Mutation 3261: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> -
   * Goal 157. Weak Mutation 3262: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> *
   * Goal 158. Weak Mutation 2592: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator != -> -1
   * Goal 159. Weak Mutation 3340: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> %
   * Goal 160. Weak Mutation 824: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:391 - ReplaceComparisonOperator >= -> ==
   * Goal 161. Weak Mutation 2659: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> +
   * Goal 162. Weak Mutation 2661: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> -
   * Goal 163. Weak Mutation 2662: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> *
   * Goal 164. Weak Mutation 2609: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator != -> -1
   * Goal 165. Weak Mutation 2235: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> -
   * Goal 166. Weak Mutation 2236: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> *
   * Goal 167. Weak Mutation 2248: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1185 - ReplaceComparisonOperator != -> >
   * Goal 168. Weak Mutation 2259: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> -1
   * Goal 169. Weak Mutation 2260: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> >
   * Goal 170. Weak Mutation 888: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator != -> ==
   * Goal 171. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:true
   * Goal 172. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:zero
   * Goal 173. org.apache.commons.math.util.MathUtils.round(DI)D:zero
   * Goal 174. org.apache.commons.math.util.MathUtils.distance1([I[I)I:zero
   * Goal 175. org.apache.commons.math.util.MathUtils.log(DD)D:positive
   * Goal 176. org.apache.commons.math.util.MathUtils.sinh(D)D:positive
   * Goal 177. org.apache.commons.math.util.MathUtils.cosh(D)D:positive
   * Goal 178. org.apache.commons.math.util.MathUtils.factorial(I)J:positive
   * Goal 179. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:false
   * Goal 180. org.apache.commons.math.util.MathUtils.sign(I)I:zero
   * Goal 181. org.apache.commons.math.util.MathUtils.distance([D[D)D:positive
   * Goal 182. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:positive
   * Goal 183. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:positive
   * Goal 184. org.apache.commons.math.util.MathUtils.sign(J)J:zero
   * Goal 185. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:nonempty
   * Goal 186. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 187. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 188. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 189. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 190. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 191. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 192. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 193. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 194. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 195. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 196. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 197. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 198. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 199. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 200. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 201. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 202. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 203. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 204. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 205. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 206. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 207. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 208. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 209. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 210. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 211. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 212. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 213. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 214. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 215. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 216. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 217. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 218. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 219. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 220. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 221. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 222. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 223. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 224. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 225. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 226. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 227. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 228. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 229. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 230. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 231. Branch org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch in context: org.apache.commons.math.util.MathUtils:round(DI)D
   * Goal 232. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 233. Branch org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - false in context: org.apache.commons.math.util.MathUtils:distance1([I[I)I
   * Goal 234. Branch org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true in context: org.apache.commons.math.util.MathUtils:distance1([I[I)I
   * Goal 235. Branch org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:log(DD)D
   * Goal 236. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 237. Branch org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:cosh(D)D
   * Goal 238. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 239. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 240. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 241. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 242. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 243. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 244. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 245. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - false in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 246. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 247. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - false in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 248. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 249. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 250. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 251. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 252. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 253. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - false
   * Goal 254. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   */

  @Test
  public void test002()  throws Throwable  {
      double double0 = MathUtils.sinh(0.49999999999999994);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[2] = (-2391);
      int int0 = MathUtils.distanceInf(intArray0, intArray0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) Float.NaN;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = 0.5210953054937473;
      doubleArray0[3] = (-2952.0);
      doubleArray0[4] = (double) (-2391);
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) (-2391);
      double double1 = MathUtils.distance(doubleArray0, doubleArray0);
      double double2 = MathUtils.distanceInf(doubleArray0, doubleArray0);
      int int1 = MathUtils.distance1(intArray0, intArray0);
      int int2 = MathUtils.distance1(intArray0, intArray0);
      double double3 = MathUtils.cosh(0.0);
      long long0 = MathUtils.sign((long) 0);
      long long1 = MathUtils.factorial(0);
      boolean boolean0 = MathUtils.equalsIncludingNaN(doubleArray0, doubleArray0);
      boolean boolean1 = MathUtils.equalsIncludingNaN(1623.9, 0.5210953054937473);
      int int3 = MathUtils.sign(0);
      double double4 = MathUtils.round((double) 0, 0);
      double double5 = MathUtils.log(0.0, 0);
      boolean boolean2 = MathUtils.equalsIncludingNaN(doubleArray0, doubleArray0);
      int int4 = MathUtils.compareTo(3508.450561, (-2391.0), 0.0);
      boolean boolean3 = MathUtils.equalsIncludingNaN((double) 0, (-1254.2119049525));
      double[] doubleArray1 = MathUtils.normalizeArray(doubleArray0, (-715.74095));
  }

  //Test case number: 3
  /*
   * 129 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 41. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:zero
   * Goal 42. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 43. Weak Mutation 1557: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> <
   * Goal 44. Weak Mutation 1615: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> -1
   * Goal 45. Weak Mutation 1628: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> -1
   * Goal 46. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 47. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 48. Weak Mutation 1647: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 49. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 50. Weak Mutation 1657: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 51. Weak Mutation 1658: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 52. Weak Mutation 1661: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 53. Weak Mutation 1672: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator >= -> -1
   * Goal 54. Weak Mutation 1683: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> +
   * Goal 55. Weak Mutation 1684: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> %
   * Goal 56. Weak Mutation 1685: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> -
   * Goal 57. Weak Mutation 1686: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> *
   * Goal 58. Weak Mutation 1695: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> +
   * Goal 59. Weak Mutation 1696: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> %
   * Goal 60. Weak Mutation 1697: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> -
   * Goal 61. Weak Mutation 1698: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> *
   * Goal 62. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 63. Weak Mutation 1868: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> >=
   * Goal 64. Weak Mutation 1875: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator != -> <
   * Goal 65. Weak Mutation 1885: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> +
   * Goal 66. Weak Mutation 1886: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> %
   * Goal 67. Weak Mutation 1887: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> -
   * Goal 68. Weak Mutation 1888: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> *
   * Goal 69. Weak Mutation 1901: org.apache.commons.math.util.MathUtils.lcm(JJ)J:991 - ReplaceComparisonOperator != -> >
   * Goal 70. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 71. Weak Mutation 1981: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> ==
   * Goal 72. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 73. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 74. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 75. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 76. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 77. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 78. Weak Mutation 1440: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 79. Weak Mutation 1451: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 80. Weak Mutation 1452: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 81. Weak Mutation 1454: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 82. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 83. Weak Mutation 1771: org.apache.commons.math.util.MathUtils.indicator(I)I:904 - ReplaceComparisonOperator < -> <=
   * Goal 84. Weak Mutation 1803: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> >=
   * Goal 85. Weak Mutation 1810: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator != -> <
   * Goal 86. Weak Mutation 1825: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> +
   * Goal 87. Weak Mutation 1826: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> %
   * Goal 88. Weak Mutation 1827: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> -
   * Goal 89. Weak Mutation 1844: org.apache.commons.math.util.MathUtils.lcm(II)I:956 - ReplaceComparisonOperator != -> <
   * Goal 90. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 91. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 92. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 93. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 94. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 95. Weak Mutation 2140: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> %
   * Goal 96. Weak Mutation 2141: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> -
   * Goal 97. Weak Mutation 2142: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> *
   * Goal 98. Weak Mutation 2143: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> /
   * Goal 99. Weak Mutation 2149: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> +
   * Goal 100. Weak Mutation 2150: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 101. Weak Mutation 2151: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> *
   * Goal 102. Weak Mutation 2152: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 103. Weak Mutation 2158: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> +
   * Goal 104. Weak Mutation 2159: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> %
   * Goal 105. Weak Mutation 2160: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> -
   * Goal 106. Weak Mutation 2161: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> *
   * Goal 107. Weak Mutation 2163: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> %
   * Goal 108. Weak Mutation 2165: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> /
   * Goal 109. Weak Mutation 2167: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 110. Weak Mutation 2169: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 111. org.apache.commons.math.util.MathUtils.lcm(JJ)J:positive
   * Goal 112. org.apache.commons.math.util.MathUtils.indicator(I)I:positive
   * Goal 113. org.apache.commons.math.util.MathUtils.lcm(II)I:positive
   * Goal 114. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 115. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 116. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 117. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 118. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 119. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 120. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 121. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 122. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 123. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 124. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 125. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 126. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 127. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 128. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 129. Branch org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:normalizeAngle(DD)D
   */

  @Test
  public void test003()  throws Throwable  {
      int int0 = MathUtils.indicator(0);
      int int1 = MathUtils.lcm(28, 1);
      long long0 = MathUtils.lcm((long) 28, (long) 28);
      double double0 = MathUtils.normalizeAngle(0, 1);
  }

  //Test case number: 4
  /*
   * 54 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I54 Branch 213 IFGE L1834 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 12. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - true
   * Goal 14. Weak Mutation 3227: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> >
   * Goal 15. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 16. Weak Mutation 2572: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> -1
   * Goal 17. Weak Mutation 3226: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> -1
   * Goal 18. Weak Mutation 3237: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> +
   * Goal 19. Weak Mutation 3239: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> *
   * Goal 20. Weak Mutation 3240: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> /
   * Goal 21. Weak Mutation 3257: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> %
   * Goal 22. Weak Mutation 3259: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> /
   * Goal 23. Weak Mutation 3260: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> %
   * Goal 24. Weak Mutation 3263: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> /
   * Goal 25. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 26. Weak Mutation 3397: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1829 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   * Goal 28. Weak Mutation 3238: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> %
   * Goal 29. Weak Mutation 3391: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> >
   * Goal 30. org.apache.commons.math.util.MathUtils.hash([D)I:positive
   * Goal 31. org.apache.commons.math.util.MathUtils.distance([D[D)D:zero
   * Goal 32. org.apache.commons.math.util.MathUtils.sign(F)F:zero
   * Goal 33. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 34. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 35. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 36. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 37. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 38. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 39. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 40. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 41. Branch org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash([D)I
   * Goal 42. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 43. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - false in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 45. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 46. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I54 Branch 213 IFGE L1834 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 47. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 48. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 49. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 50. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 51. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 52. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 53. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 54. Weak Mutation 3420: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1834 - ReplaceComparisonOperator >= -> >
   */

  @Test
  public void test004()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 1685.0022735139762;
      double double0 = MathUtils.distance(doubleArray0, doubleArray0);
      float float0 = MathUtils.sign(0.0F);
      int int0 = MathUtils.hash(doubleArray0);
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = (double) 0.0F;
      doubleArray1[2] = 0.0;
      doubleArray1[3] = (double) 0.0F;
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.INCREASING;
      MathUtils.checkOrder(doubleArray1, mathUtils_OrderDirection0, false);
  }

  //Test case number: 5
  /*
   * 18 covered goals:
   * Goal 1. factorialDouble(I)D_org.evosuite.runtime.TooManyResourcesException_IMPLICIT
   * Goal 2. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - true
   * Goal 7. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> ==
   * Goal 8. Weak Mutation 1276: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> ==
   * Goal 9. Weak Mutation 1294: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> !=
   * Goal 10. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> %
   * Goal 11. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> -
   * Goal 12. Weak Mutation 1307: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> *
   * Goal 13. Weak Mutation 1308: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> /
   * Goal 14. Weak Mutation 1226: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:618 - ReplaceComparisonOperator >= -> ==
   * Goal 15. Weak Mutation 1241: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:623 - ReplaceComparisonOperator >= -> ==
   * Goal 16. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   */

  @Test
  public void test005()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.factorialDouble(Integer.MAX_VALUE);
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  //Test case number: 6
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 4. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 5. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 9. equals(DDI)Z_java.lang.AssertionError_EXPLICIT
   * Goal 10. Weak Mutation 1002: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> <=
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   */

  @Test
  public void test006()  throws Throwable  {
      double double0 = MathUtils.TWO_PI;
      // Undeclared exception!
      try { 
        MathUtils.equals((-1552.2616054847), 6.283185307179586, 4194304);
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 7
  /*
   * 158 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - true
   * Goal 40. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 41. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 44. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 45. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false
   * Goal 46. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true
   * Goal 47. org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true
   * Goal 48. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 49. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 50. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true
   * Goal 51. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 52. Weak Mutation 1557: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> <
   * Goal 53. Weak Mutation 1615: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> -1
   * Goal 54. Weak Mutation 1628: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> -1
   * Goal 55. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 56. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 57. Weak Mutation 1647: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 58. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 59. Weak Mutation 1657: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 60. Weak Mutation 1658: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 61. Weak Mutation 1661: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 62. Weak Mutation 1672: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator >= -> -1
   * Goal 63. Weak Mutation 1683: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> +
   * Goal 64. Weak Mutation 1684: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> %
   * Goal 65. Weak Mutation 1685: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> -
   * Goal 66. Weak Mutation 1686: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> *
   * Goal 67. Weak Mutation 1695: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> +
   * Goal 68. Weak Mutation 1696: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> %
   * Goal 69. Weak Mutation 1697: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> -
   * Goal 70. Weak Mutation 1698: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> *
   * Goal 71. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 72. Weak Mutation 1868: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> >=
   * Goal 73. Weak Mutation 1875: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator != -> <
   * Goal 74. Weak Mutation 1885: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> +
   * Goal 75. Weak Mutation 1886: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> %
   * Goal 76. Weak Mutation 1887: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> -
   * Goal 77. Weak Mutation 1888: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> *
   * Goal 78. Weak Mutation 1901: org.apache.commons.math.util.MathUtils.lcm(JJ)J:991 - ReplaceComparisonOperator != -> >
   * Goal 79. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 80. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 81. Weak Mutation 1981: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> ==
   * Goal 82. Weak Mutation 1718: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> !=
   * Goal 83. Weak Mutation 1770: org.apache.commons.math.util.MathUtils.indicator(I)I:904 - ReplaceComparisonOperator < -> !=
   * Goal 84. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 85. Weak Mutation 2057: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> >=
   * Goal 86. Weak Mutation 2063: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator != -> ==
   * Goal 87. Weak Mutation 2068: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> !=
   * Goal 88. Weak Mutation 2083: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> |
   * Goal 89. Weak Mutation 2084: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> ^
   * Goal 90. Weak Mutation 2092: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> |
   * Goal 91. Weak Mutation 2093: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> ^
   * Goal 92. Weak Mutation 2108: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>
   * Goal 93. Weak Mutation 2109: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>>
   * Goal 94. Weak Mutation 2110: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> %
   * Goal 95. Weak Mutation 2111: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> -
   * Goal 96. Weak Mutation 2112: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> *
   * Goal 97. Weak Mutation 2113: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> /
   * Goal 98. Weak Mutation 2115: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator | -> &
   * Goal 99. Weak Mutation 873: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> <
   * Goal 100. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 101. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 102. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 103. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 104. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 105. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 106. Weak Mutation 1440: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 107. Weak Mutation 1451: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 108. Weak Mutation 1452: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 109. Weak Mutation 1454: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 110. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 111. Weak Mutation 1803: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> >=
   * Goal 112. Weak Mutation 1810: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator != -> <
   * Goal 113. Weak Mutation 1825: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> +
   * Goal 114. Weak Mutation 1826: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> %
   * Goal 115. Weak Mutation 1827: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> -
   * Goal 116. Weak Mutation 1844: org.apache.commons.math.util.MathUtils.lcm(II)I:956 - ReplaceComparisonOperator != -> <
   * Goal 117. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 118. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 119. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 120. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 121. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 122. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 123. Weak Mutation 1962: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1032 - ReplaceComparisonOperator == -> !=
   * Goal 124. org.apache.commons.math.util.MathUtils.lcm(JJ)J:positive
   * Goal 125. org.apache.commons.math.util.MathUtils.indicator(B)B:positive
   * Goal 126. org.apache.commons.math.util.MathUtils.indicator(I)I:positive
   * Goal 127. org.apache.commons.math.util.MathUtils.scalb(DI)D:positive
   * Goal 128. org.apache.commons.math.util.MathUtils.lcm(II)I:positive
   * Goal 129. org.apache.commons.math.util.MathUtils.equals(DD)Z:false
   * Goal 130. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 131. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 132. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 133. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 134. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 135. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 136. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 137. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 138. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 139. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 140. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 141. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 142. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 143. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 144. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 145. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 146. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 147. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 148. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 149. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 150. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 151. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 152. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 153. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 154. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 155. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 156. Weak Mutation 1949: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> -2
   * Goal 157. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 158. mulAndCheck(II)I_java.lang.ArithmeticException_EXPLICIT
   */

  @Test
  public void test007()  throws Throwable  {
      int int0 = MathUtils.indicator(2251);
      int int1 = MathUtils.lcm(28, 1);
      boolean boolean0 = MathUtils.equals(Double.POSITIVE_INFINITY, 1251.61669828);
      long long0 = MathUtils.lcm(774L, (long) 28);
      double double0 = MathUtils.scalb(2.718281828459045, 1);
      byte byte0 = MathUtils.indicator((byte)75);
      // Undeclared exception!
      try { 
        MathUtils.mulAndCheck(2147353937, (-2491));
      } catch(ArithmeticException e) {
         //
         // overflow: mul
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 8
  /*
   * 235 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 556
   * Goal 2. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I26 Branch 5 IFGE L143 - false
   * Goal 41. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I34 Branch 6 IFGT L145 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 43. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 44. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 45. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false
   * Goal 46. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 47. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - true
   * Goal 48. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - false
   * Goal 49. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true
   * Goal 50. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - false
   * Goal 51. org.apache.commons.math.util.MathUtils.gcd(II)I: I81 Branch 91 IF_ICMPGE L711 - false
   * Goal 52. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true
   * Goal 53. org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - false
   * Goal 54. org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - true
   * Goal 55. org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 173 IFLE L1424 - false
   * Goal 56. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true
   * Goal 57. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true
   * Goal 58. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false
   * Goal 59. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true
   * Goal 60. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 61. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 62. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 63. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 64. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 65. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 66. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 67. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 68. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 69. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 70. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 71. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 72. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 73. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 74. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 75. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 76. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 77. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 78. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 79. Weak Mutation 1154: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator = null -> != null
   * Goal 80. Weak Mutation 1156: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator != null -> = null
   * Goal 81. Weak Mutation 1174: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:551 - ReplaceComparisonOperator == -> -2
   * Goal 82. Weak Mutation 1183: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> -1
   * Goal 83. Weak Mutation 1194: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:555 - ReplaceComparisonOperator != -> ==
   * Goal 84. Weak Mutation 2174: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1165 - ReplaceComparisonOperator == -> !=
   * Goal 85. Weak Mutation 2180: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1169 - ReplaceComparisonOperator == -> !=
   * Goal 86. Weak Mutation 2196: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> -1
   * Goal 87. Weak Mutation 2197: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> >
   * Goal 88. Weak Mutation 2204: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1177 - ReplaceComparisonOperator == -> !=
   * Goal 89. Weak Mutation 2223: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1181 - ReplaceComparisonOperator != -> ==
   * Goal 90. Weak Mutation 2234: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> %
   * Goal 91. Weak Mutation 2237: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> /
   * Goal 92. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 93. Weak Mutation 1718: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> !=
   * Goal 94. Weak Mutation 2630: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator != -> <
   * Goal 95. Weak Mutation 2636: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator <= -> -1
   * Goal 96. Weak Mutation 2057: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> >=
   * Goal 97. Weak Mutation 2063: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator != -> ==
   * Goal 98. Weak Mutation 2068: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> !=
   * Goal 99. Weak Mutation 2083: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> |
   * Goal 100. Weak Mutation 2084: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> ^
   * Goal 101. Weak Mutation 2092: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> |
   * Goal 102. Weak Mutation 2093: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> ^
   * Goal 103. Weak Mutation 2108: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>
   * Goal 104. Weak Mutation 2109: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>>
   * Goal 105. Weak Mutation 2110: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> %
   * Goal 106. Weak Mutation 2111: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> -
   * Goal 107. Weak Mutation 2112: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> *
   * Goal 108. Weak Mutation 2113: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> /
   * Goal 109. Weak Mutation 2115: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator | -> &
   * Goal 110. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 111. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 112. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 113. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 114. Weak Mutation 1440: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 115. Weak Mutation 1451: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 116. Weak Mutation 1452: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 117. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 118. Weak Mutation 60: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> -1
   * Goal 119. Weak Mutation 67: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> -1
   * Goal 120. Weak Mutation 77: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> +
   * Goal 121. Weak Mutation 78: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> %
   * Goal 122. Weak Mutation 79: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> *
   * Goal 123. Weak Mutation 80: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> /
   * Goal 124. Weak Mutation 84: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceComparisonOperator > -> !=
   * Goal 125. Weak Mutation 90: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> %
   * Goal 126. Weak Mutation 91: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> -
   * Goal 127. Weak Mutation 92: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> *
   * Goal 128. Weak Mutation 93: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> /
   * Goal 129. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 130. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 131. Weak Mutation 2714: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> >
   * Goal 132. Weak Mutation 1340: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> >
   * Goal 133. Weak Mutation 1421: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> ==
   * Goal 134. Weak Mutation 1556: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> -1
   * Goal 135. Weak Mutation 1582: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator != -> >
   * Goal 136. Weak Mutation 1605: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> %
   * Goal 137. Weak Mutation 1608: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> /
   * Goal 138. Weak Mutation 1453: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 139. Weak Mutation 1468: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator >= -> -1
   * Goal 140. Weak Mutation 1482: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> +
   * Goal 141. Weak Mutation 1483: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> %
   * Goal 142. Weak Mutation 1484: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> -
   * Goal 143. Weak Mutation 1485: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> *
   * Goal 144. Weak Mutation 1497: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> +
   * Goal 145. Weak Mutation 1498: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> %
   * Goal 146. Weak Mutation 1499: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> -
   * Goal 147. Weak Mutation 1500: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> *
   * Goal 148. Weak Mutation 2610: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator != -> <
   * Goal 149. Weak Mutation 2617: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator <= -> -1
   * Goal 150. Weak Mutation 2593: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator != -> <
   * Goal 151. Weak Mutation 2599: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator <= -> -1
   * Goal 152. Weak Mutation 2235: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> -
   * Goal 153. Weak Mutation 2236: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> *
   * Goal 154. Weak Mutation 2248: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1185 - ReplaceComparisonOperator != -> >
   * Goal 155. Weak Mutation 2259: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> -1
   * Goal 156. Weak Mutation 2260: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> >
   * Goal 157. Weak Mutation 1549: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> <=
   * Goal 158. Weak Mutation 1569: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator == -> >=
   * Goal 159. org.apache.commons.math.util.MathUtils.indicator(B)B:positive
   * Goal 160. org.apache.commons.math.util.MathUtils.sign(S)S:positive
   * Goal 161. org.apache.commons.math.util.MathUtils.scalb(DI)D:positive
   * Goal 162. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 163. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:false
   * Goal 164. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:negative
   * Goal 165. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   * Goal 166. org.apache.commons.math.util.MathUtils.sign(J)J:positive
   * Goal 167. org.apache.commons.math.util.MathUtils.sign(I)I:positive
   * Goal 168. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:nonempty
   * Goal 169. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 170. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 171. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 172. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 173. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 174. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 175. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 176. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 177. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 178. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 179. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 180. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 181. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 182. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 183. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 184. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 185. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 186. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 187. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 188. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 189. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 190. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 191. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 192. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 193. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 194. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 195. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 196. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 197. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 198. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 199. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 200. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 201. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - false in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 202. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 203. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 204. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 205. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 206. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 207. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 208. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 209. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 210. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 211. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 212. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 213. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 214. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 215. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 216. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 217. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 218. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 219. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 220. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 221. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 222. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 223. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - false in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 224. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 225. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 226. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - true in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 227. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 228. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I81 Branch 91 IF_ICMPGE L711 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 229. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 173 IFLE L1424 - false in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 230. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 231. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 232. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 233. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 234. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - false
   * Goal 235. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   */

  @Test
  public void test008()  throws Throwable  {
      long long0 = MathUtils.sign(1256L);
      int int0 = MathUtils.sign(2408);
      long long1 = MathUtils.subAndCheck((-3748L), 1256L);
      short short0 = MathUtils.sign((short)317);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) (-3748L);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (double) (short)1;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) (-3748L);
      doubleArray0[5] = (double) (-3748L);
      doubleArray0[6] = (double) 1L;
      doubleArray0[7] = (double) 1L;
      doubleArray0[8] = (double) 1;
      double[] doubleArray1 = MathUtils.normalizeArray(doubleArray0, (-3748.0));
      long long2 = MathUtils.gcd((-432L), 0L);
      byte byte0 = MathUtils.indicator((byte)112);
      double double0 = MathUtils.scalb(2.718281828459045, (short)317);
      byte byte1 = MathUtils.indicator((byte)1);
      int int1 = MathUtils.sign(172);
      boolean boolean0 = MathUtils.equalsIncludingNaN(doubleArray0, doubleArray1);
      int int2 = MathUtils.gcd(172, (-2332));
  }

  //Test case number: 9
  /*
   * 169 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I223 Branch 227 IFLT L1976 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false
   * Goal 35. Weak Mutation 1131: org.apache.commons.math.util.MathUtils.equals([D[D)Z:526 - ReplaceComparisonOperator == -> >=
   * Goal 36. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 39. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 40. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 41. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 42. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 43. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 44. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 45. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 46. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 48. Weak Mutation 1718: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> !=
   * Goal 49. Weak Mutation 3227: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> >
   * Goal 50. Weak Mutation 1770: org.apache.commons.math.util.MathUtils.indicator(I)I:904 - ReplaceComparisonOperator < -> !=
   * Goal 51. Weak Mutation 838: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> %
   * Goal 52. Weak Mutation 839: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> -
   * Goal 53. Weak Mutation 840: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> *
   * Goal 54. Weak Mutation 841: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> /
   * Goal 55. Weak Mutation 846: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> +
   * Goal 56. Weak Mutation 847: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> %
   * Goal 57. Weak Mutation 848: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> -
   * Goal 58. Weak Mutation 849: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> *
   * Goal 59. Weak Mutation 1110: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator = null -> != null
   * Goal 60. Weak Mutation 1112: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator != null -> = null
   * Goal 61. Weak Mutation 2063: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator != -> ==
   * Goal 62. Weak Mutation 2068: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> !=
   * Goal 63. Weak Mutation 2083: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> |
   * Goal 64. Weak Mutation 2084: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> ^
   * Goal 65. Weak Mutation 2092: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> |
   * Goal 66. Weak Mutation 2093: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> ^
   * Goal 67. Weak Mutation 2108: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>
   * Goal 68. Weak Mutation 2109: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>>
   * Goal 69. Weak Mutation 2110: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> %
   * Goal 70. Weak Mutation 2111: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> -
   * Goal 71. Weak Mutation 2112: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> *
   * Goal 72. Weak Mutation 2113: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> /
   * Goal 73. Weak Mutation 2115: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator | -> &
   * Goal 74. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 75. Weak Mutation 969: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> +
   * Goal 76. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 77. Weak Mutation 971: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> *
   * Goal 78. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 79. Weak Mutation 2743: org.apache.commons.math.util.MathUtils.pow(II)I:1521 - ReplaceComparisonOperator >= -> ==
   * Goal 80. Weak Mutation 2767: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> -2
   * Goal 81. Weak Mutation 2768: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> >=
   * Goal 82. Weak Mutation 2777: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> |
   * Goal 83. Weak Mutation 2778: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> ^
   * Goal 84. Weak Mutation 2779: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> -2
   * Goal 85. Weak Mutation 2780: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> >=
   * Goal 86. Weak Mutation 2794: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> +
   * Goal 87. Weak Mutation 2795: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> %
   * Goal 88. Weak Mutation 2796: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> -
   * Goal 89. Weak Mutation 2797: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> /
   * Goal 90. Weak Mutation 2810: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> +
   * Goal 91. Weak Mutation 2811: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> %
   * Goal 92. Weak Mutation 2812: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> -
   * Goal 93. Weak Mutation 2813: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> /
   * Goal 94. Weak Mutation 2821: org.apache.commons.math.util.MathUtils.pow(II)I:1534 - ReplaceBitwiseOperator >> -> <<
   * Goal 95. Weak Mutation 3226: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> -1
   * Goal 96. Weak Mutation 3237: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> +
   * Goal 97. Weak Mutation 3239: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> *
   * Goal 98. Weak Mutation 3240: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> /
   * Goal 99. Weak Mutation 3257: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> %
   * Goal 100. Weak Mutation 3259: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> /
   * Goal 101. Weak Mutation 3260: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> %
   * Goal 102. Weak Mutation 3263: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> /
   * Goal 103. Weak Mutation 3498: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> +
   * Goal 104. Weak Mutation 3499: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> %
   * Goal 105. Weak Mutation 3500: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> -
   * Goal 106. Weak Mutation 3501: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> *
   * Goal 107. Weak Mutation 3506: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> -1
   * Goal 108. Weak Mutation 3507: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> >
   * Goal 109. Weak Mutation 3539: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> !=
   * Goal 110. Weak Mutation 3568: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator <= -> ==
   * Goal 111. Weak Mutation 2058: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> <=
   * Goal 112. Weak Mutation 2114: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator | -> ^
   * Goal 113. Weak Mutation 980: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> !=
   * Goal 114. org.apache.commons.math.util.MathUtils.indicator(B)B:positive
   * Goal 115. org.apache.commons.math.util.MathUtils.distance([D[D)D:zero
   * Goal 116. org.apache.commons.math.util.MathUtils.indicator(I)I:positive
   * Goal 117. org.apache.commons.math.util.MathUtils.cosh(D)D:positive
   * Goal 118. org.apache.commons.math.util.MathUtils.pow(II)I:negative
   * Goal 119. org.apache.commons.math.util.MathUtils.safeNorm([D)D:positive
   * Goal 120. org.apache.commons.math.util.MathUtils.equals([D[D)Z:false
   * Goal 121. org.apache.commons.math.util.MathUtils.pow(II)I:positive
   * Goal 122. org.apache.commons.math.util.MathUtils.scalb(DI)D:negative
   * Goal 123. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:true
   * Goal 124. org.apache.commons.math.util.MathUtils.round(DII)D:positive
   * Goal 125. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 126. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 127. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 128. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 129. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 130. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 131. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 132. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 133. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 134. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 135. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 136. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 137. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 138. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 139. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 140. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 141. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 142. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 143. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 144. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 145. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 146. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 147. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 148. Branch org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:cosh(D)D
   * Goal 149. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 150. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 151. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 152. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 153. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 154. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 155. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 156. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 157. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 158. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 159. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 160. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 161. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 162. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 163. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 164. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 165. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I223 Branch 227 IFLT L1976 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 166. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 167. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 168. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 169. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   */

  @Test
  public void test009()  throws Throwable  {
      boolean boolean0 = MathUtils.equalsIncludingNaN(1257.6, 2.0, 2972.3);
      int int0 = MathUtils.pow(12, 1);
      double double0 = MathUtils.round(2.0, 12, 1);
      byte byte0 = MathUtils.indicator((byte)41);
      int int1 = MathUtils.pow(143, 1574);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 143;
      doubleArray0[1] = (double) 12;
      doubleArray0[2] = (double) 12;
      double double1 = MathUtils.safeNorm(doubleArray0);
      double double2 = MathUtils.cosh(2.0);
      double double3 = MathUtils.distance(doubleArray0, doubleArray0);
      double double4 = MathUtils.scalb((-1380.62384962146), 1574);
      double double5 = MathUtils.cosh((-959071839));
      int int2 = MathUtils.indicator(143);
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = (double) (-959071839);
      doubleArray1[2] = (-1380.62384962146);
      doubleArray1[3] = (double) 1;
      doubleArray1[4] = Double.POSITIVE_INFINITY;
      doubleArray1[5] = 144.00347218036097;
      doubleArray1[6] = (double) 1574;
      doubleArray1[7] = (double) 1;
      doubleArray1[8] = (double) 1;
      boolean boolean1 = MathUtils.equals(doubleArray1, doubleArray0);
  }

  //Test case number: 10
  /*
   * 93 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1032
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 27. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 28. Weak Mutation 2674: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> /
   * Goal 29. Weak Mutation 2682: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator < -> !=
   * Goal 30. Weak Mutation 2691: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator <= -> ==
   * Goal 31. Weak Mutation 2743: org.apache.commons.math.util.MathUtils.pow(II)I:1521 - ReplaceComparisonOperator >= -> ==
   * Goal 32. Weak Mutation 2767: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> -2
   * Goal 33. Weak Mutation 2768: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> >=
   * Goal 34. Weak Mutation 2777: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> |
   * Goal 35. Weak Mutation 2778: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> ^
   * Goal 36. Weak Mutation 2779: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> -2
   * Goal 37. Weak Mutation 2780: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> >=
   * Goal 38. Weak Mutation 2794: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> +
   * Goal 39. Weak Mutation 2795: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> %
   * Goal 40. Weak Mutation 2796: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> -
   * Goal 41. Weak Mutation 2797: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> /
   * Goal 42. Weak Mutation 2810: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> +
   * Goal 43. Weak Mutation 2811: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> %
   * Goal 44. Weak Mutation 2812: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> -
   * Goal 45. Weak Mutation 2813: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> /
   * Goal 46. Weak Mutation 2821: org.apache.commons.math.util.MathUtils.pow(II)I:1534 - ReplaceBitwiseOperator >> -> <<
   * Goal 47. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 48. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 49. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 50. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 51. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 52. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 53. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 54. Weak Mutation 1803: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> >=
   * Goal 55. Weak Mutation 1810: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator != -> <
   * Goal 56. Weak Mutation 1825: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> +
   * Goal 57. Weak Mutation 1826: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> %
   * Goal 58. Weak Mutation 1827: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> -
   * Goal 59. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 60. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 61. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 62. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 63. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 64. Weak Mutation 1828: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> *
   * Goal 65. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 66. Weak Mutation 2671: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> +
   * Goal 67. Weak Mutation 2673: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> *
   * Goal 68. Weak Mutation 1759: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> <=
   * Goal 69. org.apache.commons.math.util.MathUtils.subAndCheck(II)I:zero
   * Goal 70. org.apache.commons.math.util.MathUtils.indicator(F)F:positive
   * Goal 71. org.apache.commons.math.util.MathUtils.pow(II)I:positive
   * Goal 72. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 73. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 74. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 75. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 76. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 77. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 78. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 81. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 83. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 85. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 90. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - false
   * Goal 91. Weak Mutation 1958: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> -1
   * Goal 92. Weak Mutation 1962: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1032 - ReplaceComparisonOperator == -> !=
   * Goal 93. lcm(II)I_java.lang.ArithmeticException_EXPLICIT
   */

  @Test
  public void test010()  throws Throwable  {
      float float0 = MathUtils.indicator(0.0F);
      int int0 = MathUtils.pow(15, 1297);
      int int1 = MathUtils.subAndCheck(15, 15);
      // Undeclared exception!
      try { 
        MathUtils.lcm(1951648015, 40);
      } catch(ArithmeticException e) {
         //
         // overflow: mul
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 11
  /*
   * 165 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I71 Branch 131 IFLE L1062 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I79 Branch 132 IFGT L1064 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 39. Weak Mutation 1581: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator != -> <
   * Goal 40. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 41. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 42. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 43. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 44. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 45. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 46. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 47. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 48. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 49. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 50. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 51. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 52. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 53. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 54. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 55. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 56. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 57. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 58. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 59. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 60. Weak Mutation 2651: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> +
   * Goal 61. Weak Mutation 2652: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> %
   * Goal 62. Weak Mutation 2653: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> *
   * Goal 63. Weak Mutation 2654: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> /
   * Goal 64. Weak Mutation 2660: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> %
   * Goal 65. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 66. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 67. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 68. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 69. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 70. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 71. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 72. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 73. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 74. Weak Mutation 51: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> <
   * Goal 75. Weak Mutation 122: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> %
   * Goal 76. Weak Mutation 124: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> /
   * Goal 77. Weak Mutation 126: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceComparisonOperator > -> !=
   * Goal 78. Weak Mutation 132: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> %
   * Goal 79. Weak Mutation 135: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> /
   * Goal 80. Weak Mutation 1718: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> !=
   * Goal 81. Weak Mutation 940: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> !=
   * Goal 82. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 83. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 84. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 85. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 86. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 87. Weak Mutation 969: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> +
   * Goal 88. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 89. Weak Mutation 971: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> *
   * Goal 90. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 91. Weak Mutation 979: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> -2
   * Goal 92. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 93. Weak Mutation 1988: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> ==
   * Goal 94. Weak Mutation 2019: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1062 - ReplaceComparisonOperator <= -> -1
   * Goal 95. Weak Mutation 2029: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> +
   * Goal 96. Weak Mutation 2030: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> %
   * Goal 97. Weak Mutation 2031: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> -
   * Goal 98. Weak Mutation 2032: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> *
   * Goal 99. Weak Mutation 2036: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceComparisonOperator > -> !=
   * Goal 100. Weak Mutation 2042: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> +
   * Goal 101. Weak Mutation 2043: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> %
   * Goal 102. Weak Mutation 2044: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> -
   * Goal 103. Weak Mutation 2045: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> /
   * Goal 104. Weak Mutation 1202: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> >
   * Goal 105. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> ==
   * Goal 106. Weak Mutation 1982: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> >
   * Goal 107. Weak Mutation 1547: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> -2
   * Goal 108. Weak Mutation 1570: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator == -> <=
   * Goal 109. Weak Mutation 1605: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> %
   * Goal 110. Weak Mutation 1608: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> /
   * Goal 111. Weak Mutation 121: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> +
   * Goal 112. Weak Mutation 123: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> *
   * Goal 113. Weak Mutation 133: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> -
   * Goal 114. Weak Mutation 134: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> *
   * Goal 115. Weak Mutation 1274: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> -1
   * Goal 116. Weak Mutation 2659: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> +
   * Goal 117. Weak Mutation 2661: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> -
   * Goal 118. Weak Mutation 2662: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> *
   * Goal 119. Weak Mutation 1262: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> >
   * Goal 120. Weak Mutation 61: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> ==
   * Goal 121. Weak Mutation 1606: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> -
   * Goal 122. Weak Mutation 1607: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> *
   * Goal 123. org.apache.commons.math.util.MathUtils.sinh(D)D:negative
   * Goal 124. org.apache.commons.math.util.MathUtils.indicator(B)B:positive
   * Goal 125. org.apache.commons.math.util.MathUtils.sinh(D)D:positive
   * Goal 126. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:false
   * Goal 127. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:negative
   * Goal 128. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 129. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:zero
   * Goal 130. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:zero
   * Goal 131. org.apache.commons.math.util.MathUtils.factorialLog(I)D:zero
   * Goal 132. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J:positive
   * Goal 133. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:zero
   * Goal 134. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 135. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 136. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 137. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 138. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 139. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 140. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 141. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 142. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 143. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 144. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 145. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 146. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 147. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 148. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 149. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 150. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 151. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 152. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 153. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 154. Branch org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch in context: org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J
   * Goal 155. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 156. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 157. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 158. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 159. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 160. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 161. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 162. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 163. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 164. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 165. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   */

  @Test
  public void test011()  throws Throwable  {
      long long0 = MathUtils.addAndCheck(4095L, 4095L);
      double double0 = MathUtils.sinh(8190L);
      int int0 = MathUtils.compareTo((-97.1904640573934), (-2.6033824355191673E-8), Double.POSITIVE_INFINITY);
      int int1 = MathUtils.addAndCheck(0, 0);
      double double1 = MathUtils.factorialLog(0);
      byte byte0 = MathUtils.indicator((byte)10);
      double double2 = MathUtils.sinh((-97.1904640573934));
      long long1 = MathUtils.mulAndCheck(8190L, (long) 0);
      MathUtils.OrderDirection[] mathUtils_OrderDirectionArray0 = MathUtils.OrderDirection.values();
      long long2 = MathUtils.gcd((long) 0, (-494L));
      long long3 = MathUtils.mulAndCheck((long) (byte)10, (-1105L));
      boolean boolean0 = MathUtils.equalsIncludingNaN((-2278.18590881687), 0.08713622391223907, (double) (-494L));
  }

  //Test case number: 12
  /*
   * 99 covered goals:
   * Goal 1. distance1([D[D)D_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 2. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I26 Branch 5 IFGE L143 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I34 Branch 6 IFGT L145 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 173 IFLE L1424 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true
   * Goal 25. Weak Mutation 2174: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1165 - ReplaceComparisonOperator == -> !=
   * Goal 26. Weak Mutation 2180: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1169 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 2196: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> -1
   * Goal 28. Weak Mutation 2197: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> >
   * Goal 29. Weak Mutation 2204: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1177 - ReplaceComparisonOperator == -> !=
   * Goal 30. Weak Mutation 2223: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1181 - ReplaceComparisonOperator != -> ==
   * Goal 31. Weak Mutation 2234: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> %
   * Goal 32. Weak Mutation 2237: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> /
   * Goal 33. Weak Mutation 3156: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> -1
   * Goal 34. Weak Mutation 3171: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> +
   * Goal 35. Weak Mutation 3173: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> *
   * Goal 36. Weak Mutation 3174: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> /
   * Goal 37. Weak Mutation 3175: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> %
   * Goal 38. Weak Mutation 3178: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> /
   * Goal 39. Weak Mutation 3172: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> %
   * Goal 40. Weak Mutation 60: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> -1
   * Goal 41. Weak Mutation 67: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> -1
   * Goal 42. Weak Mutation 77: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> +
   * Goal 43. Weak Mutation 78: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> %
   * Goal 44. Weak Mutation 79: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> *
   * Goal 45. Weak Mutation 80: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> /
   * Goal 46. Weak Mutation 84: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceComparisonOperator > -> !=
   * Goal 47. Weak Mutation 90: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> %
   * Goal 48. Weak Mutation 91: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> -
   * Goal 49. Weak Mutation 92: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> *
   * Goal 50. Weak Mutation 93: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> /
   * Goal 51. Weak Mutation 49: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> -1
   * Goal 52. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 53. Weak Mutation 2714: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> >
   * Goal 54. Weak Mutation 1556: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> -1
   * Goal 55. Weak Mutation 1582: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator != -> >
   * Goal 56. Weak Mutation 1605: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> %
   * Goal 57. Weak Mutation 1608: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> /
   * Goal 58. Weak Mutation 3176: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> -
   * Goal 59. Weak Mutation 3177: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> *
   * Goal 60. Weak Mutation 2593: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator != -> <
   * Goal 61. Weak Mutation 2599: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator <= -> -1
   * Goal 62. Weak Mutation 2235: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> -
   * Goal 63. Weak Mutation 2236: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> *
   * Goal 64. Weak Mutation 2259: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> -1
   * Goal 65. Weak Mutation 2260: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> >
   * Goal 66. Weak Mutation 2247: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1185 - ReplaceComparisonOperator != -> <
   * Goal 67. Weak Mutation 1549: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> <=
   * Goal 68. Weak Mutation 1569: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator == -> >=
   * Goal 69. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 70. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:negative
   * Goal 71. org.apache.commons.math.util.MathUtils.sign(I)I:positive
   * Goal 72. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:nonempty
   * Goal 73. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 74. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 75. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 76. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 77. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 78. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 79. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 80. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 81. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 83. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 85. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - true in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 173 IFLE L1424 - false in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 98. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   */

  @Test
  public void test012()  throws Throwable  {
      int int0 = MathUtils.sign(2408);
      long long0 = MathUtils.subAndCheck((-3748L), 39916800L);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) (-3748L);
      doubleArray0[1] = 0.0;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) (-3748L);
      doubleArray0[5] = (double) (-3748L);
      doubleArray0[7] = (double) 39916800L;
      doubleArray0[8] = (double) 1;
      double[] doubleArray1 = MathUtils.normalizeArray(doubleArray0, (-3748.0));
      long long1 = MathUtils.gcd((-432L), 0L);
      double[] doubleArray2 = new double[5];
      doubleArray2[0] = (double) 39916800L;
      doubleArray2[1] = 1023.0;
      doubleArray2[2] = (double) 1;
      doubleArray2[3] = (double) 2408;
      doubleArray2[4] = 0.6931470632553101;
      // Undeclared exception!
      try { 
        MathUtils.distance1(doubleArray0, doubleArray2);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 13
  /*
   * 57 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1178
   * Goal 2. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - false
   * Goal 14. Weak Mutation 2174: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1165 - ReplaceComparisonOperator == -> !=
   * Goal 15. Weak Mutation 2180: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1169 - ReplaceComparisonOperator == -> !=
   * Goal 16. Weak Mutation 2196: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> -1
   * Goal 17. Weak Mutation 2204: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1177 - ReplaceComparisonOperator == -> !=
   * Goal 18. Weak Mutation 2223: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1181 - ReplaceComparisonOperator != -> ==
   * Goal 19. Weak Mutation 2234: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> %
   * Goal 20. Weak Mutation 2237: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> /
   * Goal 21. Weak Mutation 1780: org.apache.commons.math.util.MathUtils.indicator(J)J:914 - ReplaceComparisonOperator < -> !=
   * Goal 22. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 23. Weak Mutation 873: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 1803: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> >=
   * Goal 25. Weak Mutation 2610: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator != -> <
   * Goal 26. Weak Mutation 2617: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator <= -> -1
   * Goal 27. Weak Mutation 2235: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> -
   * Goal 28. Weak Mutation 2236: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> *
   * Goal 29. Weak Mutation 1809: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator != -> -1
   * Goal 30. org.apache.commons.math.util.MathUtils.indicator(J)J:positive
   * Goal 31. org.apache.commons.math.util.MathUtils.equals(DD)Z:false
   * Goal 32. org.apache.commons.math.util.MathUtils.sign(J)J:positive
   * Goal 33. org.apache.commons.math.util.MathUtils.lcm(II)I:zero
   * Goal 34. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 35. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 36. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 37. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 38. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 39. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 40. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 41. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 42. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 43. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 45. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 46. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 47. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 48. Branch org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false in context: org.apache.commons.math.util.MathUtils:indicator(J)J
   * Goal 49. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 50. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 51. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 52. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 53. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - false in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 54. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 55. normalizeArray([DD)[D_org.evosuite.runtime.mock.java.lang.MockArithmeticException_DECLARED
   * Goal 56. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - false
   * Goal 57. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   */

  @Test
  public void test013()  throws Throwable  {
      Integer integer0 = new Integer(0);
      int int0 = MathUtils.lcm(28, (int) integer0);
      boolean boolean0 = MathUtils.equals(Double.POSITIVE_INFINITY, 1251.616698280004);
      Integer integer1 = new Integer(28);
      long long0 = MathUtils.indicator((long) 28);
      long long1 = MathUtils.sign(5040L);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 28;
      doubleArray0[1] = (double) 1L;
      doubleArray0[2] = (double) 774L;
      doubleArray0[3] = (double) 5040L;
      doubleArray0[4] = 1251.616698280004;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = Double.POSITIVE_INFINITY;
      doubleArray0[7] = (double) 774L;
      try { 
        MathUtils.normalizeArray(doubleArray0, 5040L);
      } catch(ArithmeticException e) {
         //
         // Array contains an infinite element, \u221E at index 6
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 14
  /*
   * 24 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - false
   * Goal 7. Weak Mutation 1154: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator = null -> != null
   * Goal 8. Weak Mutation 1156: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator != null -> = null
   * Goal 9. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 10. Weak Mutation 2574: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> >
   * Goal 11. Weak Mutation 2581: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator <= -> ==
   * Goal 12. Weak Mutation 1175: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:551 - ReplaceComparisonOperator == -> >=
   * Goal 13. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:false
   * Goal 14. org.apache.commons.math.util.MathUtils.sign(F)F:negative
   * Goal 15. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 16. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 17. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 18. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   */

  @Test
  public void test014()  throws Throwable  {
      float float0 = MathUtils.sign((float) (-1663));
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) (-1.0F);
      doubleArray0[1] = (double) (-1.0F);
      doubleArray0[2] = (double) (-1.0F);
      doubleArray0[6] = (double) (-1663);
      double[] doubleArray1 = new double[6];
      doubleArray1[1] = (double) (-1.0F);
      boolean boolean0 = MathUtils.equalsIncludingNaN(doubleArray0, doubleArray1);
  }

  //Test case number: 15
  /*
   * 72 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I13 Branch 59 IFEQ L509 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - false
   * Goal 18. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 19. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 20. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 21. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 22. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 23. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 24. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 25. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 26. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 28. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 29. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 30. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 31. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 32. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 33. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 34. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 35. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 36. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 37. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 38. Weak Mutation 1086: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:509 - ReplaceComparisonOperator == -> !=
   * Goal 39. Weak Mutation 2743: org.apache.commons.math.util.MathUtils.pow(II)I:1521 - ReplaceComparisonOperator >= -> ==
   * Goal 40. Weak Mutation 2767: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> -2
   * Goal 41. Weak Mutation 2768: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> >=
   * Goal 42. Weak Mutation 2777: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> |
   * Goal 43. Weak Mutation 2778: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> ^
   * Goal 44. Weak Mutation 2779: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> -2
   * Goal 45. Weak Mutation 2780: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> >=
   * Goal 46. Weak Mutation 2794: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> +
   * Goal 47. Weak Mutation 2795: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> %
   * Goal 48. Weak Mutation 2796: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> -
   * Goal 49. Weak Mutation 2797: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> /
   * Goal 50. Weak Mutation 2810: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> +
   * Goal 51. Weak Mutation 2811: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> %
   * Goal 52. Weak Mutation 2812: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> -
   * Goal 53. Weak Mutation 2813: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> /
   * Goal 54. Weak Mutation 2821: org.apache.commons.math.util.MathUtils.pow(II)I:1534 - ReplaceBitwiseOperator >> -> <<
   * Goal 55. Weak Mutation 2832: org.apache.commons.math.util.MathUtils.pow(IJ)I:1551 - ReplaceComparisonOperator >= -> -1
   * Goal 56. Weak Mutation 1106: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:509 - ReplaceComparisonOperator == -> !=
   * Goal 57. org.apache.commons.math.util.MathUtils.pow(II)I:positive
   * Goal 58. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 59. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z
   * Goal 60. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 61. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 62. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z
   * Goal 63. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDI)Z
   * Goal 64. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 65. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 66. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 67. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 68. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 69. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 70. pow(IJ)I_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   * Goal 71. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:true
   * Goal 72. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I13 Branch 59 IFEQ L509 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDI)Z
   */

  @Test
  public void test015()  throws Throwable  {
      boolean boolean0 = MathUtils.equalsIncludingNaN((-198.8), (-198.8), 19);
      int int0 = MathUtils.pow(19, 1041);
      try { 
        MathUtils.pow((-1766), (long) (-1766));
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (-1,766^-1,766)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 16
  /*
   * 154 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.pow(JJ)J:negative
   * Goal 36. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 37. Weak Mutation 1615: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> -1
   * Goal 38. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 39. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 40. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 41. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 42. Weak Mutation 3275: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> -1
   * Goal 43. Weak Mutation 3276: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> >
   * Goal 44. Weak Mutation 3286: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> +
   * Goal 45. Weak Mutation 3288: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> *
   * Goal 46. Weak Mutation 3289: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> /
   * Goal 47. Weak Mutation 3306: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> %
   * Goal 48. Weak Mutation 3308: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> /
   * Goal 49. Weak Mutation 3309: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> %
   * Goal 50. Weak Mutation 3312: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> /
   * Goal 51. Weak Mutation 2833: org.apache.commons.math.util.MathUtils.pow(IJ)I:1551 - ReplaceComparisonOperator >= -> ==
   * Goal 52. Weak Mutation 2851: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> -2
   * Goal 53. Weak Mutation 2852: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> >=
   * Goal 54. Weak Mutation 2859: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> ^
   * Goal 55. Weak Mutation 2863: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> >=
   * Goal 56. Weak Mutation 2875: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> +
   * Goal 57. Weak Mutation 2876: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> %
   * Goal 58. Weak Mutation 2877: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> -
   * Goal 59. Weak Mutation 2878: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> /
   * Goal 60. Weak Mutation 2889: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> +
   * Goal 61. Weak Mutation 2890: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> %
   * Goal 62. Weak Mutation 2891: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> -
   * Goal 63. Weak Mutation 2892: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> /
   * Goal 64. Weak Mutation 2895: org.apache.commons.math.util.MathUtils.pow(IJ)I:1564 - ReplaceBitwiseOperator >> -> <<
   * Goal 65. Weak Mutation 2672: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> %
   * Goal 66. Weak Mutation 2674: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> /
   * Goal 67. Weak Mutation 2682: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator < -> !=
   * Goal 68. Weak Mutation 2691: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator <= -> ==
   * Goal 69. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> ==
   * Goal 70. Weak Mutation 1276: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> ==
   * Goal 71. Weak Mutation 1294: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> !=
   * Goal 72. Weak Mutation 1295: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> -2
   * Goal 73. Weak Mutation 1296: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> >=
   * Goal 74. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> %
   * Goal 75. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> -
   * Goal 76. Weak Mutation 1307: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> *
   * Goal 77. Weak Mutation 1308: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> /
   * Goal 78. Weak Mutation 1558: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> >
   * Goal 79. Weak Mutation 1629: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> ==
   * Goal 80. Weak Mutation 2671: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> +
   * Goal 81. Weak Mutation 2673: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> *
   * Goal 82. Weak Mutation 1226: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:618 - ReplaceComparisonOperator >= -> ==
   * Goal 83. Weak Mutation 1241: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:623 - ReplaceComparisonOperator >= -> ==
   * Goal 84. Weak Mutation 1253: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:626 - ReplaceArithmeticOperator + -> %
   * Goal 85. Weak Mutation 2994: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> -2
   * Goal 86. Weak Mutation 2858: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> |
   * Goal 87. Weak Mutation 2862: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> -2
   * Goal 88. Weak Mutation 2970: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> ==
   * Goal 89. Weak Mutation 2995: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> >=
   * Goal 90. Weak Mutation 3004: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> |
   * Goal 91. Weak Mutation 3005: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> ^
   * Goal 92. Weak Mutation 3008: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> -2
   * Goal 93. Weak Mutation 3009: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> >=
   * Goal 94. Weak Mutation 3020: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> %
   * Goal 95. Weak Mutation 3022: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> /
   * Goal 96. Weak Mutation 3032: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> %
   * Goal 97. Weak Mutation 3034: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> /
   * Goal 98. Weak Mutation 3040: org.apache.commons.math.util.MathUtils.pow(JJ)J:1624 - ReplaceBitwiseOperator >> -> <<
   * Goal 99. Weak Mutation 1255: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:626 - ReplaceArithmeticOperator + -> *
   * Goal 100. Weak Mutation 1256: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:626 - ReplaceArithmeticOperator + -> /
   * Goal 101. Weak Mutation 3031: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> +
   * Goal 102. Weak Mutation 3033: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> -
   * Goal 103. Weak Mutation 3019: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> +
   * Goal 104. Weak Mutation 3021: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> -
   * Goal 105. org.apache.commons.math.util.MathUtils.distance([I[I)D:zero
   * Goal 106. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 107. org.apache.commons.math.util.MathUtils.subAndCheck(II)I:negative
   * Goal 108. org.apache.commons.math.util.MathUtils.factorialDouble(I)D:positive
   * Goal 109. org.apache.commons.math.util.MathUtils.hash([D)I:negative
   * Goal 110. org.apache.commons.math.util.MathUtils.pow(IJ)I:positive
   * Goal 111. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 112. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 113. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 114. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 115. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 116. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 117. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 118. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 119. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 120. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 121. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 122. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 123. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 124. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 125. Branch org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash([D)I
   * Goal 126. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 127. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 128. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 129. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 130. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 131. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 132. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 133. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 134. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 135. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 136. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 137. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 138. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 139. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 140. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 141. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 142. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 143. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 144. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 145. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 146. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 147. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 148. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 149. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 150. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 151. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 152. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 153. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 154. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   */

  @Test
  public void test016()  throws Throwable  {
      int int0 = MathUtils.subAndCheck(15, 251);
      double double0 = MathUtils.factorialDouble(66);
      int int1 = MathUtils.pow(251, (long) 251);
      int[] intArray0 = new int[4];
      intArray0[0] = 899936483;
      intArray0[1] = 15;
      intArray0[2] = 251;
      intArray0[3] = 66;
      double double1 = MathUtils.distance(intArray0, intArray0);
      MathUtils.OrderDirection[] mathUtils_OrderDirectionArray0 = MathUtils.OrderDirection.values();
      long long0 = MathUtils.pow((long) 15, 1949L);
      long long1 = MathUtils.gcd((long) 899936483, (-133204907L));
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 400.0;
      doubleArray0[1] = (double) (-133204907L);
      doubleArray0[2] = (double) 251;
      doubleArray0[3] = (double) 1949L;
      doubleArray0[4] = 5.443449390774456E92;
      doubleArray0[5] = (double) 899936483;
      int int2 = MathUtils.hash(doubleArray0);
      byte[] byteArray0 = new byte[0];
      BigInteger bigInteger0 = null;
      try {
        bigInteger0 = new BigInteger(byteArray0);
      } catch(NumberFormatException e) {
         //
         // Zero length BigInteger
         //
         assertThrownBy("java.math.BigInteger", e);
      }
  }

  //Test case number: 17
  /*
   * 163 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I26 Branch 5 IFGE L143 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I34 Branch 6 IFGT L145 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I13 Branch 59 IFEQ L509 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 173 IFLE L1424 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true
   * Goal 40. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true
   * Goal 41. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true
   * Goal 43. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 44. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 45. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 46. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 47. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 48. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 49. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 50. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 51. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 52. Weak Mutation 2174: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1165 - ReplaceComparisonOperator == -> !=
   * Goal 53. Weak Mutation 2180: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1169 - ReplaceComparisonOperator == -> !=
   * Goal 54. Weak Mutation 2196: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> -1
   * Goal 55. Weak Mutation 2197: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> >
   * Goal 56. Weak Mutation 2204: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1177 - ReplaceComparisonOperator == -> !=
   * Goal 57. Weak Mutation 2223: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1181 - ReplaceComparisonOperator != -> ==
   * Goal 58. Weak Mutation 2234: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> %
   * Goal 59. Weak Mutation 2237: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> /
   * Goal 60. Weak Mutation 3354: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> -1
   * Goal 61. Weak Mutation 3355: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> >
   * Goal 62. Weak Mutation 3371: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> +
   * Goal 63. Weak Mutation 3373: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> *
   * Goal 64. Weak Mutation 3374: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> /
   * Goal 65. Weak Mutation 1086: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:509 - ReplaceComparisonOperator == -> !=
   * Goal 66. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 67. Weak Mutation 1718: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> !=
   * Goal 68. Weak Mutation 2630: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator != -> <
   * Goal 69. Weak Mutation 2636: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator <= -> -1
   * Goal 70. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 71. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 72. Weak Mutation 60: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> -1
   * Goal 73. Weak Mutation 67: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> -1
   * Goal 74. Weak Mutation 77: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> +
   * Goal 75. Weak Mutation 78: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> %
   * Goal 76. Weak Mutation 79: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> *
   * Goal 77. Weak Mutation 80: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> /
   * Goal 78. Weak Mutation 84: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceComparisonOperator > -> !=
   * Goal 79. Weak Mutation 90: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> %
   * Goal 80. Weak Mutation 91: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> -
   * Goal 81. Weak Mutation 92: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> *
   * Goal 82. Weak Mutation 93: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> /
   * Goal 83. Weak Mutation 49: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> -1
   * Goal 84. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 85. Weak Mutation 2714: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> >
   * Goal 86. Weak Mutation 1556: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> -1
   * Goal 87. Weak Mutation 1582: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator != -> >
   * Goal 88. Weak Mutation 1605: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> %
   * Goal 89. Weak Mutation 1608: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> /
   * Goal 90. Weak Mutation 2610: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator != -> <
   * Goal 91. Weak Mutation 2617: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator <= -> -1
   * Goal 92. Weak Mutation 388: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> >=
   * Goal 93. Weak Mutation 1106: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:509 - ReplaceComparisonOperator == -> !=
   * Goal 94. Weak Mutation 2593: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator != -> <
   * Goal 95. Weak Mutation 2599: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator <= -> -1
   * Goal 96. Weak Mutation 2235: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> -
   * Goal 97. Weak Mutation 2236: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> *
   * Goal 98. Weak Mutation 2259: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> -1
   * Goal 99. Weak Mutation 2260: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> >
   * Goal 100. Weak Mutation 2247: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1185 - ReplaceComparisonOperator != -> <
   * Goal 101. Weak Mutation 1549: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> <=
   * Goal 102. Weak Mutation 1569: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator == -> >=
   * Goal 103. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:zero
   * Goal 104. org.apache.commons.math.util.MathUtils.indicator(B)B:positive
   * Goal 105. org.apache.commons.math.util.MathUtils.sign(S)S:positive
   * Goal 106. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 107. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:negative
   * Goal 108. org.apache.commons.math.util.MathUtils.sign(J)J:positive
   * Goal 109. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   * Goal 110. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:false
   * Goal 111. org.apache.commons.math.util.MathUtils.sign(I)I:positive
   * Goal 112. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:nonempty
   * Goal 113. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 114. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 115. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z
   * Goal 116. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 117. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 118. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 119. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 120. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 121. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 122. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 123. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 124. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 125. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 126. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 127. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 128. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 129. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 130. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 131. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z
   * Goal 132. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 133. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 134. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 135. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 136. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 137. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 138. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 139. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 140. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 141. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDI)Z
   * Goal 142. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 143. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 144. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - false in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 145. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 146. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 147. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 148. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 149. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 150. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 151. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 152. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 153. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - false in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 154. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - true in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 155. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 156. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I13 Branch 59 IFEQ L509 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDI)Z
   * Goal 157. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 173 IFLE L1424 - false in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 158. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 159. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 160. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 161. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 162. Weak Mutation 394: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator != -> -1
   * Goal 163. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   */

  @Test
  public void test017()  throws Throwable  {
      long long0 = MathUtils.sign(1256L);
      int int0 = MathUtils.sign(2408);
      long long1 = MathUtils.subAndCheck((-3748L), 39916800L);
      short short0 = MathUtils.sign((short)317);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) (-3748L);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (double) (short)1;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) (-3748L);
      doubleArray0[5] = (double) (-3748L);
      doubleArray0[6] = (double) 1L;
      doubleArray0[7] = (double) 39916800L;
      doubleArray0[8] = (double) 1;
      double[] doubleArray1 = MathUtils.normalizeArray(doubleArray0, (-3748.0));
      long long2 = MathUtils.gcd((-432L), 0L);
      byte byte0 = MathUtils.indicator((byte)112);
      int[] intArray0 = new int[1];
      intArray0[0] = (int) (short)1;
      int int1 = MathUtils.distanceInf(intArray0, intArray0);
      boolean boolean0 = MathUtils.equalsIncludingNaN((double) 39916800L, (double) 1256L, (int) (short)1);
      double double0 = MathUtils.binomialCoefficientDouble(459, 0);
  }

  //Test case number: 18
  /*
   * 48 covered goals:
   * Goal 1. factorialLog(I)D_org.evosuite.runtime.TooManyResourcesException_IMPLICIT
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false
   * Goal 16. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 17. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 18. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 19. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 20. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 21. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 22. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 23. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 24. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 25. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 26. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 27. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 28. Weak Mutation 969: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> +
   * Goal 29. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 30. Weak Mutation 971: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> *
   * Goal 31. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 32. Weak Mutation 979: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> -2
   * Goal 33. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> ==
   * Goal 34. Weak Mutation 1276: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> ==
   * Goal 35. Weak Mutation 1294: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> !=
   * Goal 36. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> %
   * Goal 37. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> -
   * Goal 38. Weak Mutation 1307: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> *
   * Goal 39. Weak Mutation 1308: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> /
   * Goal 40. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:false
   * Goal 41. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 42. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 43. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 45. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 46. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 47. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 48. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   */

  @Test
  public void test018()  throws Throwable  {
      boolean boolean0 = MathUtils.equalsIncludingNaN(2941.2930445169, 0.0, (-3673.082176385868));
      // Undeclared exception!
      try { 
        MathUtils.factorialLog(2146678035);
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  //Test case number: 19
  /*
   * 153 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:negative
   * Goal 39. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 41. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 42. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 43. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 44. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 45. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 46. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 47. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 48. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 49. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 50. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 51. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 52. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 53. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 54. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 55. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 56. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 57. Weak Mutation 1647: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 58. Weak Mutation 1657: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 59. Weak Mutation 1658: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 60. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 61. Weak Mutation 3275: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> -1
   * Goal 62. Weak Mutation 3276: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> >
   * Goal 63. Weak Mutation 3286: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> +
   * Goal 64. Weak Mutation 3288: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> *
   * Goal 65. Weak Mutation 3289: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> /
   * Goal 66. Weak Mutation 3306: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> %
   * Goal 67. Weak Mutation 3308: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> /
   * Goal 68. Weak Mutation 3309: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> %
   * Goal 69. Weak Mutation 3312: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> /
   * Goal 70. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 71. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 72. Weak Mutation 969: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> +
   * Goal 73. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 74. Weak Mutation 971: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> *
   * Goal 75. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 76. Weak Mutation 979: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> -2
   * Goal 77. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 78. Weak Mutation 1739: org.apache.commons.math.util.MathUtils.indicator(D)D:880 - ReplaceComparisonOperator < -> -2
   * Goal 79. Weak Mutation 2743: org.apache.commons.math.util.MathUtils.pow(II)I:1521 - ReplaceComparisonOperator >= -> ==
   * Goal 80. Weak Mutation 2767: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> -2
   * Goal 81. Weak Mutation 2768: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> >=
   * Goal 82. Weak Mutation 2777: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> |
   * Goal 83. Weak Mutation 2778: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> ^
   * Goal 84. Weak Mutation 2779: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> -2
   * Goal 85. Weak Mutation 2780: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> >=
   * Goal 86. Weak Mutation 2794: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> +
   * Goal 87. Weak Mutation 2795: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> %
   * Goal 88. Weak Mutation 2796: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> -
   * Goal 89. Weak Mutation 2797: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> /
   * Goal 90. Weak Mutation 2810: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> +
   * Goal 91. Weak Mutation 2811: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> %
   * Goal 92. Weak Mutation 2812: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> -
   * Goal 93. Weak Mutation 2813: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> /
   * Goal 94. Weak Mutation 2821: org.apache.commons.math.util.MathUtils.pow(II)I:1534 - ReplaceBitwiseOperator >> -> <<
   * Goal 95. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 96. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 97. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 98. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 99. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 100. Weak Mutation 1558: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> >
   * Goal 101. Weak Mutation 1629: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> ==
   * Goal 102. Weak Mutation 1662: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 103. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 104. Weak Mutation 1549: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> <=
   * Goal 105. Weak Mutation 1616: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> ==
   * Goal 106. org.apache.commons.math.util.MathUtils.hash([D)I:positive
   * Goal 107. org.apache.commons.math.util.MathUtils.distance([I[I)D:zero
   * Goal 108. org.apache.commons.math.util.MathUtils.indicator(D)D:negative
   * Goal 109. org.apache.commons.math.util.MathUtils.pow(II)I:negative
   * Goal 110. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:false
   * Goal 111. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 112. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 113. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 114. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 115. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 116. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 117. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 118. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 119. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 120. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 121. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 122. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 123. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 124. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 125. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 126. Branch org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash([D)I
   * Goal 127. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 128. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 129. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 130. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 131. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 132. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 133. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 134. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 135. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 136. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 137. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 138. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 139. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 140. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 141. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 142. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 143. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 144. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 145. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 146. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 147. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 148. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 149. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 150. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 151. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 152. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 153. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   */

  @Test
  public void test019()  throws Throwable  {
      int int0 = MathUtils.pow(19, 19);
      double double0 = MathUtils.indicator((-93.54));
      int[] intArray0 = new int[8];
      intArray0[0] = (-306639989);
      intArray0[1] = 19;
      intArray0[2] = 19;
      intArray0[3] = (-306639989);
      intArray0[4] = (-306639989);
      intArray0[5] = 19;
      intArray0[6] = (-306639989);
      intArray0[7] = 19;
      double double1 = MathUtils.distance(intArray0, intArray0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 19;
      doubleArray0[1] = (double) 19;
      doubleArray0[2] = (double) 19;
      int int1 = MathUtils.hash(doubleArray0);
      boolean boolean0 = MathUtils.equalsIncludingNaN((double) (-306639989), 0.041666663879186654, 0.0);
      long long0 = MathUtils.gcd((-2069588L), (long) (-306639989));
      int int2 = MathUtils.mulAndCheck(1841, (-956));
  }

  //Test case number: 20
  /*
   * 64 covered goals:
   * Goal 1. lcm(JJ)J_java.lang.ArithmeticException_EXPLICIT
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - true
   * Goal 26. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 27. Weak Mutation 1557: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> <
   * Goal 28. Weak Mutation 1615: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> -1
   * Goal 29. Weak Mutation 1628: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> -1
   * Goal 30. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 31. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 32. Weak Mutation 1647: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 33. Weak Mutation 1657: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 34. Weak Mutation 1658: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 35. Weak Mutation 1661: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 36. Weak Mutation 1672: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator >= -> -1
   * Goal 37. Weak Mutation 1683: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> +
   * Goal 38. Weak Mutation 1684: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> %
   * Goal 39. Weak Mutation 1685: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> -
   * Goal 40. Weak Mutation 1686: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> *
   * Goal 41. Weak Mutation 1695: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> +
   * Goal 42. Weak Mutation 1696: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> %
   * Goal 43. Weak Mutation 1697: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> -
   * Goal 44. Weak Mutation 1698: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> *
   * Goal 45. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 46. Weak Mutation 1868: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> >=
   * Goal 47. Weak Mutation 1875: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator != -> <
   * Goal 48. Weak Mutation 1885: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> +
   * Goal 49. Weak Mutation 1886: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> %
   * Goal 50. Weak Mutation 1887: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> -
   * Goal 51. Weak Mutation 1888: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> *
   * Goal 52. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 53. Weak Mutation 1981: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> ==
   * Goal 54. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 55. Weak Mutation 1662: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 56. Weak Mutation 1759: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> <=
   * Goal 57. org.apache.commons.math.util.MathUtils.indicator(F)F:positive
   * Goal 58. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 59. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 60. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 61. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 62. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 63. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 64. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   */

  @Test
  public void test020()  throws Throwable  {
      float float0 = MathUtils.indicator(0.0F);
      // Undeclared exception!
      try { 
        MathUtils.lcm(3628800L, 9154082963658192752L);
      } catch(ArithmeticException e) {
         //
         // overflow: multiply
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 21
  /*
   * 63 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 4. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 389
   * Goal 5. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 390
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 9. org.apache.commons.math.util.MathUtils.cosh(D)D: Line 405
   * Goal 10. org.apache.commons.math.util.MathUtils.hash([D)I: Line 854
   * Goal 11. org.apache.commons.math.util.MathUtils.log(DD)D: Line 1016
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 442
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 14. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 15. org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch
   * Goal 16. org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 28. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 29. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 30. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 31. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 32. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 33. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 35. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 36. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 37. Weak Mutation 838: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> %
   * Goal 38. Weak Mutation 839: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> -
   * Goal 39. Weak Mutation 840: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> *
   * Goal 40. Weak Mutation 841: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> /
   * Goal 41. Weak Mutation 847: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> %
   * Goal 42. Weak Mutation 1928: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> %
   * Goal 43. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 44. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 45. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 46. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 47. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 48. org.apache.commons.math.util.MathUtils.log(DD)D:negative
   * Goal 49. org.apache.commons.math.util.MathUtils.cosh(D)D:positive
   * Goal 50. org.apache.commons.math.util.MathUtils.hash([D)I:negative
   * Goal 51. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:zero
   * Goal 52. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 53. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 54. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 55. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 56. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 57. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 58. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 59. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 60. Branch org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash([D)I
   * Goal 61. Branch org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:log(DD)D
   * Goal 62. Branch org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:cosh(D)D
   * Goal 63. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   */

  @Test
  public void test021()  throws Throwable  {
      double double0 = MathUtils.log(279.24551, 0.0);
      int int0 = MathUtils.compareTo(3.834E-20, 3.834E-20, (-1441.34156382));
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = 279.24551;
      doubleArray0[2] = 0.0;
      int int1 = MathUtils.hash(doubleArray0);
      double double1 = MathUtils.cosh((-1441.34156382));
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-36);
      byteArray0[1] = (byte) (-76);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      double double2 = bigInteger0.doubleValue();
      // Undeclared exception!
      try { 
        bigInteger0.flipBit((byte) (-76));
      } catch(ArithmeticException e) {
         //
         // Negative bit address
         //
         assertThrownBy("java.math.BigInteger", e);
      }
  }

  //Test case number: 22
  /*
   * 17 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(I)I: Line 1424
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: Line 1641
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: Line 1647
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 173 IFLE L1424 - true
   * Goal 7. Weak Mutation 2594: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator != -> >
   * Goal 8. Weak Mutation 2600: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator <= -> ==
   * Goal 9. Weak Mutation 3051: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;:1641 - ReplaceComparisonOperator >= -> >
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(I)I:negative
   * Goal 11. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 13. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - true in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 173 IFLE L1424 - true in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 17. pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;_java.lang.NullPointerException_IMPLICIT
   */

  @Test
  public void test022()  throws Throwable  {
      int int0 = MathUtils.sign((-3000));
      // Undeclared exception!
      try { 
        MathUtils.pow((BigInteger) null, 0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 23
  /*
   * 65 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FI)F: Line 1248
   * Goal 2. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1283
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 4. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 5. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1359
   * Goal 6. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 367
   * Goal 7. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1264
   * Goal 8. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1329
   * Goal 9. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1265
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1330
   * Goal 11. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1266
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1331
   * Goal 13. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1334
   * Goal 14. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1336
   * Goal 15. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 891
   * Goal 16. org.apache.commons.math.util.MathUtils.indicator(S)S: Line 925
   * Goal 17. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 894
   * Goal 18. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 19. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 20. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 34. Weak Mutation 1793: org.apache.commons.math.util.MathUtils.indicator(S)S:925 - ReplaceComparisonOperator < -> <=
   * Goal 35. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 36. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 37. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 38. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 39. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 40. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 41. Weak Mutation 2338: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> /
   * Goal 42. Weak Mutation 2352: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> *
   * Goal 43. Weak Mutation 767: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> -1
   * Goal 44. Weak Mutation 1759: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> <=
   * Goal 45. org.apache.commons.math.util.MathUtils.indicator(S)S:positive
   * Goal 46. org.apache.commons.math.util.MathUtils.round(FI)F:positive
   * Goal 47. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 48. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 49. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 50. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 51. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 52. Branch org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false in context: org.apache.commons.math.util.MathUtils:indicator(S)S
   * Goal 53. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 54. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true in context: 
   * Goal 55. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 56. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - true in context: 
   * Goal 57. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 58. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 59. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 60. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 61. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 62. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 63. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 64. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - false in context: 
   * Goal 65. binomialCoefficient(II)J_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   */

  @Test
  public void test023()  throws Throwable  {
      float float0 = MathUtils.round(0.0F, (-1041));
      short short0 = MathUtils.indicator((short)0);
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficient(102, 1975);
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n,k), got n = 102, k = 1,975
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 24
  /*
   * 180 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1030
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1031
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1034
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1822
   * Goal 5. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1823
   * Goal 6. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1825
   * Goal 7. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1826
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 688
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 689
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 690
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 312
   * Goal 12. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 952
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 313
   * Goal 14. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 955
   * Goal 15. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 316
   * Goal 16. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 956
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 703
   * Goal 18. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 704
   * Goal 19. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 961
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 706
   * Goal 21. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 707
   * Goal 22. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 324
   * Goal 23. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1860
   * Goal 24. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 40. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 41. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true
   * Goal 44. org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true
   * Goal 45. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 46. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 47. org.apache.commons.math.util.MathUtils.checkOrder([D)V: root-Branch
   * Goal 48. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 49. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 50. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 51. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - false
   * Goal 52. org.apache.commons.math.util.MathUtils.gcd(II)I: I81 Branch 91 IF_ICMPGE L711 - false
   * Goal 53. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - true
   * Goal 54. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 55. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 56. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 57. Weak Mutation 570: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator == -> >=
   * Goal 58. Weak Mutation 586: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator == -> !=
   * Goal 59. Weak Mutation 596: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> +
   * Goal 60. Weak Mutation 597: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> %
   * Goal 61. Weak Mutation 598: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> *
   * Goal 62. Weak Mutation 599: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> /
   * Goal 63. Weak Mutation 602: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator != -> >
   * Goal 64. Weak Mutation 1757: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> -2
   * Goal 65. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 66. Weak Mutation 1739: org.apache.commons.math.util.MathUtils.indicator(D)D:880 - ReplaceComparisonOperator < -> -2
   * Goal 67. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 68. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 69. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 70. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 71. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 72. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 73. Weak Mutation 1440: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 74. Weak Mutation 1451: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 75. Weak Mutation 1452: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 76. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 77. Weak Mutation 1803: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> >=
   * Goal 78. Weak Mutation 1810: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator != -> <
   * Goal 79. Weak Mutation 1825: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> +
   * Goal 80. Weak Mutation 1826: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> %
   * Goal 81. Weak Mutation 1827: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> -
   * Goal 82. Weak Mutation 1844: org.apache.commons.math.util.MathUtils.lcm(II)I:956 - ReplaceComparisonOperator != -> <
   * Goal 83. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 84. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 85. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 86. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 87. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 88. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 89. Weak Mutation 1828: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> *
   * Goal 90. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 91. Weak Mutation 1453: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 92. Weak Mutation 1468: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator >= -> -1
   * Goal 93. Weak Mutation 1482: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> +
   * Goal 94. Weak Mutation 1483: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> %
   * Goal 95. Weak Mutation 1484: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> -
   * Goal 96. Weak Mutation 1485: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> *
   * Goal 97. Weak Mutation 1497: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> +
   * Goal 98. Weak Mutation 1498: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> %
   * Goal 99. Weak Mutation 1499: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> -
   * Goal 100. Weak Mutation 1500: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> *
   * Goal 101. Weak Mutation 3391: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> >
   * Goal 102. org.apache.commons.math.util.MathUtils.indicator(D)D:negative
   * Goal 103. org.apache.commons.math.util.MathUtils.lcm(II)I:positive
   * Goal 104. org.apache.commons.math.util.MathUtils.indicator(F)F:negative
   * Goal 105. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 106. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 107. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 108. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 109. org.apache.commons.math.util.MathUtils.checkOrder([D)V
   * Goal 110. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 111. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 112. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 113. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 114. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 115. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 116. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 117. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 118. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 119. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 120. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 121. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 122. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 123. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 124. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 125. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 126. Branch org.apache.commons.math.util.MathUtils.checkOrder([D)V: root-Branch in context: org.apache.commons.math.util.MathUtils:checkOrder([D)V
   * Goal 127. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 128. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - true
   * Goal 129. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I49 Branch 30 IF_ICMPGE L332 - true
   * Goal 130. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I63 Branch 31 IF_ICMPLE L336 - true
   * Goal 131. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I87 Branch 32 IF_ICMPGT L346 - true
   * Goal 132. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I87 Branch 32 IF_ICMPGT L346 - false
   * Goal 133. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I107 Branch 33 IF_ICMPGT L351 - true
   * Goal 134. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I107 Branch 33 IF_ICMPGT L351 - false
   * Goal 135. Weak Mutation 577: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator != -> <
   * Goal 136. Weak Mutation 618: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:324 - ReplaceComparisonOperator >= -> ==
   * Goal 137. Weak Mutation 638: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:332 - ReplaceComparisonOperator >= -> ==
   * Goal 138. Weak Mutation 659: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:336 - ReplaceArithmeticOperator / -> +
   * Goal 139. Weak Mutation 660: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:336 - ReplaceArithmeticOperator / -> %
   * Goal 140. Weak Mutation 661: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:336 - ReplaceArithmeticOperator / -> -
   * Goal 141. Weak Mutation 662: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:336 - ReplaceArithmeticOperator / -> *
   * Goal 142. Weak Mutation 665: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:336 - ReplaceComparisonOperator <= -> ==
   * Goal 143. Weak Mutation 692: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator - -> +
   * Goal 144. Weak Mutation 693: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator - -> %
   * Goal 145. Weak Mutation 694: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator - -> *
   * Goal 146. Weak Mutation 695: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator - -> /
   * Goal 147. Weak Mutation 697: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator + -> %
   * Goal 148. Weak Mutation 698: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator + -> -
   * Goal 149. Weak Mutation 699: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator + -> *
   * Goal 150. Weak Mutation 700: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceArithmeticOperator + -> /
   * Goal 151. Weak Mutation 711: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceComparisonOperator > -> !=
   * Goal 152. Weak Mutation 712: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceComparisonOperator > -> -2
   * Goal 153. Weak Mutation 713: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:346 - ReplaceComparisonOperator > -> >=
   * Goal 154. Weak Mutation 723: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:347 - ReplaceArithmeticOperator + -> %
   * Goal 155. Weak Mutation 724: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:347 - ReplaceArithmeticOperator + -> -
   * Goal 156. Weak Mutation 725: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:347 - ReplaceArithmeticOperator + -> *
   * Goal 157. Weak Mutation 726: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:347 - ReplaceArithmeticOperator + -> /
   * Goal 158. Weak Mutation 743: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:351 - ReplaceComparisonOperator > -> !=
   * Goal 159. Weak Mutation 744: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:351 - ReplaceComparisonOperator > -> -2
   * Goal 160. Weak Mutation 745: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:351 - ReplaceComparisonOperator > -> >=
   * Goal 161. Weak Mutation 755: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:352 - ReplaceArithmeticOperator - -> +
   * Goal 162. Weak Mutation 756: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:352 - ReplaceArithmeticOperator - -> %
   * Goal 163. Weak Mutation 757: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:352 - ReplaceArithmeticOperator - -> *
   * Goal 164. Weak Mutation 758: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:352 - ReplaceArithmeticOperator - -> /
   * Goal 165. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:positive
   * Goal 166. org.apache.commons.math.util.MathUtils.checkOrder([D)V
   * Goal 167. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I107 Branch 33 IF_ICMPGT L351 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 168. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I87 Branch 32 IF_ICMPGT L346 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 169. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I107 Branch 33 IF_ICMPGT L351 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 170. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 171. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I63 Branch 31 IF_ICMPLE L336 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 172. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I87 Branch 32 IF_ICMPGT L346 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 173. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I49 Branch 30 IF_ICMPGE L332 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 174. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 343
   * Goal 175. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 346
   * Goal 176. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 347
   * Goal 177. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 351
   * Goal 178. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 352
   * Goal 179. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 355
   * Goal 180. org.apache.commons.math.util.MathUtils.checkOrder([D)V: Line 1870
   */

  @Test
  public void test024()  throws Throwable  {
      float float0 = MathUtils.indicator((-1813.9521F));
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) (-1.0F);
      MathUtils.checkOrder(doubleArray0);
      int int0 = MathUtils.lcm(6, 6);
      double double0 = MathUtils.binomialCoefficientLog(2820, 213);
      double double1 = MathUtils.indicator((-1.0));
  }

  //Test case number: 25
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 312
   * Goal 3. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - true
   * Goal 6. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 7. Weak Mutation 768: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> >
   * Goal 8. Weak Mutation 569: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator == -> -2
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:zero
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   */

  @Test
  public void test025()  throws Throwable  {
      double double0 = MathUtils.binomialCoefficientLog(4836, 4836);
  }

  //Test case number: 26
  /*
   * 192 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1856
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1858
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 196
   * Goal 5. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1796
   * Goal 6. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1797
   * Goal 7. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1798
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 199
   * Goal 9. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1800
   * Goal 10. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1225
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 203
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 271
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 272
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 211
   * Goal 15. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 275
   * Goal 16. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 212
   * Goal 17. org.apache.commons.math.util.MathUtils.cosh(D)D: Line 405
   * Goal 18. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 214
   * Goal 19. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 278
   * Goal 20. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 215
   * Goal 21. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 281
   * Goal 22. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 282
   * Goal 23. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 219
   * Goal 24. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1822
   * Goal 25. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 26. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1823
   * Goal 27. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 28. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1825
   * Goal 29. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 30. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1826
   * Goal 31. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1827
   * Goal 32. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 33. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 486
   * Goal 34. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 35. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 489
   * Goal 36. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 37. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 38. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 39. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 40. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1840
   * Goal 41. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1841
   * Goal 42. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 44. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 45. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 46. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 47. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 48. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 49. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 50. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 51. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 52. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 53. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true
   * Goal 54. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false
   * Goal 55. org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch
   * Goal 56. org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch
   * Goal 57. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 58. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 59. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false
   * Goal 60. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true
   * Goal 61. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false
   * Goal 62. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true
   * Goal 63. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true
   * Goal 64. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - false
   * Goal 65. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I70 Branch 14 IF_ICMPGT L215 - true
   * Goal 66. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 67. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 68. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 69. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true
   * Goal 70. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false
   * Goal 71. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - true
   * Goal 72. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I20 Branch 20 IF_ICMPEQ L275 - false
   * Goal 73. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I25 Branch 21 IF_ICMPNE L275 - true
   * Goal 74. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I37 Branch 22 IF_ICMPLE L278 - true
   * Goal 75. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I50 Branch 23 IF_ICMPGE L281 - false
   * Goal 76. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false
   * Goal 77. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true
   * Goal 78. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 79. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 80. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 81. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 82. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 83. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 84. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 85. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 86. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 87. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 88. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 89. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 90. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 91. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 92. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 93. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 94. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 95. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 96. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 97. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 98. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 99. Weak Mutation 3354: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> -1
   * Goal 100. Weak Mutation 3355: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> >
   * Goal 101. Weak Mutation 3371: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> +
   * Goal 102. Weak Mutation 3373: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> *
   * Goal 103. Weak Mutation 3374: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> /
   * Goal 104. Weak Mutation 3372: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> %
   * Goal 105. Weak Mutation 166: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> >=
   * Goal 106. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 107. Weak Mutation 838: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> %
   * Goal 108. Weak Mutation 839: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> -
   * Goal 109. Weak Mutation 840: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> *
   * Goal 110. Weak Mutation 841: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> /
   * Goal 111. Weak Mutation 847: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> %
   * Goal 112. Weak Mutation 174: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator != -> >
   * Goal 113. Weak Mutation 183: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator == -> !=
   * Goal 114. Weak Mutation 193: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> +
   * Goal 115. Weak Mutation 194: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> %
   * Goal 116. Weak Mutation 195: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> *
   * Goal 117. Weak Mutation 196: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> /
   * Goal 118. Weak Mutation 199: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator != -> >
   * Goal 119. Weak Mutation 216: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> +
   * Goal 120. Weak Mutation 218: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> -
   * Goal 121. Weak Mutation 222: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceComparisonOperator <= -> ==
   * Goal 122. Weak Mutation 251: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:212 - ReplaceComparisonOperator > -> !=
   * Goal 123. Weak Mutation 262: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> +
   * Goal 124. Weak Mutation 263: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> %
   * Goal 125. Weak Mutation 264: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> *
   * Goal 126. Weak Mutation 265: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> /
   * Goal 127. Weak Mutation 267: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> %
   * Goal 128. Weak Mutation 268: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> -
   * Goal 129. Weak Mutation 269: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> *
   * Goal 130. Weak Mutation 270: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> /
   * Goal 131. Weak Mutation 285: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:215 - ReplaceComparisonOperator > -> -2
   * Goal 132. Weak Mutation 786: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> >
   * Goal 133. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 134. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   * Goal 135. Weak Mutation 388: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> >=
   * Goal 136. Weak Mutation 396: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator != -> >
   * Goal 137. Weak Mutation 405: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator == -> !=
   * Goal 138. Weak Mutation 415: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> +
   * Goal 139. Weak Mutation 416: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> %
   * Goal 140. Weak Mutation 417: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> *
   * Goal 141. Weak Mutation 418: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> /
   * Goal 142. Weak Mutation 421: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator != -> >
   * Goal 143. Weak Mutation 438: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> +
   * Goal 144. Weak Mutation 440: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> -
   * Goal 145. Weak Mutation 444: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceComparisonOperator <= -> ==
   * Goal 146. Weak Mutation 470: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:281 - ReplaceComparisonOperator >= -> -1
   * Goal 147. Weak Mutation 3426: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1840 - ReplaceComparisonOperator == -> !=
   * Goal 148. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:positive
   * Goal 149. org.apache.commons.math.util.MathUtils.cosh(D)D:positive
   * Goal 150. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:true
   * Goal 151. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   * Goal 152. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 153. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 154. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 155. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 156. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 157. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 158. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 159. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 160. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 161. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 162. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 163. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 164. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 165. Branch org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch in context: org.apache.commons.math.util.MathUtils:round(DI)D
   * Goal 166. Branch org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:cosh(D)D
   * Goal 167. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 168. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 169. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 170. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 171. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 172. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 173. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 174. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 175. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 176. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I20 Branch 20 IF_ICMPEQ L275 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 177. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I37 Branch 22 IF_ICMPLE L278 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 178. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I25 Branch 21 IF_ICMPNE L275 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 179. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 180. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I50 Branch 23 IF_ICMPGE L281 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 181. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 182. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 183. checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V_org.apache.commons.math.exception.MathIllegalNumberException_EXPLICIT
   * Goal 184. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - false
   * Goal 185. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I71 Branch 215 IFLT L1841 - true
   * Goal 186. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I71 Branch 215 IFLT L1841 - false
   * Goal 187. Weak Mutation 3435: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1841 - ReplaceComparisonOperator < -> -2
   * Goal 188. Weak Mutation 3436: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1841 - ReplaceComparisonOperator < -> !=
   * Goal 189. org.apache.commons.math.util.MathUtils.round(DI)D:negative
   * Goal 190. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I71 Branch 215 IFLT L1841 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 191. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I71 Branch 215 IFLT L1841 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 192. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   */

  @Test
  public void test026()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-1496);
      intArray0[1] = (-3479);
      int[] intArray1 = new int[9];
      intArray1[0] = (-1496);
      intArray1[1] = (-1496);
      intArray1[2] = (-1496);
      intArray1[3] = (-1496);
      intArray1[4] = (-1496);
      intArray1[5] = (-3479);
      intArray1[6] = (-1496);
      intArray1[7] = (-3479);
      intArray1[8] = (-1496);
      int int0 = MathUtils.distanceInf(intArray0, intArray1);
      boolean boolean0 = MathUtils.equalsIncludingNaN((double) (-1496), (double) (-1496));
      double double0 = MathUtils.cosh((-1496));
      double double1 = MathUtils.binomialCoefficientDouble(0, (-203));
      double double2 = MathUtils.round((double) (-1496), 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 1.0;
      doubleArray0[1] = (double) (-3479);
      doubleArray0[2] = (double) (-1496);
      doubleArray0[3] = (double) (-1496);
      doubleArray0[4] = (double) (-3479);
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.DECREASING;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, true);
      } catch(IllegalArgumentException e) {
         //
         // points 1 and 2 are not strictly decreasing (-3,479 <= -1,496)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 27
  /*
   * 21 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I71 Branch 215 IFLT L1841 - false
   * Goal 8. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 9. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   * Goal 10. Weak Mutation 3426: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1840 - ReplaceComparisonOperator == -> !=
   * Goal 11. Weak Mutation 3436: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1841 - ReplaceComparisonOperator < -> !=
   * Goal 12. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I71 Branch 215 IFLT L1841 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 20. checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V_org.apache.commons.math.exception.MathIllegalNumberException_EXPLICIT
   * Goal 21. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1842
   */

  @Test
  public void test027()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 20.0;
      doubleArray0[1] = 42.0;
      doubleArray0[2] = (-1717.222163284086);
      doubleArray0[3] = 4297779.0;
      doubleArray0[4] = 0.5;
      doubleArray0[5] = 14.0;
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.DECREASING;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, true);
      } catch(IllegalArgumentException e) {
         //
         // points 0 and 1 are not strictly decreasing (20 <= 42)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 28
  /*
   * 204 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1796
   * Goal 2. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 389
   * Goal 3. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1797
   * Goal 4. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 390
   * Goal 5. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1798
   * Goal 6. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: Line 456
   * Goal 7. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1800
   * Goal 8. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 585
   * Goal 9. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1165
   * Goal 10. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 590
   * Goal 11. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1169
   * Goal 12. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 594
   * Goal 13. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1173
   * Goal 14. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1174
   * Goal 15. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1175
   * Goal 16. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1176
   * Goal 17. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1177
   * Goal 18. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1181
   * Goal 19. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1182
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 417
   * Goal 23. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1185
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 25. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 548
   * Goal 26. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1188
   * Goal 27. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 28. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1189
   * Goal 29. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 486
   * Goal 30. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 551
   * Goal 31. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 32. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1192
   * Goal 33. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 489
   * Goal 34. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 554
   * Goal 35. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 618
   * Goal 36. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 555
   * Goal 37. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1195
   * Goal 38. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 39. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 40. org.apache.commons.math.util.MathUtils.sign(S)S: Line 1453
   * Goal 41. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 42. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 559
   * Goal 43. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 623
   * Goal 44. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 624
   * Goal 45. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 442
   * Goal 46. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true
   * Goal 47. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true
   * Goal 48. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true
   * Goal 49. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true
   * Goal 50. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true
   * Goal 51. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true
   * Goal 52. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true
   * Goal 53. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 54. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true
   * Goal 55. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 56. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true
   * Goal 57. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true
   * Goal 58. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true
   * Goal 59. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true
   * Goal 60. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true
   * Goal 61. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 62. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true
   * Goal 63. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 64. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true
   * Goal 65. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 66. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 67. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 68. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 69. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 70. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false
   * Goal 71. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false
   * Goal 72. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false
   * Goal 73. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false
   * Goal 74. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false
   * Goal 75. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - false
   * Goal 76. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false
   * Goal 77. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false
   * Goal 78. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 79. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 80. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - false
   * Goal 81. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 82. org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - false
   * Goal 83. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 84. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 85. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 86. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 87. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 88. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 89. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 90. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 91. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 92. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 93. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 94. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 95. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 96. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 97. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 98. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 99. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 100. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 101. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 102. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 103. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 104. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 105. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 106. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 107. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 108. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 109. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 110. Weak Mutation 2174: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1165 - ReplaceComparisonOperator == -> !=
   * Goal 111. Weak Mutation 1154: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator = null -> != null
   * Goal 112. Weak Mutation 2180: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1169 - ReplaceComparisonOperator == -> !=
   * Goal 113. Weak Mutation 1156: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator != null -> = null
   * Goal 114. Weak Mutation 2196: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> -1
   * Goal 115. Weak Mutation 2197: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> >
   * Goal 116. Weak Mutation 1174: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:551 - ReplaceComparisonOperator == -> -2
   * Goal 117. Weak Mutation 2204: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1177 - ReplaceComparisonOperator == -> !=
   * Goal 118. Weak Mutation 1183: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> -1
   * Goal 119. Weak Mutation 1184: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> >
   * Goal 120. Weak Mutation 1194: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:555 - ReplaceComparisonOperator != -> ==
   * Goal 121. Weak Mutation 2223: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1181 - ReplaceComparisonOperator != -> ==
   * Goal 122. Weak Mutation 1202: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> >
   * Goal 123. Weak Mutation 2234: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> %
   * Goal 124. Weak Mutation 2235: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> -
   * Goal 125. Weak Mutation 2236: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> *
   * Goal 126. Weak Mutation 2237: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> /
   * Goal 127. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> ==
   * Goal 128. Weak Mutation 2248: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1185 - ReplaceComparisonOperator != -> >
   * Goal 129. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 130. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 131. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 132. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 133. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 134. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 135. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 136. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 137. Weak Mutation 3354: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> -1
   * Goal 138. Weak Mutation 3355: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> >
   * Goal 139. Weak Mutation 3374: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> /
   * Goal 140. Weak Mutation 3372: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> %
   * Goal 141. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 142. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 143. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 144. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 145. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 146. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 147. Weak Mutation 2629: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator != -> -1
   * Goal 148. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 149. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 150. Weak Mutation 873: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> <
   * Goal 151. Weak Mutation 1239: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:623 - ReplaceComparisonOperator >= -> -1
   * Goal 152. Weak Mutation 1227: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:618 - ReplaceComparisonOperator >= -> >
   * Goal 153. Weak Mutation 2259: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> -1
   * Goal 154. Weak Mutation 2260: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> >
   * Goal 155. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:true
   * Goal 156. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:zero
   * Goal 157. org.apache.commons.math.util.MathUtils.sign(S)S:zero
   * Goal 158. org.apache.commons.math.util.MathUtils.equals(DD)Z:false
   * Goal 159. org.apache.commons.math.util.MathUtils.factorialDouble(I)D:positive
   * Goal 160. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:zero
   * Goal 161. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:true
   * Goal 162. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:nonempty
   * Goal 163. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 164. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 165. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 166. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 167. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 168. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 169. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 170. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 171. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 172. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 173. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 174. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 175. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 176. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 177. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 178. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 179. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 180. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 181. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 182. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 183. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 184. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 185. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 186. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 187. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 188. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 189. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 190. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 191. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 192. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 193. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - false in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 194. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 195. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 196. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 197. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - false in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 198. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 199. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 200. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 201. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 202. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 203. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 204. Weak Mutation 941: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> >=
   */

  @Test
  public void test028()  throws Throwable  {
      int int0 = MathUtils.compareTo(4427.578822074455, 0.0, 4427.578822074455);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      int int1 = MathUtils.distanceInf(intArray0, intArray0);
      boolean boolean0 = MathUtils.equalsIncludingNaN((-469.9), (-469.9), 0.875);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = 0.875;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (-469.9);
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      double[] doubleArray1 = MathUtils.normalizeArray(doubleArray0, (-2281.09));
      boolean boolean1 = MathUtils.equalsIncludingNaN(doubleArray0, doubleArray0);
      double double0 = MathUtils.factorialDouble(0);
      boolean boolean2 = MathUtils.equals(4427.578822074455, 0.0);
      short short0 = MathUtils.sign((short)0);
  }

  //Test case number: 29
  /*
   * 82 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 417
   * Goal 2. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 643
   * Goal 3. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 648
   * Goal 4. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 651
   * Goal 5. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 523
   * Goal 6. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 652
   * Goal 7. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 653
   * Goal 8. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 526
   * Goal 9. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 655
   * Goal 10. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1104
   * Goal 11. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1105
   * Goal 12. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 529
   * Goal 13. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 530
   * Goal 14. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 534
   * Goal 15. org.apache.commons.math.util.MathUtils.sinh(D)D: Line 1464
   * Goal 16. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 17. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false
   * Goal 32. Weak Mutation 2651: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> +
   * Goal 33. Weak Mutation 2652: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> %
   * Goal 34. Weak Mutation 2653: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> *
   * Goal 35. Weak Mutation 2654: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> /
   * Goal 36. Weak Mutation 2660: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> %
   * Goal 37. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 872: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> -1
   * Goal 39. Weak Mutation 1110: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator = null -> != null
   * Goal 40. Weak Mutation 1112: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator != null -> = null
   * Goal 41. Weak Mutation 1130: org.apache.commons.math.util.MathUtils.equals([D[D)Z:526 - ReplaceComparisonOperator == -> -2
   * Goal 42. Weak Mutation 1139: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> -1
   * Goal 43. Weak Mutation 1140: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> >
   * Goal 44. Weak Mutation 1150: org.apache.commons.math.util.MathUtils.equals([D[D)Z:530 - ReplaceComparisonOperator != -> ==
   * Goal 45. Weak Mutation 2063: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator != -> ==
   * Goal 46. Weak Mutation 2068: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> ==
   * Goal 48. Weak Mutation 1276: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> ==
   * Goal 49. Weak Mutation 1294: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> !=
   * Goal 50. Weak Mutation 1295: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> -2
   * Goal 51. Weak Mutation 1296: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> >=
   * Goal 52. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> %
   * Goal 53. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> -
   * Goal 54. Weak Mutation 1307: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> *
   * Goal 55. Weak Mutation 1308: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> /
   * Goal 56. Weak Mutation 2058: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> <=
   * Goal 57. org.apache.commons.math.util.MathUtils.sinh(D)D:negative
   * Goal 58. org.apache.commons.math.util.MathUtils.equals([D[D)Z:true
   * Goal 59. org.apache.commons.math.util.MathUtils.factorialLog(I)D:positive
   * Goal 60. org.apache.commons.math.util.MathUtils.scalb(DI)D:negative
   * Goal 61. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 62. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 63. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 64. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 65. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 66. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 67. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 68. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 69. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 70. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 71. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 72. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 73. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 75. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 76. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 81. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   */

  @Test
  public void test029()  throws Throwable  {
      double double0 = MathUtils.sinh((-2552.37606));
      double double1 = MathUtils.factorialLog(1208);
      double double2 = MathUtils.scalb(Double.NEGATIVE_INFINITY, (-1449));
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 7369.306793428676;
      doubleArray0[1] = Double.NEGATIVE_INFINITY;
      doubleArray0[2] = Double.NEGATIVE_INFINITY;
      doubleArray0[3] = Double.NEGATIVE_INFINITY;
      doubleArray0[4] = Double.NEGATIVE_INFINITY;
      doubleArray0[5] = Double.NEGATIVE_INFINITY;
      boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);
  }

  //Test case number: 30
  /*
   * 28 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1074
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1079
   * Goal 3. org.apache.commons.math.util.MathUtils.log(DD)D: Line 1016
   * Goal 4. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1049
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1050
   * Goal 6. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1082
   * Goal 7. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1054
   * Goal 8. org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false
   * Goal 13. Weak Mutation 1927: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> +
   * Goal 14. Weak Mutation 1928: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> %
   * Goal 15. Weak Mutation 1929: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> -
   * Goal 16. Weak Mutation 1930: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> *
   * Goal 17. Weak Mutation 1971: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> <
   * Goal 18. Weak Mutation 1981: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> ==
   * Goal 19. org.apache.commons.math.util.MathUtils.log(DD)D:positive
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 23. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 24. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 25. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:log(DD)D
   * Goal 27. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 28. mulAndCheck(JJ)J_java.lang.ArithmeticException_EXPLICIT
   */

  @Test
  public void test030()  throws Throwable  {
      double double0 = MathUtils.log(2.2250738585072014E-308, 2.2250738585072014E-308);
      // Undeclared exception!
      try { 
        MathUtils.mulAndCheck(4607182418800017408L, 4607182418800017408L);
      } catch(ArithmeticException e) {
         //
         // overflow: multiply
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 31
  /*
   * 84 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 4. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 389
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 486
   * Goal 6. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 391
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 8. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 392
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(S)S: Line 1453
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 12. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: Line 1139
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 442
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 15. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch
   * Goal 16. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 29. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 30. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 31. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 32. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 33. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 34. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 35. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 36. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 37. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 38. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 39. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 40. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 41. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 42. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 44. Weak Mutation 823: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:391 - ReplaceComparisonOperator >= -> -1
   * Goal 45. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 46. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 47. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 48. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 49. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 50. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 51. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 52. Weak Mutation 2140: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> %
   * Goal 53. Weak Mutation 2141: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> -
   * Goal 54. Weak Mutation 2142: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> *
   * Goal 55. Weak Mutation 2143: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> /
   * Goal 56. Weak Mutation 2150: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 57. Weak Mutation 2152: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 58. Weak Mutation 2158: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> +
   * Goal 59. Weak Mutation 2159: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> %
   * Goal 60. Weak Mutation 2160: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> -
   * Goal 61. Weak Mutation 2161: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> *
   * Goal 62. Weak Mutation 2162: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> +
   * Goal 63. Weak Mutation 2163: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> %
   * Goal 64. Weak Mutation 2164: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> -
   * Goal 65. Weak Mutation 2165: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> /
   * Goal 66. Weak Mutation 2166: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> +
   * Goal 67. Weak Mutation 2168: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> *
   * Goal 68. Weak Mutation 2169: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 69. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:negative
   * Goal 70. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:negative
   * Goal 71. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 72. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 73. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 74. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 75. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 76. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - false in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:normalizeAngle(DD)D
   * Goal 81. Weak Mutation 2631: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator != -> >
   * Goal 82. Weak Mutation 2637: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator <= -> ==
   * Goal 83. org.apache.commons.math.util.MathUtils.sign(S)S:negative
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - true in context: org.apache.commons.math.util.MathUtils:sign(S)S
   */

  @Test
  public void test031()  throws Throwable  {
      int int0 = MathUtils.compareTo((-294.525243), 1987.5361, Double.NEGATIVE_INFINITY);
      short short0 = MathUtils.sign((short) (-1919));
      double double0 = MathUtils.normalizeAngle((-1766.9216163688), 0.0);
  }

  //Test case number: 32
  /*
   * 35 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1410
   * Goal 2. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1765
   * Goal 3. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1766
   * Goal 4. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1767
   * Goal 5. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1768
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1407
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false
   * Goal 11. distance([I[I)D_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 12. Weak Mutation 3275: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> -1
   * Goal 13. Weak Mutation 3286: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> +
   * Goal 14. Weak Mutation 3288: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> *
   * Goal 15. Weak Mutation 3289: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> /
   * Goal 16. Weak Mutation 3306: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> %
   * Goal 17. Weak Mutation 3308: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> /
   * Goal 18. Weak Mutation 3309: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> %
   * Goal 19. Weak Mutation 3312: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> /
   * Goal 20. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 21. Weak Mutation 3287: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> %
   * Goal 22. Weak Mutation 2573: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> <
   * Goal 23. Weak Mutation 2580: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator <= -> -1
   * Goal 24. org.apache.commons.math.util.MathUtils.sign(F)F:positive
   * Goal 25. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 26. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 27. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 30. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 31. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - false in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 32. Weak Mutation 3305: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> +
   * Goal 33. Weak Mutation 3307: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> -
   * Goal 34. Weak Mutation 3310: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> -
   * Goal 35. Weak Mutation 3311: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> *
   */

  @Test
  public void test032()  throws Throwable  {
      float float0 = MathUtils.sign(2244.5771F);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 2;
      intArray0[4] = 169;
      intArray0[5] = 63;
      intArray0[6] = 215;
      intArray0[7] = 0;
      int[] intArray1 = new int[4];
      intArray1[0] = 0;
      intArray1[1] = 63;
      intArray1[2] = 0;
      intArray1[3] = 0;
      // Undeclared exception!
      try { 
        MathUtils.distance(intArray0, intArray1);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 33
  /*
   * 136 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1410
   * Goal 2. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1165
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 271
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 272
   * Goal 5. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1169
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 275
   * Goal 7. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1173
   * Goal 8. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1174
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 278
   * Goal 10. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1175
   * Goal 11. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1176
   * Goal 12. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1177
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 281
   * Goal 14. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1181
   * Goal 15. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 285
   * Goal 16. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I20 Branch 20 IF_ICMPEQ L275 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I25 Branch 21 IF_ICMPNE L275 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I37 Branch 22 IF_ICMPLE L278 - true
   * Goal 37. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I50 Branch 23 IF_ICMPGE L281 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 24 IF_ICMPGT L286 - true
   * Goal 39. org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - false
   * Goal 40. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 41. Weak Mutation 1154: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator = null -> != null
   * Goal 42. Weak Mutation 1156: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator != null -> = null
   * Goal 43. Weak Mutation 1174: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:551 - ReplaceComparisonOperator == -> -2
   * Goal 44. Weak Mutation 1183: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> -1
   * Goal 45. Weak Mutation 1184: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> >
   * Goal 46. Weak Mutation 1194: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:555 - ReplaceComparisonOperator != -> ==
   * Goal 47. Weak Mutation 2174: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1165 - ReplaceComparisonOperator == -> !=
   * Goal 48. Weak Mutation 2180: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1169 - ReplaceComparisonOperator == -> !=
   * Goal 49. Weak Mutation 2196: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> -1
   * Goal 50. Weak Mutation 2197: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> >
   * Goal 51. Weak Mutation 2204: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1177 - ReplaceComparisonOperator == -> !=
   * Goal 52. Weak Mutation 2223: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1181 - ReplaceComparisonOperator != -> ==
   * Goal 53. Weak Mutation 2246: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1185 - ReplaceComparisonOperator != -> -1
   * Goal 54. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 55. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 56. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 57. Weak Mutation 388: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> >=
   * Goal 58. Weak Mutation 405: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator == -> !=
   * Goal 59. Weak Mutation 415: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> +
   * Goal 60. Weak Mutation 416: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> %
   * Goal 61. Weak Mutation 417: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> *
   * Goal 62. Weak Mutation 418: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> /
   * Goal 63. Weak Mutation 421: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator != -> >
   * Goal 64. Weak Mutation 438: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> +
   * Goal 65. Weak Mutation 440: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> -
   * Goal 66. Weak Mutation 444: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceComparisonOperator <= -> ==
   * Goal 67. Weak Mutation 439: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> %
   * Goal 68. Weak Mutation 441: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> *
   * Goal 69. Weak Mutation 472: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:281 - ReplaceComparisonOperator >= -> ==
   * Goal 70. Weak Mutation 496: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:286 - ReplaceComparisonOperator > -> -2
   * Goal 71. Weak Mutation 549: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> %
   * Goal 72. Weak Mutation 551: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> *
   * Goal 73. Weak Mutation 552: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> /
   * Goal 74. Weak Mutation 2573: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> <
   * Goal 75. Weak Mutation 2580: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator <= -> -1
   * Goal 76. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:true
   * Goal 77. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   * Goal 78. org.apache.commons.math.util.MathUtils.sign(F)F:positive
   * Goal 79. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 80. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 81. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 82. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 83. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 84. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 85. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 98. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 100. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 101. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 102. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 103. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I20 Branch 20 IF_ICMPEQ L275 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 104. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I37 Branch 22 IF_ICMPLE L278 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 105. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I25 Branch 21 IF_ICMPNE L275 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 106. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 107. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 24 IF_ICMPGT L286 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 108. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I50 Branch 23 IF_ICMPGE L281 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 109. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - false in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 110. normalizeArray([DD)[D_org.evosuite.runtime.mock.java.lang.MockArithmeticException_DECLARED
   * Goal 111. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - false
   * Goal 112. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I7 Branch 42 IFNE L429 - true
   * Goal 113. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - true
   * Goal 114. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 24 IF_ICMPGT L286 - false
   * Goal 115. Weak Mutation 395: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator != -> <
   * Goal 116. Weak Mutation 495: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:286 - ReplaceComparisonOperator > -> !=
   * Goal 117. Weak Mutation 497: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:286 - ReplaceComparisonOperator > -> >=
   * Goal 118. Weak Mutation 512: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> +
   * Goal 119. Weak Mutation 513: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> %
   * Goal 120. Weak Mutation 514: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> *
   * Goal 121. Weak Mutation 515: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> /
   * Goal 122. Weak Mutation 521: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> %
   * Goal 123. Weak Mutation 522: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> -
   * Goal 124. Weak Mutation 523: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> *
   * Goal 125. Weak Mutation 524: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> /
   * Goal 126. Weak Mutation 530: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> +
   * Goal 127. Weak Mutation 531: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> %
   * Goal 128. Weak Mutation 532: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> -
   * Goal 129. Weak Mutation 533: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> *
   * Goal 130. Weak Mutation 534: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> +
   * Goal 131. Weak Mutation 535: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> %
   * Goal 132. Weak Mutation 536: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> -
   * Goal 133. Weak Mutation 537: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> /
   * Goal 134. Weak Mutation 888: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator != -> ==
   * Goal 135. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 24 IF_ICMPGT L286 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 136. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   */

  @Test
  public void test033()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = Double.NaN;
      boolean boolean0 = MathUtils.equalsIncludingNaN(doubleArray0, doubleArray0);
      double double0 = MathUtils.binomialCoefficientDouble(83, 21);
      float float0 = MathUtils.sign((float) 21);
      try { 
        MathUtils.normalizeArray(doubleArray0, (-584.805081573));
      } catch(ArithmeticException e) {
         //
         // array sums to zero
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 34
  /*
   * 176 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distance1([I[I)I: Line 1734
   * Goal 2. org.apache.commons.math.util.MathUtils.distance1([I[I)I: Line 1735
   * Goal 3. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: Line 456
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(I)I: Line 904
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 6. org.apache.commons.math.util.MathUtils.distance1([I[I)I: Line 1738
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 780
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(I)I: Line 1424
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 785
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 489
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 19. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1389
   * Goal 20. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 22. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1392
   * Goal 23. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1719
   * Goal 24. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1720
   * Goal 25. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 952
   * Goal 26. org.apache.commons.math.util.MathUtils.log(DD)D: Line 1016
   * Goal 27. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1721
   * Goal 28. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 953
   * Goal 29. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 442
   * Goal 30. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1723
   * Goal 31. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 891
   * Goal 32. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 892
   * Goal 33. org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch
   * Goal 34. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true
   * Goal 35. org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - true
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true
   * Goal 39. org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true
   * Goal 40. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 41. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 42. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 43. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true
   * Goal 44. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true
   * Goal 45. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 46. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 47. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 48. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 49. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 50. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - true
   * Goal 51. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false
   * Goal 52. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false
   * Goal 53. org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - false
   * Goal 54. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 55. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 56. org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - false
   * Goal 57. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 58. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 59. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 60. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - false
   * Goal 61. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false
   * Goal 62. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 63. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 64. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 65. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 66. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 67. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 68. Weak Mutation 1547: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> -2
   * Goal 69. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 70. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 71. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 72. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 73. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 74. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 75. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 76. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 77. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 78. Weak Mutation 2592: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator != -> -1
   * Goal 79. Weak Mutation 1570: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator == -> <=
   * Goal 80. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 81. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 82. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 83. Weak Mutation 1582: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator != -> >
   * Goal 84. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 85. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 86. Weak Mutation 1605: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> %
   * Goal 87. Weak Mutation 1608: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> /
   * Goal 88. Weak Mutation 3156: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> -1
   * Goal 89. Weak Mutation 3157: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> >
   * Goal 90. Weak Mutation 3171: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> +
   * Goal 91. Weak Mutation 3173: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> *
   * Goal 92. Weak Mutation 3174: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> /
   * Goal 93. Weak Mutation 3175: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> %
   * Goal 94. Weak Mutation 3178: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> /
   * Goal 95. Weak Mutation 3191: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1735 - ReplaceComparisonOperator >= -> >
   * Goal 96. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 97. Weak Mutation 1770: org.apache.commons.math.util.MathUtils.indicator(I)I:904 - ReplaceComparisonOperator < -> !=
   * Goal 98. Weak Mutation 1802: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> -2
   * Goal 99. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 100. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 101. Weak Mutation 1927: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> +
   * Goal 102. Weak Mutation 1928: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> %
   * Goal 103. Weak Mutation 1929: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> -
   * Goal 104. Weak Mutation 1930: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> *
   * Goal 105. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 106. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 107. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 108. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 109. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 110. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 111. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 112. Weak Mutation 969: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> +
   * Goal 113. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 114. Weak Mutation 971: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> *
   * Goal 115. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 116. Weak Mutation 979: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> -2
   * Goal 117. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 118. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 119. Weak Mutation 2532: org.apache.commons.math.util.MathUtils.sign(D)D:1389 - ReplaceComparisonOperator == -> !=
   * Goal 120. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 121. Weak Mutation 2544: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator != -> <
   * Goal 122. Weak Mutation 2554: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator <= -> -1
   * Goal 123. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 124. org.apache.commons.math.util.MathUtils.indicator(F)F:positive
   * Goal 125. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:false
   * Goal 126. org.apache.commons.math.util.MathUtils.equals(DDD)Z:false
   * Goal 127. org.apache.commons.math.util.MathUtils.sign(D)D:positive
   * Goal 128. org.apache.commons.math.util.MathUtils.log(DD)D:positive
   * Goal 129. org.apache.commons.math.util.MathUtils.gcd(JJ)J:zero
   * Goal 130. org.apache.commons.math.util.MathUtils.distance1([D[D)D:zero
   * Goal 131. org.apache.commons.math.util.MathUtils.distance1([I[I)I:zero
   * Goal 132. org.apache.commons.math.util.MathUtils.indicator(I)I:positive
   * Goal 133. org.apache.commons.math.util.MathUtils.sign(I)I:zero
   * Goal 134. org.apache.commons.math.util.MathUtils.lcm(II)I:zero
   * Goal 135. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:true
   * Goal 136. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 137. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 138. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 139. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 140. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 141. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 142. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 143. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 144. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 145. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 146. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 147. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 148. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 149. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 150. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 151. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 152. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 153. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 154. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 155. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 156. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 157. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 158. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 159. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 160. Branch org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true in context: org.apache.commons.math.util.MathUtils:distance1([I[I)I
   * Goal 161. Branch org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:log(DD)D
   * Goal 162. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 163. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 164. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 165. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 166. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 167. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 168. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 169. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 170. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - false in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 171. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - false in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 172. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 173. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 174. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - false in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 175. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 176. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   */

  @Test
  public void test034()  throws Throwable  {
      double double0 = MathUtils.sign(10.6983350033);
      double double1 = MathUtils.log(10.6983350033, 2.0);
      int int0 = MathUtils.indicator(1249);
      boolean boolean0 = MathUtils.equalsIncludingNaN(2.0, (-402.33808625396), 2.0);
      int[] intArray0 = new int[0];
      int int1 = MathUtils.distance1(intArray0, intArray0);
      boolean boolean1 = MathUtils.equalsIncludingNaN(2.0, 2.0, 1257.6);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.2924562905783446;
      doubleArray0[1] = 1403.0;
      doubleArray0[2] = 10.6983350033;
      doubleArray0[3] = 1.0;
      doubleArray0[4] = 1257.6;
      doubleArray0[5] = 0.2924562905783446;
      double double2 = MathUtils.distance1(doubleArray0, doubleArray0);
      int int2 = MathUtils.distance1(intArray0, intArray0);
      boolean boolean2 = MathUtils.equals(2779.9681, 1403.0, 1257.6);
      int int3 = MathUtils.sign(0);
      float float0 = MathUtils.indicator(Float.NaN);
      int int4 = MathUtils.lcm(0, 0);
      long long0 = MathUtils.gcd((long) 0, (long) 0);
  }

  //Test case number: 35
  /*
   * 27 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1062
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1064
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1049
   * Goal 4. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1050
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1067
   * Goal 6. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I71 Branch 131 IFLE L1062 - false
   * Goal 10. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 11. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 12. Weak Mutation 1988: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> ==
   * Goal 13. Weak Mutation 2019: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1062 - ReplaceComparisonOperator <= -> -1
   * Goal 14. Weak Mutation 2029: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> +
   * Goal 15. Weak Mutation 2030: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> %
   * Goal 16. Weak Mutation 2031: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> -
   * Goal 17. Weak Mutation 2032: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> *
   * Goal 18. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I71 Branch 131 IFLE L1062 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 23. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I79 Branch 132 IFGT L1064 - true
   * Goal 24. Weak Mutation 2035: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceComparisonOperator > -> -2
   * Goal 25. Weak Mutation 2046: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1067 - ReplaceComparisonOperator == -> !=
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I79 Branch 132 IFGT L1064 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 27. mulAndCheck(JJ)J_java.lang.ArithmeticException_EXPLICIT
   */

  @Test
  public void test035()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.mulAndCheck((-1196L), 5648769086999809661L);
      } catch(ArithmeticException e) {
         //
         // overflow: multiply
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 36
  /*
   * 228 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1030
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1031
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 4. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1034
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 6. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 523
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 780
   * Goal 9. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1165
   * Goal 10. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 526
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1551
   * Goal 12. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 529
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 785
   * Goal 14. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1169
   * Goal 15. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 530
   * Goal 16. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 531
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true
   * Goal 39. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false
   * Goal 41. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true
   * Goal 43. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true
   * Goal 44. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false
   * Goal 45. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 46. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 47. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 48. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 49. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 50. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false
   * Goal 51. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - true
   * Goal 52. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 53. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - true
   * Goal 54. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 55. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 56. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 57. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 58. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 59. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false
   * Goal 60. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true
   * Goal 61. org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true
   * Goal 62. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 63. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 64. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true
   * Goal 65. org.apache.commons.math.util.MathUtils.checkOrder([D)V: root-Branch
   * Goal 66. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 67. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true
   * Goal 68. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false
   * Goal 69. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 70. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - false
   * Goal 71. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I41 Branch 212 IFGT L1830 - false
   * Goal 72. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 73. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 74. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false
   * Goal 75. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - false
   * Goal 76. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true
   * Goal 77. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true
   * Goal 78. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true
   * Goal 79. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 80. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 81. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 82. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 83. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 84. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 85. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 86. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 87. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 88. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 89. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 90. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 91. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 92. Weak Mutation 2174: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1165 - ReplaceComparisonOperator == -> !=
   * Goal 93. Weak Mutation 2180: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1169 - ReplaceComparisonOperator == -> !=
   * Goal 94. Weak Mutation 2196: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> -1
   * Goal 95. Weak Mutation 2197: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> >
   * Goal 96. Weak Mutation 2204: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1177 - ReplaceComparisonOperator == -> !=
   * Goal 97. Weak Mutation 2223: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1181 - ReplaceComparisonOperator != -> ==
   * Goal 98. Weak Mutation 2234: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> %
   * Goal 99. Weak Mutation 2237: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> /
   * Goal 100. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 101. Weak Mutation 3156: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> -1
   * Goal 102. Weak Mutation 3157: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> >
   * Goal 103. Weak Mutation 3171: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> +
   * Goal 104. Weak Mutation 3173: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> *
   * Goal 105. Weak Mutation 3174: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> /
   * Goal 106. Weak Mutation 3175: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> %
   * Goal 107. Weak Mutation 3178: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> /
   * Goal 108. Weak Mutation 2833: org.apache.commons.math.util.MathUtils.pow(IJ)I:1551 - ReplaceComparisonOperator >= -> ==
   * Goal 109. Weak Mutation 2851: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> -2
   * Goal 110. Weak Mutation 2852: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> >=
   * Goal 111. Weak Mutation 2859: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> ^
   * Goal 112. Weak Mutation 2863: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> >=
   * Goal 113. Weak Mutation 2875: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> +
   * Goal 114. Weak Mutation 2876: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> %
   * Goal 115. Weak Mutation 2877: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> -
   * Goal 116. Weak Mutation 2878: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> /
   * Goal 117. Weak Mutation 2889: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> +
   * Goal 118. Weak Mutation 2890: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> %
   * Goal 119. Weak Mutation 2891: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> -
   * Goal 120. Weak Mutation 2892: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> /
   * Goal 121. Weak Mutation 2895: org.apache.commons.math.util.MathUtils.pow(IJ)I:1564 - ReplaceBitwiseOperator >> -> <<
   * Goal 122. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 123. Weak Mutation 1110: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator = null -> != null
   * Goal 124. Weak Mutation 1112: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator != null -> = null
   * Goal 125. Weak Mutation 1130: org.apache.commons.math.util.MathUtils.equals([D[D)Z:526 - ReplaceComparisonOperator == -> -2
   * Goal 126. Weak Mutation 1139: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> -1
   * Goal 127. Weak Mutation 1150: org.apache.commons.math.util.MathUtils.equals([D[D)Z:530 - ReplaceComparisonOperator != -> ==
   * Goal 128. Weak Mutation 3172: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> %
   * Goal 129. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 130. Weak Mutation 873: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> <
   * Goal 131. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 132. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 133. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 134. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 135. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 136. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 137. Weak Mutation 1440: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 138. Weak Mutation 1451: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 139. Weak Mutation 1452: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 140. Weak Mutation 1454: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 141. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 142. Weak Mutation 1803: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> >=
   * Goal 143. Weak Mutation 1810: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator != -> <
   * Goal 144. Weak Mutation 1825: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> +
   * Goal 145. Weak Mutation 1826: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> %
   * Goal 146. Weak Mutation 1827: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> -
   * Goal 147. Weak Mutation 1844: org.apache.commons.math.util.MathUtils.lcm(II)I:956 - ReplaceComparisonOperator != -> <
   * Goal 148. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 149. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 150. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 151. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 152. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 153. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 154. Weak Mutation 3397: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1829 - ReplaceComparisonOperator == -> !=
   * Goal 155. Weak Mutation 3407: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1830 - ReplaceComparisonOperator > -> !=
   * Goal 156. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   * Goal 157. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 158. Weak Mutation 1570: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator == -> <=
   * Goal 159. Weak Mutation 1556: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> -1
   * Goal 160. Weak Mutation 1582: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator != -> >
   * Goal 161. Weak Mutation 1605: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> %
   * Goal 162. Weak Mutation 1608: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> /
   * Goal 163. Weak Mutation 2858: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> |
   * Goal 164. Weak Mutation 2862: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> -2
   * Goal 165. org.apache.commons.math.util.MathUtils.distance1([D[D)D:zero
   * Goal 166. org.apache.commons.math.util.MathUtils.lcm(II)I:positive
   * Goal 167. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 168. org.apache.commons.math.util.MathUtils.equals([D[D)Z:false
   * Goal 169. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:true
   * Goal 170. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 171. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 172. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 173. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 174. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 175. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 176. org.apache.commons.math.util.MathUtils.checkOrder([D)V
   * Goal 177. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 178. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 179. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 180. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 181. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 182. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 183. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 184. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 185. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 186. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 187. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 188. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 189. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 190. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 191. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 192. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 193. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 194. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 195. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 196. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 197. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 198. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 199. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 200. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 201. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 202. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 203. Branch org.apache.commons.math.util.MathUtils.checkOrder([D)V: root-Branch in context: org.apache.commons.math.util.MathUtils:checkOrder([D)V
   * Goal 204. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 205. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 206. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 207. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 208. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 209. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 210. checkOrder([D)V_org.apache.commons.math.exception.MathIllegalNumberException_EXPLICIT
   * Goal 211. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - false
   * Goal 212. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true
   * Goal 213. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true
   * Goal 214. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false
   * Goal 215. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true
   * Goal 216. Weak Mutation 2235: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> -
   * Goal 217. Weak Mutation 2236: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> *
   * Goal 218. Weak Mutation 2248: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1185 - ReplaceComparisonOperator != -> >
   * Goal 219. Weak Mutation 2259: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> -1
   * Goal 220. Weak Mutation 2260: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> >
   * Goal 221. org.apache.commons.math.util.MathUtils.pow(IJ)I:zero
   * Goal 222. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:nonempty
   * Goal 223. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 224. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 225. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 226. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 227. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 228. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   */

  @Test
  public void test036()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 860.2930304493;
      doubleArray0[1] = 2.479773539153719E-5;
      doubleArray0[2] = (-2747.980841);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-772.5);
      double double0 = MathUtils.distance1(doubleArray0, doubleArray0);
      double[] doubleArray1 = MathUtils.normalizeArray(doubleArray0, (-1175.992187));
      int int0 = MathUtils.pow(10, 2120L);
      boolean boolean0 = MathUtils.equalsIncludingNaN(0.0, 0.0, 0.0);
      long long0 = MathUtils.gcd((long) 10, 0L);
      int int1 = MathUtils.lcm(10, 93);
      boolean boolean1 = MathUtils.equals(doubleArray0, doubleArray1);
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray1);
      } catch(IllegalArgumentException e) {
         //
         // points 0 and 1 are not strictly increasing (380.311 >= 0)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 37
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1165
   * Goal 2. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1166
   * Goal 3. Weak Mutation 2174: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1165 - ReplaceComparisonOperator == -> !=
   * Goal 4. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 5. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - false
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 7. normalizeArray([DD)[D_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   */

  @Test
  public void test037()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2703.1933;
      doubleArray0[3] = (-2871.671);
      doubleArray0[4] = (-2302.231185);
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (-3766.921493);
      try { 
        MathUtils.normalizeArray(doubleArray0, Double.POSITIVE_INFINITY);
      } catch(IllegalArgumentException e) {
         //
         // Cannot normalize to an infinite value
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 38
  /*
   * 162 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 389
   * Goal 2. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 390
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1030
   * Goal 4. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 391
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1031
   * Goal 6. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: Line 456
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 8. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1225
   * Goal 9. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 394
   * Goal 10. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1034
   * Goal 11. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1229
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 31. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch
   * Goal 35. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true
   * Goal 37. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 40. org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true
   * Goal 41. org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true
   * Goal 42. org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false
   * Goal 44. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - true
   * Goal 45. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - true
   * Goal 46. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 48. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 49. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 50. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 51. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 52. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 53. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 54. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 55. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 56. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 57. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 58. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 59. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 60. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 61. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 62. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 63. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 64. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 65. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 66. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 67. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 68. Weak Mutation 3275: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> -1
   * Goal 69. Weak Mutation 3276: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> >
   * Goal 70. Weak Mutation 3289: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> /
   * Goal 71. Weak Mutation 3306: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> %
   * Goal 72. Weak Mutation 3308: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> /
   * Goal 73. Weak Mutation 3309: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> %
   * Goal 74. Weak Mutation 3312: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> /
   * Goal 75. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 76. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 77. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 78. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 79. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 80. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 81. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 82. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 83. Weak Mutation 51: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> <
   * Goal 84. Weak Mutation 62: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> >
   * Goal 85. Weak Mutation 122: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> %
   * Goal 86. Weak Mutation 124: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> /
   * Goal 87. Weak Mutation 126: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceComparisonOperator > -> !=
   * Goal 88. Weak Mutation 132: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> %
   * Goal 89. Weak Mutation 135: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> /
   * Goal 90. Weak Mutation 1927: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> +
   * Goal 91. Weak Mutation 1928: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> %
   * Goal 92. Weak Mutation 1929: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> -
   * Goal 93. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 94. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 95. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 96. Weak Mutation 979: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> -2
   * Goal 97. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 98. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 99. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 100. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 101. Weak Mutation 2532: org.apache.commons.math.util.MathUtils.sign(D)D:1389 - ReplaceComparisonOperator == -> !=
   * Goal 102. Weak Mutation 2544: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator != -> <
   * Goal 103. Weak Mutation 2554: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator <= -> -1
   * Goal 104. Weak Mutation 824: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:391 - ReplaceComparisonOperator >= -> ==
   * Goal 105. Weak Mutation 3287: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> %
   * Goal 106. org.apache.commons.math.util.MathUtils.distance([I[I)D:zero
   * Goal 107. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J:zero
   * Goal 108. org.apache.commons.math.util.MathUtils.log(DD)D:positive
   * Goal 109. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:false
   * Goal 110. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:zero
   * Goal 111. org.apache.commons.math.util.MathUtils.sign(D)D:positive
   * Goal 112. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:zero
   * Goal 113. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:positive
   * Goal 114. org.apache.commons.math.util.MathUtils.round(DII)D:zero
   * Goal 115. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 116. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 117. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 118. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 119. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 120. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 121. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 122. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 123. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 124. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 125. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 126. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 127. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 128. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 129. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 130. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 131. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 132. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 133. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 134. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 135. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 136. Branch org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch in context: org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J
   * Goal 137. Branch org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:log(DD)D
   * Goal 138. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 139. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 140. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 141. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 142. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 143. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 144. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - false in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 145. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 146. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 147. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - true
   * Goal 148. org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false
   * Goal 149. org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true
   * Goal 150. org.apache.commons.math.util.MathUtils.round(DII)D: I20 Branch 146 IFEQ L1230 - false
   * Goal 151. Weak Mutation 1329: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> -2
   * Goal 152. Weak Mutation 1353: org.apache.commons.math.util.MathUtils.gcd(II)I:691 - ReplaceComparisonOperator == -> >=
   * Goal 153. Weak Mutation 1367: org.apache.commons.math.util.MathUtils.gcd(II)I:691 - ReplaceComparisonOperator != -> <
   * Goal 154. Weak Mutation 1395: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> %
   * Goal 155. Weak Mutation 1398: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> /
   * Goal 156. Weak Mutation 2295: org.apache.commons.math.util.MathUtils.round(DII)D:1230 - ReplaceComparisonOperator == -> !=
   * Goal 157. org.apache.commons.math.util.MathUtils.gcd(II)I:zero
   * Goal 158. org.apache.commons.math.util.MathUtils.round(DII)D:positive
   * Goal 159. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 160. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 161. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 162. Branch org.apache.commons.math.util.MathUtils.round(DII)D: I20 Branch 146 IFEQ L1230 - false in context: org.apache.commons.math.util.MathUtils:round(DII)D
   */

  @Test
  public void test038()  throws Throwable  {
      int int0 = MathUtils.compareTo(2.2250738585072014E-308, 2.2250738585072014E-308, 2.2250738585072014E-308);
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      int[] intArray1 = new int[6];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 0;
      double double0 = MathUtils.distance(intArray0, intArray1);
      int int1 = MathUtils.gcd(0, 0);
      double double1 = MathUtils.sign(2.2250738585072014E-308);
      double double2 = MathUtils.log(0.16666666666666666, 0);
      int int2 = MathUtils.mulAndCheck(2124, 0);
      double double3 = MathUtils.round((double) 0, 0, 0);
      double double4 = MathUtils.round(Double.POSITIVE_INFINITY, 0, 0);
      boolean boolean0 = MathUtils.equalsIncludingNaN((double) 0, (-3997.0), 0.0);
      double double5 = MathUtils.log(0.11764700710773468, 0.0);
      long long0 = MathUtils.addAndCheck((long) 0, 0L);
      int int3 = MathUtils.compareTo(2.0, 0, (-626.0));
  }

  //Test case number: 39
  /*
   * 33 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(I)I: Line 1424
   * Goal 2. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1478
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 102
   * Goal 4. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - false
   * Goal 9. Weak Mutation 2672: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> %
   * Goal 10. Weak Mutation 2674: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> /
   * Goal 11. Weak Mutation 2682: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator < -> !=
   * Goal 12. Weak Mutation 2691: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator <= -> ==
   * Goal 13. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 14. Weak Mutation 9: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> -
   * Goal 15. Weak Mutation 10: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> *
   * Goal 16. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 17. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 18. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 19. Weak Mutation 2592: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator != -> -1
   * Goal 20. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:positive
   * Goal 21. org.apache.commons.math.util.MathUtils.sign(I)I:zero
   * Goal 22. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 23. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 24. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 25. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 26. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 27. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 30. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 31. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 32. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - false in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 33. org.apache.commons.math.util.MathUtils.subAndCheck(II)I:positive
   */

  @Test
  public void test039()  throws Throwable  {
      int int0 = MathUtils.sign(0);
      int int1 = MathUtils.subAndCheck(1164, 0);
      int int2 = MathUtils.addAndCheck((-754), 1050);
  }

  //Test case number: 40
  /*
   * 94 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1089
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1410
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 6. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1062
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 8. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: Line 456
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: Line 1641
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 11. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: Line 1647
   * Goal 14. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1072
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 22. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - true
   * Goal 36. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 39. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 40. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 41. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 42. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 43. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 44. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 45. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 46. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 47. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 48. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 49. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 50. Weak Mutation 969: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> +
   * Goal 51. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 52. Weak Mutation 971: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> *
   * Goal 53. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 54. Weak Mutation 979: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> -2
   * Goal 55. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 56. Weak Mutation 2574: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> >
   * Goal 57. Weak Mutation 2581: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator <= -> ==
   * Goal 58. Weak Mutation 2515: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator != -> <
   * Goal 59. Weak Mutation 2521: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator <= -> -1
   * Goal 60. Weak Mutation 3050: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;:1641 - ReplaceComparisonOperator >= -> ==
   * Goal 61. org.apache.commons.math.util.MathUtils.hash([D)I:positive
   * Goal 62. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:false
   * Goal 63. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:zero
   * Goal 64. org.apache.commons.math.util.MathUtils.sign(F)F:negative
   * Goal 65. org.apache.commons.math.util.MathUtils.sign(B)B:positive
   * Goal 66. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;:nonnull
   * Goal 67. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 68. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 69. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 70. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 71. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 72. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 73. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 74. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 75. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 76. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 77. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 78. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash([D)I
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 81. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 83. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 85. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - false in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 91. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I71 Branch 131 IFLE L1062 - true
   * Goal 92. Weak Mutation 1989: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> >
   * Goal 93. Weak Mutation 2021: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1062 - ReplaceComparisonOperator <= -> <
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I71 Branch 131 IFLE L1062 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   */

  @Test
  public void test040()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-2566.08954450843);
      doubleArray0[2] = Double.NEGATIVE_INFINITY;
      doubleArray0[3] = 1.1102230246251565E-16;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 1345.9688;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 260.2;
      int int0 = MathUtils.hash(doubleArray0);
      boolean boolean0 = MathUtils.equalsIncludingNaN(651.428, 0.0, 0.0);
      float float0 = MathUtils.sign((-1234.9493F));
      long long0 = MathUtils.mulAndCheck((-4035746434778044925L), 0L);
      int int1 = MathUtils.hash(doubleArray0);
      byte byte0 = MathUtils.sign((byte)13);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)13;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = MathUtils.pow(bigInteger0, 2833);
  }

  //Test case number: 41
  /*
   * 58 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I71 Branch 131 IFLE L1062 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I37 Branch 130 IFLT L1057 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - true
   * Goal 21. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 22. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 23. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 25. Weak Mutation 1885: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> +
   * Goal 26. Weak Mutation 1886: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> %
   * Goal 27. Weak Mutation 1887: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> -
   * Goal 28. Weak Mutation 1888: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> *
   * Goal 29. Weak Mutation 1901: org.apache.commons.math.util.MathUtils.lcm(JJ)J:991 - ReplaceComparisonOperator != -> >
   * Goal 30. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 31. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 32. Weak Mutation 1869: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> <=
   * Goal 33. Weak Mutation 1558: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> >
   * Goal 34. Weak Mutation 1629: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> ==
   * Goal 35. Weak Mutation 1876: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator != -> >
   * Goal 36. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 37. Weak Mutation 1987: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> -1
   * Goal 38. Weak Mutation 1999: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> +
   * Goal 39. Weak Mutation 2000: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> %
   * Goal 40. Weak Mutation 2001: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> -
   * Goal 41. Weak Mutation 2004: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceComparisonOperator < -> !=
   * Goal 42. Weak Mutation 2010: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> +
   * Goal 43. Weak Mutation 2011: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> %
   * Goal 44. Weak Mutation 2012: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> -
   * Goal 45. Weak Mutation 1989: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> >
   * Goal 46. Weak Mutation 2021: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1062 - ReplaceComparisonOperator <= -> <
   * Goal 47. Weak Mutation 1549: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> <=
   * Goal 48. Weak Mutation 1616: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> ==
   * Goal 49. org.apache.commons.math.util.MathUtils.lcm(JJ)J:positive
   * Goal 50. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:zero
   * Goal 51. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 52. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 53. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 54. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 55. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 56. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 57. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 58. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   */

  @Test
  public void test041()  throws Throwable  {
      long long0 = MathUtils.lcm((-2653L), (-2653L));
      long long1 = MathUtils.mulAndCheck(0L, (-1862L));
  }

  //Test case number: 42
  /*
   * 38 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1292
   * Goal 2. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false
   * Goal 13. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 14. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 15. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 16. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 17. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 18. Weak Mutation 2337: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> -
   * Goal 19. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 20. Weak Mutation 2350: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> %
   * Goal 21. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 22. Weak Mutation 2352: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> *
   * Goal 23. Weak Mutation 1759: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> <=
   * Goal 24. org.apache.commons.math.util.MathUtils.round(FII)F:negative
   * Goal 25. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 26. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 27. Branch org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FII)F
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 30. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 31. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 32. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 33. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 34. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 35. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false in context: 
   * Goal 36. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - true
   * Goal 37. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - true in context: 
   * Goal 38. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1293
   */

  @Test
  public void test042()  throws Throwable  {
      double double0 = MathUtils.TWO_PI;
      float float0 = MathUtils.round(0.0F, 1, 1);
  }

  //Test case number: 43
  /*
   * 240 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 643
   * Goal 2. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 389
   * Goal 3. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 391
   * Goal 4. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 392
   * Goal 5. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 648
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 7. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 649
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 11. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 142
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 792
   * Goal 13. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1049
   * Goal 14. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1050
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 795
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1052
   * Goal 17. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1054
   * Goal 18. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1055
   * Goal 19. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 159
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 799
   * Goal 21. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 160
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 800
   * Goal 23. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1062
   * Goal 24. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 166
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 806
   * Goal 26. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1064
   * Goal 27. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1065
   * Goal 28. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 813
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 819
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 820
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 823
   * Goal 33. org.apache.commons.math.util.MathUtils.sinh(D)D: Line 1464
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 826
   * Goal 35. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 442
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 829
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 832
   * Goal 38. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1089
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 833
   * Goal 40. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: Line 456
   * Goal 41. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 585
   * Goal 42. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 590
   * Goal 43. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 594
   * Goal 44. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 45. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 46. org.apache.commons.math.util.MathUtils.indicator(B)B: Line 865
   * Goal 47. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 48. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 49. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 486
   * Goal 50. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 102
   * Goal 51. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 103
   * Goal 52. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 53. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 489
   * Goal 54. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 106
   * Goal 55. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 56. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 57. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: Line 120
   * Goal 58. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 59. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 60. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - true
   * Goal 61. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 62. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 63. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 64. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 65. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 66. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 67. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 68. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true
   * Goal 69. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - true
   * Goal 70. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 71. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 72. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 73. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 74. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 75. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 76. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 77. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 78. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 79. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 80. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 81. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 82. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 83. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 84. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 85. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 86. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 87. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 88. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 89. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 90. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - false
   * Goal 91. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 92. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 93. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false
   * Goal 94. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - false
   * Goal 95. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 96. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 97. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true
   * Goal 98. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 99. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - true
   * Goal 100. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 101. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I71 Branch 131 IFLE L1062 - false
   * Goal 102. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I79 Branch 132 IFGT L1064 - false
   * Goal 103. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - false
   * Goal 104. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 105. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 106. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 107. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 108. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 109. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 110. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 111. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 112. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 113. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 114. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 115. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 116. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 117. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 118. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 119. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 120. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 121. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 122. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 123. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 124. Weak Mutation 2651: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> +
   * Goal 125. Weak Mutation 2652: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> %
   * Goal 126. Weak Mutation 2653: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> *
   * Goal 127. Weak Mutation 2654: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> /
   * Goal 128. Weak Mutation 2660: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> %
   * Goal 129. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 130. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 131. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 132. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 133. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 134. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 135. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 136. Weak Mutation 823: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:391 - ReplaceComparisonOperator >= -> -1
   * Goal 137. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 138. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 139. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 140. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 141. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 142. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 143. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 144. Weak Mutation 51: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> <
   * Goal 145. Weak Mutation 122: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> %
   * Goal 146. Weak Mutation 124: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> /
   * Goal 147. Weak Mutation 126: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceComparisonOperator > -> !=
   * Goal 148. Weak Mutation 132: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> %
   * Goal 149. Weak Mutation 135: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> /
   * Goal 150. Weak Mutation 1718: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> !=
   * Goal 151. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 152. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 153. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 154. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 155. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 156. Weak Mutation 969: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> +
   * Goal 157. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 158. Weak Mutation 971: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> *
   * Goal 159. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 160. Weak Mutation 979: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> -2
   * Goal 161. Weak Mutation 1558: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> >
   * Goal 162. Weak Mutation 1629: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> ==
   * Goal 163. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 164. Weak Mutation 1988: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> ==
   * Goal 165. Weak Mutation 2019: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1062 - ReplaceComparisonOperator <= -> -1
   * Goal 166. Weak Mutation 2029: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> +
   * Goal 167. Weak Mutation 2030: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> %
   * Goal 168. Weak Mutation 2031: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> -
   * Goal 169. Weak Mutation 2032: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> *
   * Goal 170. Weak Mutation 2036: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceComparisonOperator > -> !=
   * Goal 171. Weak Mutation 2042: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> +
   * Goal 172. Weak Mutation 2043: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> %
   * Goal 173. Weak Mutation 2044: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> -
   * Goal 174. Weak Mutation 2045: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> /
   * Goal 175. Weak Mutation 1202: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> >
   * Goal 176. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> ==
   * Goal 177. Weak Mutation 121: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> +
   * Goal 178. Weak Mutation 123: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> *
   * Goal 179. Weak Mutation 133: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> -
   * Goal 180. Weak Mutation 134: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> *
   * Goal 181. Weak Mutation 1274: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> -1
   * Goal 182. Weak Mutation 2659: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> +
   * Goal 183. Weak Mutation 2661: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> -
   * Goal 184. Weak Mutation 2662: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> *
   * Goal 185. Weak Mutation 1262: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> >
   * Goal 186. Weak Mutation 61: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> ==
   * Goal 187. org.apache.commons.math.util.MathUtils.sinh(D)D:negative
   * Goal 188. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:negative
   * Goal 189. org.apache.commons.math.util.MathUtils.indicator(B)B:positive
   * Goal 190. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:false
   * Goal 191. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:negative
   * Goal 192. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 193. org.apache.commons.math.util.MathUtils.factorialLog(I)D:zero
   * Goal 194. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J:positive
   * Goal 195. org.apache.commons.math.util.MathUtils.sinh(D)D:zero
   * Goal 196. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:negative
   * Goal 197. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 198. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 199. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 200. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 201. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 202. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 203. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 204. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 205. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 206. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 207. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 208. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 209. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 210. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 211. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 212. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 213. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 214. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 215. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 216. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - false in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 217. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 218. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 219. Branch org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch in context: org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J
   * Goal 220. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 221. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 222. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 223. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 224. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 225. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 226. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 227. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 228. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 229. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 230. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 231. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 232. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 233. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 234. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 235. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 236. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 237. Weak Mutation 1549: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> <=
   * Goal 238. Weak Mutation 1616: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> ==
   * Goal 239. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 240. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   */

  @Test
  public void test043()  throws Throwable  {
      long long0 = MathUtils.addAndCheck(4095L, 4095L);
      double double0 = MathUtils.sinh(0.0);
      int int0 = MathUtils.compareTo((-97.1904640573934), (-2.6033824355191673E-8), 0.0);
      int int1 = MathUtils.addAndCheck((-1), 0);
      double double1 = MathUtils.factorialLog(0);
      byte byte0 = MathUtils.indicator((byte)10);
      double double2 = MathUtils.sinh((-97.1904640573934));
      long long1 = MathUtils.mulAndCheck(8190L, (long) (-1));
      MathUtils.OrderDirection[] mathUtils_OrderDirectionArray0 = MathUtils.OrderDirection.values();
      long long2 = MathUtils.gcd((long) (-1), (-494L));
      long long3 = MathUtils.mulAndCheck((long) (byte)10, (-1105L));
      boolean boolean0 = MathUtils.equalsIncludingNaN((-2278.18590881687), 0.08713622391223907, (double) (-494L));
  }

  //Test case number: 44
  /*
   * 147 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1089
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1410
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 4. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 585
   * Goal 5. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 142
   * Goal 6. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 590
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(I)I: Line 1424
   * Goal 8. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 594
   * Goal 9. org.apache.commons.math.util.MathUtils.cosh(D)D: Line 405
   * Goal 10. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1049
   * Goal 11. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1050
   * Goal 12. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1054
   * Goal 13. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 159
   * Goal 14. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 160
   * Goal 15. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1765
   * Goal 16. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 166
   * Goal 17. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1766
   * Goal 18. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1767
   * Goal 19. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1768
   * Goal 20. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1770
   * Goal 21. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 618
   * Goal 22. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 877
   * Goal 23. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 623
   * Goal 24. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 880
   * Goal 25. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 624
   * Goal 26. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1074
   * Goal 27. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: Line 1139
   * Goal 28. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: Line 120
   * Goal 29. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1086
   * Goal 30. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1407
   * Goal 31. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 32. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch
   * Goal 33. org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch
   * Goal 34. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 35. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 37. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 39. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true
   * Goal 40. org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - true
   * Goal 41. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 42. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true
   * Goal 43. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false
   * Goal 44. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - false
   * Goal 45. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true
   * Goal 46. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 47. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 48. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false
   * Goal 49. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true
   * Goal 50. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - false
   * Goal 51. org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - false
   * Goal 52. Weak Mutation 3275: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> -1
   * Goal 53. Weak Mutation 3276: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> >
   * Goal 54. Weak Mutation 3286: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> +
   * Goal 55. Weak Mutation 3288: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> *
   * Goal 56. Weak Mutation 3289: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> /
   * Goal 57. Weak Mutation 3306: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> %
   * Goal 58. Weak Mutation 3308: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> /
   * Goal 59. Weak Mutation 3309: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> %
   * Goal 60. Weak Mutation 3312: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> /
   * Goal 61. Weak Mutation 51: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> <
   * Goal 62. Weak Mutation 62: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> >
   * Goal 63. Weak Mutation 122: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> %
   * Goal 64. Weak Mutation 124: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> /
   * Goal 65. Weak Mutation 126: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceComparisonOperator > -> !=
   * Goal 66. Weak Mutation 132: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> %
   * Goal 67. Weak Mutation 135: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> /
   * Goal 68. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 69. Weak Mutation 838: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> %
   * Goal 70. Weak Mutation 839: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> -
   * Goal 71. Weak Mutation 840: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> *
   * Goal 72. Weak Mutation 841: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> /
   * Goal 73. Weak Mutation 846: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> +
   * Goal 74. Weak Mutation 847: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> %
   * Goal 75. Weak Mutation 848: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> -
   * Goal 76. Weak Mutation 849: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> *
   * Goal 77. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 78. Weak Mutation 1202: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> >
   * Goal 79. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> ==
   * Goal 80. Weak Mutation 1239: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:623 - ReplaceComparisonOperator >= -> -1
   * Goal 81. Weak Mutation 1982: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> >
   * Goal 82. Weak Mutation 2140: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> %
   * Goal 83. Weak Mutation 2141: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> -
   * Goal 84. Weak Mutation 2142: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> *
   * Goal 85. Weak Mutation 2143: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> /
   * Goal 86. Weak Mutation 2149: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> +
   * Goal 87. Weak Mutation 2150: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 88. Weak Mutation 2151: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> *
   * Goal 89. Weak Mutation 2152: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 90. Weak Mutation 2159: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> %
   * Goal 91. Weak Mutation 2163: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> %
   * Goal 92. Weak Mutation 2164: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> -
   * Goal 93. Weak Mutation 2165: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> /
   * Goal 94. Weak Mutation 2166: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> +
   * Goal 95. Weak Mutation 2167: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 96. Weak Mutation 2168: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> *
   * Goal 97. Weak Mutation 2169: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 98. Weak Mutation 2592: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator != -> -1
   * Goal 99. Weak Mutation 2574: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> >
   * Goal 100. Weak Mutation 2581: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator <= -> ==
   * Goal 101. Weak Mutation 1971: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> <
   * Goal 102. Weak Mutation 3287: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> %
   * Goal 103. Weak Mutation 1741: org.apache.commons.math.util.MathUtils.indicator(D)D:880 - ReplaceComparisonOperator < -> <=
   * Goal 104. Weak Mutation 1227: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:618 - ReplaceComparisonOperator >= -> >
   * Goal 105. org.apache.commons.math.util.MathUtils.distance([I[I)D:zero
   * Goal 106. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J:zero
   * Goal 107. org.apache.commons.math.util.MathUtils.cosh(D)D:positive
   * Goal 108. org.apache.commons.math.util.MathUtils.indicator(D)D:positive
   * Goal 109. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:zero
   * Goal 110. org.apache.commons.math.util.MathUtils.factorialDouble(I)D:positive
   * Goal 111. org.apache.commons.math.util.MathUtils.sign(I)I:zero
   * Goal 112. org.apache.commons.math.util.MathUtils.sign(F)F:negative
   * Goal 113. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:positive
   * Goal 114. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 115. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 116. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 117. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 118. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 119. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 120. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 121. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 122. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 123. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 124. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 125. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 126. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 127. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 128. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 129. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 130. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 131. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 132. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 133. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 134. Branch org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch in context: org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J
   * Goal 135. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 136. Branch org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:cosh(D)D
   * Goal 137. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 138. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 139. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 140. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 141. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 142. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - false in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 143. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 144. Branch org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:normalizeAngle(DD)D
   * Goal 145. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - false in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 146. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 147. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   */

  @Test
  public void test044()  throws Throwable  {
      int int0 = MathUtils.sign(0);
      double double0 = MathUtils.factorialDouble(0);
      long long0 = MathUtils.addAndCheck((long) 0, (long) 0);
      float float0 = MathUtils.sign((-1933.5939F));
      long long1 = MathUtils.mulAndCheck((long) 0, 0L);
      double double1 = MathUtils.indicator((double) 0L);
      double double2 = MathUtils.cosh(0L);
      double double3 = MathUtils.normalizeAngle(2550.0, Double.POSITIVE_INFINITY);
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 243;
      intArray0[5] = 0;
      double double4 = MathUtils.distance(intArray0, intArray0);
  }

  //Test case number: 45
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1667
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1668
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1669
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: Line 1641
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - true
   * Goal 8. Weak Mutation 3067: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1661 - ReplaceComparisonOperator >= -> >
   * Goal 9. Weak Mutation 3079: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1669 - ReplaceComparisonOperator == -> -2
   * Goal 10. Weak Mutation 3050: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;:1641 - ReplaceComparisonOperator >= -> ==
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:nonnull
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;:nonnull
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   */

  @Test
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)115;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = MathUtils.pow(bigInteger0, (int) (byte)115);
      BigInteger bigInteger2 = MathUtils.pow(bigInteger1, 0L);
  }

  //Test case number: 46
  /*
   * 65 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 800
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 832
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 833
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 102
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 806
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 103
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 106
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1611
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1612
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - false
   * Goal 29. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 30. Weak Mutation 1557: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> <
   * Goal 31. Weak Mutation 1615: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> -1
   * Goal 32. Weak Mutation 1628: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> -1
   * Goal 33. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 34. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 35. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 36. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 37. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 38. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 39. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 40. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 41. Weak Mutation 2969: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> -1
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 43. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 44. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 45. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 46. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 47. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 48. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 49. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 50. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 51. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 52. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 53. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 54. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 55. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 56. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 57. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 58. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 59. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 60. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 61. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 62. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 63. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 64. pow(JJ)J_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   * Goal 65. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:zero
   */

  @Test
  public void test046()  throws Throwable  {
      long long0 = MathUtils.gcd(287L, 2083L);
      int int0 = MathUtils.addAndCheck(0, 0);
      try { 
        MathUtils.pow((long) 0, (-538L));
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (0^-538)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 47
  /*
   * 112 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1856
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1410
   * Goal 3. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1858
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1667
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 196
   * Goal 7. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1668
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 197
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1669
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1670
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1671
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1673
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I43 Branch 197 IFEQ L1670 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 25. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - true
   * Goal 35. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I84 Branch 216 IFLE L1845 - false
   * Goal 36. Weak Mutation 3066: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1661 - ReplaceComparisonOperator >= -> ==
   * Goal 37. Weak Mutation 3080: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1669 - ReplaceComparisonOperator == -> >=
   * Goal 38. Weak Mutation 3086: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceBitwiseOperator & -> |
   * Goal 39. Weak Mutation 3087: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceBitwiseOperator & -> ^
   * Goal 40. Weak Mutation 3091: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceComparisonOperator == -> >=
   * Goal 41. Weak Mutation 3156: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> -1
   * Goal 42. Weak Mutation 3157: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> >
   * Goal 43. Weak Mutation 3171: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> +
   * Goal 44. Weak Mutation 3173: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> *
   * Goal 45. Weak Mutation 3174: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> /
   * Goal 46. Weak Mutation 3175: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> %
   * Goal 47. Weak Mutation 3178: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> /
   * Goal 48. Weak Mutation 1780: org.apache.commons.math.util.MathUtils.indicator(J)J:914 - ReplaceComparisonOperator < -> !=
   * Goal 49. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 50. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 51. Weak Mutation 768: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> >
   * Goal 52. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 53. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 54. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   * Goal 55. Weak Mutation 3079: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1669 - ReplaceComparisonOperator == -> -2
   * Goal 56. Weak Mutation 1740: org.apache.commons.math.util.MathUtils.indicator(D)D:880 - ReplaceComparisonOperator < -> !=
   * Goal 57. Weak Mutation 2574: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> >
   * Goal 58. Weak Mutation 2581: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator <= -> ==
   * Goal 59. Weak Mutation 165: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> -2
   * Goal 60. Weak Mutation 3426: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1840 - ReplaceComparisonOperator == -> !=
   * Goal 61. Weak Mutation 3447: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1845 - ReplaceComparisonOperator <= -> -1
   * Goal 62. org.apache.commons.math.util.MathUtils.indicator(J)J:positive
   * Goal 63. org.apache.commons.math.util.MathUtils.distance1([D[D)D:zero
   * Goal 64. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:positive
   * Goal 65. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:nonnull
   * Goal 66. org.apache.commons.math.util.MathUtils.indicator(D)D:positive
   * Goal 67. org.apache.commons.math.util.MathUtils.sign(F)F:negative
   * Goal 68. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 69. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 70. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 71. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 72. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 73. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 74. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 75. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 76. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 77. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 78. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 79. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 80. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 81. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I43 Branch 197 IFEQ L1670 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false in context: org.apache.commons.math.util.MathUtils:indicator(J)J
   * Goal 83. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 85. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 98. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 100. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 101. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I84 Branch 216 IFLE L1845 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 102. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 103. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 104. checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V_org.apache.commons.math.exception.MathIllegalNumberException_EXPLICIT
   * Goal 105. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I43 Branch 197 IFEQ L1670 - true
   * Goal 106. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I84 Branch 216 IFLE L1845 - true
   * Goal 107. Weak Mutation 3090: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceComparisonOperator == -> -2
   * Goal 108. Weak Mutation 3103: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1674 - ReplaceBitwiseOperator >> -> <<
   * Goal 109. Weak Mutation 3448: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1845 - ReplaceComparisonOperator <= -> ==
   * Goal 110. Weak Mutation 3449: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1845 - ReplaceComparisonOperator <= -> <
   * Goal 111. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I84 Branch 216 IFLE L1845 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 112. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I43 Branch 197 IFEQ L1670 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   */

  @Test
  public void test047()  throws Throwable  {
      float float0 = MathUtils.sign((-4061.9773F));
      double double0 = MathUtils.indicator(1.304E19);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 1.304E19;
      doubleArray0[1] = (double) (-4061.9773F);
      doubleArray0[2] = (double) (-4061.9773F);
      doubleArray0[3] = (double) (-4061.9773F);
      doubleArray0[4] = (double) (-1.0F);
      double double1 = MathUtils.distance1(doubleArray0, doubleArray0);
      long long0 = MathUtils.indicator(9154082963658192752L);
      long long1 = MathUtils.binomialCoefficient(459, 459);
      MathUtils.OrderDirection[] mathUtils_OrderDirectionArray0 = MathUtils.OrderDirection.values();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)76;
      byteArray0[1] = (byte)0;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = MathUtils.pow(bigInteger0, (long) (byte)76);
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.DECREASING;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, false);
      } catch(IllegalArgumentException e) {
         //
         // points 3 and 4 are not decreasing (-4,061.977 < -1)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 48
  /*
   * 88 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(B)B: Line 865
   * Goal 2. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 643
   * Goal 3. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1478
   * Goal 4. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1479
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(I)I: Line 904
   * Goal 6. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 648
   * Goal 7. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 649
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch
   * Goal 13. org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - true
   * Goal 24. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 25. Weak Mutation 1867: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> -2
   * Goal 26. Weak Mutation 1927: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> +
   * Goal 27. Weak Mutation 1928: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> %
   * Goal 28. Weak Mutation 1929: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> -
   * Goal 29. Weak Mutation 1930: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> *
   * Goal 30. Weak Mutation 2630: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator != -> <
   * Goal 31. Weak Mutation 2636: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator <= -> -1
   * Goal 32. Weak Mutation 2672: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> %
   * Goal 33. Weak Mutation 2674: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> /
   * Goal 34. Weak Mutation 2682: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator < -> !=
   * Goal 35. Weak Mutation 2691: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator <= -> ==
   * Goal 36. Weak Mutation 1769: org.apache.commons.math.util.MathUtils.indicator(I)I:904 - ReplaceComparisonOperator < -> -2
   * Goal 37. Weak Mutation 1202: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> >
   * Goal 38. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> ==
   * Goal 39. Weak Mutation 991: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> <
   * Goal 40. Weak Mutation 1274: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> -1
   * Goal 41. Weak Mutation 2611: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator != -> >
   * Goal 42. Weak Mutation 2618: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator <= -> ==
   * Goal 43. org.apache.commons.math.util.MathUtils.indicator(B)B:positive
   * Goal 44. org.apache.commons.math.util.MathUtils.lcm(JJ)J:zero
   * Goal 45. org.apache.commons.math.util.MathUtils.sign(S)S:positive
   * Goal 46. org.apache.commons.math.util.MathUtils.subAndCheck(II)I:zero
   * Goal 47. org.apache.commons.math.util.MathUtils.indicator(I)I:negative
   * Goal 48. org.apache.commons.math.util.MathUtils.factorialLog(I)D:zero
   * Goal 49. org.apache.commons.math.util.MathUtils.sign(J)J:negative
   * Goal 50. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 51. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 52. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 53. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 54. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 55. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 56. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 57. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 58. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 59. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 60. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 61. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 62. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 63. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 64. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 65. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 66. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 67. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 68. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 69. Branch org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:log(DD)D
   * Goal 70. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 71. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 72. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 73. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - false in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 75. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - true in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 76. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 81. equals(DDI)Z_java.lang.AssertionError_EXPLICIT
   * Goal 82. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - false
   * Goal 83. Weak Mutation 1262: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> >
   * Goal 84. Weak Mutation 1719: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> <=
   * Goal 85. Weak Mutation 2609: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator != -> -1
   * Goal 86. org.apache.commons.math.util.MathUtils.sign(J)J:zero
   * Goal 87. org.apache.commons.math.util.MathUtils.log(DD)D:zero
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - false in context: org.apache.commons.math.util.MathUtils:sign(J)J
   */

  @Test
  public void test048()  throws Throwable  {
      long long0 = MathUtils.sign((-2406L));
      int int0 = MathUtils.subAndCheck(0, 0);
      int int1 = MathUtils.indicator((-1106));
      long long1 = MathUtils.sign((long) 0);
      byte byte0 = MathUtils.indicator((byte)0);
      double double0 = MathUtils.factorialLog(0);
      short short0 = MathUtils.sign((short) (byte)1);
      long long2 = MathUtils.lcm((long) 0, (-4035746434778044925L));
      double double1 = MathUtils.log(0.0, 618.391948325665);
      // Undeclared exception!
      try { 
        MathUtils.equals((double) 0L, (double) (byte)1, 0);
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 49
  /*
   * 29 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(B)B: Line 865
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - false
   * Goal 9. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 10. Weak Mutation 1202: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> >
   * Goal 11. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> ==
   * Goal 12. Weak Mutation 874: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> >
   * Goal 13. Weak Mutation 1274: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> -1
   * Goal 14. Weak Mutation 1262: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> >
   * Goal 15. Weak Mutation 1719: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> <=
   * Goal 16. org.apache.commons.math.util.MathUtils.indicator(B)B:positive
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DD)Z:false
   * Goal 18. org.apache.commons.math.util.MathUtils.factorialLog(I)D:zero
   * Goal 19. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 20. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 22. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 23. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 27. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   */

  @Test
  public void test049()  throws Throwable  {
      double double0 = MathUtils.factorialLog(0);
      boolean boolean0 = MathUtils.equals((-8.0E298), 0.0);
      byte byte0 = MathUtils.indicator((byte)0);
  }

  //Test case number: 50
  /*
   * 167 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 643
   * Goal 2. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 648
   * Goal 3. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 651
   * Goal 4. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 652
   * Goal 5. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 653
   * Goal 6. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 655
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 271
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 272
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 275
   * Goal 10. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1749
   * Goal 11. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1750
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 278
   * Goal 13. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1751
   * Goal 14. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1752
   * Goal 15. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 281
   * Goal 16. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1754
   * Goal 17. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 285
   * Goal 18. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 286
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 417
   * Goal 21. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 290
   * Goal 22. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 618
   * Goal 23. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 24. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 623
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 688
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 689
   * Goal 27. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 626
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 690
   * Goal 29. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 691
   * Goal 31. org.apache.commons.math.util.MathUtils.sinh(D)D: Line 1464
   * Goal 32. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 376
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 696
   * Goal 34. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 35. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 37. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true
   * Goal 39. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true
   * Goal 40. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true
   * Goal 41. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - true
   * Goal 42. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 43. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true
   * Goal 44. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - true
   * Goal 45. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true
   * Goal 46. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - true
   * Goal 47. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - true
   * Goal 48. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I25 Branch 21 IF_ICMPNE L275 - true
   * Goal 49. org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true
   * Goal 50. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I37 Branch 22 IF_ICMPLE L278 - true
   * Goal 51. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I50 Branch 23 IF_ICMPGE L281 - true
   * Goal 52. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 24 IF_ICMPGT L286 - true
   * Goal 53. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false
   * Goal 54. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 55. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false
   * Goal 56. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false
   * Goal 57. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I20 Branch 20 IF_ICMPEQ L275 - false
   * Goal 58. org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false
   * Goal 59. Weak Mutation 549: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> %
   * Goal 60. Weak Mutation 550: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> -
   * Goal 61. Weak Mutation 551: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> *
   * Goal 62. Weak Mutation 552: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> /
   * Goal 63. Weak Mutation 2651: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> +
   * Goal 64. Weak Mutation 2652: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> %
   * Goal 65. Weak Mutation 2653: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> *
   * Goal 66. Weak Mutation 2654: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> /
   * Goal 67. Weak Mutation 2659: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> +
   * Goal 68. Weak Mutation 2660: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> %
   * Goal 69. Weak Mutation 2661: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> -
   * Goal 70. Weak Mutation 2662: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> *
   * Goal 71. Weak Mutation 3226: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> -1
   * Goal 72. Weak Mutation 3227: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> >
   * Goal 73. Weak Mutation 3237: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> +
   * Goal 74. Weak Mutation 3238: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> %
   * Goal 75. Weak Mutation 3239: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> *
   * Goal 76. Weak Mutation 3240: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> /
   * Goal 77. Weak Mutation 3256: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> +
   * Goal 78. Weak Mutation 3257: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> %
   * Goal 79. Weak Mutation 3258: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> -
   * Goal 80. Weak Mutation 3259: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> /
   * Goal 81. Weak Mutation 3260: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> %
   * Goal 82. Weak Mutation 3261: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> -
   * Goal 83. Weak Mutation 3262: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> *
   * Goal 84. Weak Mutation 3263: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> /
   * Goal 85. Weak Mutation 1226: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:618 - ReplaceComparisonOperator >= -> ==
   * Goal 86. Weak Mutation 1241: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:623 - ReplaceComparisonOperator >= -> ==
   * Goal 87. Weak Mutation 1253: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:626 - ReplaceArithmeticOperator + -> %
   * Goal 88. Weak Mutation 1255: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:626 - ReplaceArithmeticOperator + -> *
   * Goal 89. Weak Mutation 1256: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:626 - ReplaceArithmeticOperator + -> /
   * Goal 90. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> ==
   * Goal 91. Weak Mutation 1276: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> ==
   * Goal 92. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 93. Weak Mutation 1294: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> !=
   * Goal 94. Weak Mutation 1295: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> -2
   * Goal 95. Weak Mutation 1296: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> >=
   * Goal 96. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 97. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> %
   * Goal 98. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> -
   * Goal 99. Weak Mutation 1307: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> *
   * Goal 100. Weak Mutation 1308: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> /
   * Goal 101. Weak Mutation 1329: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> -2
   * Goal 102. Weak Mutation 1353: org.apache.commons.math.util.MathUtils.gcd(II)I:691 - ReplaceComparisonOperator == -> >=
   * Goal 103. Weak Mutation 1367: org.apache.commons.math.util.MathUtils.gcd(II)I:691 - ReplaceComparisonOperator != -> <
   * Goal 104. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 105. Weak Mutation 874: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> >
   * Goal 106. Weak Mutation 1395: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> %
   * Goal 107. Weak Mutation 1396: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> -
   * Goal 108. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 109. Weak Mutation 991: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> <
   * Goal 110. Weak Mutation 388: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> >=
   * Goal 111. Weak Mutation 396: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator != -> >
   * Goal 112. Weak Mutation 405: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator == -> !=
   * Goal 113. Weak Mutation 415: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> +
   * Goal 114. Weak Mutation 416: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> %
   * Goal 115. Weak Mutation 417: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> *
   * Goal 116. Weak Mutation 418: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> /
   * Goal 117. Weak Mutation 421: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator != -> >
   * Goal 118. Weak Mutation 438: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> +
   * Goal 119. Weak Mutation 440: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> -
   * Goal 120. Weak Mutation 444: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceComparisonOperator <= -> ==
   * Goal 121. Weak Mutation 439: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> %
   * Goal 122. Weak Mutation 441: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> *
   * Goal 123. Weak Mutation 472: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:281 - ReplaceComparisonOperator >= -> ==
   * Goal 124. Weak Mutation 496: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:286 - ReplaceComparisonOperator > -> -2
   * Goal 125. Weak Mutation 1398: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> /
   * Goal 126. org.apache.commons.math.util.MathUtils.sinh(D)D:positive
   * Goal 127. org.apache.commons.math.util.MathUtils.equals(DD)Z:false
   * Goal 128. org.apache.commons.math.util.MathUtils.factorialDouble(I)D:positive
   * Goal 129. org.apache.commons.math.util.MathUtils.distance([D[D)D:positive
   * Goal 130. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   * Goal 131. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   * Goal 132. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 133. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 134. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 135. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 136. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 137. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 138. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 139. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 140. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 141. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 142. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 143. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 144. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 145. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 146. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 147. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 148. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 149. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 150. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 151. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 152. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 153. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 154. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 155. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 156. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 157. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I20 Branch 20 IF_ICMPEQ L275 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 158. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I37 Branch 22 IF_ICMPLE L278 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 159. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I25 Branch 21 IF_ICMPNE L275 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 160. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 161. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 24 IF_ICMPGT L286 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 162. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I50 Branch 23 IF_ICMPGE L281 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 163. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 164. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 165. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 166. equals(DDI)Z_java.lang.AssertionError_EXPLICIT
   * Goal 167. Weak Mutation 1397: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> *
   */

  @Test
  public void test050()  throws Throwable  {
      int int0 = MathUtils.gcd(0, (-2708));
      double double0 = MathUtils.factorialDouble(100);
      double double1 = MathUtils.sinh(1.0);
      double double2 = MathUtils.binomialCoefficientDouble(2708, (-1545));
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) (-2708);
      doubleArray0[2] = (double) 2708;
      doubleArray0[3] = (double) 100;
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) (-1545);
      doubleArray1[1] = (double) 2708;
      doubleArray1[2] = (double) (-2708);
      doubleArray1[3] = 1.0;
      doubleArray1[4] = 1.1752011936438014;
      doubleArray1[5] = 9.332621544395286E157;
      double double3 = MathUtils.distance(doubleArray0, doubleArray1);
      boolean boolean0 = MathUtils.equals(0.0, 100.0);
      // Undeclared exception!
      try { 
        MathUtils.equals((double) 2708, (double) (-1545), 0);
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 51
  /*
   * 34 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false
   * Goal 7. Weak Mutation 2833: org.apache.commons.math.util.MathUtils.pow(IJ)I:1551 - ReplaceComparisonOperator >= -> ==
   * Goal 8. Weak Mutation 2851: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> -2
   * Goal 9. Weak Mutation 2852: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> >=
   * Goal 10. Weak Mutation 2859: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> ^
   * Goal 11. Weak Mutation 2863: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> >=
   * Goal 12. Weak Mutation 2875: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> +
   * Goal 13. Weak Mutation 2876: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> %
   * Goal 14. Weak Mutation 2877: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> -
   * Goal 15. Weak Mutation 2878: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> /
   * Goal 16. Weak Mutation 2889: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> +
   * Goal 17. Weak Mutation 2890: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> %
   * Goal 18. Weak Mutation 2891: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> -
   * Goal 19. Weak Mutation 2892: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> /
   * Goal 20. Weak Mutation 2895: org.apache.commons.math.util.MathUtils.pow(IJ)I:1564 - ReplaceBitwiseOperator >> -> <<
   * Goal 21. Weak Mutation 2858: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> |
   * Goal 22. Weak Mutation 2862: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> -2
   * Goal 23. Weak Mutation 3391: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> >
   * Goal 24. org.apache.commons.math.util.MathUtils.pow(IJ)I:negative
   * Goal 25. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 26. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 27. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 28. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 30. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 31. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 32. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 33. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 34. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   */

  @Test
  public void test051()  throws Throwable  {
      int int0 = MathUtils.pow(2169, (long) 2169);
      double[] doubleArray0 = new double[1];
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.DECREASING;
      MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, false);
  }

  //Test case number: 52
  /*
   * 110 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1089
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1611
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 142
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1617
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1618
   * Goal 7. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1619
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1620
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1621
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1623
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1624
   * Goal 12. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1049
   * Goal 13. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1050
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1627
   * Goal 15. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1054
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1055
   * Goal 17. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 159
   * Goal 18. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 160
   * Goal 19. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1057
   * Goal 20. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1058
   * Goal 21. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 166
   * Goal 22. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1581
   * Goal 23. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1582
   * Goal 24. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1781
   * Goal 25. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1782
   * Goal 26. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1783
   * Goal 27. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: Line 120
   * Goal 28. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1785
   * Goal 29. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 30. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true
   * Goal 35. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true
   * Goal 37. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false
   * Goal 41. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I37 Branch 130 IFLT L1057 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - false
   * Goal 44. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false
   * Goal 45. Weak Mutation 51: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> <
   * Goal 46. Weak Mutation 62: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> >
   * Goal 47. Weak Mutation 122: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> %
   * Goal 48. Weak Mutation 124: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> /
   * Goal 49. Weak Mutation 126: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceComparisonOperator > -> !=
   * Goal 50. Weak Mutation 132: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> %
   * Goal 51. Weak Mutation 135: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> /
   * Goal 52. Weak Mutation 3324: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> -1
   * Goal 53. Weak Mutation 3325: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> >
   * Goal 54. Weak Mutation 3340: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> %
   * Goal 55. Weak Mutation 3342: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> /
   * Goal 56. Weak Mutation 2905: org.apache.commons.math.util.MathUtils.pow(JI)J:1581 - ReplaceComparisonOperator >= -> -1
   * Goal 57. Weak Mutation 2970: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> ==
   * Goal 58. Weak Mutation 2994: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> -2
   * Goal 59. Weak Mutation 1971: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> <
   * Goal 60. Weak Mutation 2995: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> >=
   * Goal 61. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 62. Weak Mutation 3004: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> |
   * Goal 63. Weak Mutation 3005: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> ^
   * Goal 64. Weak Mutation 3008: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> -2
   * Goal 65. Weak Mutation 3009: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> >=
   * Goal 66. Weak Mutation 1987: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> -1
   * Goal 67. Weak Mutation 3019: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> +
   * Goal 68. Weak Mutation 1999: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> +
   * Goal 69. Weak Mutation 2000: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> %
   * Goal 70. Weak Mutation 2001: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> -
   * Goal 71. Weak Mutation 2002: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> *
   * Goal 72. Weak Mutation 2004: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceComparisonOperator < -> !=
   * Goal 73. Weak Mutation 2010: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> +
   * Goal 74. Weak Mutation 2011: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> %
   * Goal 75. Weak Mutation 2012: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> -
   * Goal 76. Weak Mutation 2013: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> /
   * Goal 77. Weak Mutation 3020: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> %
   * Goal 78. Weak Mutation 3022: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> /
   * Goal 79. Weak Mutation 3032: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> %
   * Goal 80. Weak Mutation 3034: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> /
   * Goal 81. Weak Mutation 3040: org.apache.commons.math.util.MathUtils.pow(JJ)J:1624 - ReplaceBitwiseOperator >> -> <<
   * Goal 82. Weak Mutation 3031: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> +
   * Goal 83. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J:zero
   * Goal 84. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:zero
   * Goal 85. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:positive
   * Goal 86. org.apache.commons.math.util.MathUtils.pow(JJ)J:zero
   * Goal 87. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 88. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 89. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 90. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 91. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 92. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 93. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 94. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 95. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch in context: org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 98. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 100. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 101. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 102. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 103. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 104. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I37 Branch 130 IFLT L1057 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 105. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 106. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 107. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 108. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 109. pow(JI)J_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   * Goal 110. Weak Mutation 3021: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> -
   */

  @Test
  public void test052()  throws Throwable  {
      long long0 = MathUtils.mulAndCheck((-499L), (-499L));
      long long1 = MathUtils.pow(4503599627370496L, 249001L);
      long long2 = MathUtils.addAndCheck(0L, 0L);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 0L;
      double double0 = MathUtils.distanceInf(doubleArray0, doubleArray0);
      try { 
        MathUtils.pow(6L, (-1616));
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (6^-1,616)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 53
  /*
   * 80 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1408
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 14. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I84 Branch 216 IFLE L1845 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I84 Branch 216 IFLE L1845 - true
   * Goal 26. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 28. Weak Mutation 872: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> -1
   * Goal 29. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 30. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 31. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 32. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 33. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   * Goal 34. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 35. Weak Mutation 1340: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> >
   * Goal 36. Weak Mutation 1421: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> ==
   * Goal 37. Weak Mutation 1331: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> <=
   * Goal 38. Weak Mutation 1406: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> ==
   * Goal 39. Weak Mutation 3426: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1840 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 3447: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1845 - ReplaceComparisonOperator <= -> -1
   * Goal 41. Weak Mutation 3448: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1845 - ReplaceComparisonOperator <= -> ==
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   * Goal 43. org.apache.commons.math.util.MathUtils.equals(DD)Z:true
   * Goal 44. org.apache.commons.math.util.MathUtils.sign(F)F:positive
   * Goal 45. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 46. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 47. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 48. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 49. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 50. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 51. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 52. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 53. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 54. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 55. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 56. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 57. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 58. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 59. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 60. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 61. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 62. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 63. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 64. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 65. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 66. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 67. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 68. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 69. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 70. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 71. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I84 Branch 216 IFLE L1845 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 72. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 73. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 75. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I84 Branch 216 IFLE L1845 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 76. checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V_org.apache.commons.math.exception.MathIllegalNumberException_EXPLICIT
   * Goal 77. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - false
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - false in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 79. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1845
   * Goal 80. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1846
   */

  @Test
  public void test053()  throws Throwable  {
      boolean boolean0 = MathUtils.equals((-278.0), (-278.0));
      float float0 = MathUtils.sign(Float.NaN);
      int int0 = MathUtils.gcd((-4449), (-2045));
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-278.0);
      doubleArray0[1] = (double) (-2045);
      doubleArray0[2] = (double) Float.NaN;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) Float.NaN;
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.DECREASING;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, false);
      } catch(IllegalArgumentException e) {
         //
         // points 1 and 2 are not decreasing (-2,045 < \uFFFD)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 54
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: Line 1641
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - false
   * Goal 3. Weak Mutation 3049: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;:1641 - ReplaceComparisonOperator >= -> -1
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 6. pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   */

  @Test
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte) (-76);
      byteArray0[2] = (byte)78;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      int int0 = bigInteger0.intValue();
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      BigInteger bigInteger2 = bigInteger0.xor(bigInteger1);
      BigInteger bigInteger3 = bigInteger0.shiftLeft(59);
      try { 
        MathUtils.pow(bigInteger0, (int) (byte) (-76));
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (5,485,646^-76)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 55
  /*
   * 66 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I26 Branch 5 IFGE L143 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - true
   * Goal 21. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 22. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 23. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 24. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 25. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 26. Weak Mutation 60: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 28. Weak Mutation 49: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> -1
   * Goal 29. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 30. Weak Mutation 2714: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> >
   * Goal 31. Weak Mutation 1331: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> <=
   * Goal 32. Weak Mutation 1406: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> ==
   * Goal 33. Weak Mutation 68: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> ==
   * Goal 34. Weak Mutation 109: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> -
   * Goal 35. Weak Mutation 110: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> *
   * Goal 36. Weak Mutation 111: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> /
   * Goal 37. Weak Mutation 2611: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator != -> >
   * Goal 38. Weak Mutation 2618: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator <= -> ==
   * Goal 39. Weak Mutation 69: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> >
   * Goal 40. Weak Mutation 108: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> %
   * Goal 41. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:negative
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   * Goal 43. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:zero
   * Goal 44. org.apache.commons.math.util.MathUtils.sign(J)J:negative
   * Goal 45. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 46. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 47. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 48. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 49. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 50. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 51. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 52. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 53. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 54. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 55. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 56. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 57. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 58. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 59. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 60. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 61. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 62. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 63. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 64. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 65. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 66. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   */

  @Test
  public void test055()  throws Throwable  {
      long long0 = MathUtils.subAndCheck(362880L, 362880L);
      int int0 = MathUtils.gcd((int) (short) (-1053), 13);
      long long1 = MathUtils.subAndCheck(0L, 362880L);
      long long2 = MathUtils.sign((-1670L));
  }

  //Test case number: 56
  /*
   * 92 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 196
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 199
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 203
   * Goal 5. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 271
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 272
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 211
   * Goal 9. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 275
   * Goal 11. org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch
   * Goal 12. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I70 Branch 14 IF_ICMPGT L215 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false
   * Goal 23. Weak Mutation 166: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> >=
   * Goal 24. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 25. Weak Mutation 838: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> %
   * Goal 26. Weak Mutation 841: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> /
   * Goal 27. Weak Mutation 847: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> %
   * Goal 28. Weak Mutation 174: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator != -> >
   * Goal 29. Weak Mutation 183: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator == -> !=
   * Goal 30. Weak Mutation 193: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> +
   * Goal 31. Weak Mutation 194: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> %
   * Goal 32. Weak Mutation 195: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> *
   * Goal 33. Weak Mutation 196: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> /
   * Goal 34. Weak Mutation 199: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator != -> >
   * Goal 35. Weak Mutation 216: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> +
   * Goal 36. Weak Mutation 218: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> -
   * Goal 37. Weak Mutation 222: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceComparisonOperator <= -> ==
   * Goal 38. Weak Mutation 251: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:212 - ReplaceComparisonOperator > -> !=
   * Goal 39. Weak Mutation 262: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> +
   * Goal 40. Weak Mutation 263: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> %
   * Goal 41. Weak Mutation 264: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> *
   * Goal 42. Weak Mutation 265: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> /
   * Goal 43. Weak Mutation 267: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> %
   * Goal 44. Weak Mutation 268: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> -
   * Goal 45. Weak Mutation 269: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> *
   * Goal 46. Weak Mutation 270: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> /
   * Goal 47. Weak Mutation 285: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:215 - ReplaceComparisonOperator > -> -2
   * Goal 48. Weak Mutation 786: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> >
   * Goal 49. Weak Mutation 3324: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> -1
   * Goal 50. Weak Mutation 3325: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> >
   * Goal 51. Weak Mutation 3339: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> +
   * Goal 52. Weak Mutation 3341: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> *
   * Goal 53. Weak Mutation 3342: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> /
   * Goal 54. Weak Mutation 3340: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> %
   * Goal 55. org.apache.commons.math.util.MathUtils.cosh(D)D:positive
   * Goal 56. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   * Goal 57. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 58. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 59. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 60. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 61. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 62. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 63. Branch org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:cosh(D)D
   * Goal 64. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 65. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 66. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 67. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 68. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false
   * Goal 69. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - true
   * Goal 70. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I20 Branch 20 IF_ICMPEQ L275 - false
   * Goal 71. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I25 Branch 21 IF_ICMPNE L275 - true
   * Goal 72. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I37 Branch 22 IF_ICMPLE L278 - true
   * Goal 73. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I50 Branch 23 IF_ICMPGE L281 - false
   * Goal 74. Weak Mutation 388: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> >=
   * Goal 75. Weak Mutation 396: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator != -> >
   * Goal 76. Weak Mutation 405: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator == -> !=
   * Goal 77. Weak Mutation 415: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> +
   * Goal 78. Weak Mutation 416: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> %
   * Goal 79. Weak Mutation 417: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> *
   * Goal 80. Weak Mutation 418: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> /
   * Goal 81. Weak Mutation 421: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator != -> >
   * Goal 82. Weak Mutation 438: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> +
   * Goal 83. Weak Mutation 440: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> -
   * Goal 84. Weak Mutation 444: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceComparisonOperator <= -> ==
   * Goal 85. Weak Mutation 470: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:281 - ReplaceComparisonOperator >= -> -1
   * Goal 86. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:positive
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I20 Branch 20 IF_ICMPEQ L275 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I37 Branch 22 IF_ICMPLE L278 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I25 Branch 21 IF_ICMPNE L275 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I50 Branch 23 IF_ICMPGE L281 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   */

  @Test
  public void test056()  throws Throwable  {
      double double0 = MathUtils.cosh(2674.069572137842);
      double double1 = MathUtils.binomialCoefficientDouble(0, (-135));
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = Double.POSITIVE_INFINITY;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) (-135);
      doubleArray0[6] = 182.06;
      doubleArray0[7] = Double.POSITIVE_INFINITY;
      double double2 = MathUtils.distanceInf(doubleArray0, doubleArray0);
  }

  //Test case number: 57
  /*
   * 48 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I223 Branch 227 IFLT L1976 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - false
   * Goal 13. Weak Mutation 3498: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> +
   * Goal 14. Weak Mutation 3499: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> %
   * Goal 15. Weak Mutation 3500: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> -
   * Goal 16. Weak Mutation 3501: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> *
   * Goal 17. Weak Mutation 3506: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> -1
   * Goal 18. Weak Mutation 3507: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> >
   * Goal 19. Weak Mutation 3538: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> -2
   * Goal 20. Weak Mutation 3539: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> !=
   * Goal 21. Weak Mutation 3568: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator <= -> ==
   * Goal 22. Weak Mutation 3597: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1944 - ReplaceComparisonOperator <= -> ==
   * Goal 23. Weak Mutation 3324: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 3325: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 3339: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> +
   * Goal 26. Weak Mutation 3341: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> *
   * Goal 27. Weak Mutation 3342: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> /
   * Goal 28. org.apache.commons.math.util.MathUtils.safeNorm([D)D:positive
   * Goal 29. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:zero
   * Goal 30. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 31. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 32. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 33. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 34. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 35. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 37. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 38. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 39. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 40. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I223 Branch 227 IFLT L1976 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 41. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 42. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 43. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 45. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 46. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1956
   * Goal 47. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1957
   * Goal 48. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1958
   */

  @Test
  public void test057()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-3446.4752);
      doubleArray0[1] = 2.2250738585072014E-308;
      doubleArray0[2] = 4306.3;
      double double0 = MathUtils.safeNorm(doubleArray0);
      double double1 = MathUtils.distanceInf(doubleArray0, doubleArray0);
  }

  //Test case number: 58
  /*
   * 116 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 417
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 5. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 389
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 486
   * Goal 7. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 390
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 489
   * Goal 10. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1225
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 12. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1389
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 14. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 15. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 271
   * Goal 16. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1392
   * Goal 17. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 272
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch
   * Goal 31. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true
   * Goal 37. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - true
   * Goal 39. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 40. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 41. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 42. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 43. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 44. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 45. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 46. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 47. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 48. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 49. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 50. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 51. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 52. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 53. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 54. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 55. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 56. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 57. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 58. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 59. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 60. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 61. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 62. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 63. Weak Mutation 838: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> %
   * Goal 64. Weak Mutation 839: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> -
   * Goal 65. Weak Mutation 840: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> *
   * Goal 66. Weak Mutation 841: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> /
   * Goal 67. Weak Mutation 847: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> %
   * Goal 68. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 69. Weak Mutation 872: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> -1
   * Goal 70. Weak Mutation 768: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> >
   * Goal 71. Weak Mutation 786: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> >
   * Goal 72. Weak Mutation 2532: org.apache.commons.math.util.MathUtils.sign(D)D:1389 - ReplaceComparisonOperator == -> !=
   * Goal 73. org.apache.commons.math.util.MathUtils.cosh(D)D:positive
   * Goal 74. org.apache.commons.math.util.MathUtils.equals(DD)Z:true
   * Goal 75. org.apache.commons.math.util.MathUtils.equals(DDI)Z:false
   * Goal 76. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:zero
   * Goal 77. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 78. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 79. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 80. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 81. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 82. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 83. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 84. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 85. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 86. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 87. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 88. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:cosh(D)D
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 98. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 100. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 101. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 102. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 103. round(DII)D_java.lang.IllegalArgumentException_IMPLICIT
   * Goal 104. org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - true
   * Goal 105. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - true
   * Goal 106. Weak Mutation 387: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> -2
   * Goal 107. Weak Mutation 2545: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator != -> >
   * Goal 108. Weak Mutation 2555: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator <= -> ==
   * Goal 109. org.apache.commons.math.util.MathUtils.round(DII)D:zero
   * Goal 110. org.apache.commons.math.util.MathUtils.sign(D)D:negative
   * Goal 111. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   * Goal 112. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 113. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 114. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 115. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 116. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   */

  @Test
  public void test058()  throws Throwable  {
      double double0 = MathUtils.cosh((-2765.0));
      int int0 = MathUtils.compareTo((-2765.0), (-2765.0), 3.141592653589793);
      double double1 = MathUtils.round(0.0, 0, 0);
      boolean boolean0 = MathUtils.equals((-1408.9673575475997), 0.0, 10);
      double double2 = MathUtils.binomialCoefficientDouble(0, 0);
      boolean boolean1 = MathUtils.equals((double) 0, 0.0);
      double double3 = MathUtils.sign((-4.503599627370496E15));
      // Undeclared exception!
      try { 
        MathUtils.round((-470.6517166), 0, 10);
      } catch(IllegalArgumentException e) {
         //
         // Invalid rounding mode
         //
         assertThrownBy("java.math.BigDecimal", e);
      }
  }

  //Test case number: 59
  /*
   * 4 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1225
   * Goal 2. org.apache.commons.math.util.MathUtils.round(DII)D:zero
   * Goal 3. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 4. org.apache.commons.math.util.MathUtils.round(DII)D
   */

  @Test
  public void test059()  throws Throwable  {
      double double0 = MathUtils.round(0.0, 0, 0);
      // Undeclared exception!
      try { 
        MathUtils.OrderDirection.valueOf("ROUND_HALF_UP");
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.apache.commons.math.util.MathUtils.OrderDirection.ROUND_HALF_UP
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  //Test case number: 60
  /*
   * 58 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1856
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1825
   * Goal 3. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1826
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1858
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 11. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I41 Branch 212 IFGT L1830 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I41 Branch 212 IFGT L1830 - true
   * Goal 19. Weak Mutation 2924: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> -2
   * Goal 20. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 21. Weak Mutation 3397: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1829 - ReplaceComparisonOperator == -> !=
   * Goal 22. Weak Mutation 3407: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1830 - ReplaceComparisonOperator > -> !=
   * Goal 23. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   * Goal 24. Weak Mutation 2906: org.apache.commons.math.util.MathUtils.pow(JI)J:1581 - ReplaceComparisonOperator >= -> ==
   * Goal 25. Weak Mutation 2925: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> >=
   * Goal 26. Weak Mutation 2931: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> |
   * Goal 27. Weak Mutation 2932: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> ^
   * Goal 28. Weak Mutation 2933: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> -2
   * Goal 29. Weak Mutation 2934: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> >=
   * Goal 30. Weak Mutation 2942: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> +
   * Goal 31. Weak Mutation 2943: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> %
   * Goal 32. Weak Mutation 2944: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> -
   * Goal 33. Weak Mutation 2945: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> /
   * Goal 34. Weak Mutation 2952: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> +
   * Goal 35. Weak Mutation 2953: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> %
   * Goal 36. Weak Mutation 2954: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> -
   * Goal 37. Weak Mutation 2955: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> /
   * Goal 38. Weak Mutation 2960: org.apache.commons.math.util.MathUtils.pow(JI)J:1594 - ReplaceBitwiseOperator >> -> <<
   * Goal 39. Weak Mutation 3406: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1830 - ReplaceComparisonOperator > -> -2
   * Goal 40. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 41. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 42. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 43. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 45. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 46. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 47. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 48. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 49. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 50. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 51. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 52. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 53. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 54. checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V_org.apache.commons.math.exception.MathIllegalNumberException_EXPLICIT
   * Goal 55. org.apache.commons.math.util.MathUtils.pow(JI)J:negative
   * Goal 56. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 57. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I41 Branch 212 IFGT L1830 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 58. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I41 Branch 212 IFGT L1830 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   */

  @Test
  public void test060()  throws Throwable  {
      long long0 = MathUtils.pow((-5034868814120038111L), 6);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) (-4506542490718707007L);
      doubleArray0[1] = (double) 6;
      doubleArray0[2] = 0.875;
      doubleArray0[3] = (double) (-5034868814120038111L);
      doubleArray0[4] = (double) (-4506542490718707007L);
      doubleArray0[5] = (double) (-5034868814120038111L);
      doubleArray0[6] = (double) (-5034868814120038111L);
      doubleArray0[7] = (double) (-5034868814120038111L);
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.INCREASING;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, true);
      } catch(IllegalArgumentException e) {
         //
         // points 1 and 2 are not strictly increasing (6 >= 0.875)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 61
  /*
   * 43 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1089
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false
   * Goal 11. Weak Mutation 1981: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> ==
   * Goal 12. Weak Mutation 2924: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> -2
   * Goal 13. Weak Mutation 2906: org.apache.commons.math.util.MathUtils.pow(JI)J:1581 - ReplaceComparisonOperator >= -> ==
   * Goal 14. Weak Mutation 2925: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> >=
   * Goal 15. Weak Mutation 2931: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> |
   * Goal 16. Weak Mutation 2932: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> ^
   * Goal 17. Weak Mutation 2933: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> -2
   * Goal 18. Weak Mutation 2934: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> >=
   * Goal 19. Weak Mutation 2942: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> +
   * Goal 20. Weak Mutation 2943: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> %
   * Goal 21. Weak Mutation 2944: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> -
   * Goal 22. Weak Mutation 2945: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> /
   * Goal 23. Weak Mutation 2952: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> +
   * Goal 24. Weak Mutation 2953: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> %
   * Goal 25. Weak Mutation 2954: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> -
   * Goal 26. Weak Mutation 2955: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> /
   * Goal 27. Weak Mutation 2960: org.apache.commons.math.util.MathUtils.pow(JI)J:1594 - ReplaceBitwiseOperator >> -> <<
   * Goal 28. Weak Mutation 1971: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> <
   * Goal 29. org.apache.commons.math.util.MathUtils.pow(JI)J:negative
   * Goal 30. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:positive
   * Goal 31. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 32. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 33. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 34. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 35. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 37. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 38. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 39. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 40. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 41. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 42. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 43. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   */

  @Test
  public void test061()  throws Throwable  {
      long long0 = MathUtils.mulAndCheck(72L, 72L);
      long long1 = MathUtils.pow(72L, 18);
  }

  //Test case number: 62
  /*
   * 38 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 6. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 20. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 21. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 22. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 23. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 24. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 25. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 26. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 28. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 29. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 30. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 31. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 32. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 33. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 34. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:true
   * Goal 35. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 36. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 37. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 38. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   */

  @Test
  public void test062()  throws Throwable  {
      boolean boolean0 = MathUtils.equalsIncludingNaN(3027.936794542768, 3027.936794542768);
  }

  //Test case number: 63
  /*
   * 32 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 13. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 14. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 15. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 17. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 18. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 19. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 20. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 21. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 22. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 23. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 24. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 25. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 26. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 27. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 28. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 29. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 30. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:true
   * Goal 32. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   */

  @Test
  public void test063()  throws Throwable  {
      boolean boolean0 = MathUtils.equalsIncludingNaN(6.283185307179586, 6.283185307179586, 6.283185307179586);
  }

  //Test case number: 64
  /*
   * 44 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 417
   * Goal 2. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: Line 1139
   * Goal 3. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 952
   * Goal 4. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 953
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch
   * Goal 8. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 9. Weak Mutation 873: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> <
   * Goal 10. Weak Mutation 2140: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> %
   * Goal 11. Weak Mutation 2141: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> -
   * Goal 12. Weak Mutation 2142: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> *
   * Goal 13. Weak Mutation 2143: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> /
   * Goal 14. Weak Mutation 2149: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> +
   * Goal 15. Weak Mutation 2150: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 16. Weak Mutation 2151: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> *
   * Goal 17. Weak Mutation 2152: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 18. Weak Mutation 2158: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> +
   * Goal 19. Weak Mutation 2159: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> %
   * Goal 20. Weak Mutation 2160: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> -
   * Goal 21. Weak Mutation 2161: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> *
   * Goal 22. Weak Mutation 2162: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> +
   * Goal 23. Weak Mutation 2163: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> %
   * Goal 24. Weak Mutation 2164: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> -
   * Goal 25. Weak Mutation 2165: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> /
   * Goal 26. Weak Mutation 2166: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> +
   * Goal 27. Weak Mutation 2167: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 28. Weak Mutation 2168: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> *
   * Goal 29. Weak Mutation 2169: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 30. org.apache.commons.math.util.MathUtils.equals(DD)Z:false
   * Goal 31. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:positive
   * Goal 32. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 33. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 34. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 35. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 36. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 37. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 38. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 39. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 40. Branch org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:normalizeAngle(DD)D
   * Goal 41. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - true
   * Goal 42. Weak Mutation 1802: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> -2
   * Goal 43. org.apache.commons.math.util.MathUtils.lcm(II)I:zero
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   */

  @Test
  public void test064()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(6.123233995736766E-17, 0.0);
      double double0 = MathUtils.normalizeAngle(6.123233995736766E-17, 2367.233263065);
      int int0 = MathUtils.lcm(0, 2986);
  }

  //Test case number: 65
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 594
   * Goal 2. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 5. Weak Mutation 1803: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> >=
   * Goal 6. Weak Mutation 1202: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> >
   * Goal 7. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> ==
   * Goal 8. org.apache.commons.math.util.MathUtils.factorial(I)J:positive
   * Goal 9. org.apache.commons.math.util.MathUtils.lcm(II)I:zero
   * Goal 10. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 11. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 12. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 13. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 17. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - false
   * Goal 18. Weak Mutation 1809: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator != -> -1
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   */

  @Test
  public void test065()  throws Throwable  {
      int int0 = MathUtils.lcm(21, 0);
      long long0 = MathUtils.factorial(0);
  }

  //Test case number: 66
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 4. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 5. Weak Mutation 990: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> ==
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 9. equals(DDI)Z_java.lang.AssertionError_EXPLICIT
   */

  @Test
  public void test066()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.equals(55.2, 55.2, (-1899));
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 67
  /*
   * 84 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1283
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 138
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 142
   * Goal 5. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1359
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 143
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 152
   * Goal 8. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1497
   * Goal 9. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1498
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 11. org.apache.commons.math.util.MathUtils.round(FI)F: Line 1248
   * Goal 12. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1506
   * Goal 13. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1508
   * Goal 14. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 166
   * Goal 15. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1264
   * Goal 16. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1329
   * Goal 17. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1265
   * Goal 18. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1330
   * Goal 19. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1266
   * Goal 20. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1331
   * Goal 21. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1334
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 27. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 38. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - true
   * Goal 39. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 40. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - false
   * Goal 41. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 42. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I26 Branch 5 IFGE L143 - true
   * Goal 44. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 45. Weak Mutation 1086: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:509 - ReplaceComparisonOperator == -> !=
   * Goal 46. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 48. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 49. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 50. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 51. Weak Mutation 2337: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> -
   * Goal 52. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 53. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 54. Weak Mutation 60: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> -1
   * Goal 55. Weak Mutation 1759: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> <=
   * Goal 56. Weak Mutation 49: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> -1
   * Goal 57. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 58. Weak Mutation 2714: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> >
   * Goal 59. Weak Mutation 68: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> ==
   * Goal 60. Weak Mutation 109: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> -
   * Goal 61. Weak Mutation 110: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> *
   * Goal 62. Weak Mutation 111: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> /
   * Goal 63. org.apache.commons.math.util.MathUtils.round(FI)F:zero
   * Goal 64. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:zero
   * Goal 65. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z
   * Goal 66. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 67. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 68. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 69. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 70. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDI)Z
   * Goal 71. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 72. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true in context: 
   * Goal 73. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - true in context: 
   * Goal 75. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 76. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 81. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 83. equalsIncludingNaN(DDI)Z_java.lang.AssertionError_EXPLICIT
   * Goal 84. Weak Mutation 991: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> <
   */

  @Test
  public void test067()  throws Throwable  {
      long long0 = MathUtils.subAndCheck(3899L, 3899L);
      float float0 = MathUtils.round((float) 0L, 0);
      // Undeclared exception!
      try { 
        MathUtils.equalsIncludingNaN((double) 0L, (double) 3899L, 0);
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 68
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 585
   * Goal 2. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 586
   * Goal 3. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 4. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - false
   * Goal 5. Weak Mutation 1200: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> -1
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - false in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 7. factorial(I)J_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   */

  @Test
  public void test068()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.factorial((-1128));
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for n!, got n = -1,128
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 69
  /*
   * 46 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1392
   * Goal 2. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1719
   * Goal 3. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1720
   * Goal 4. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1721
   * Goal 5. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1723
   * Goal 6. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: Line 509
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1389
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false
   * Goal 16. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 17. Weak Mutation 990: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> ==
   * Goal 18. Weak Mutation 1086: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:509 - ReplaceComparisonOperator == -> !=
   * Goal 19. Weak Mutation 3156: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> -1
   * Goal 20. Weak Mutation 3157: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> >
   * Goal 21. Weak Mutation 3171: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> +
   * Goal 22. Weak Mutation 3173: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> *
   * Goal 23. Weak Mutation 3174: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> /
   * Goal 24. Weak Mutation 3175: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> %
   * Goal 25. Weak Mutation 3178: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> /
   * Goal 26. Weak Mutation 3172: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> %
   * Goal 27. Weak Mutation 2532: org.apache.commons.math.util.MathUtils.sign(D)D:1389 - ReplaceComparisonOperator == -> !=
   * Goal 28. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z
   * Goal 29. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 30. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 31. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 32. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 33. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDI)Z
   * Goal 34. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 35. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 37. equalsIncludingNaN(DDI)Z_java.lang.AssertionError_EXPLICIT
   * Goal 38. org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - false
   * Goal 39. Weak Mutation 2544: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator != -> <
   * Goal 40. Weak Mutation 2554: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator <= -> -1
   * Goal 41. Weak Mutation 3176: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> -
   * Goal 42. Weak Mutation 3177: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> *
   * Goal 43. org.apache.commons.math.util.MathUtils.distance1([D[D)D:positive
   * Goal 44. org.apache.commons.math.util.MathUtils.sign(D)D:positive
   * Goal 45. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 46. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - false in context: org.apache.commons.math.util.MathUtils:sign(D)D
   */

  @Test
  public void test069()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 1.1102230246251565E-16;
      doubleArray0[1] = 1.625;
      doubleArray0[2] = (-539.493315636776);
      doubleArray0[3] = 798.8;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 798.8;
      doubleArray1[1] = (-539.493315636776);
      doubleArray1[2] = 1.625;
      doubleArray1[3] = 2.2250738585072014E-308;
      doubleArray1[4] = (-539.493315636776);
      doubleArray1[5] = 1.625;
      doubleArray1[6] = 1.625;
      doubleArray1[7] = (-416.5651314);
      double double0 = MathUtils.distance1(doubleArray0, doubleArray1);
      double double1 = MathUtils.sign(0.008336750013465571);
      // Undeclared exception!
      try { 
        MathUtils.equalsIncludingNaN((-2814.332103), (-389.0301275892), (-95));
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 70
  /*
   * 79 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1392
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - false
   * Goal 19. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 20. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 21. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 22. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 23. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 24. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 25. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 26. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 27. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 28. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 29. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 30. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 31. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 32. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 33. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 34. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 35. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 36. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 37. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 38. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 39. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 873: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> <
   * Goal 41. Weak Mutation 2532: org.apache.commons.math.util.MathUtils.sign(D)D:1389 - ReplaceComparisonOperator == -> !=
   * Goal 42. Weak Mutation 2544: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator != -> <
   * Goal 43. Weak Mutation 2554: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator <= -> -1
   * Goal 44. org.apache.commons.math.util.MathUtils.equals(DD)Z:false
   * Goal 45. org.apache.commons.math.util.MathUtils.sign(D)D:positive
   * Goal 46. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 47. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 48. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 49. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 50. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 51. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 52. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 53. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 54. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - false in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 55. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true
   * Goal 56. org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - false
   * Goal 57. Weak Mutation 2610: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator != -> <
   * Goal 58. Weak Mutation 2617: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator <= -> -1
   * Goal 59. org.apache.commons.math.util.MathUtils.equals(DDI)Z:true
   * Goal 60. org.apache.commons.math.util.MathUtils.equals(DDI)Z:false
   * Goal 61. org.apache.commons.math.util.MathUtils.sign(J)J:positive
   * Goal 62. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 63. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 64. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 65. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 66. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 67. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 68. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 69. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 70. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 71. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 72. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 73. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 75. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 76. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - false in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   */

  @Test
  public void test070()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(0.0, 0.0, 2889);
      boolean boolean1 = MathUtils.equals(0.5, (-2664.15181));
      boolean boolean2 = MathUtils.equals(1.3245471311735498E-8, (-2664.15181), 2889);
      long long0 = MathUtils.sign(4398046511103L);
      double double0 = MathUtils.sign(3489.73512);
  }

  //Test case number: 71
  /*
   * 52 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1225
   * Goal 2. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false
   * Goal 10. Weak Mutation 2063: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator != -> ==
   * Goal 11. Weak Mutation 2068: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> !=
   * Goal 12. Weak Mutation 2083: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> |
   * Goal 13. Weak Mutation 2084: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> ^
   * Goal 14. Weak Mutation 2092: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> |
   * Goal 15. Weak Mutation 2093: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> ^
   * Goal 16. Weak Mutation 2108: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>
   * Goal 17. Weak Mutation 2109: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>>
   * Goal 18. Weak Mutation 2110: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> %
   * Goal 19. Weak Mutation 2111: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> -
   * Goal 20. Weak Mutation 2112: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> *
   * Goal 21. Weak Mutation 2113: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> /
   * Goal 22. Weak Mutation 2115: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator | -> &
   * Goal 23. Weak Mutation 2924: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> -2
   * Goal 24. Weak Mutation 2906: org.apache.commons.math.util.MathUtils.pow(JI)J:1581 - ReplaceComparisonOperator >= -> ==
   * Goal 25. Weak Mutation 2925: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> >=
   * Goal 26. Weak Mutation 2931: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> |
   * Goal 27. Weak Mutation 2932: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> ^
   * Goal 28. Weak Mutation 2933: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> -2
   * Goal 29. Weak Mutation 2934: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> >=
   * Goal 30. Weak Mutation 2943: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> %
   * Goal 31. Weak Mutation 2945: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> /
   * Goal 32. Weak Mutation 2953: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> %
   * Goal 33. Weak Mutation 2955: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> /
   * Goal 34. Weak Mutation 2960: org.apache.commons.math.util.MathUtils.pow(JI)J:1594 - ReplaceBitwiseOperator >> -> <<
   * Goal 35. org.apache.commons.math.util.MathUtils.scalb(DI)D:negative
   * Goal 36. org.apache.commons.math.util.MathUtils.pow(JI)J:zero
   * Goal 37. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 38. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 39. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 40. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 41. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 42. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 43. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 45. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 46. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 47. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 48. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 49. Weak Mutation 2058: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> <=
   * Goal 50. Weak Mutation 2114: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator | -> ^
   * Goal 51. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 52. round(DII)D_java.lang.IllegalArgumentException_IMPLICIT
   */

  @Test
  public void test071()  throws Throwable  {
      long long0 = MathUtils.pow(0L, 1104);
      double double0 = MathUtils.scalb((-3770.374832602755), 1104);
      // Undeclared exception!
      try { 
        MathUtils.round((double) 1104, 31, 1104);
      } catch(IllegalArgumentException e) {
         //
         // Invalid rounding mode
         //
         assertThrownBy("java.math.BigDecimal", e);
      }
  }

  //Test case number: 72
  /*
   * 83 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 160
   * Goal 2. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1506
   * Goal 3. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1796
   * Goal 4. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1508
   * Goal 5. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1797
   * Goal 6. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1478
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 166
   * Goal 8. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1798
   * Goal 9. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1479
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 11. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1800
   * Goal 12. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1482
   * Goal 13. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 142
   * Goal 14. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1104
   * Goal 15. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1109
   * Goal 16. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1110
   * Goal 17. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1111
   * Goal 18. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1497
   * Goal 19. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1114
   * Goal 20. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1498
   * Goal 21. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1115
   * Goal 22. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 159
   * Goal 23. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false
   * Goal 34. Weak Mutation 2058: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> <=
   * Goal 35. Weak Mutation 2063: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator != -> ==
   * Goal 36. Weak Mutation 2068: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 3354: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> -1
   * Goal 38. Weak Mutation 3355: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> >
   * Goal 39. Weak Mutation 2083: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> |
   * Goal 40. Weak Mutation 2084: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> ^
   * Goal 41. Weak Mutation 3372: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> %
   * Goal 42. Weak Mutation 2092: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> |
   * Goal 43. Weak Mutation 2093: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> ^
   * Goal 44. Weak Mutation 3374: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> /
   * Goal 45. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 46. Weak Mutation 61: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> ==
   * Goal 47. Weak Mutation 122: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> %
   * Goal 48. Weak Mutation 124: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> /
   * Goal 49. Weak Mutation 126: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceComparisonOperator > -> !=
   * Goal 50. Weak Mutation 132: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> %
   * Goal 51. Weak Mutation 135: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> /
   * Goal 52. Weak Mutation 2672: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> %
   * Goal 53. Weak Mutation 2674: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> /
   * Goal 54. Weak Mutation 2682: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator < -> !=
   * Goal 55. Weak Mutation 2691: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator <= -> ==
   * Goal 56. Weak Mutation 2110: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> %
   * Goal 57. Weak Mutation 2113: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> /
   * Goal 58. Weak Mutation 2115: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator | -> &
   * Goal 59. Weak Mutation 121: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> +
   * Goal 60. Weak Mutation 123: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> *
   * Goal 61. Weak Mutation 133: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> -
   * Goal 62. Weak Mutation 134: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> *
   * Goal 63. Weak Mutation 2713: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> <
   * Goal 64. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:zero
   * Goal 65. org.apache.commons.math.util.MathUtils.subAndCheck(II)I:zero
   * Goal 66. org.apache.commons.math.util.MathUtils.scalb(DI)D:negative
   * Goal 67. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:positive
   * Goal 68. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 69. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 70. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 71. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 72. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 73. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 74. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 75. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 76. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 81. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 83. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   */

  @Test
  public void test072()  throws Throwable  {
      int int0 = MathUtils.subAndCheck(0, 0);
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      int int1 = MathUtils.distanceInf(intArray0, intArray0);
      double double0 = MathUtils.scalb((-5969.59371299502), 0);
      long long0 = MathUtils.subAndCheck(642L, (-1046L));
      // Undeclared exception!
      try { 
        MathUtils.OrderDirection.valueOf("overflow: mul");
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.apache.commons.math.util.MathUtils.OrderDirection.overflow: mul
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  //Test case number: 73
  /*
   * 31 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1617
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1618
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1619
   * Goal 4. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1796
   * Goal 5. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1797
   * Goal 6. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1798
   * Goal 7. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1800
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1611
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1627
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false
   * Goal 14. Weak Mutation 3354: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> -1
   * Goal 15. Weak Mutation 2971: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> >
   * Goal 16. Weak Mutation 3355: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> >
   * Goal 17. Weak Mutation 3371: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> +
   * Goal 18. Weak Mutation 3373: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> *
   * Goal 19. Weak Mutation 3374: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> /
   * Goal 20. Weak Mutation 3372: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> %
   * Goal 21. Weak Mutation 2994: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> -2
   * Goal 22. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:zero
   * Goal 23. org.apache.commons.math.util.MathUtils.pow(JJ)J:positive
   * Goal 24. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 25. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 26. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 27. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 30. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 31. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   */

  @Test
  public void test073()  throws Throwable  {
      long long0 = MathUtils.pow((-2189L), 0L);
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 8;
      intArray0[2] = 84;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 3502;
      intArray0[7] = 19;
      intArray0[8] = 3219;
      int int0 = MathUtils.distanceInf(intArray0, intArray0);
  }

  //Test case number: 74
  /*
   * 70 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false
   * Goal 14. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 15. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 16. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 17. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 18. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 19. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 20. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 21. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 22. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 23. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 24. Weak Mutation 838: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> %
   * Goal 25. Weak Mutation 841: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> /
   * Goal 26. Weak Mutation 847: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> %
   * Goal 27. Weak Mutation 2994: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> -2
   * Goal 28. Weak Mutation 2970: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> ==
   * Goal 29. Weak Mutation 2995: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> >=
   * Goal 30. Weak Mutation 3004: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> |
   * Goal 31. Weak Mutation 3005: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> ^
   * Goal 32. Weak Mutation 3008: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> -2
   * Goal 33. Weak Mutation 3009: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> >=
   * Goal 34. Weak Mutation 3020: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> %
   * Goal 35. Weak Mutation 3022: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> /
   * Goal 36. Weak Mutation 3032: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> %
   * Goal 37. Weak Mutation 3034: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> /
   * Goal 38. Weak Mutation 3040: org.apache.commons.math.util.MathUtils.pow(JJ)J:1624 - ReplaceBitwiseOperator >> -> <<
   * Goal 39. Weak Mutation 3031: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> +
   * Goal 40. Weak Mutation 3033: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> -
   * Goal 41. org.apache.commons.math.util.MathUtils.cosh(D)D:positive
   * Goal 42. org.apache.commons.math.util.MathUtils.equals(DDI)Z:false
   * Goal 43. org.apache.commons.math.util.MathUtils.pow(JJ)J:zero
   * Goal 44. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 45. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 46. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 47. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 48. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 49. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 50. Branch org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:cosh(D)D
   * Goal 51. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 52. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 53. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 54. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 55. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 56. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 57. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 58. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 59. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 60. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 61. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 62. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 63. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1617
   * Goal 64. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1618
   * Goal 65. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1619
   * Goal 66. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1627
   * Goal 67. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1620
   * Goal 68. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1621
   * Goal 69. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1623
   * Goal 70. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1624
   */

  @Test
  public void test074()  throws Throwable  {
      double double0 = MathUtils.cosh(1297.189352180151);
      boolean boolean0 = MathUtils.equals(Double.POSITIVE_INFINITY, 1297.189352180151, 3240);
      long long0 = MathUtils.pow((-624L), 3628800L);
  }

  //Test case number: 75
  /*
   * 266 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1537
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1410
   * Goal 3. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 643
   * Goal 4. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1030
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1031
   * Goal 6. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 648
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 8. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1034
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 10. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 651
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 12. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1932
   * Goal 13. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 652
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 780
   * Goal 15. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1933
   * Goal 16. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 653
   * Goal 17. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1934
   * Goal 18. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1935
   * Goal 19. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 655
   * Goal 20. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1936
   * Goal 21. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1937
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 785
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true
   * Goal 35. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 37. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 39. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true
   * Goal 41. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true
   * Goal 42. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true
   * Goal 44. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false
   * Goal 45. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 46. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true
   * Goal 47. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true
   * Goal 48. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false
   * Goal 49. org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true
   * Goal 50. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true
   * Goal 51. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 52. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 53. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 54. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false
   * Goal 55. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - true
   * Goal 56. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 57. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - true
   * Goal 58. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 59. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 60. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 61. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 62. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 63. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 64. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 65. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true
   * Goal 66. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true
   * Goal 67. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false
   * Goal 68. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true
   * Goal 69. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true
   * Goal 70. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - true
   * Goal 71. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I152 Branch 224 IFEQ L1959 - true
   * Goal 72. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true
   * Goal 73. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false
   * Goal 74. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true
   * Goal 75. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false
   * Goal 76. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 77. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false
   * Goal 78. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 79. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 80. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 81. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 82. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 83. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 84. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 85. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 86. Weak Mutation 1792: org.apache.commons.math.util.MathUtils.indicator(S)S:925 - ReplaceComparisonOperator < -> !=
   * Goal 87. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 88. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 89. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 90. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 91. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 92. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 93. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 94. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 95. Weak Mutation 3156: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> -1
   * Goal 96. Weak Mutation 3157: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> >
   * Goal 97. Weak Mutation 3174: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> /
   * Goal 98. Weak Mutation 3175: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> %
   * Goal 99. Weak Mutation 3178: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> /
   * Goal 100. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 101. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 102. Weak Mutation 2572: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> -1
   * Goal 103. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 104. Weak Mutation 872: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> -1
   * Goal 105. Weak Mutation 3172: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> %
   * Goal 106. Weak Mutation 2743: org.apache.commons.math.util.MathUtils.pow(II)I:1521 - ReplaceComparisonOperator >= -> ==
   * Goal 107. Weak Mutation 2767: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> -2
   * Goal 108. Weak Mutation 2768: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> >=
   * Goal 109. Weak Mutation 2777: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> |
   * Goal 110. Weak Mutation 2778: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> ^
   * Goal 111. Weak Mutation 2779: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> -2
   * Goal 112. Weak Mutation 2780: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> >=
   * Goal 113. Weak Mutation 2794: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> +
   * Goal 114. Weak Mutation 2795: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> %
   * Goal 115. Weak Mutation 2796: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> -
   * Goal 116. Weak Mutation 2797: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> /
   * Goal 117. Weak Mutation 2810: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> +
   * Goal 118. Weak Mutation 2811: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> %
   * Goal 119. Weak Mutation 2812: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> -
   * Goal 120. Weak Mutation 2813: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> /
   * Goal 121. Weak Mutation 2821: org.apache.commons.math.util.MathUtils.pow(II)I:1534 - ReplaceBitwiseOperator >> -> <<
   * Goal 122. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> ==
   * Goal 123. Weak Mutation 1276: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> ==
   * Goal 124. Weak Mutation 1294: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> !=
   * Goal 125. Weak Mutation 1295: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> -2
   * Goal 126. Weak Mutation 1296: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> >=
   * Goal 127. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> %
   * Goal 128. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> -
   * Goal 129. Weak Mutation 1307: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> *
   * Goal 130. Weak Mutation 1308: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> /
   * Goal 131. Weak Mutation 2924: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> -2
   * Goal 132. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 133. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 134. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 135. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 136. Weak Mutation 1440: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 137. Weak Mutation 1451: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 138. Weak Mutation 1452: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 139. Weak Mutation 1454: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 140. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 141. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 142. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 143. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 144. Weak Mutation 3499: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> %
   * Goal 145. Weak Mutation 3506: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> -1
   * Goal 146. Weak Mutation 3507: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> >
   * Goal 147. Weak Mutation 3538: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> -2
   * Goal 148. Weak Mutation 3597: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1944 - ReplaceComparisonOperator <= -> ==
   * Goal 149. Weak Mutation 2906: org.apache.commons.math.util.MathUtils.pow(JI)J:1581 - ReplaceComparisonOperator >= -> ==
   * Goal 150. Weak Mutation 2925: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> >=
   * Goal 151. Weak Mutation 2931: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> |
   * Goal 152. Weak Mutation 2932: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> ^
   * Goal 153. Weak Mutation 2933: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> -2
   * Goal 154. Weak Mutation 2934: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> >=
   * Goal 155. Weak Mutation 2943: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> %
   * Goal 156. Weak Mutation 2945: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> /
   * Goal 157. Weak Mutation 2953: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> %
   * Goal 158. Weak Mutation 2955: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> /
   * Goal 159. Weak Mutation 2960: org.apache.commons.math.util.MathUtils.pow(JI)J:1594 - ReplaceBitwiseOperator >> -> <<
   * Goal 160. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 161. Weak Mutation 1570: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator == -> <=
   * Goal 162. org.apache.commons.math.util.MathUtils.indicator(S)S:positive
   * Goal 163. org.apache.commons.math.util.MathUtils.distance1([D[D)D:zero
   * Goal 164. org.apache.commons.math.util.MathUtils.sign(F)F:zero
   * Goal 165. org.apache.commons.math.util.MathUtils.indicator(F)F:positive
   * Goal 166. org.apache.commons.math.util.MathUtils.factorialLog(I)D:positive
   * Goal 167. org.apache.commons.math.util.MathUtils.equals(DD)Z:false
   * Goal 168. org.apache.commons.math.util.MathUtils.equals(DDD)Z:false
   * Goal 169. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 170. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 171. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 172. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 173. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 174. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 175. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 176. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 177. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 178. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 179. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 180. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 181. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 182. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 183. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 184. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 185. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 186. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 187. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 188. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 189. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 190. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 191. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 192. Branch org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false in context: org.apache.commons.math.util.MathUtils:indicator(S)S
   * Goal 193. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 194. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 195. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - false in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 196. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 197. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 198. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 199. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 200. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 201. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 202. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 203. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 204. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 205. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 206. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 207. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 208. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 209. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 210. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 211. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 212. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 213. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 214. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 215. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I152 Branch 224 IFEQ L1959 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 216. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 217. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 218. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 219. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 220. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 221. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 222. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 223. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 224. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - false
   * Goal 225. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - false
   * Goal 226. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - true
   * Goal 227. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - false
   * Goal 228. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true
   * Goal 229. Weak Mutation 874: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> >
   * Goal 230. Weak Mutation 1340: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> >
   * Goal 231. Weak Mutation 1421: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> ==
   * Goal 232. Weak Mutation 1556: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> -1
   * Goal 233. Weak Mutation 1582: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator != -> >
   * Goal 234. Weak Mutation 1605: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> %
   * Goal 235. Weak Mutation 1608: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> /
   * Goal 236. org.apache.commons.math.util.MathUtils.safeNorm([D)D:zero
   * Goal 237. org.apache.commons.math.util.MathUtils.pow(II)I:zero
   * Goal 238. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   * Goal 239. org.apache.commons.math.util.MathUtils.pow(JI)J:zero
   * Goal 240. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:zero
   * Goal 241. org.apache.commons.math.util.MathUtils.equals(DD)Z:true
   * Goal 242. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 243. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 244. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 245. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 246. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 247. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 248. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 249. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 250. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 251. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 252. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - false in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 253. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 254. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 255. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 256. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 257. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 258. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 259. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 260. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 261. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 262. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 263. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 264. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 265. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 266. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   */

  @Test
  public void test075()  throws Throwable  {
      double double0 = MathUtils.factorialLog(1670);
      float float0 = MathUtils.indicator(Float.NaN);
      int int0 = MathUtils.pow(1670, 1670);
      int int1 = MathUtils.gcd(1670, (-219));
      long long0 = MathUtils.pow(0L, 1643);
      float float1 = MathUtils.sign(0.0F);
      short short0 = MathUtils.indicator((short)1992);
      long long1 = MathUtils.gcd(2309L, (long) 0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 0.0F;
      double double1 = MathUtils.safeNorm(doubleArray0);
      double double2 = MathUtils.distance1(doubleArray0, doubleArray0);
      int int2 = MathUtils.mulAndCheck(1643, 0);
      boolean boolean0 = MathUtils.equals((double) (-219), 0.2857142686843872);
      boolean boolean1 = MathUtils.equals((double) 2309L, 0.0, 0.0);
      boolean boolean2 = MathUtils.equals(0.0, (double) 0);
      short short1 = MathUtils.indicator((short)1051);
  }

  //Test case number: 76
  /*
   * 41 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - true
   * Goal 13. Weak Mutation 1770: org.apache.commons.math.util.MathUtils.indicator(I)I:904 - ReplaceComparisonOperator < -> !=
   * Goal 14. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 15. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 16. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 17. Weak Mutation 1769: org.apache.commons.math.util.MathUtils.indicator(I)I:904 - ReplaceComparisonOperator < -> -2
   * Goal 18. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 19. Weak Mutation 1340: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> >
   * Goal 20. Weak Mutation 1421: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> ==
   * Goal 21. Weak Mutation 1331: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> <=
   * Goal 22. Weak Mutation 1406: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> ==
   * Goal 23. org.apache.commons.math.util.MathUtils.indicator(I)I:positive
   * Goal 24. org.apache.commons.math.util.MathUtils.indicator(I)I:negative
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   * Goal 26. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 28. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 30. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 31. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - true in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 32. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 33. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 34. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 35. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 37. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 38. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 39. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 40. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 41. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   */

  @Test
  public void test076()  throws Throwable  {
      int int0 = MathUtils.gcd((-3513), (-3513));
      int int1 = MathUtils.indicator(3513);
      int int2 = MathUtils.indicator((-3513));
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 189.9025;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = 0.15;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = 2592.3863634034087;
      doubleArray0[5] = (double) 1;
  }

  //Test case number: 77
  /*
   * 78 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 704
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 737
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 706
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 707
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 740
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 710
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 711
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 743
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 744
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 713
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 714
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 715
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 717
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 688
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 689
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 690
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 724
   * Goal 18. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 730
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 731
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 734
   * Goal 21. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 703
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 735
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(II)I: I81 Branch 91 IF_ICMPGE L711 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 39. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 40. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 41. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 42. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 43. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 44. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 45. Weak Mutation 1440: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 46. Weak Mutation 1451: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 47. Weak Mutation 1452: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 48. Weak Mutation 1453: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 49. Weak Mutation 1454: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 50. Weak Mutation 1468: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator >= -> -1
   * Goal 51. Weak Mutation 1482: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> +
   * Goal 52. Weak Mutation 1483: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> %
   * Goal 53. Weak Mutation 1484: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> -
   * Goal 54. Weak Mutation 1485: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> *
   * Goal 55. Weak Mutation 1497: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> +
   * Goal 56. Weak Mutation 1498: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> %
   * Goal 57. Weak Mutation 1499: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> -
   * Goal 58. Weak Mutation 1500: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> *
   * Goal 59. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 60. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   * Goal 61. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 62. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 63. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 64. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 65. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 66. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 67. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 68. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 69. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 70. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 71. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 72. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 73. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 75. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 76. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I81 Branch 91 IF_ICMPGE L711 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   */

  @Test
  public void test077()  throws Throwable  {
      int int0 = MathUtils.gcd(1024, 5098);
  }

  //Test case number: 78
  /*
   * 77 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 704
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 24. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 25. Weak Mutation 2924: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> -2
   * Goal 26. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 27. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 28. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 29. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 30. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 31. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 32. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 33. Weak Mutation 1803: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> >=
   * Goal 34. Weak Mutation 1810: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator != -> <
   * Goal 35. Weak Mutation 1825: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> +
   * Goal 36. Weak Mutation 1826: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> %
   * Goal 37. Weak Mutation 1827: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> -
   * Goal 38. Weak Mutation 1844: org.apache.commons.math.util.MathUtils.lcm(II)I:956 - ReplaceComparisonOperator != -> <
   * Goal 39. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 40. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 41. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 42. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 43. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 44. Weak Mutation 2906: org.apache.commons.math.util.MathUtils.pow(JI)J:1581 - ReplaceComparisonOperator >= -> ==
   * Goal 45. Weak Mutation 2925: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> >=
   * Goal 46. Weak Mutation 2931: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> |
   * Goal 47. Weak Mutation 2932: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> ^
   * Goal 48. Weak Mutation 2933: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> -2
   * Goal 49. Weak Mutation 2934: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> >=
   * Goal 50. Weak Mutation 2943: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> %
   * Goal 51. Weak Mutation 2945: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> /
   * Goal 52. Weak Mutation 2953: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> %
   * Goal 53. Weak Mutation 2955: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> /
   * Goal 54. Weak Mutation 2960: org.apache.commons.math.util.MathUtils.pow(JI)J:1594 - ReplaceBitwiseOperator >> -> <<
   * Goal 55. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 56. Weak Mutation 1828: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> *
   * Goal 57. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 58. Weak Mutation 874: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> >
   * Goal 59. org.apache.commons.math.util.MathUtils.lcm(II)I:positive
   * Goal 60. org.apache.commons.math.util.MathUtils.equals(DD)Z:false
   * Goal 61. org.apache.commons.math.util.MathUtils.pow(JI)J:zero
   * Goal 62. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 63. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 64. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 65. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 66. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 67. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 68. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 69. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 70. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 71. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 72. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 73. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 75. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 76. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   */

  @Test
  public void test078()  throws Throwable  {
      int int0 = MathUtils.lcm(61, 61);
      boolean boolean0 = MathUtils.equals((double) 61, 62.0);
      long long0 = MathUtils.pow(0L, 61);
  }

  //Test case number: 79
  /*
   * 43 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 706
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 710
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 711
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 713
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - true
   * Goal 12. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 13. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 14. Weak Mutation 1440: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 15. Weak Mutation 1451: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 16. Weak Mutation 1452: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 17. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 18. Weak Mutation 1340: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> >
   * Goal 19. Weak Mutation 1421: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> ==
   * Goal 20. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: I81 Branch 91 IF_ICMPGE L711 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - false
   * Goal 27. Weak Mutation 1331: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> <=
   * Goal 28. Weak Mutation 1406: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> ==
   * Goal 29. Weak Mutation 1453: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 30. Weak Mutation 1468: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator >= -> -1
   * Goal 31. Weak Mutation 1482: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> +
   * Goal 32. Weak Mutation 1483: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> %
   * Goal 33. Weak Mutation 1484: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> -
   * Goal 34. Weak Mutation 1485: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> *
   * Goal 35. Weak Mutation 1497: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> +
   * Goal 36. Weak Mutation 1498: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> %
   * Goal 37. Weak Mutation 1499: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> -
   * Goal 38. Weak Mutation 1500: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> *
   * Goal 39. Weak Mutation 1517: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> -1
   * Goal 40. Weak Mutation 1804: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> <=
   * Goal 41. Weak Mutation 1811: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator != -> >
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 718
   * Goal 43. lcm(II)I_org.evosuite.runtime.mock.java.lang.MockArithmeticException_EXPLICIT
   */

  @Test
  public void test079()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.lcm(Integer.MIN_VALUE, Integer.MIN_VALUE);
      } catch(ArithmeticException e) {
         //
         // overflow: gcd(-2,147,483,648, -2,147,483,648) is 2^31
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 80
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - false
   * Goal 6. Weak Mutation 2630: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator != -> <
   * Goal 7. Weak Mutation 2636: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator <= -> -1
   * Goal 8. Weak Mutation 3498: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> +
   * Goal 9. Weak Mutation 3500: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> -
   * Goal 10. Weak Mutation 3501: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> *
   * Goal 11. Weak Mutation 3507: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> >
   * Goal 12. org.apache.commons.math.util.MathUtils.sign(S)S:positive
   * Goal 13. org.apache.commons.math.util.MathUtils.safeNorm([D)D:zero
   * Goal 14. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 15. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 16. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 17. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - false in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   */

  @Test
  public void test080()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      double double0 = MathUtils.safeNorm(doubleArray0);
      short short0 = MathUtils.sign((short)3615);
  }

  //Test case number: 81
  /*
   * 179 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 643
   * Goal 2. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1283
   * Goal 3. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 389
   * Goal 4. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 390
   * Goal 5. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 648
   * Goal 6. org.apache.commons.math.util.MathUtils.indicator(I)I: Line 904
   * Goal 7. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 651
   * Goal 8. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 652
   * Goal 9. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 653
   * Goal 10. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 655
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1551
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1557
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1558
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1559
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1567
   * Goal 16. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1329
   * Goal 17. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1330
   * Goal 18. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1331
   * Goal 19. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1332
   * Goal 20. org.apache.commons.math.util.MathUtils.round(DI)D: Line 1208
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 442
   * Goal 22. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 23. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1225
   * Goal 24. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1229
   * Goal 25. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch
   * Goal 32. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 35. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 39. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true
   * Goal 40. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true
   * Goal 41. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 44. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 45. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true
   * Goal 46. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 47. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 48. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 49. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 50. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - false
   * Goal 51. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 52. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 53. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true
   * Goal 54. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true
   * Goal 55. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false
   * Goal 56. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - false
   * Goal 57. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - false
   * Goal 58. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - true
   * Goal 59. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true
   * Goal 60. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - true
   * Goal 61. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - false
   * Goal 62. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false
   * Goal 63. org.apache.commons.math.util.MathUtils.round(DII)D: I20 Branch 146 IFEQ L1230 - false
   * Goal 64. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 65. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 66. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 67. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 68. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 69. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 70. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 71. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 72. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 73. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 74. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 75. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 76. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 77. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 78. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 79. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 80. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 81. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 82. Weak Mutation 3275: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> -1
   * Goal 83. Weak Mutation 3276: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> >
   * Goal 84. Weak Mutation 3289: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> /
   * Goal 85. Weak Mutation 3306: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> %
   * Goal 86. Weak Mutation 3308: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> /
   * Goal 87. Weak Mutation 3309: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> %
   * Goal 88. Weak Mutation 3312: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> /
   * Goal 89. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 90. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 91. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 92. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 93. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 94. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 95. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 96. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 97. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 98. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 99. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 100. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 101. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 102. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 103. Weak Mutation 2337: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> -
   * Goal 104. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 105. Weak Mutation 2350: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> %
   * Goal 106. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 107. Weak Mutation 2851: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> -2
   * Goal 108. Weak Mutation 940: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> !=
   * Goal 109. Weak Mutation 2338: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> /
   * Goal 110. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> ==
   * Goal 111. Weak Mutation 1276: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> ==
   * Goal 112. Weak Mutation 1294: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> !=
   * Goal 113. Weak Mutation 1295: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> -2
   * Goal 114. Weak Mutation 1296: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> >=
   * Goal 115. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> %
   * Goal 116. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> -
   * Goal 117. Weak Mutation 1307: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> *
   * Goal 118. Weak Mutation 1308: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> /
   * Goal 119. Weak Mutation 2352: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> *
   * Goal 120. Weak Mutation 767: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> -1
   * Goal 121. Weak Mutation 1769: org.apache.commons.math.util.MathUtils.indicator(I)I:904 - ReplaceComparisonOperator < -> -2
   * Goal 122. Weak Mutation 1226: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:618 - ReplaceComparisonOperator >= -> ==
   * Goal 123. Weak Mutation 1241: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:623 - ReplaceComparisonOperator >= -> ==
   * Goal 124. Weak Mutation 1253: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:626 - ReplaceArithmeticOperator + -> %
   * Goal 125. Weak Mutation 2834: org.apache.commons.math.util.MathUtils.pow(IJ)I:1551 - ReplaceComparisonOperator >= -> >
   * Goal 126. Weak Mutation 3287: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> %
   * Goal 127. Weak Mutation 2295: org.apache.commons.math.util.MathUtils.round(DII)D:1230 - ReplaceComparisonOperator == -> !=
   * Goal 128. org.apache.commons.math.util.MathUtils.distance([I[I)D:zero
   * Goal 129. org.apache.commons.math.util.MathUtils.round(FI)F:positive
   * Goal 130. org.apache.commons.math.util.MathUtils.indicator(I)I:negative
   * Goal 131. org.apache.commons.math.util.MathUtils.equals(DDD)Z:false
   * Goal 132. org.apache.commons.math.util.MathUtils.factorialDouble(I)D:positive
   * Goal 133. org.apache.commons.math.util.MathUtils.pow(IJ)I:positive
   * Goal 134. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:zero
   * Goal 135. org.apache.commons.math.util.MathUtils.round(DI)D:positive
   * Goal 136. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 137. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 138. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 139. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 140. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 141. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 142. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 143. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 144. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 145. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 146. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 147. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 148. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 149. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 150. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 151. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 152. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 153. Branch org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch in context: org.apache.commons.math.util.MathUtils:round(DI)D
   * Goal 154. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 155. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 156. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 157. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true in context: 
   * Goal 158. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 159. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 160. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 161. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 162. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 163. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 164. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 165. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 166. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 167. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 168. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 169. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - false in context: 
   * Goal 170. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - false in context: 
   * Goal 171. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - true in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 172. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 173. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 174. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 175. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 176. binomialCoefficient(II)J_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   * Goal 177. Weak Mutation 2328: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> /
   * Goal 178. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1230
   * Goal 179. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1231
   */

  @Test
  public void test081()  throws Throwable  {
      int int0 = MathUtils.indicator((-33));
      float float0 = MathUtils.round(Float.NaN, (-33));
      int int1 = MathUtils.compareTo((-33), (-1), 1675.2);
      int int2 = MathUtils.pow(0, (long) 0);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      double double0 = MathUtils.distance(intArray0, intArray0);
      double double1 = MathUtils.factorialDouble(192);
      double double2 = MathUtils.round(Double.POSITIVE_INFINITY, 0);
      boolean boolean0 = MathUtils.equals((double) 192, (double) (-1), (double) 192);
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficient(0, 192);
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n,k), got n = 0, k = 192
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 82
  /*
   * 52 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 15. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 16. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 17. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 18. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 19. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 20. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 21. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 22. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 23. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 24. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 25. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 26. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 27. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 28. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 29. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 30. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 31. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 32. Weak Mutation 1757: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> -2
   * Goal 33. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 34. Weak Mutation 969: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> +
   * Goal 35. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 36. Weak Mutation 971: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> *
   * Goal 37. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 38. Weak Mutation 979: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> -2
   * Goal 39. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:false
   * Goal 40. org.apache.commons.math.util.MathUtils.indicator(F)F:negative
   * Goal 41. org.apache.commons.math.util.MathUtils.hash([D)I:negative
   * Goal 42. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 43. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 44. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 45. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 46. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 47. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 48. Branch org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash([D)I
   * Goal 49. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 50. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 51. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 52. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   */

  @Test
  public void test082()  throws Throwable  {
      float float0 = MathUtils.indicator((-1813.9521F));
      double double0 = MathUtils.EPSILON;
      boolean boolean0 = MathUtils.equalsIncludingNaN((double) (-1.0F), 446.0, (-369.814263497));
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 2012.1024;
      int int0 = MathUtils.hash(doubleArray0);
  }

  //Test case number: 83
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([D)V: Line 1869
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1822
   * Goal 3. org.apache.commons.math.util.MathUtils.checkOrder([D)V: root-Branch
   * Goal 4. checkOrder([D)V_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 5. org.apache.commons.math.util.MathUtils.checkOrder([D)V
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.checkOrder([D)V: root-Branch in context: org.apache.commons.math.util.MathUtils:checkOrder([D)V
   */

  @Test
  public void test083()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 84
  /*
   * 51 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true
   * Goal 9. Weak Mutation 2833: org.apache.commons.math.util.MathUtils.pow(IJ)I:1551 - ReplaceComparisonOperator >= -> ==
   * Goal 10. Weak Mutation 2851: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> -2
   * Goal 11. Weak Mutation 2852: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> >=
   * Goal 12. Weak Mutation 2859: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> ^
   * Goal 13. Weak Mutation 2863: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> >=
   * Goal 14. Weak Mutation 2875: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> +
   * Goal 15. Weak Mutation 2876: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> %
   * Goal 16. Weak Mutation 2877: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> -
   * Goal 17. Weak Mutation 2878: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> /
   * Goal 18. Weak Mutation 2889: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> +
   * Goal 19. Weak Mutation 2890: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> %
   * Goal 20. Weak Mutation 2891: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> -
   * Goal 21. Weak Mutation 2892: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> /
   * Goal 22. Weak Mutation 2895: org.apache.commons.math.util.MathUtils.pow(IJ)I:1564 - ReplaceBitwiseOperator >> -> <<
   * Goal 23. Weak Mutation 2063: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator != -> ==
   * Goal 24. Weak Mutation 2068: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> !=
   * Goal 25. Weak Mutation 2083: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> |
   * Goal 26. Weak Mutation 2084: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> ^
   * Goal 27. Weak Mutation 2092: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> |
   * Goal 28. Weak Mutation 2093: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> ^
   * Goal 29. Weak Mutation 2108: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>
   * Goal 30. Weak Mutation 2109: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>>
   * Goal 31. Weak Mutation 2111: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> -
   * Goal 32. Weak Mutation 2112: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> *
   * Goal 33. Weak Mutation 2113: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> /
   * Goal 34. Weak Mutation 2115: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator | -> &
   * Goal 35. Weak Mutation 2058: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> <=
   * Goal 36. Weak Mutation 2858: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> |
   * Goal 37. Weak Mutation 2862: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> -2
   * Goal 38. org.apache.commons.math.util.MathUtils.scalb(DI)D:negative
   * Goal 39. org.apache.commons.math.util.MathUtils.pow(IJ)I:positive
   * Goal 40. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 41. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 42. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 43. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 45. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 46. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 47. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 48. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 49. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 50. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 51. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   */

  @Test
  public void test084()  throws Throwable  {
      int int0 = MathUtils.pow(2, (long) 2);
      double double0 = MathUtils.scalb((-3076.887), (-968));
  }

  //Test case number: 85
  /*
   * 37 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: Line 1139
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 3. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - false
   * Goal 7. Weak Mutation 1547: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> -2
   * Goal 8. Weak Mutation 1570: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator == -> <=
   * Goal 9. Weak Mutation 1580: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator != -> -1
   * Goal 10. Weak Mutation 2140: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> %
   * Goal 11. Weak Mutation 2141: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> -
   * Goal 12. Weak Mutation 2142: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> *
   * Goal 13. Weak Mutation 2143: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> /
   * Goal 14. Weak Mutation 2149: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> +
   * Goal 15. Weak Mutation 2150: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 16. Weak Mutation 2151: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> *
   * Goal 17. Weak Mutation 2152: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 18. Weak Mutation 2158: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> +
   * Goal 19. Weak Mutation 2159: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> %
   * Goal 20. Weak Mutation 2160: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> -
   * Goal 21. Weak Mutation 2161: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> *
   * Goal 22. Weak Mutation 2162: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> +
   * Goal 23. Weak Mutation 2163: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> %
   * Goal 24. Weak Mutation 2164: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> -
   * Goal 25. Weak Mutation 2165: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> /
   * Goal 26. Weak Mutation 2166: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> +
   * Goal 27. Weak Mutation 2167: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 28. Weak Mutation 2168: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> *
   * Goal 29. Weak Mutation 2169: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 30. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:negative
   * Goal 31. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 32. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 33. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 34. Branch org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:normalizeAngle(DD)D
   * Goal 35. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 37. gcd(JJ)J_org.evosuite.runtime.mock.java.lang.MockArithmeticException_EXPLICIT
   */

  @Test
  public void test085()  throws Throwable  {
      double double0 = MathUtils.normalizeAngle(6.283185307179586, (-2831.0598429));
      // Undeclared exception!
      try { 
        MathUtils.gcd(0L, (-9223372036854775808L));
      } catch(ArithmeticException e) {
         //
         // overflow: gcd(0, -9,223,372,036,854,775,808) is 2^63
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 86
  /*
   * 36 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.cosh(D)D: Line 405
   * Goal 2. org.apache.commons.math.util.MathUtils.log(DD)D: Line 1016
   * Goal 3. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 585
   * Goal 4. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 590
   * Goal 5. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 591
   * Goal 6. org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch
   * Goal 7. org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch
   * Goal 8. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 9. Weak Mutation 1927: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> +
   * Goal 10. Weak Mutation 1928: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> %
   * Goal 11. Weak Mutation 1929: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> -
   * Goal 12. Weak Mutation 1930: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> *
   * Goal 13. Weak Mutation 838: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> %
   * Goal 14. Weak Mutation 839: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> -
   * Goal 15. Weak Mutation 840: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> *
   * Goal 16. Weak Mutation 841: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> /
   * Goal 17. Weak Mutation 846: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> +
   * Goal 18. Weak Mutation 847: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> %
   * Goal 19. Weak Mutation 848: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> -
   * Goal 20. Weak Mutation 849: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> *
   * Goal 21. Weak Mutation 1201: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> ==
   * Goal 22. org.apache.commons.math.util.MathUtils.log(DD)D:positive
   * Goal 23. org.apache.commons.math.util.MathUtils.cosh(D)D:positive
   * Goal 24. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 25. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 26. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 27. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 28. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:log(DD)D
   * Goal 30. Branch org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:cosh(D)D
   * Goal 31. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 32. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - false
   * Goal 33. Weak Mutation 1214: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> -1
   * Goal 34. Weak Mutation 1218: org.apache.commons.math.util.MathUtils.factorial(I)J:591 - ReplaceComparisonOperator == -> !=
   * Goal 35. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - false in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 36. factorial(I)J_java.lang.ArithmeticException_EXPLICIT
   */

  @Test
  public void test086()  throws Throwable  {
      double double0 = MathUtils.cosh(0.0);
      double double1 = MathUtils.log(1.1921056801463227E-8, 0.14285714285714285);
      // Undeclared exception!
      try { 
        MathUtils.factorial(1429);
      } catch(ArithmeticException e) {
         //
         // factorial value is too large to fit in a long
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 87
  /*
   * 47 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1749
   * Goal 2. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1478
   * Goal 3. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1750
   * Goal 4. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1479
   * Goal 5. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1751
   * Goal 6. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1752
   * Goal 7. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1482
   * Goal 8. org.apache.commons.math.util.MathUtils.sign(B)B: Line 1373
   * Goal 9. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false
   * Goal 14. distance([D[D)D_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 15. Weak Mutation 2672: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> %
   * Goal 16. Weak Mutation 2674: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> /
   * Goal 17. Weak Mutation 2682: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator < -> !=
   * Goal 18. Weak Mutation 2691: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator <= -> ==
   * Goal 19. Weak Mutation 3226: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> -1
   * Goal 20. Weak Mutation 3237: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> +
   * Goal 21. Weak Mutation 3239: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> *
   * Goal 22. Weak Mutation 3240: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> /
   * Goal 23. Weak Mutation 3257: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> %
   * Goal 24. Weak Mutation 3259: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> /
   * Goal 25. Weak Mutation 3260: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> %
   * Goal 26. Weak Mutation 3263: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> /
   * Goal 27. Weak Mutation 2516: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator != -> >
   * Goal 28. Weak Mutation 2522: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator <= -> ==
   * Goal 29. Weak Mutation 2671: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> +
   * Goal 30. Weak Mutation 2673: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> *
   * Goal 31. Weak Mutation 3238: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> %
   * Goal 32. Weak Mutation 3256: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> +
   * Goal 33. Weak Mutation 3258: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> -
   * Goal 34. Weak Mutation 3261: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> -
   * Goal 35. Weak Mutation 3262: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> *
   * Goal 36. org.apache.commons.math.util.MathUtils.subAndCheck(II)I:negative
   * Goal 37. org.apache.commons.math.util.MathUtils.sign(B)B:negative
   * Goal 38. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 39. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 40. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 41. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 42. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 43. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 45. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 46. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 47. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   */

  @Test
  public void test087()  throws Throwable  {
      int int0 = MathUtils.subAndCheck((-2270), (-712));
      byte byte0 = MathUtils.sign((byte) (-18));
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) (byte) (-18);
      doubleArray0[1] = (double) (-2270);
      doubleArray0[2] = (double) (-2270);
      doubleArray0[3] = (double) (-2270);
      doubleArray0[4] = (double) (byte) (-1);
      doubleArray0[5] = (double) (byte) (-1);
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) (-712);
      doubleArray1[1] = (double) (byte) (-18);
      // Undeclared exception!
      try { 
        MathUtils.distance(doubleArray0, doubleArray1);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 88
  /*
   * 117 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1089
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1537
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 14. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 25. org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 31. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 34. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 35. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 36. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 37. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 38. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 39. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 40. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 41. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 42. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 43. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 44. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 45. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 46. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 48. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 49. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 50. Weak Mutation 2337: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> -
   * Goal 51. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 52. Weak Mutation 2350: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> %
   * Goal 53. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 54. Weak Mutation 2338: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> /
   * Goal 55. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 56. Weak Mutation 969: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> +
   * Goal 57. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 58. Weak Mutation 971: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> *
   * Goal 59. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 60. Weak Mutation 979: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> -2
   * Goal 61. Weak Mutation 2767: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> -2
   * Goal 62. Weak Mutation 2352: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> *
   * Goal 63. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> ==
   * Goal 64. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:false
   * Goal 65. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 66. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 67. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 68. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 69. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 70. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 71. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 72. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 73. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 75. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true in context: 
   * Goal 76. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 81. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 83. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 85. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - false in context: 
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 90. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - true
   * Goal 91. org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true
   * Goal 92. org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - false
   * Goal 93. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true
   * Goal 94. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - false
   * Goal 95. Weak Mutation 1201: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> ==
   * Goal 96. Weak Mutation 1226: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:618 - ReplaceComparisonOperator >= -> ==
   * Goal 97. Weak Mutation 1239: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:623 - ReplaceComparisonOperator >= -> -1
   * Goal 98. Weak Mutation 1759: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> <=
   * Goal 99. Weak Mutation 1982: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> >
   * Goal 100. Weak Mutation 2532: org.apache.commons.math.util.MathUtils.sign(D)D:1389 - ReplaceComparisonOperator == -> !=
   * Goal 101. Weak Mutation 2543: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator != -> -1
   * Goal 102. Weak Mutation 2744: org.apache.commons.math.util.MathUtils.pow(II)I:1521 - ReplaceComparisonOperator >= -> >
   * Goal 103. org.apache.commons.math.util.MathUtils.pow(II)I:positive
   * Goal 104. org.apache.commons.math.util.MathUtils.round(FI)F:zero
   * Goal 105. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:zero
   * Goal 106. org.apache.commons.math.util.MathUtils.sign(D)D:zero
   * Goal 107. org.apache.commons.math.util.MathUtils.factorialDouble(I)D:positive
   * Goal 108. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 109. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 110. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 111. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 112. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - false in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 113. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 114. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 115. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - false in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 116. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 117. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1086
   */

  @Test
  public void test088()  throws Throwable  {
      long long0 = MathUtils.mulAndCheck(0L, 6227020800L);
      int int0 = MathUtils.pow(79, 0);
      boolean boolean0 = MathUtils.equalsIncludingNaN((double) 1, (double) 0L, 0.0);
      double double0 = MathUtils.factorialDouble(1);
      double double1 = MathUtils.sign(0.0);
      float float0 = MathUtils.round(0.0F, 42);
  }

  //Test case number: 89
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 891
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(B)B: Line 1373
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - true
   * Goal 7. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 8. Weak Mutation 2516: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator != -> >
   * Goal 9. Weak Mutation 2522: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator <= -> ==
   * Goal 10. Weak Mutation 1759: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> <=
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(F)F:positive
   * Goal 12. org.apache.commons.math.util.MathUtils.sign(B)B:negative
   * Goal 13. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 14. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 15. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 16. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   */

  @Test
  public void test089()  throws Throwable  {
      byte byte0 = MathUtils.sign((byte) (-76));
      float float0 = MathUtils.indicator(0.0F);
  }

  //Test case number: 90
  /*
   * 99 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 704
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1856
   * Goal 3. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 961
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 706
   * Goal 5. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1858
   * Goal 6. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 26. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 27. Weak Mutation 1154: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator = null -> != null
   * Goal 28. Weak Mutation 1156: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator != null -> = null
   * Goal 29. Weak Mutation 1110: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator = null -> != null
   * Goal 30. Weak Mutation 1112: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator != null -> = null
   * Goal 31. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 32. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 33. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 34. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 35. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 36. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 37. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 38. Weak Mutation 1803: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> >=
   * Goal 39. Weak Mutation 1810: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator != -> <
   * Goal 40. Weak Mutation 1825: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> +
   * Goal 41. Weak Mutation 1826: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> %
   * Goal 42. Weak Mutation 1827: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> -
   * Goal 43. Weak Mutation 1844: org.apache.commons.math.util.MathUtils.lcm(II)I:956 - ReplaceComparisonOperator != -> <
   * Goal 44. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 45. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 46. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 47. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 48. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 49. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 50. Weak Mutation 3397: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1829 - ReplaceComparisonOperator == -> !=
   * Goal 51. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   * Goal 52. org.apache.commons.math.util.MathUtils.lcm(II)I:positive
   * Goal 53. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 54. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 55. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 56. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 57. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 58. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 59. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 60. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 61. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 62. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 63. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 64. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 65. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 66. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - false
   * Goal 67. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - false
   * Goal 68. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 69. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 70. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 71. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - true
   * Goal 72. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I54 Branch 213 IFGE L1834 - true
   * Goal 73. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I54 Branch 213 IFGE L1834 - false
   * Goal 74. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true
   * Goal 75. Weak Mutation 1132: org.apache.commons.math.util.MathUtils.equals([D[D)Z:526 - ReplaceComparisonOperator == -> <=
   * Goal 76. Weak Mutation 1176: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:551 - ReplaceComparisonOperator == -> <=
   * Goal 77. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 78. Weak Mutation 1828: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> *
   * Goal 79. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 80. Weak Mutation 3418: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1834 - ReplaceComparisonOperator >= -> -1
   * Goal 81. Weak Mutation 3419: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1834 - ReplaceComparisonOperator >= -> ==
   * Goal 82. org.apache.commons.math.util.MathUtils.equals([D[D)Z:false
   * Goal 83. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:false
   * Goal 84. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 85. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I54 Branch 213 IFGE L1834 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I54 Branch 213 IFGE L1834 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 96. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 552
   * Goal 97. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1834
   * Goal 98. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1835
   * Goal 99. checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V_org.apache.commons.math.exception.MathIllegalNumberException_EXPLICIT
   */

  @Test
  public void test090()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-1741.0132246);
      doubleArray0[1] = 2126.5;
      doubleArray0[2] = 8.0;
      doubleArray0[3] = Double.POSITIVE_INFINITY;
      doubleArray0[4] = 0.0;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 8.0;
      doubleArray1[1] = 2126.5;
      doubleArray1[2] = 0.0;
      doubleArray1[3] = 0.0;
      doubleArray1[4] = Double.POSITIVE_INFINITY;
      doubleArray1[5] = 2126.5;
      doubleArray1[6] = 2126.5;
      boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray1);
      boolean boolean1 = MathUtils.equalsIncludingNaN(doubleArray0, doubleArray1);
      int int0 = MathUtils.lcm(197, 197);
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.INCREASING;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray1, mathUtils_OrderDirection0, false);
      } catch(IllegalArgumentException e) {
         //
         // points 1 and 2 are not increasing (2,126.5 > 0)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 91
  /*
   * 187 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 792
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 793
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1691
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 795
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 796
   * Goal 9. org.apache.commons.math.util.MathUtils.indicator(S)S: Line 925
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 799
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 800
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1697
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1698
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1699
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1700
   * Goal 16. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 41. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 43. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false
   * Goal 44. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 45. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 46. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 47. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 48. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true
   * Goal 49. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 50. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true
   * Goal 51. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 52. org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true
   * Goal 53. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true
   * Goal 54. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - true
   * Goal 55. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - true
   * Goal 56. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 57. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 58. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 59. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 60. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 61. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 62. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 63. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 64. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 65. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 66. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 67. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 68. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 69. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 70. Weak Mutation 1154: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator = null -> != null
   * Goal 71. Weak Mutation 1156: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator != null -> = null
   * Goal 72. Weak Mutation 1174: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:551 - ReplaceComparisonOperator == -> -2
   * Goal 73. Weak Mutation 1183: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> -1
   * Goal 74. Weak Mutation 1184: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> >
   * Goal 75. Weak Mutation 1194: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:555 - ReplaceComparisonOperator != -> ==
   * Goal 76. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 77. Weak Mutation 1557: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> <
   * Goal 78. Weak Mutation 1615: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> -1
   * Goal 79. Weak Mutation 1628: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> -1
   * Goal 80. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 81. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 82. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 83. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 84. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 85. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 86. Weak Mutation 969: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> +
   * Goal 87. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 88. Weak Mutation 971: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> *
   * Goal 89. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 90. Weak Mutation 979: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> -2
   * Goal 91. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 92. Weak Mutation 2924: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> -2
   * Goal 93. Weak Mutation 3124: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1699 - ReplaceComparisonOperator != -> ==
   * Goal 94. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:true
   * Goal 95. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:false
   * Goal 96. org.apache.commons.math.util.MathUtils.pow(JI)J:positive
   * Goal 97. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:nonnull
   * Goal 98. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 99. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 100. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 101. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 102. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 103. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 104. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 105. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 106. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 107. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 108. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 109. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 110. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 111. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 112. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 113. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 114. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 115. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 116. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 117. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 118. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 119. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 120. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 121. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 122. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 123. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false
   * Goal 124. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true
   * Goal 125. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false
   * Goal 126. org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - true
   * Goal 127. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false
   * Goal 128. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true
   * Goal 129. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false
   * Goal 130. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - false
   * Goal 131. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I40 Branch 200 IFEQ L1700 - true
   * Goal 132. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I40 Branch 200 IFEQ L1700 - false
   * Goal 133. Weak Mutation 1740: org.apache.commons.math.util.MathUtils.indicator(D)D:880 - ReplaceComparisonOperator < -> !=
   * Goal 134. Weak Mutation 1791: org.apache.commons.math.util.MathUtils.indicator(S)S:925 - ReplaceComparisonOperator < -> -2
   * Goal 135. Weak Mutation 2906: org.apache.commons.math.util.MathUtils.pow(JI)J:1581 - ReplaceComparisonOperator >= -> ==
   * Goal 136. Weak Mutation 2925: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> >=
   * Goal 137. Weak Mutation 2931: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> |
   * Goal 138. Weak Mutation 2932: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> ^
   * Goal 139. Weak Mutation 2933: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> -2
   * Goal 140. Weak Mutation 2934: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> >=
   * Goal 141. Weak Mutation 2942: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> +
   * Goal 142. Weak Mutation 2943: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> %
   * Goal 143. Weak Mutation 2944: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> -
   * Goal 144. Weak Mutation 2945: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> /
   * Goal 145. Weak Mutation 2952: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> +
   * Goal 146. Weak Mutation 2953: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> %
   * Goal 147. Weak Mutation 2954: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> -
   * Goal 148. Weak Mutation 2955: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> /
   * Goal 149. Weak Mutation 2960: org.apache.commons.math.util.MathUtils.pow(JI)J:1594 - ReplaceBitwiseOperator >> -> <<
   * Goal 150. Weak Mutation 3109: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1691 - ReplaceComparisonOperator >= -> ==
   * Goal 151. Weak Mutation 3129: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1700 - ReplaceComparisonOperator == -> !=
   * Goal 152. Weak Mutation 3324: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> -1
   * Goal 153. Weak Mutation 3325: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> >
   * Goal 154. Weak Mutation 3339: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> +
   * Goal 155. Weak Mutation 3341: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> *
   * Goal 156. Weak Mutation 3342: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> /
   * Goal 157. org.apache.commons.math.util.MathUtils.indicator(D)D:positive
   * Goal 158. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:zero
   * Goal 159. org.apache.commons.math.util.MathUtils.indicator(S)S:negative
   * Goal 160. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 161. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 162. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 163. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 164. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 165. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I40 Branch 200 IFEQ L1700 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 166. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 167. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 168. Branch org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - true in context: org.apache.commons.math.util.MathUtils:indicator(S)S
   * Goal 169. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 170. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 171. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 172. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 173. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 174. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 175. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 176. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 177. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 178. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 179. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 180. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I40 Branch 200 IFEQ L1700 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 181. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 182. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 183. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 184. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 185. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 186. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 187. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   */

  @Test
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)19;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      long long0 = bigInteger1.longValue();
      int int0 = bigInteger1.bitCount();
      BigInteger bigInteger2 = bigInteger0.multiply(bigInteger1);
      BigInteger bigInteger3 = MathUtils.pow(bigInteger0, bigInteger0);
      double double0 = MathUtils.indicator((double) (byte)19);
      long long1 = MathUtils.pow((long) (byte)19, (int) (byte)19);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) (byte)19;
      doubleArray0[1] = 1.0;
      doubleArray0[2] = (double) (byte)19;
      doubleArray0[3] = (double) 6353754964178307979L;
      doubleArray0[4] = (double) 6353754964178307979L;
      doubleArray0[5] = (double) (byte)19;
      doubleArray0[6] = (double) (byte)19;
      doubleArray0[7] = (double) (byte)19;
      double double1 = MathUtils.distanceInf(doubleArray0, doubleArray0);
      long long2 = MathUtils.gcd(6353754964178307979L, 2514L);
      boolean boolean0 = MathUtils.equalsIncludingNaN(doubleArray0, doubleArray0);
      boolean boolean1 = MathUtils.equalsIncludingNaN((double) 6353754964178307979L, (double) (byte)19, (-756.5159471119));
      boolean boolean2 = MathUtils.equalsIncludingNaN(doubleArray0, doubleArray0);
      short short0 = MathUtils.indicator((short) (-739));
  }

  //Test case number: 92
  /*
   * 33 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1587
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false
   * Goal 7. Weak Mutation 2924: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> -2
   * Goal 8. Weak Mutation 2906: org.apache.commons.math.util.MathUtils.pow(JI)J:1581 - ReplaceComparisonOperator >= -> ==
   * Goal 9. Weak Mutation 2925: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> >=
   * Goal 10. Weak Mutation 2931: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> |
   * Goal 11. Weak Mutation 2932: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> ^
   * Goal 12. Weak Mutation 2933: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> -2
   * Goal 13. Weak Mutation 2934: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> >=
   * Goal 14. Weak Mutation 2942: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> +
   * Goal 15. Weak Mutation 2943: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> %
   * Goal 16. Weak Mutation 2944: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> -
   * Goal 17. Weak Mutation 2945: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> /
   * Goal 18. Weak Mutation 2952: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> +
   * Goal 19. Weak Mutation 2953: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> %
   * Goal 20. Weak Mutation 2954: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> -
   * Goal 21. Weak Mutation 2955: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> /
   * Goal 22. Weak Mutation 2960: org.apache.commons.math.util.MathUtils.pow(JI)J:1594 - ReplaceBitwiseOperator >> -> <<
   * Goal 23. org.apache.commons.math.util.MathUtils.pow(JI)J:positive
   * Goal 24. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 25. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 27. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 30. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 31. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1591
   * Goal 32. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1593
   * Goal 33. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1594
   */

  @Test
  public void test092()  throws Throwable  {
      long long0 = MathUtils.pow((-2623L), 1470);
  }

  //Test case number: 93
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1697
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 7. Weak Mutation 1202: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> >
   * Goal 8. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> ==
   * Goal 9. Weak Mutation 3110: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1691 - ReplaceComparisonOperator >= -> >
   * Goal 10. Weak Mutation 3124: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1699 - ReplaceComparisonOperator != -> ==
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:nonnull
   * Goal 12. org.apache.commons.math.util.MathUtils.factorial(I)J:positive
   * Goal 13. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 14. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   */

  @Test
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      long long0 = bigInteger0.longValueExact();
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)0;
      BigInteger bigInteger1 = new BigInteger(byteArray1);
      BigInteger bigInteger2 = bigInteger0.subtract(bigInteger1);
      BigInteger bigInteger3 = bigInteger0.shiftLeft(0);
      BigInteger bigInteger4 = bigInteger0.abs();
      BigInteger bigInteger5 = MathUtils.pow(bigInteger0, bigInteger0);
      long long1 = MathUtils.factorial((byte)0);
  }

  //Test case number: 94
  /*
   * 149 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1796
   * Goal 2. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1797
   * Goal 3. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1798
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(I)I: Line 904
   * Goal 6. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1800
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 9. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 523
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 11. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 142
   * Goal 12. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 526
   * Goal 13. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 143
   * Goal 14. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 32. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch
   * Goal 34. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true
   * Goal 37. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - false
   * Goal 39. Weak Mutation 3354: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> -1
   * Goal 40. Weak Mutation 3355: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> >
   * Goal 41. Weak Mutation 3371: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> +
   * Goal 42. Weak Mutation 3373: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> *
   * Goal 43. Weak Mutation 3374: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> /
   * Goal 44. Weak Mutation 3372: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> %
   * Goal 45. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 46. Weak Mutation 1615: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> -1
   * Goal 47. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 48. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 49. Weak Mutation 1647: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 50. Weak Mutation 1657: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 51. Weak Mutation 1658: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 52. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 53. Weak Mutation 1868: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> >=
   * Goal 54. Weak Mutation 1885: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> +
   * Goal 55. Weak Mutation 1886: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> %
   * Goal 56. Weak Mutation 1887: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> -
   * Goal 57. Weak Mutation 1901: org.apache.commons.math.util.MathUtils.lcm(JJ)J:991 - ReplaceComparisonOperator != -> >
   * Goal 58. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 59. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 60. Weak Mutation 51: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> <
   * Goal 61. Weak Mutation 1927: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> +
   * Goal 62. Weak Mutation 1928: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> %
   * Goal 63. Weak Mutation 1929: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> -
   * Goal 64. Weak Mutation 1930: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> *
   * Goal 65. Weak Mutation 1110: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator = null -> != null
   * Goal 66. Weak Mutation 1112: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator != null -> = null
   * Goal 67. Weak Mutation 1130: org.apache.commons.math.util.MathUtils.equals([D[D)Z:526 - ReplaceComparisonOperator == -> -2
   * Goal 68. Weak Mutation 1140: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> >
   * Goal 69. Weak Mutation 767: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> -1
   * Goal 70. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:zero
   * Goal 71. org.apache.commons.math.util.MathUtils.lcm(JJ)J:positive
   * Goal 72. org.apache.commons.math.util.MathUtils.log(DD)D:positive
   * Goal 73. org.apache.commons.math.util.MathUtils.equals([D[D)Z:true
   * Goal 74. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 75. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 76. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 77. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 78. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 79. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 80. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 81. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 82. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 83. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 84. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 85. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 86. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch in context: org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:log(DD)D
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 98. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - false in context: 
   * Goal 99. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - true
   * Goal 100. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - true
   * Goal 101. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - true
   * Goal 102. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 103. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - true
   * Goal 104. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I71 Branch 131 IFLE L1062 - false
   * Goal 105. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I79 Branch 132 IFGT L1064 - false
   * Goal 106. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - false
   * Goal 107. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I26 Branch 5 IFGE L143 - false
   * Goal 108. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I34 Branch 6 IFGT L145 - false
   * Goal 109. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - true
   * Goal 110. Weak Mutation 60: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> -1
   * Goal 111. Weak Mutation 67: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> -1
   * Goal 112. Weak Mutation 77: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> +
   * Goal 113. Weak Mutation 78: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> %
   * Goal 114. Weak Mutation 79: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> *
   * Goal 115. Weak Mutation 80: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> /
   * Goal 116. Weak Mutation 84: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceComparisonOperator > -> !=
   * Goal 117. Weak Mutation 90: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> %
   * Goal 118. Weak Mutation 91: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> -
   * Goal 119. Weak Mutation 92: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> *
   * Goal 120. Weak Mutation 93: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> /
   * Goal 121. Weak Mutation 1558: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> >
   * Goal 122. Weak Mutation 1629: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> ==
   * Goal 123. Weak Mutation 1662: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 124. Weak Mutation 1769: org.apache.commons.math.util.MathUtils.indicator(I)I:904 - ReplaceComparisonOperator < -> -2
   * Goal 125. Weak Mutation 1876: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator != -> >
   * Goal 126. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 127. Weak Mutation 1988: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> ==
   * Goal 128. Weak Mutation 2019: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1062 - ReplaceComparisonOperator <= -> -1
   * Goal 129. Weak Mutation 2029: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> +
   * Goal 130. Weak Mutation 2030: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> %
   * Goal 131. Weak Mutation 2031: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> -
   * Goal 132. Weak Mutation 2032: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> *
   * Goal 133. Weak Mutation 2036: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceComparisonOperator > -> !=
   * Goal 134. Weak Mutation 2042: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> +
   * Goal 135. Weak Mutation 2043: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> %
   * Goal 136. Weak Mutation 2044: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> -
   * Goal 137. Weak Mutation 2045: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> /
   * Goal 138. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:negative
   * Goal 139. org.apache.commons.math.util.MathUtils.indicator(I)I:negative
   * Goal 140. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J:negative
   * Goal 141. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 142. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 143. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 144. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 145. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 146. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I71 Branch 131 IFLE L1062 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 147. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - true in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 148. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I79 Branch 132 IFGT L1064 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 149. binomialCoefficientDouble(II)D_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   */

  @Test
  public void test094()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);
      double double0 = MathUtils.log(Double.NEGATIVE_INFINITY, 3124.47303327);
      long long0 = MathUtils.addAndCheck((-1L), (-1L));
      long long1 = MathUtils.lcm(1307674368000L, (-1L));
      int int0 = MathUtils.indicator((-3896));
      long long2 = MathUtils.mulAndCheck((-1L), 1307674368000L);
      int[] intArray0 = new int[6];
      intArray0[0] = (-3896);
      intArray0[1] = (-3896);
      intArray0[2] = (-3896);
      intArray0[3] = (-3896);
      intArray0[4] = 0;
      intArray0[5] = 903;
      int int1 = MathUtils.distanceInf(intArray0, intArray0);
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficientDouble(903, 2829);
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n,k), got n = 903, k = 2,829
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 95
  /*
   * 88 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I37 Branch 130 IFLT L1057 - false
   * Goal 24. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 25. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 26. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 27. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 28. Weak Mutation 1885: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> +
   * Goal 29. Weak Mutation 1886: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> %
   * Goal 30. Weak Mutation 1887: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> -
   * Goal 31. Weak Mutation 1888: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> *
   * Goal 32. Weak Mutation 1901: org.apache.commons.math.util.MathUtils.lcm(JJ)J:991 - ReplaceComparisonOperator != -> >
   * Goal 33. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 34. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 35. Weak Mutation 2833: org.apache.commons.math.util.MathUtils.pow(IJ)I:1551 - ReplaceComparisonOperator >= -> ==
   * Goal 36. Weak Mutation 2851: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> -2
   * Goal 37. Weak Mutation 2852: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> >=
   * Goal 38. Weak Mutation 2859: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> ^
   * Goal 39. Weak Mutation 2863: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> >=
   * Goal 40. Weak Mutation 2875: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> +
   * Goal 41. Weak Mutation 2876: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> %
   * Goal 42. Weak Mutation 2877: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> -
   * Goal 43. Weak Mutation 2878: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> /
   * Goal 44. Weak Mutation 2889: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> +
   * Goal 45. Weak Mutation 2890: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> %
   * Goal 46. Weak Mutation 2891: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> -
   * Goal 47. Weak Mutation 2892: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> /
   * Goal 48. Weak Mutation 2895: org.apache.commons.math.util.MathUtils.pow(IJ)I:1564 - ReplaceBitwiseOperator >> -> <<
   * Goal 49. Weak Mutation 1869: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> <=
   * Goal 50. Weak Mutation 1558: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> >
   * Goal 51. Weak Mutation 1629: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> ==
   * Goal 52. Weak Mutation 1876: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator != -> >
   * Goal 53. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 54. Weak Mutation 2858: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> |
   * Goal 55. Weak Mutation 2862: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> -2
   * Goal 56. Weak Mutation 1987: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> -1
   * Goal 57. Weak Mutation 1999: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> +
   * Goal 58. Weak Mutation 2000: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> %
   * Goal 59. Weak Mutation 2001: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> -
   * Goal 60. Weak Mutation 2002: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> *
   * Goal 61. Weak Mutation 2004: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceComparisonOperator < -> !=
   * Goal 62. Weak Mutation 2010: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> +
   * Goal 63. Weak Mutation 2011: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> %
   * Goal 64. Weak Mutation 2012: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> -
   * Goal 65. Weak Mutation 2013: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> /
   * Goal 66. Weak Mutation 1549: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> <=
   * Goal 67. Weak Mutation 1616: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> ==
   * Goal 68. org.apache.commons.math.util.MathUtils.lcm(JJ)J:positive
   * Goal 69. org.apache.commons.math.util.MathUtils.pow(IJ)I:positive
   * Goal 70. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:positive
   * Goal 71. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 72. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 73. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 74. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 75. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 76. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 81. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 83. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 85. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I37 Branch 130 IFLT L1057 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   */

  @Test
  public void test095()  throws Throwable  {
      long long0 = MathUtils.lcm((-2653L), (-2653L));
      long long1 = MathUtils.mulAndCheck((-2653L), (-1862L));
      int int0 = MathUtils.pow(2337, 4939886L);
  }

  //Test case number: 96
  /*
   * 88 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1856
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false
   * Goal 16. Weak Mutation 1792: org.apache.commons.math.util.MathUtils.indicator(S)S:925 - ReplaceComparisonOperator < -> !=
   * Goal 17. Weak Mutation 3227: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> >
   * Goal 18. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 19. Weak Mutation 872: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> -1
   * Goal 20. Weak Mutation 1110: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator = null -> != null
   * Goal 21. Weak Mutation 1112: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator != null -> = null
   * Goal 22. Weak Mutation 1130: org.apache.commons.math.util.MathUtils.equals([D[D)Z:526 - ReplaceComparisonOperator == -> -2
   * Goal 23. Weak Mutation 1139: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 1140: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 1150: org.apache.commons.math.util.MathUtils.equals([D[D)Z:530 - ReplaceComparisonOperator != -> ==
   * Goal 26. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> ==
   * Goal 27. Weak Mutation 1276: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> ==
   * Goal 28. Weak Mutation 1294: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> !=
   * Goal 29. Weak Mutation 1295: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> -2
   * Goal 30. Weak Mutation 1296: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> >=
   * Goal 31. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> %
   * Goal 32. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> -
   * Goal 33. Weak Mutation 1307: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> *
   * Goal 34. Weak Mutation 1308: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> /
   * Goal 35. org.apache.commons.math.util.MathUtils.indicator(S)S:positive
   * Goal 36. org.apache.commons.math.util.MathUtils.distance([D[D)D:zero
   * Goal 37. org.apache.commons.math.util.MathUtils.equals([D[D)Z:true
   * Goal 38. org.apache.commons.math.util.MathUtils.factorialLog(I)D:positive
   * Goal 39. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 40. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 41. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 42. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 43. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 44. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 45. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 46. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 47. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 48. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 49. Branch org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false in context: org.apache.commons.math.util.MathUtils:indicator(S)S
   * Goal 50. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 51. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 52. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 53. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 54. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 55. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 56. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 57. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 58. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 59. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 60. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 61. org.apache.commons.math.util.MathUtils.checkOrder([D)V: root-Branch
   * Goal 62. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false
   * Goal 63. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - true
   * Goal 64. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 65. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true
   * Goal 66. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false
   * Goal 67. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 68. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - false
   * Goal 69. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I41 Branch 212 IFGT L1830 - false
   * Goal 70. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 71. Weak Mutation 2056: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> -2
   * Goal 72. Weak Mutation 3226: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> -1
   * Goal 73. Weak Mutation 3237: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> +
   * Goal 74. Weak Mutation 3239: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> *
   * Goal 75. Weak Mutation 3240: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> /
   * Goal 76. Weak Mutation 3257: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> %
   * Goal 77. Weak Mutation 3259: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> /
   * Goal 78. Weak Mutation 3260: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> %
   * Goal 79. Weak Mutation 3263: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> /
   * Goal 80. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 81. Weak Mutation 3397: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1829 - ReplaceComparisonOperator == -> !=
   * Goal 82. Weak Mutation 3407: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1830 - ReplaceComparisonOperator > -> !=
   * Goal 83. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   * Goal 84. org.apache.commons.math.util.MathUtils.scalb(DI)D:zero
   * Goal 85. org.apache.commons.math.util.MathUtils.checkOrder([D)V
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.checkOrder([D)V: root-Branch in context: org.apache.commons.math.util.MathUtils:checkOrder([D)V
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   */

  @Test
  public void test096()  throws Throwable  {
      short short0 = MathUtils.indicator((short)2477);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) (short)2477;
      doubleArray0[1] = (double) (short)1;
      doubleArray0[2] = (double) (short)2477;
      doubleArray0[3] = (double) (short)1;
      boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);
      double double0 = MathUtils.scalb(0.0, (short)2477);
      double double1 = MathUtils.factorialLog((short)2477);
      double double2 = MathUtils.distance(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0);
      } catch(IllegalArgumentException e) {
         //
         // points 0 and 1 are not strictly increasing (2,477 >= 1)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 97
  /*
   * 104 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1537
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 486
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 7. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: Line 456
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 9. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 877
   * Goal 10. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 12. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 880
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1521
   * Goal 14. org.apache.commons.math.util.MathUtils.hash([D)I: Line 854
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1527
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1528
   * Goal 17. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1529
   * Goal 18. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1530
   * Goal 19. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1531
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1533
   * Goal 21. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1534
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 23. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 24. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true
   * Goal 35. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false
   * Goal 41. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false
   * Goal 42. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 43. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 44. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 45. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 46. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 47. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 48. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 49. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 50. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 51. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 52. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 53. Weak Mutation 2743: org.apache.commons.math.util.MathUtils.pow(II)I:1521 - ReplaceComparisonOperator >= -> ==
   * Goal 54. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 55. Weak Mutation 1739: org.apache.commons.math.util.MathUtils.indicator(D)D:880 - ReplaceComparisonOperator < -> -2
   * Goal 56. Weak Mutation 2767: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> -2
   * Goal 57. Weak Mutation 2768: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> >=
   * Goal 58. Weak Mutation 2777: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> |
   * Goal 59. Weak Mutation 2778: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> ^
   * Goal 60. Weak Mutation 2779: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> -2
   * Goal 61. Weak Mutation 2780: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> >=
   * Goal 62. Weak Mutation 2794: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> +
   * Goal 63. Weak Mutation 2795: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> %
   * Goal 64. Weak Mutation 2796: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> -
   * Goal 65. Weak Mutation 2797: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> /
   * Goal 66. Weak Mutation 2810: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> +
   * Goal 67. Weak Mutation 2811: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> %
   * Goal 68. Weak Mutation 2812: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> -
   * Goal 69. Weak Mutation 2813: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> /
   * Goal 70. Weak Mutation 2821: org.apache.commons.math.util.MathUtils.pow(II)I:1534 - ReplaceBitwiseOperator >> -> <<
   * Goal 71. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 72. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 73. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 74. Weak Mutation 969: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> +
   * Goal 75. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 76. Weak Mutation 971: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> *
   * Goal 77. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 78. Weak Mutation 979: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> -2
   * Goal 79. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 80. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 81. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 82. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 83. org.apache.commons.math.util.MathUtils.indicator(D)D:negative
   * Goal 84. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:false
   * Goal 85. org.apache.commons.math.util.MathUtils.hash([D)I:positive
   * Goal 86. org.apache.commons.math.util.MathUtils.pow(II)I:negative
   * Goal 87. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 88. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 89. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 90. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 91. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 92. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 93. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 94. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash([D)I
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 98. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 100. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 101. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 102. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 103. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 104. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   */

  @Test
  public void test097()  throws Throwable  {
      int int0 = MathUtils.pow(19, 19);
      double double0 = MathUtils.indicator((-93.54));
      int[] intArray0 = new int[8];
      intArray0[0] = (-306639989);
      intArray0[1] = 19;
      intArray0[2] = 19;
      intArray0[3] = (-306639989);
      intArray0[4] = (-306639989);
      intArray0[5] = 19;
      intArray0[6] = (-306639989);
      intArray0[7] = 19;
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 19;
      doubleArray0[1] = (double) 19;
      doubleArray0[2] = (double) 19;
      int int1 = MathUtils.hash(doubleArray0);
      boolean boolean0 = MathUtils.equalsIncludingNaN((double) (-306639989), 0.041666663879186654, 0.0);
  }

  //Test case number: 98
  /*
   * 35 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I26 Branch 5 IFGE L143 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - false
   * Goal 10. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 11. Weak Mutation 784: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> -1
   * Goal 12. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 13. Weak Mutation 60: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> -1
   * Goal 14. Weak Mutation 49: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> -1
   * Goal 15. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 16. Weak Mutation 2714: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> >
   * Goal 17. Weak Mutation 68: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> ==
   * Goal 18. Weak Mutation 109: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> -
   * Goal 19. Weak Mutation 110: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> *
   * Goal 20. Weak Mutation 111: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> /
   * Goal 21. Weak Mutation 1741: org.apache.commons.math.util.MathUtils.indicator(D)D:880 - ReplaceComparisonOperator < -> <=
   * Goal 22. Weak Mutation 108: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> %
   * Goal 23. org.apache.commons.math.util.MathUtils.indicator(D)D:positive
   * Goal 24. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:negative
   * Goal 25. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 26. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 27. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 28. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 29. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 30. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 31. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - false in context: 
   * Goal 32. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 33. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 34. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 35. binomialCoefficientLog(II)D_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   */

  @Test
  public void test098()  throws Throwable  {
      double double0 = MathUtils.indicator(0.0);
      long long0 = MathUtils.subAndCheck(2148L, 39916800L);
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficientLog((-286), (-2131));
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for binomial coefficient (n,k), got n = -286
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 99
  /*
   * 111 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 196
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 324
   * Goal 4. org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch
   * Goal 5. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false
   * Goal 11. Weak Mutation 3276: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> >
   * Goal 12. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 13. Weak Mutation 1758: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> !=
   * Goal 14. Weak Mutation 166: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> >=
   * Goal 15. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 16. org.apache.commons.math.util.MathUtils.distance([I[I)D:zero
   * Goal 17. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 18. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 19. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 20. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 21. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash(D)I
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 26. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I70 Branch 14 IF_ICMPGT L215 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true
   * Goal 38. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true
   * Goal 40. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - false
   * Goal 41. Weak Mutation 174: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator != -> >
   * Goal 42. Weak Mutation 183: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 193: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> +
   * Goal 44. Weak Mutation 194: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> %
   * Goal 45. Weak Mutation 195: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> *
   * Goal 46. Weak Mutation 196: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> /
   * Goal 47. Weak Mutation 199: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator != -> >
   * Goal 48. Weak Mutation 216: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> +
   * Goal 49. Weak Mutation 218: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> -
   * Goal 50. Weak Mutation 222: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceComparisonOperator <= -> ==
   * Goal 51. Weak Mutation 251: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:212 - ReplaceComparisonOperator > -> !=
   * Goal 52. Weak Mutation 262: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> +
   * Goal 53. Weak Mutation 263: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> %
   * Goal 54. Weak Mutation 264: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> *
   * Goal 55. Weak Mutation 265: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> /
   * Goal 56. Weak Mutation 267: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> %
   * Goal 57. Weak Mutation 268: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> -
   * Goal 58. Weak Mutation 269: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> *
   * Goal 59. Weak Mutation 270: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> /
   * Goal 60. Weak Mutation 285: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:215 - ReplaceComparisonOperator > -> -2
   * Goal 61. Weak Mutation 570: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator == -> >=
   * Goal 62. Weak Mutation 578: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator != -> >
   * Goal 63. Weak Mutation 586: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator == -> !=
   * Goal 64. Weak Mutation 596: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> +
   * Goal 65. Weak Mutation 597: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> %
   * Goal 66. Weak Mutation 598: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> *
   * Goal 67. Weak Mutation 599: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> /
   * Goal 68. Weak Mutation 602: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator != -> >
   * Goal 69. Weak Mutation 616: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:324 - ReplaceComparisonOperator >= -> -1
   * Goal 70. Weak Mutation 768: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> >
   * Goal 71. Weak Mutation 784: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> -1
   * Goal 72. Weak Mutation 786: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> >
   * Goal 73. Weak Mutation 2057: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> >=
   * Goal 74. Weak Mutation 2063: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator != -> ==
   * Goal 75. Weak Mutation 2068: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> !=
   * Goal 76. Weak Mutation 2083: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> |
   * Goal 77. Weak Mutation 2084: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> ^
   * Goal 78. Weak Mutation 2092: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> |
   * Goal 79. Weak Mutation 2093: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> ^
   * Goal 80. Weak Mutation 2108: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>
   * Goal 81. Weak Mutation 2109: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>>
   * Goal 82. Weak Mutation 2110: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> %
   * Goal 83. Weak Mutation 2111: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> -
   * Goal 84. Weak Mutation 2112: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> *
   * Goal 85. Weak Mutation 2113: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> /
   * Goal 86. Weak Mutation 2115: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator | -> &
   * Goal 87. org.apache.commons.math.util.MathUtils.indicator(F)F:positive
   * Goal 88. org.apache.commons.math.util.MathUtils.hash(D)I:negative
   * Goal 89. org.apache.commons.math.util.MathUtils.scalb(DI)D:positive
   * Goal 90. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:zero
   * Goal 91. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 92. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 93. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 94. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 95. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 96. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 98. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 100. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 101. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 102. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 103. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 104. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 105. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 106. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 107. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 215
   * Goal 108. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 219
   * Goal 109. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 325
   * Goal 110. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 372
   * Goal 111. binomialCoefficient(II)J_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   */

  @Test
  public void test099()  throws Throwable  {
      int int0 = MathUtils.hash(2557.083555739712);
      double double0 = MathUtils.scalb(2557.083555739712, (-474));
      int[] intArray0 = new int[0];
      double double1 = MathUtils.distance(intArray0, intArray0);
      float float0 = MathUtils.indicator(1579.66F);
      double double2 = MathUtils.binomialCoefficientLog(0, (-2022532928));
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficient((-474), (-474));
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for binomial coefficient (n,k), got n = -474
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 100
  /*
   * 29 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 102
   * Goal 2. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false
   * Goal 4. Weak Mutation 3156: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> -1
   * Goal 5. Weak Mutation 3157: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> >
   * Goal 6. Weak Mutation 3171: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> +
   * Goal 7. Weak Mutation 3173: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> *
   * Goal 8. Weak Mutation 3174: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> /
   * Goal 9. Weak Mutation 3175: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> %
   * Goal 10. Weak Mutation 3178: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> /
   * Goal 11. org.apache.commons.math.util.MathUtils.distance1([D[D)D:zero
   * Goal 12. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 13. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 16. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 18. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 19. Weak Mutation 9: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> -
   * Goal 20. Weak Mutation 10: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> *
   * Goal 21. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 22. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 23. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 24. Weak Mutation 3172: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> %
   * Goal 25. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:positive
   * Goal 26. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 27. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   */

  @Test
  public void test100()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 2938.826313122192;
      doubleArray0[1] = 2.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-2822.9447557895);
      double double0 = MathUtils.distance1(doubleArray0, doubleArray0);
      MathUtils.OrderDirection[] mathUtils_OrderDirectionArray0 = MathUtils.OrderDirection.values();
      int int0 = MathUtils.addAndCheck(883, 883);
      // Undeclared exception!
      try { 
        MathUtils.OrderDirection.valueOf("?;C");
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.apache.commons.math.util.MathUtils.OrderDirection.?;C
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  //Test case number: 101
  /*
   * 29 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 529
   * Goal 2. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DD)Z: I7 Branch 39 IFNE L417 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false
   * Goal 12. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 13. Weak Mutation 861: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> ==
   * Goal 14. Weak Mutation 872: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> -1
   * Goal 15. Weak Mutation 1110: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator = null -> != null
   * Goal 16. Weak Mutation 1112: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator != null -> = null
   * Goal 17. Weak Mutation 1130: org.apache.commons.math.util.MathUtils.equals([D[D)Z:526 - ReplaceComparisonOperator == -> -2
   * Goal 18. Weak Mutation 1139: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> -1
   * Goal 19. Weak Mutation 1140: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> >
   * Goal 20. Weak Mutation 1150: org.apache.commons.math.util.MathUtils.equals([D[D)Z:530 - ReplaceComparisonOperator != -> ==
   * Goal 21. org.apache.commons.math.util.MathUtils.equals([D[D)Z:true
   * Goal 22. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 23. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 27. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   */

  @Test
  public void test101()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-1678.4607303623914);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1.2675934823758863E-8;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 339.01609644731;
      doubleArray0[5] = (-1710.0);
      doubleArray0[6] = (-1203.62109702);
      doubleArray0[7] = 1846.275655763773;
      doubleArray0[8] = Double.NaN;
      boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);
  }

  //Test case number: 102
  /*
   * 47 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 529
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 417
   * Goal 3. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 530
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true
   * Goal 15. Weak Mutation 1792: org.apache.commons.math.util.MathUtils.indicator(S)S:925 - ReplaceComparisonOperator < -> !=
   * Goal 16. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 17. Weak Mutation 872: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> -1
   * Goal 18. Weak Mutation 1110: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator = null -> != null
   * Goal 19. Weak Mutation 1112: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 1130: org.apache.commons.math.util.MathUtils.equals([D[D)Z:526 - ReplaceComparisonOperator == -> -2
   * Goal 21. Weak Mutation 1139: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> -1
   * Goal 22. Weak Mutation 1140: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> >
   * Goal 23. Weak Mutation 1150: org.apache.commons.math.util.MathUtils.equals([D[D)Z:530 - ReplaceComparisonOperator != -> ==
   * Goal 24. Weak Mutation 873: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> <
   * Goal 25. Weak Mutation 1771: org.apache.commons.math.util.MathUtils.indicator(I)I:904 - ReplaceComparisonOperator < -> <=
   * Goal 26. org.apache.commons.math.util.MathUtils.indicator(S)S:positive
   * Goal 27. org.apache.commons.math.util.MathUtils.indicator(I)I:positive
   * Goal 28. org.apache.commons.math.util.MathUtils.equals([D[D)Z:true
   * Goal 29. org.apache.commons.math.util.MathUtils.equals(DD)Z:false
   * Goal 30. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 31. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 32. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 33. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 34. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 35. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 36. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 37. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 38. Branch org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false in context: org.apache.commons.math.util.MathUtils:indicator(S)S
   * Goal 39. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 40. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 41. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 42. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 43. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 45. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 46. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 47. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   */

  @Test
  public void test102()  throws Throwable  {
      short short0 = MathUtils.indicator((short)1803);
      boolean boolean0 = MathUtils.equals((double) (short)1803, 1097.8586);
      int int0 = MathUtils.indicator(0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) (short)1803;
      doubleArray0[1] = (double) (short)1;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) (short)1;
      boolean boolean1 = MathUtils.equals(doubleArray0, doubleArray0);
  }

  //Test case number: 103
  /*
   * 89 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1537
   * Goal 2. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 523
   * Goal 3. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 526
   * Goal 4. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1104
   * Goal 5. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 529
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1521
   * Goal 7. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1109
   * Goal 8. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1110
   * Goal 9. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 534
   * Goal 10. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1111
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1527
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1528
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1529
   * Goal 14. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1114
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1530
   * Goal 16. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1115
   * Goal 17. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1531
   * Goal 18. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1533
   * Goal 19. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1822
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1534
   * Goal 21. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false
   * Goal 33. Weak Mutation 2821: org.apache.commons.math.util.MathUtils.pow(II)I:1534 - ReplaceBitwiseOperator >> -> <<
   * Goal 34. Weak Mutation 2057: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> >=
   * Goal 35. Weak Mutation 2063: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator != -> ==
   * Goal 36. Weak Mutation 2068: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 2083: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> |
   * Goal 38. Weak Mutation 2084: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> ^
   * Goal 39. Weak Mutation 2092: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> |
   * Goal 40. Weak Mutation 2093: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> ^
   * Goal 41. Weak Mutation 2108: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>
   * Goal 42. Weak Mutation 2109: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>>
   * Goal 43. Weak Mutation 2110: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> %
   * Goal 44. Weak Mutation 2111: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> -
   * Goal 45. Weak Mutation 2112: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> *
   * Goal 46. Weak Mutation 2113: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> /
   * Goal 47. Weak Mutation 2115: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator | -> &
   * Goal 48. Weak Mutation 1110: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator = null -> != null
   * Goal 49. Weak Mutation 1112: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator != null -> = null
   * Goal 50. Weak Mutation 1130: org.apache.commons.math.util.MathUtils.equals([D[D)Z:526 - ReplaceComparisonOperator == -> -2
   * Goal 51. Weak Mutation 1140: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> >
   * Goal 52. Weak Mutation 2743: org.apache.commons.math.util.MathUtils.pow(II)I:1521 - ReplaceComparisonOperator >= -> ==
   * Goal 53. Weak Mutation 2767: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> -2
   * Goal 54. Weak Mutation 2768: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> >=
   * Goal 55. Weak Mutation 2777: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> |
   * Goal 56. Weak Mutation 2778: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> ^
   * Goal 57. Weak Mutation 2779: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> -2
   * Goal 58. Weak Mutation 2780: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> >=
   * Goal 59. Weak Mutation 2794: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> +
   * Goal 60. Weak Mutation 2795: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> %
   * Goal 61. Weak Mutation 2796: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> -
   * Goal 62. Weak Mutation 2797: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> /
   * Goal 63. Weak Mutation 2810: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> +
   * Goal 64. Weak Mutation 2811: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> %
   * Goal 65. Weak Mutation 2812: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> -
   * Goal 66. Weak Mutation 2813: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> /
   * Goal 67. org.apache.commons.math.util.MathUtils.scalb(DI)D:positive
   * Goal 68. org.apache.commons.math.util.MathUtils.pow(II)I:zero
   * Goal 69. org.apache.commons.math.util.MathUtils.equals([D[D)Z:true
   * Goal 70. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 71. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 72. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 73. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 74. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 75. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 76. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 81. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 83. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 85. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 89. checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   */

  @Test
  public void test103()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);
      int int0 = MathUtils.pow(1814, 1814);
      double double0 = MathUtils.scalb(1814, 41);
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.DECREASING;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, true);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 104
  /*
   * 25 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1765
   * Goal 2. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1766
   * Goal 3. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1767
   * Goal 4. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1768
   * Goal 5. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1770
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1691
   * Goal 7. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false
   * Goal 9. Weak Mutation 3275: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> -1
   * Goal 10. Weak Mutation 3276: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> >
   * Goal 11. Weak Mutation 3286: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> +
   * Goal 12. Weak Mutation 3287: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> %
   * Goal 13. Weak Mutation 3288: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> *
   * Goal 14. Weak Mutation 3289: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> /
   * Goal 15. Weak Mutation 3306: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> %
   * Goal 16. Weak Mutation 3308: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> /
   * Goal 17. Weak Mutation 3309: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> %
   * Goal 18. Weak Mutation 3312: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> /
   * Goal 19. org.apache.commons.math.util.MathUtils.distance([I[I)D:zero
   * Goal 20. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 21. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 22. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 25. pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;_java.lang.NullPointerException_IMPLICIT
   */

  @Test
  public void test104()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-3319);
      intArray0[1] = 0;
      intArray0[2] = (-780);
      double double0 = MathUtils.distance(intArray0, intArray0);
      // Undeclared exception!
      try { 
        MathUtils.pow((BigInteger) null, (BigInteger) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 105
  /*
   * 155 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1410
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 16. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 26. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 33. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 35. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 36. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 37. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 38. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 39. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 40. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 41. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 42. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 43. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 44. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 45. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 46. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 47. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 48. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 49. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 50. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 51. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 52. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 53. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 54. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 55. Weak Mutation 1260: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> -1
   * Goal 56. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 57. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 58. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 59. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 60. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 61. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 62. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 63. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 64. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 65. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 66. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 67. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 68. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 69. Weak Mutation 2350: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> %
   * Goal 70. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 71. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 72. Weak Mutation 2572: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> -1
   * Goal 73. Weak Mutation 940: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> !=
   * Goal 74. Weak Mutation 1757: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> -2
   * Goal 75. Weak Mutation 2338: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> /
   * Goal 76. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 77. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 78. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 79. Weak Mutation 979: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> -2
   * Goal 80. org.apache.commons.math.util.MathUtils.lcm(JJ)J:zero
   * Goal 81. org.apache.commons.math.util.MathUtils.sign(F)F:zero
   * Goal 82. org.apache.commons.math.util.MathUtils.equals(DDD)Z:true
   * Goal 83. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:false
   * Goal 84. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 85. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 86. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 87. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 88. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 89. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 90. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 91. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 92. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - false in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true in context: 
   * Goal 98. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 100. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 101. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 102. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 103. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 104. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 105. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 106. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 107. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 108. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 109. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 110. factorialLog(I)D_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   * Goal 111. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 112. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 113. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true
   * Goal 114. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true
   * Goal 115. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false
   * Goal 116. org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true
   * Goal 117. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true
   * Goal 118. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - false
   * Goal 119. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - false
   * Goal 120. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> ==
   * Goal 121. Weak Mutation 1276: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> ==
   * Goal 122. Weak Mutation 1294: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> !=
   * Goal 123. Weak Mutation 1295: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> -2
   * Goal 124. Weak Mutation 1296: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> >=
   * Goal 125. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> %
   * Goal 126. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> -
   * Goal 127. Weak Mutation 1307: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> *
   * Goal 128. Weak Mutation 1308: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> /
   * Goal 129. Weak Mutation 1869: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> <=
   * Goal 130. Weak Mutation 1874: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator != -> -1
   * Goal 131. Weak Mutation 2352: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> *
   * Goal 132. Weak Mutation 2907: org.apache.commons.math.util.MathUtils.pow(JI)J:1581 - ReplaceComparisonOperator >= -> >
   * Goal 133. Weak Mutation 2924: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> -2
   * Goal 134. org.apache.commons.math.util.MathUtils.factorialLog(I)D:positive
   * Goal 135. org.apache.commons.math.util.MathUtils.round(FI)F:positive
   * Goal 136. org.apache.commons.math.util.MathUtils.pow(JI)J:positive
   * Goal 137. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 138. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 139. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 140. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 141. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 142. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 143. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 144. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 145. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - false in context: 
   * Goal 146. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 147. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 148. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 149. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 150. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 151. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1581
   * Goal 152. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1587
   * Goal 153. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1588
   * Goal 154. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1589
   * Goal 155. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1597
   */

  @Test
  public void test105()  throws Throwable  {
      long long0 = MathUtils.pow((-3958705157555305932L), 0);
      float float0 = MathUtils.sign((float) 0);
      long long1 = MathUtils.lcm((-432L), 0L);
      float float1 = MathUtils.round((float) (-3958705157555305932L), 3635);
      boolean boolean0 = MathUtils.equalsIncludingNaN(0.0, (double) (-3958705157555305932L), 0.0);
      double double0 = MathUtils.factorialLog(3635);
      boolean boolean1 = MathUtils.equals((-675.424216), 0.0, 26171.07270118579);
      // Undeclared exception!
      try { 
        MathUtils.factorialLog((-193));
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for n!, got n = -193
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 106
  /*
   * 94 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 102
   * Goal 5. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 103
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 7. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: Line 456
   * Goal 8. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1225
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 106
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 11. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 688
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 689
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 690
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 691
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch
   * Goal 28. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - true
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true
   * Goal 38. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 39. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 41. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 42. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 43. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 44. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 45. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 46. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 47. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 48. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 49. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 50. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 51. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 52. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 53. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 54. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 55. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 56. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 57. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 58. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 59. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 60. Weak Mutation 969: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> +
   * Goal 61. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 62. Weak Mutation 971: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> *
   * Goal 63. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 64. Weak Mutation 1329: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> -2
   * Goal 65. Weak Mutation 1353: org.apache.commons.math.util.MathUtils.gcd(II)I:691 - ReplaceComparisonOperator == -> >=
   * Goal 66. Weak Mutation 1367: org.apache.commons.math.util.MathUtils.gcd(II)I:691 - ReplaceComparisonOperator != -> <
   * Goal 67. Weak Mutation 1395: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> %
   * Goal 68. Weak Mutation 1398: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> /
   * Goal 69. org.apache.commons.math.util.MathUtils.equals(DDD)Z:true
   * Goal 70. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:true
   * Goal 71. org.apache.commons.math.util.MathUtils.round(DI)D:positive
   * Goal 72. org.apache.commons.math.util.MathUtils.gcd(II)I:zero
   * Goal 73. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:zero
   * Goal 74. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 75. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 76. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 77. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 78. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 79. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 80. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 81. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 82. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 83. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch in context: org.apache.commons.math.util.MathUtils:round(DI)D
   * Goal 85. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - true in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 92. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - false
   * Goal 93. Weak Mutation 980: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> !=
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   */

  @Test
  public void test106()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(10.0, 10.0, 10.0);
      int int0 = MathUtils.gcd(0, 0);
      int int1 = MathUtils.addAndCheck(0, 0);
      boolean boolean1 = MathUtils.equalsIncludingNaN(3.141592653589793, (double) 0, 806.2736);
      double double0 = MathUtils.round(951.6997, 243);
  }

  //Test case number: 107
  /*
   * 64 covered goals:
   * Goal 1. round(DII)D_java.lang.ArithmeticException_IMPLICIT
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I26 Branch 5 IFGE L143 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - false
   * Goal 19. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 20. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 21. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 22. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 23. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 24. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 25. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 26. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 27. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 28. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 29. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 30. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 31. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 32. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 33. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 34. Weak Mutation 940: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> !=
   * Goal 35. Weak Mutation 60: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> -1
   * Goal 36. Weak Mutation 1791: org.apache.commons.math.util.MathUtils.indicator(S)S:925 - ReplaceComparisonOperator < -> -2
   * Goal 37. Weak Mutation 49: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> -1
   * Goal 38. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 39. Weak Mutation 2714: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> >
   * Goal 40. Weak Mutation 68: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> ==
   * Goal 41. Weak Mutation 109: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> -
   * Goal 42. Weak Mutation 110: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> *
   * Goal 43. Weak Mutation 111: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> /
   * Goal 44. Weak Mutation 2609: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator != -> -1
   * Goal 45. Weak Mutation 69: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> >
   * Goal 46. Weak Mutation 108: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> %
   * Goal 47. org.apache.commons.math.util.MathUtils.indicator(S)S:negative
   * Goal 48. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:negative
   * Goal 49. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:zero
   * Goal 50. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:zero
   * Goal 51. org.apache.commons.math.util.MathUtils.sign(J)J:zero
   * Goal 52. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 53. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 54. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 55. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 56. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 57. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 58. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 59. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 60. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 61. Branch org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - true in context: org.apache.commons.math.util.MathUtils:indicator(S)S
   * Goal 62. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 63. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 64. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - false in context: org.apache.commons.math.util.MathUtils:sign(J)J
   */

  @Test
  public void test107()  throws Throwable  {
      long long0 = MathUtils.subAndCheck(362880L, 362880L);
      short short0 = MathUtils.indicator((short) (-1053));
      long long1 = MathUtils.subAndCheck(0L, 362880L);
      long long2 = MathUtils.sign(0L);
      int int0 = MathUtils.compareTo(0L, 491.53859, 1655.6314616823295);
      // Undeclared exception!
      try { 
        MathUtils.round(3.9905587E7, (-2141518414), 0);
      } catch(ArithmeticException e) {
         //
         // BigInteger would overflow supported range
         //
         assertThrownBy("java.math.BigInteger", e);
      }
  }

  //Test case number: 108
  /*
   * 36 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - false
   * Goal 9. Weak Mutation 3276: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> >
   * Goal 10. Weak Mutation 166: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> >=
   * Goal 11. Weak Mutation 172: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 13. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 14. Weak Mutation 1717: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> -2
   * Goal 15. Weak Mutation 2610: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator != -> <
   * Goal 16. Weak Mutation 2617: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator <= -> -1
   * Goal 17. org.apache.commons.math.util.MathUtils.distance([I[I)D:zero
   * Goal 18. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:positive
   * Goal 19. org.apache.commons.math.util.MathUtils.indicator(B)B:negative
   * Goal 20. org.apache.commons.math.util.MathUtils.sign(J)J:positive
   * Goal 21. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 22. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 23. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 24. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 25. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 26. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 27. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 28. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 29. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 30. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 31. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 32. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 33. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 34. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - true in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 35. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - false in context: org.apache.commons.math.util.MathUtils:sign(J)J
   */

  @Test
  public void test108()  throws Throwable  {
      int[] intArray0 = new int[0];
      int[] intArray1 = new int[2];
      intArray1[1] = 0;
      double double0 = MathUtils.distance(intArray0, intArray1);
      long long0 = MathUtils.binomialCoefficient(3531, 0);
      double double1 = MathUtils.distance(intArray0, intArray1);
      byte byte0 = MathUtils.indicator((byte) (-57));
      long long1 = MathUtils.sign(1L);
  }

  //Test case number: 109
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 2. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 4. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 5. Weak Mutation 768: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> >
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:positive
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - true
   * Goal 12. Weak Mutation 165: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> -2
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   */

  @Test
  public void test109()  throws Throwable  {
      long long0 = MathUtils.binomialCoefficient(18, 18);
  }

  //Test case number: 110
  /*
   * 74 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1344
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 13. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 17. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 18. Weak Mutation 1758: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> !=
   * Goal 19. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 20. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 21. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 22. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 23. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 24. Weak Mutation 2672: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> %
   * Goal 25. Weak Mutation 2674: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> /
   * Goal 26. Weak Mutation 2682: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator < -> !=
   * Goal 27. Weak Mutation 2691: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator <= -> ==
   * Goal 28. Weak Mutation 2338: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> /
   * Goal 29. Weak Mutation 2352: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> *
   * Goal 30. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 31. Weak Mutation 2671: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> +
   * Goal 32. Weak Mutation 2673: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> *
   * Goal 33. org.apache.commons.math.util.MathUtils.round(FII)F:positive
   * Goal 34. org.apache.commons.math.util.MathUtils.subAndCheck(II)I:negative
   * Goal 35. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 36. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 37. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 38. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 39. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 40. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 41. Branch org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FII)F
   * Goal 42. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 43. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 45. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 46. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 47. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 48. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 49. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 50. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 51. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false in context: 
   * Goal 52. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 53. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 54. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - false
   * Goal 55. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I37 Branch 130 IFLT L1057 - false
   * Goal 56. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - true
   * Goal 57. Weak Mutation 1971: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> <
   * Goal 58. Weak Mutation 1987: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> -1
   * Goal 59. Weak Mutation 1999: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> +
   * Goal 60. Weak Mutation 2000: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> %
   * Goal 61. Weak Mutation 2001: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> -
   * Goal 62. Weak Mutation 2002: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> *
   * Goal 63. Weak Mutation 2004: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceComparisonOperator < -> !=
   * Goal 64. Weak Mutation 2010: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> +
   * Goal 65. Weak Mutation 2011: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> %
   * Goal 66. Weak Mutation 2012: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> -
   * Goal 67. Weak Mutation 2013: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> /
   * Goal 68. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:positive
   * Goal 69. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 70. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I37 Branch 130 IFLT L1057 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 71. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - true in context: 
   * Goal 72. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1057
   * Goal 73. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1058
   * Goal 74. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1345
   */

  @Test
  public void test110()  throws Throwable  {
      long long0 = MathUtils.mulAndCheck((-1516L), (-1516L));
      int int0 = MathUtils.subAndCheck(210, 2061);
      float float0 = MathUtils.round((float) 2061, (-327), 0);
  }

  //Test case number: 111
  /*
   * 32 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1557
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false
   * Goal 6. Weak Mutation 2833: org.apache.commons.math.util.MathUtils.pow(IJ)I:1551 - ReplaceComparisonOperator >= -> ==
   * Goal 7. Weak Mutation 2851: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> -2
   * Goal 8. Weak Mutation 2852: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> >=
   * Goal 9. Weak Mutation 2859: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> ^
   * Goal 10. Weak Mutation 2863: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> >=
   * Goal 11. Weak Mutation 2875: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> +
   * Goal 12. Weak Mutation 2876: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> %
   * Goal 13. Weak Mutation 2877: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> -
   * Goal 14. Weak Mutation 2878: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> /
   * Goal 15. Weak Mutation 2889: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> +
   * Goal 16. Weak Mutation 2890: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> %
   * Goal 17. Weak Mutation 2891: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> -
   * Goal 18. Weak Mutation 2892: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> /
   * Goal 19. Weak Mutation 2895: org.apache.commons.math.util.MathUtils.pow(IJ)I:1564 - ReplaceBitwiseOperator >> -> <<
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(IJ)I:negative
   * Goal 21. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 22. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 23. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 27. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 28. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true
   * Goal 29. Weak Mutation 2858: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> |
   * Goal 30. Weak Mutation 2862: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> -2
   * Goal 31. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 32. checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   */

  @Test
  public void test111()  throws Throwable  {
      int int0 = MathUtils.pow(2175, (long) 2175);
      double[] doubleArray0 = new double[0];
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.DECREASING;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, false);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 112
  /*
   * 44 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1185
   * Goal 2. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1188
   * Goal 3. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true
   * Goal 14. Weak Mutation 2174: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1165 - ReplaceComparisonOperator == -> !=
   * Goal 15. Weak Mutation 2180: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1169 - ReplaceComparisonOperator == -> !=
   * Goal 16. Weak Mutation 2196: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> -1
   * Goal 17. Weak Mutation 2197: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> >
   * Goal 18. Weak Mutation 2204: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1177 - ReplaceComparisonOperator == -> !=
   * Goal 19. Weak Mutation 2223: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1181 - ReplaceComparisonOperator != -> ==
   * Goal 20. Weak Mutation 2234: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> %
   * Goal 21. Weak Mutation 2237: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> /
   * Goal 22. Weak Mutation 1780: org.apache.commons.math.util.MathUtils.indicator(J)J:914 - ReplaceComparisonOperator < -> !=
   * Goal 23. Weak Mutation 2235: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> -
   * Goal 24. Weak Mutation 2236: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> *
   * Goal 25. Weak Mutation 2259: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> -1
   * Goal 26. Weak Mutation 2260: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> >
   * Goal 27. Weak Mutation 2247: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1185 - ReplaceComparisonOperator != -> <
   * Goal 28. org.apache.commons.math.util.MathUtils.indicator(J)J:positive
   * Goal 29. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:nonempty
   * Goal 30. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 31. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 32. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 33. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 34. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 35. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 37. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 38. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 39. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 40. Branch org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false in context: org.apache.commons.math.util.MathUtils:indicator(J)J
   * Goal 41. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 42. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 43. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   */

  @Test
  public void test112()  throws Throwable  {
      long long0 = MathUtils.indicator(851L);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 851L;
      doubleArray0[1] = (double) 1L;
      doubleArray0[2] = (double) 1L;
      doubleArray0[3] = (double) 851L;
      doubleArray0[4] = 3059.06;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (double) 851L;
      doubleArray0[7] = (double) 1L;
      double[] doubleArray1 = MathUtils.normalizeArray(doubleArray0, 0.0);
  }

  //Test case number: 113
  /*
   * 83 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(I)I: Line 904
   * Goal 6. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1225
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 8. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 877
   * Goal 9. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 880
   * Goal 12. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: Line 1139
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1661
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1662
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch
   * Goal 28. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - false
   * Goal 29. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 30. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 31. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 32. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 33. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 34. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 35. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 36. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 37. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 38. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 39. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 40. Weak Mutation 1770: org.apache.commons.math.util.MathUtils.indicator(I)I:904 - ReplaceComparisonOperator < -> !=
   * Goal 41. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 42. Weak Mutation 1740: org.apache.commons.math.util.MathUtils.indicator(D)D:880 - ReplaceComparisonOperator < -> !=
   * Goal 43. Weak Mutation 2140: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> %
   * Goal 44. Weak Mutation 2141: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> -
   * Goal 45. Weak Mutation 2142: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> *
   * Goal 46. Weak Mutation 2143: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> /
   * Goal 47. Weak Mutation 2149: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> +
   * Goal 48. Weak Mutation 2150: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 49. Weak Mutation 2151: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> *
   * Goal 50. Weak Mutation 2152: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 51. Weak Mutation 2158: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> +
   * Goal 52. Weak Mutation 2159: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> %
   * Goal 53. Weak Mutation 2160: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> -
   * Goal 54. Weak Mutation 2161: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> *
   * Goal 55. Weak Mutation 2163: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> %
   * Goal 56. Weak Mutation 2165: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> /
   * Goal 57. Weak Mutation 2167: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 58. Weak Mutation 2169: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 59. Weak Mutation 3065: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1661 - ReplaceComparisonOperator >= -> -1
   * Goal 60. org.apache.commons.math.util.MathUtils.indicator(I)I:positive
   * Goal 61. org.apache.commons.math.util.MathUtils.indicator(D)D:positive
   * Goal 62. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:false
   * Goal 63. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:positive
   * Goal 64. org.apache.commons.math.util.MathUtils.round(DII)D:positive
   * Goal 65. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 66. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 67. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 68. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 69. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 70. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 71. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 72. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 73. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 74. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 75. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 76. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 77. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:normalizeAngle(DD)D
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 81. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 83. pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   */

  @Test
  public void test113()  throws Throwable  {
      int int0 = MathUtils.indicator(2446);
      double double0 = MathUtils.indicator((double) 1);
      double double1 = MathUtils.normalizeAngle(1, 1.0);
      boolean boolean0 = MathUtils.equalsIncludingNaN((double) 2446, 0.0);
      double double2 = MathUtils.round((double) 2446, 2446, 1);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-87);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      try { 
        MathUtils.pow(bigInteger0, (long) (byte) (-87));
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (-87^-87)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 114
  /*
   * 23 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 272
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - true
   * Goal 7. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 8. Weak Mutation 1758: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> !=
   * Goal 9. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 10. Weak Mutation 768: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> >
   * Goal 11. Weak Mutation 387: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> -2
   * Goal 12. org.apache.commons.math.util.MathUtils.indicator(F)F:positive
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   * Goal 14. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 15. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 16. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 17. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 23. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 273
   */

  @Test
  public void test114()  throws Throwable  {
      float float0 = MathUtils.indicator(2566.9F);
      double double0 = MathUtils.binomialCoefficientDouble(1058, 1058);
  }

  //Test case number: 115
  /*
   * 42 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(B)B: Line 865
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1691
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 17. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 18. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 19. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 20. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 21. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 22. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 23. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 24. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 25. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 26. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 28. Weak Mutation 3108: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1691 - ReplaceComparisonOperator >= -> -1
   * Goal 29. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 30. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 31. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 32. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 33. pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   * Goal 34. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - true
   * Goal 35. Weak Mutation 1717: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> -2
   * Goal 36. org.apache.commons.math.util.MathUtils.indicator(B)B:negative
   * Goal 37. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:false
   * Goal 38. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 39. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 40. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 41. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - true in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 42. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   */

  @Test
  public void test115()  throws Throwable  {
      MathUtils.OrderDirection[] mathUtils_OrderDirectionArray0 = MathUtils.OrderDirection.values();
      boolean boolean0 = MathUtils.equalsIncludingNaN(510.3528019, 0.0);
      byte byte0 = MathUtils.indicator((byte) (-62));
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-62);
      byteArray0[1] = (byte) (-62);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-62);
      byteArray0[5] = (byte) (-1);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      try { 
        MathUtils.pow(bigInteger0, bigInteger0);
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (-67,332,202,315,009^-67,332,202,315,009)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 116
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distance1([I[I)I: Line 1734
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - false
   * Goal 5. Weak Mutation 2629: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator != -> -1
   * Goal 6. Weak Mutation 3190: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1735 - ReplaceComparisonOperator >= -> -1
   * Goal 7. Weak Mutation 3191: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1735 - ReplaceComparisonOperator >= -> >
   * Goal 8. Weak Mutation 3208: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> %
   * Goal 9. Weak Mutation 3210: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> /
   * Goal 10. Weak Mutation 3211: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> %
   * Goal 11. Weak Mutation 3214: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> /
   * Goal 12. org.apache.commons.math.util.MathUtils.sign(S)S:zero
   * Goal 13. org.apache.commons.math.util.MathUtils.distance1([I[I)I:zero
   * Goal 14. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 15. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 16. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 17. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - false in context: org.apache.commons.math.util.MathUtils:distance1([I[I)I
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true in context: org.apache.commons.math.util.MathUtils:distance1([I[I)I
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - false in context: org.apache.commons.math.util.MathUtils:sign(S)S
   */

  @Test
  public void test116()  throws Throwable  {
      short short0 = MathUtils.sign((short)0);
      int[] intArray0 = new int[6];
      intArray0[0] = (int) (short)0;
      intArray0[1] = (int) (short)0;
      intArray0[2] = (int) (short)0;
      intArray0[3] = (int) (short)0;
      intArray0[4] = (int) (short)0;
      intArray0[5] = (int) (short)0;
      int int0 = MathUtils.distance1(intArray0, intArray0);
  }

  //Test case number: 117
  /*
   * 42 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 160
   * Goal 2. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 3. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false
   * Goal 12. Weak Mutation 51: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> <
   * Goal 13. Weak Mutation 62: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> >
   * Goal 14. Weak Mutation 122: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> %
   * Goal 15. Weak Mutation 124: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> /
   * Goal 16. Weak Mutation 126: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceComparisonOperator > -> !=
   * Goal 17. Weak Mutation 132: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> %
   * Goal 18. Weak Mutation 135: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> /
   * Goal 19. Weak Mutation 1718: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> !=
   * Goal 20. Weak Mutation 1867: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> -2
   * Goal 21. Weak Mutation 3156: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> -1
   * Goal 22. Weak Mutation 3157: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> >
   * Goal 23. Weak Mutation 3171: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> +
   * Goal 24. Weak Mutation 3173: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> *
   * Goal 25. Weak Mutation 3174: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> /
   * Goal 26. Weak Mutation 3175: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> %
   * Goal 27. Weak Mutation 3178: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> /
   * Goal 28. org.apache.commons.math.util.MathUtils.indicator(B)B:positive
   * Goal 29. org.apache.commons.math.util.MathUtils.lcm(JJ)J:zero
   * Goal 30. org.apache.commons.math.util.MathUtils.distance1([D[D)D:zero
   * Goal 31. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J:zero
   * Goal 32. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 33. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 34. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 35. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 36. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 37. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 38. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 39. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 40. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 41. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 42. Branch org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch in context: org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J
   */

  @Test
  public void test117()  throws Throwable  {
      byte byte0 = MathUtils.indicator((byte)105);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) (byte)105;
      double double0 = MathUtils.distance1(doubleArray0, doubleArray0);
      long long0 = MathUtils.lcm(0L, 0L);
      long long1 = MathUtils.addAndCheck(0L, 0L);
      // Undeclared exception!
      try { 
        MathUtils.OrderDirection.valueOf("BC[yh.");
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.apache.commons.math.util.MathUtils.OrderDirection.BC[yh.
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  //Test case number: 118
  /*
   * 110 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 832
   * Goal 2. org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 19. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 30. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 31. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - true
   * Goal 34. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 35. Weak Mutation 1557: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> <
   * Goal 36. Weak Mutation 1615: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> -1
   * Goal 37. Weak Mutation 1628: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> -1
   * Goal 38. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 39. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 40. Weak Mutation 1647: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 41. Weak Mutation 1657: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 42. Weak Mutation 1658: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 43. Weak Mutation 1661: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 44. Weak Mutation 1672: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator >= -> -1
   * Goal 45. Weak Mutation 1683: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> +
   * Goal 46. Weak Mutation 1684: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> %
   * Goal 47. Weak Mutation 1685: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> -
   * Goal 48. Weak Mutation 1686: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> *
   * Goal 49. Weak Mutation 1695: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> +
   * Goal 50. Weak Mutation 1696: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> %
   * Goal 51. Weak Mutation 1697: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> -
   * Goal 52. Weak Mutation 1698: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> *
   * Goal 53. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 54. Weak Mutation 3157: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> >
   * Goal 55. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 56. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 57. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 58. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 59. Weak Mutation 2337: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> -
   * Goal 60. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 61. Weak Mutation 2350: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> %
   * Goal 62. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 63. Weak Mutation 2338: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> /
   * Goal 64. Weak Mutation 2352: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> *
   * Goal 65. Weak Mutation 1662: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 66. Weak Mutation 1759: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> <=
   * Goal 67. org.apache.commons.math.util.MathUtils.distance1([D[D)D:zero
   * Goal 68. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   * Goal 69. org.apache.commons.math.util.MathUtils.round(FI)F:zero
   * Goal 70. org.apache.commons.math.util.MathUtils.hash(D)I:positive
   * Goal 71. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 72. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 73. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 74. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 75. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 76. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 77. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 78. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash(D)I
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 81. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true in context: 
   * Goal 83. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 85. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - false in context: 
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 93. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 94. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 98. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 100. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 101. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 102. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 103. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 104. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 105. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 106. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 107. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 108. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1720
   * Goal 109. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1723
   * Goal 110. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1332
   */

  @Test
  public void test118()  throws Throwable  {
      int int0 = MathUtils.hash(1.1102230246251565E-16);
      long long0 = MathUtils.gcd((long) 1017118720, 1932L);
      double[] doubleArray0 = new double[0];
      double double0 = MathUtils.distance1(doubleArray0, doubleArray0);
      float float0 = MathUtils.round(0.0F, 1017118720);
  }

  //Test case number: 119
  /*
   * 50 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1667
   * Goal 2. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1796
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1668
   * Goal 4. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1797
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1669
   * Goal 6. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1798
   * Goal 7. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1670
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1671
   * Goal 9. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1800
   * Goal 10. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1225
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(J)J: Line 914
   * Goal 12. org.apache.commons.math.util.MathUtils.round(DI)D: Line 1208
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1661
   * Goal 14. org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I43 Branch 197 IFEQ L1670 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false
   * Goal 21. pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;_java.lang.NullPointerException_IMPLICIT
   * Goal 22. Weak Mutation 3354: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> -1
   * Goal 23. Weak Mutation 3355: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> >
   * Goal 24. Weak Mutation 3371: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> +
   * Goal 25. Weak Mutation 3373: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> *
   * Goal 26. Weak Mutation 3374: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> /
   * Goal 27. Weak Mutation 1781: org.apache.commons.math.util.MathUtils.indicator(J)J:914 - ReplaceComparisonOperator < -> <=
   * Goal 28. Weak Mutation 3066: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1661 - ReplaceComparisonOperator >= -> ==
   * Goal 29. Weak Mutation 3080: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1669 - ReplaceComparisonOperator == -> >=
   * Goal 30. Weak Mutation 3086: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceBitwiseOperator & -> |
   * Goal 31. Weak Mutation 3087: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceBitwiseOperator & -> ^
   * Goal 32. Weak Mutation 3091: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceComparisonOperator == -> >=
   * Goal 33. Weak Mutation 3372: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> %
   * Goal 34. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:zero
   * Goal 35. org.apache.commons.math.util.MathUtils.indicator(J)J:positive
   * Goal 36. org.apache.commons.math.util.MathUtils.round(DI)D:zero
   * Goal 37. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 38. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 39. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 40. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 41. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 42. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 43. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 45. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 46. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I43 Branch 197 IFEQ L1670 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 47. Branch org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false in context: org.apache.commons.math.util.MathUtils:indicator(J)J
   * Goal 48. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 49. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 50. Branch org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch in context: org.apache.commons.math.util.MathUtils:round(DI)D
   */

  @Test
  public void test119()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 253;
      int int0 = MathUtils.distanceInf(intArray0, intArray0);
      double double0 = MathUtils.round(0.0, 253);
      long long0 = MathUtils.indicator((long) 0);
      int int1 = MathUtils.distanceInf(intArray0, intArray0);
      // Undeclared exception!
      try { 
        MathUtils.pow((BigInteger) null, 2109L);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 120
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: Line 509
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 3. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 4. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - true
   * Goal 6. Weak Mutation 990: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> ==
   * Goal 7. Weak Mutation 1086: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:509 - ReplaceComparisonOperator == -> !=
   * Goal 8. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDI)Z
   * Goal 10. equalsIncludingNaN(DDI)Z_java.lang.AssertionError_EXPLICIT
   */

  @Test
  public void test120()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.equalsIncludingNaN(2088.3369123558, 2088.3369123558, (-355));
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 121
  /*
   * 21 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false
   * Goal 3. Weak Mutation 3275: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> -1
   * Goal 4. Weak Mutation 3276: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> >
   * Goal 5. Weak Mutation 3286: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> +
   * Goal 6. Weak Mutation 3288: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> *
   * Goal 7. Weak Mutation 3289: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> /
   * Goal 8. Weak Mutation 3306: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> %
   * Goal 9. Weak Mutation 3308: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> /
   * Goal 10. Weak Mutation 3309: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> %
   * Goal 11. Weak Mutation 3312: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> /
   * Goal 12. Weak Mutation 3287: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> %
   * Goal 13. org.apache.commons.math.util.MathUtils.distance([I[I)D:zero
   * Goal 14. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 15. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 18. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1766
   * Goal 19. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1767
   * Goal 20. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1768
   * Goal 21. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1770
   */

  @Test
  public void test121()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[7] = (-240);
      double double0 = MathUtils.distance(intArray0, intArray0);
  }

  //Test case number: 122
  /*
   * 100 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 832
   * Goal 2. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false
   * Goal 8. Weak Mutation 1154: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator = null -> != null
   * Goal 9. Weak Mutation 1156: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator != null -> = null
   * Goal 10. Weak Mutation 1174: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:551 - ReplaceComparisonOperator == -> -2
   * Goal 11. Weak Mutation 1184: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> >
   * Goal 12. Weak Mutation 3354: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> -1
   * Goal 13. Weak Mutation 3355: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> >
   * Goal 14. Weak Mutation 3371: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> +
   * Goal 15. Weak Mutation 3373: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> *
   * Goal 16. Weak Mutation 3374: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> /
   * Goal 17. Weak Mutation 3372: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> %
   * Goal 18. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:true
   * Goal 19. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 20. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 21. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 22. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 27. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 29. org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch
   * Goal 30. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 40. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 41. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 44. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false
   * Goal 45. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 46. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 47. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 48. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 49. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 50. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false
   * Goal 51. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - false
   * Goal 52. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false
   * Goal 53. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true
   * Goal 54. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true
   * Goal 55. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 56. Weak Mutation 1557: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> <
   * Goal 57. Weak Mutation 1615: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> -1
   * Goal 58. Weak Mutation 1628: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> -1
   * Goal 59. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 60. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 61. Weak Mutation 1647: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 62. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 63. Weak Mutation 1657: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 64. Weak Mutation 1658: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 65. Weak Mutation 1661: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 66. Weak Mutation 1672: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator >= -> -1
   * Goal 67. Weak Mutation 1683: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> +
   * Goal 68. Weak Mutation 1684: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> %
   * Goal 69. Weak Mutation 1685: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> -
   * Goal 70. Weak Mutation 1686: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> *
   * Goal 71. Weak Mutation 1695: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> +
   * Goal 72. Weak Mutation 1696: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> %
   * Goal 73. Weak Mutation 1697: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> -
   * Goal 74. Weak Mutation 1698: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> *
   * Goal 75. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 76. Weak Mutation 1868: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> >=
   * Goal 77. Weak Mutation 1875: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator != -> <
   * Goal 78. Weak Mutation 1885: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> +
   * Goal 79. Weak Mutation 1886: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> %
   * Goal 80. Weak Mutation 1887: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> -
   * Goal 81. Weak Mutation 1888: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> *
   * Goal 82. Weak Mutation 1901: org.apache.commons.math.util.MathUtils.lcm(JJ)J:991 - ReplaceComparisonOperator != -> >
   * Goal 83. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 84. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 85. Weak Mutation 1981: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> ==
   * Goal 86. org.apache.commons.math.util.MathUtils.hash(D)I:zero
   * Goal 87. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:positive
   * Goal 88. org.apache.commons.math.util.MathUtils.hash([D)I:positive
   * Goal 89. org.apache.commons.math.util.MathUtils.lcm(JJ)J:positive
   * Goal 90. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 91. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 92. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 93. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 94. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 95. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 98. Branch org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash(D)I
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash([D)I
   * Goal 100. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   */

  @Test
  public void test122()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      boolean boolean0 = MathUtils.equalsIncludingNaN(doubleArray0, doubleArray0);
      int int0 = MathUtils.hash(doubleArray0);
      int int1 = MathUtils.hash(0.0);
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 24;
      intArray0[5] = 1;
      int[] intArray1 = new int[6];
      intArray1[0] = 62;
      intArray1[1] = 0;
      intArray1[2] = 24;
      intArray1[3] = 1;
      intArray1[4] = 0;
      intArray1[5] = 24;
      int int2 = MathUtils.distanceInf(intArray0, intArray1);
      long long0 = MathUtils.lcm((long) 62, (long) 24);
      // Undeclared exception!
      try { 
        MathUtils.OrderDirection.valueOf("");
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.apache.commons.math.util.MathUtils.OrderDirection.
         //
         assertThrownBy("java.lang.Enum", e);
      }
  }

  //Test case number: 123
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 312
   * Goal 2. org.apache.commons.math.util.MathUtils.hash(D)I: Line 843
   * Goal 3. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 987
   * Goal 4. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 988
   * Goal 5. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 6. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 367
   * Goal 7. org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch
   * Goal 8. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - false
   * Goal 10. binomialCoefficientLog(II)D_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   * Goal 11. Weak Mutation 1867: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> -2
   * Goal 12. Weak Mutation 767: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> -1
   * Goal 13. org.apache.commons.math.util.MathUtils.hash(D)I:zero
   * Goal 14. org.apache.commons.math.util.MathUtils.lcm(JJ)J:zero
   * Goal 15. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 16. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 17. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 18. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 19. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash(D)I
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - false in context: 
   */

  @Test
  public void test123()  throws Throwable  {
      int int0 = MathUtils.hash(0.0);
      long long0 = MathUtils.lcm((long) 0, (long) 0);
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficientLog(0, 509);
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n,k), got n = 0, k = 509
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 124
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 643
   * Goal 2. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 644
   * Goal 3. org.apache.commons.math.util.MathUtils.hash(D)I: Line 843
   * Goal 4. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch
   * Goal 6. Weak Mutation 1260: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> -1
   * Goal 7. org.apache.commons.math.util.MathUtils.hash(D)I:positive
   * Goal 8. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 9. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 10. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash(D)I
   * Goal 13. factorialLog(I)D_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   */

  @Test
  public void test124()  throws Throwable  {
      int int0 = MathUtils.hash((-685.2));
      // Undeclared exception!
      try { 
        MathUtils.factorialLog((-18));
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for n!, got n = -18
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 125
  /*
   * 122 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1030
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1031
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1034
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(J)J: Line 914
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1049
   * Goal 6. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1050
   * Goal 7. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1052
   * Goal 8. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1054
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 688
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 689
   * Goal 11. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1074
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 690
   * Goal 13. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1079
   * Goal 14. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1080
   * Goal 15. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1082
   * Goal 16. org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 41. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 43. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 44. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 45. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - false
   * Goal 46. org.apache.commons.math.util.MathUtils.gcd(II)I: I81 Branch 91 IF_ICMPGE L711 - false
   * Goal 47. Weak Mutation 1781: org.apache.commons.math.util.MathUtils.indicator(J)J:914 - ReplaceComparisonOperator < -> <=
   * Goal 48. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 49. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 50. Weak Mutation 1981: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> ==
   * Goal 51. Weak Mutation 166: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> >=
   * Goal 52. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 53. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 54. Weak Mutation 183: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator == -> !=
   * Goal 55. Weak Mutation 193: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> +
   * Goal 56. Weak Mutation 194: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> %
   * Goal 57. Weak Mutation 195: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> *
   * Goal 58. Weak Mutation 196: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> /
   * Goal 59. Weak Mutation 199: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator != -> >
   * Goal 60. Weak Mutation 216: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> +
   * Goal 61. Weak Mutation 218: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> -
   * Goal 62. Weak Mutation 222: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceComparisonOperator <= -> ==
   * Goal 63. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 64. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 65. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 66. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 67. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 68. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 69. Weak Mutation 1440: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 70. Weak Mutation 1451: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 71. Weak Mutation 1452: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 72. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 73. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 74. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 75. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 76. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 77. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 78. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 79. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 80. Weak Mutation 1453: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 81. Weak Mutation 1468: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator >= -> -1
   * Goal 82. Weak Mutation 1482: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> +
   * Goal 83. Weak Mutation 1483: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> %
   * Goal 84. Weak Mutation 1484: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> -
   * Goal 85. Weak Mutation 1485: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> *
   * Goal 86. Weak Mutation 1497: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> +
   * Goal 87. Weak Mutation 1498: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> %
   * Goal 88. Weak Mutation 1499: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> -
   * Goal 89. Weak Mutation 1500: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> *
   * Goal 90. org.apache.commons.math.util.MathUtils.indicator(J)J:positive
   * Goal 91. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:positive
   * Goal 92. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 93. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 94. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 95. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 96. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false in context: org.apache.commons.math.util.MathUtils:indicator(J)J
   * Goal 98. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 99. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 100. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 101. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 102. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 103. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - true
   * Goal 104. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I94 Branch 15 IF_ICMPGT L219 - true
   * Goal 105. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I157 Branch 17 IF_ICMPGT L239 - false
   * Goal 106. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - true
   * Goal 107. Weak Mutation 173: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator != -> <
   * Goal 108. Weak Mutation 217: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> %
   * Goal 109. Weak Mutation 219: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> *
   * Goal 110. Weak Mutation 252: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:212 - ReplaceComparisonOperator > -> -2
   * Goal 111. Weak Mutation 324: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:219 - ReplaceComparisonOperator > -> -2
   * Goal 112. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I94 Branch 15 IF_ICMPGT L219 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 113. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I157 Branch 17 IF_ICMPGT L239 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 114. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 115. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 116. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 117. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 118. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 119. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 240
   * Goal 120. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 241
   * Goal 121. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 242
   * Goal 122. binomialCoefficient(II)J_java.lang.ArithmeticException_EXPLICIT
   */

  @Test
  public void test125()  throws Throwable  {
      int int0 = MathUtils.mulAndCheck(452, 97);
      long long0 = MathUtils.indicator(0L);
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficient(43844, 452);
      } catch(ArithmeticException e) {
         //
         // overflow: multiply
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 126
  /*
   * 24 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I43 Branch 197 IFEQ L1670 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I43 Branch 197 IFEQ L1670 - false
   * Goal 6. Weak Mutation 3066: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1661 - ReplaceComparisonOperator >= -> ==
   * Goal 7. Weak Mutation 3080: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1669 - ReplaceComparisonOperator == -> >=
   * Goal 8. Weak Mutation 3086: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceBitwiseOperator & -> |
   * Goal 9. Weak Mutation 3087: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceBitwiseOperator & -> ^
   * Goal 10. Weak Mutation 3091: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceComparisonOperator == -> >=
   * Goal 11. Weak Mutation 3079: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1669 - ReplaceComparisonOperator == -> -2
   * Goal 12. Weak Mutation 3090: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceComparisonOperator == -> -2
   * Goal 13. Weak Mutation 3103: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1674 - ReplaceBitwiseOperator >> -> <<
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:nonnull
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I43 Branch 197 IFEQ L1670 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I43 Branch 197 IFEQ L1670 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 22. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1671
   * Goal 23. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1673
   * Goal 24. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1674
   */

  @Test
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-28);
      byteArray0[1] = (byte) (-107);
      byteArray0[2] = (byte)31;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = MathUtils.pow(bigInteger0, 543L);
  }

  //Test case number: 127
  /*
   * 44 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1264
   * Goal 2. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1265
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(J)J: Line 914
   * Goal 4. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1266
   * Goal 5. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1283
   * Goal 6. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1347
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 891
   * Goal 8. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 894
   * Goal 9. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 10. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - true
   * Goal 22. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 23. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 24. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 25. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 26. Weak Mutation 1757: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> -2
   * Goal 27. Weak Mutation 2338: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> /
   * Goal 28. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 29. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 30. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 31. Branch org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FII)F
   * Goal 32. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 33. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 34. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 35. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 37. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 38. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 39. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false in context: 
   * Goal 40. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - true in context: 
   * Goal 41. round(FII)F_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   * Goal 42. Weak Mutation 1779: org.apache.commons.math.util.MathUtils.indicator(J)J:914 - ReplaceComparisonOperator < -> -2
   * Goal 43. org.apache.commons.math.util.MathUtils.indicator(J)J:negative
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - true in context: org.apache.commons.math.util.MathUtils:indicator(J)J
   */

  @Test
  public void test127()  throws Throwable  {
      long long0 = MathUtils.indicator((-1L));
      // Undeclared exception!
      try { 
        MathUtils.round((float) (-1L), (-3408), 1947);
      } catch(IllegalArgumentException e) {
         //
         // invalid rounding method 1,947, valid methods: ROUND_CEILING (2), ROUND_DOWN (1), ROUND_FLOOR (3), ROUND_HALF_DOWN (5), ROUND_HALF_EVEN (6), ROUND_HALF_UP (4), ROUND_UNNECESSARY (7), ROUND_UP (0)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 128
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1667
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - true
   * Goal 6. Weak Mutation 3067: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1661 - ReplaceComparisonOperator >= -> >
   * Goal 7. Weak Mutation 3079: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1669 - ReplaceComparisonOperator == -> -2
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:nonnull
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1661
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1668
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1669
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1677
   */

  @Test
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-126);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = MathUtils.pow(bigInteger0, 0L);
  }

  //Test case number: 129
  /*
   * 5 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - false
   * Goal 2. Weak Mutation 2742: org.apache.commons.math.util.MathUtils.pow(II)I:1521 - ReplaceComparisonOperator >= -> -1
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 5. pow(II)I_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   */

  @Test
  public void test129()  throws Throwable  {
      try { 
        MathUtils.pow(3240, (-5));
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (3,240^-5)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 130
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 618
   * Goal 2. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - false
   * Goal 3. Weak Mutation 1225: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:618 - ReplaceComparisonOperator >= -> -1
   * Goal 4. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - false in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 6. factorialDouble(I)D_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   */

  @Test
  public void test130()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.factorialDouble((-535));
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for n!, got n = -535
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 131
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 643
   * Goal 2. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - false
   * Goal 3. Weak Mutation 1260: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> -1
   * Goal 4. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 6. factorialLog(I)D_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   */

  @Test
  public void test131()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.factorialLog((-1523));
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for n!, got n = -1,523
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 132
  /*
   * 89 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.hash([D)I: Line 854
   * Goal 16. org.apache.commons.math.util.MathUtils.hash([D)I:positive
   * Goal 17. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 18. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash([D)I
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1557
   * Goal 21. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1558
   * Goal 22. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1559
   * Goal 23. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1560
   * Goal 24. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1561
   * Goal 25. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1563
   * Goal 26. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1564
   * Goal 27. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1567
   * Goal 28. Weak Mutation 2833: org.apache.commons.math.util.MathUtils.pow(IJ)I:1551 - ReplaceComparisonOperator >= -> ==
   * Goal 29. Weak Mutation 2851: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> -2
   * Goal 30. Weak Mutation 2852: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> >=
   * Goal 31. Weak Mutation 2859: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> ^
   * Goal 32. Weak Mutation 2863: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> >=
   * Goal 33. Weak Mutation 2875: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> +
   * Goal 34. Weak Mutation 2876: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> %
   * Goal 35. Weak Mutation 2877: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> -
   * Goal 36. Weak Mutation 2878: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> /
   * Goal 37. Weak Mutation 2889: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> +
   * Goal 38. Weak Mutation 2890: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> %
   * Goal 39. Weak Mutation 2891: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> -
   * Goal 40. Weak Mutation 2892: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> /
   * Goal 41. Weak Mutation 2895: org.apache.commons.math.util.MathUtils.pow(IJ)I:1564 - ReplaceBitwiseOperator >> -> <<
   * Goal 42. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 43. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 45. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 46. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 47. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1104
   * Goal 48. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1109
   * Goal 49. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1110
   * Goal 50. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1111
   * Goal 51. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1114
   * Goal 52. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1115
   * Goal 53. Weak Mutation 2057: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> >=
   * Goal 54. Weak Mutation 2063: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator != -> ==
   * Goal 55. Weak Mutation 2068: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> !=
   * Goal 56. Weak Mutation 2083: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> |
   * Goal 57. Weak Mutation 2084: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> ^
   * Goal 58. Weak Mutation 2092: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> |
   * Goal 59. Weak Mutation 2093: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> ^
   * Goal 60. Weak Mutation 2108: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>
   * Goal 61. Weak Mutation 2109: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>>
   * Goal 62. Weak Mutation 2111: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> -
   * Goal 63. Weak Mutation 2112: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> *
   * Goal 64. Weak Mutation 2113: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> /
   * Goal 65. Weak Mutation 2115: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator | -> &
   * Goal 66. org.apache.commons.math.util.MathUtils.scalb(DI)D:positive
   * Goal 67. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 68. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 69. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 70. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 71. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 72. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 73. org.apache.commons.math.util.MathUtils.indicator(F)F:negative
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 75. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1389
   * Goal 76. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1392
   * Goal 77. Weak Mutation 2532: org.apache.commons.math.util.MathUtils.sign(D)D:1389 - ReplaceComparisonOperator == -> !=
   * Goal 78. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 79. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 81. org.apache.commons.math.util.MathUtils.pow(IJ)I:positive
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 83. Weak Mutation 2858: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> |
   * Goal 84. Weak Mutation 2862: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> -2
   * Goal 85. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 86. Weak Mutation 2545: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator != -> >
   * Goal 87. Weak Mutation 2555: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator <= -> ==
   * Goal 88. org.apache.commons.math.util.MathUtils.sign(D)D:negative
   * Goal 89. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   */

  @Test
  public void test132()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 20.0;
      doubleArray0[1] = (-1866.92367);
      doubleArray0[2] = (-494.0);
      doubleArray0[3] = 1.1102230246251565E-16;
      doubleArray0[4] = (-903.89788103);
      int int0 = MathUtils.hash(doubleArray0);
      double double0 = MathUtils.sign((-1866.92367));
      float float0 = MathUtils.indicator((-2311.305F));
      MathUtils.OrderDirection[] mathUtils_OrderDirectionArray0 = MathUtils.OrderDirection.values();
      int int1 = MathUtils.pow(450555019, (long) 450555019);
      double double1 = MathUtils.scalb(2609.99386174, (-557));
  }

  //Test case number: 133
  /*
   * 69 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I13 Branch 59 IFEQ L509 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 618
   * Goal 28. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 29. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1186
   * Goal 30. Weak Mutation 2246: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1185 - ReplaceComparisonOperator != -> -1
   * Goal 31. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 32. normalizeArray([DD)[D_org.evosuite.runtime.mock.java.lang.MockArithmeticException_DECLARED
   * Goal 33. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: Line 509
   * Goal 34. Weak Mutation 1086: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:509 - ReplaceComparisonOperator == -> !=
   * Goal 35. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDI)Z
   * Goal 37. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 651
   * Goal 38. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 652
   * Goal 39. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 653
   * Goal 40. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 655
   * Goal 41. Weak Mutation 1276: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> ==
   * Goal 42. Weak Mutation 1294: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> !=
   * Goal 43. Weak Mutation 1295: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> -2
   * Goal 44. Weak Mutation 1296: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> >=
   * Goal 45. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> %
   * Goal 46. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> -
   * Goal 47. Weak Mutation 1307: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> *
   * Goal 48. Weak Mutation 1308: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> /
   * Goal 49. org.apache.commons.math.util.MathUtils.factorialLog(I)D:positive
   * Goal 50. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 51. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 52. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 53. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 623
   * Goal 54. Weak Mutation 1226: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:618 - ReplaceComparisonOperator >= -> ==
   * Goal 55. org.apache.commons.math.util.MathUtils.factorialDouble(I)D:positive
   * Goal 56. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 57. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 58. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 626
   * Goal 59. Weak Mutation 1241: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:623 - ReplaceComparisonOperator >= -> ==
   * Goal 60. Weak Mutation 1253: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:626 - ReplaceArithmeticOperator + -> %
   * Goal 61. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 62. Weak Mutation 1106: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:509 - ReplaceComparisonOperator == -> !=
   * Goal 63. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:false
   * Goal 64. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z
   * Goal 65. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I13 Branch 59 IFEQ L509 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDI)Z
   * Goal 66. Weak Mutation 2573: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> <
   * Goal 67. Weak Mutation 2580: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator <= -> -1
   * Goal 68. org.apache.commons.math.util.MathUtils.sign(F)F:positive
   * Goal 69. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - false in context: org.apache.commons.math.util.MathUtils:sign(F)F
   */

  @Test
  public void test133()  throws Throwable  {
      double double0 = MathUtils.factorialDouble(737);
      float float0 = MathUtils.sign(5348.0F);
      double double1 = MathUtils.factorialLog(737);
      boolean boolean0 = MathUtils.equalsIncludingNaN((-805.86442179), (-821.0405352957187), 737);
      int int0 = MathUtils.subAndCheck(737, 737);
      double double2 = MathUtils.factorialDouble(632);
      int int1 = MathUtils.addAndCheck((-17), 0);
      double[] doubleArray0 = new double[0];
      try { 
        MathUtils.normalizeArray(doubleArray0, 737);
      } catch(ArithmeticException e) {
         //
         // array sums to zero
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 134
  /*
   * 183 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1030
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1031
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(I)I: Line 904
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1034
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 792
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1049
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 793
   * Goal 11. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1050
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 795
   * Goal 13. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1052
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 796
   * Goal 15. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1054
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 799
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 800
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 417
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 802
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 803
   * Goal 21. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 804
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 806
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 813
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 688
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 689
   * Goal 26. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1074
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 690
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 819
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 820
   * Goal 30. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1079
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 823
   * Goal 32. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1080
   * Goal 33. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 952
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 824
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 826
   * Goal 36. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 955
   * Goal 37. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 956
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 829
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 703
   * Goal 40. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 704
   * Goal 41. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 832
   * Goal 42. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1089
   * Goal 43. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 961
   * Goal 44. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 833
   * Goal 45. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 706
   * Goal 46. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 707
   * Goal 47. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 710
   * Goal 48. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 711
   * Goal 49. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 717
   * Goal 50. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 724
   * Goal 51. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 730
   * Goal 52. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 731
   * Goal 53. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 987
   * Goal 54. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 734
   * Goal 55. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 990
   * Goal 56. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 735
   * Goal 57. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 991
   * Goal 58. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 740
   * Goal 59. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 996
   * Goal 60. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 743
   * Goal 61. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 744
   * Goal 62. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 63. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 64. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - true
   * Goal 65. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 66. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - true
   * Goal 67. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 68. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 69. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 70. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 71. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 72. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true
   * Goal 73. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 74. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 75. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 76. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 77. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true
   * Goal 78. org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true
   * Goal 79. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true
   * Goal 80. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true
   * Goal 81. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 82. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 83. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false
   * Goal 84. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - false
   * Goal 85. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 86. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 87. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 88. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false
   * Goal 89. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 90. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 91. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 92. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 93. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false
   * Goal 94. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false
   * Goal 95. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false
   * Goal 96. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false
   * Goal 97. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false
   * Goal 98. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 99. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 100. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false
   * Goal 101. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 102. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false
   * Goal 103. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false
   * Goal 104. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false
   * Goal 105. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 106. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 107. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 108. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 109. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 110. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 111. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 112. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 113. Weak Mutation 1440: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 114. Weak Mutation 1451: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 115. Weak Mutation 1452: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 116. Weak Mutation 1454: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 117. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 118. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 119. Weak Mutation 1557: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> <
   * Goal 120. Weak Mutation 1615: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> -1
   * Goal 121. Weak Mutation 1628: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> -1
   * Goal 122. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 123. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 124. Weak Mutation 1647: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 125. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 126. Weak Mutation 1657: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 127. Weak Mutation 1658: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 128. Weak Mutation 1661: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 129. Weak Mutation 1672: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator >= -> -1
   * Goal 130. Weak Mutation 1683: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> +
   * Goal 131. Weak Mutation 1684: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> %
   * Goal 132. Weak Mutation 1685: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> -
   * Goal 133. Weak Mutation 1686: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> *
   * Goal 134. Weak Mutation 1695: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> +
   * Goal 135. Weak Mutation 1696: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> %
   * Goal 136. Weak Mutation 1697: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> -
   * Goal 137. Weak Mutation 1698: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> *
   * Goal 138. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 139. Weak Mutation 1771: org.apache.commons.math.util.MathUtils.indicator(I)I:904 - ReplaceComparisonOperator < -> <=
   * Goal 140. Weak Mutation 1803: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> >=
   * Goal 141. Weak Mutation 1810: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator != -> <
   * Goal 142. Weak Mutation 1825: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> +
   * Goal 143. Weak Mutation 1826: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> %
   * Goal 144. Weak Mutation 1827: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> -
   * Goal 145. Weak Mutation 1844: org.apache.commons.math.util.MathUtils.lcm(II)I:956 - ReplaceComparisonOperator != -> <
   * Goal 146. Weak Mutation 1868: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> >=
   * Goal 147. Weak Mutation 1875: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator != -> <
   * Goal 148. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 149. Weak Mutation 1885: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> +
   * Goal 150. Weak Mutation 1886: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> %
   * Goal 151. Weak Mutation 1887: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> -
   * Goal 152. Weak Mutation 1888: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> *
   * Goal 153. Weak Mutation 873: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> <
   * Goal 154. Weak Mutation 1901: org.apache.commons.math.util.MathUtils.lcm(JJ)J:991 - ReplaceComparisonOperator != -> >
   * Goal 155. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 156. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 157. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 158. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 159. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 160. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 161. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 162. Weak Mutation 1981: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> ==
   * Goal 163. org.apache.commons.math.util.MathUtils.lcm(II)I:positive
   * Goal 164. org.apache.commons.math.util.MathUtils.lcm(JJ)J:positive
   * Goal 165. org.apache.commons.math.util.MathUtils.equals(DD)Z:false
   * Goal 166. org.apache.commons.math.util.MathUtils.indicator(I)I:positive
   * Goal 167. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 168. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 169. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 170. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 171. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 172. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 173. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 174. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 175. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 176. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 177. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 178. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 179. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 180. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 181. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 182. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 183. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   */

  @Test
  public void test134()  throws Throwable  {
      int int0 = MathUtils.indicator(0);
      int int1 = MathUtils.lcm(28, 1);
      boolean boolean0 = MathUtils.equals(Double.POSITIVE_INFINITY, 1251.616698280004);
      long long0 = MathUtils.lcm(774L, (long) 28);
  }

  //Test case number: 135
  /*
   * 112 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I152 Branch 224 IFEQ L1959 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I40 Branch 200 IFEQ L1700 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I223 Branch 227 IFLT L1976 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 40. Weak Mutation 62: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> >
   * Goal 41. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1691
   * Goal 42. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 43. Weak Mutation 1454: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 44. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1954
   * Goal 45. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1932
   * Goal 46. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1933
   * Goal 47. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1934
   * Goal 48. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1935
   * Goal 49. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1936
   * Goal 50. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1937
   * Goal 51. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1938
   * Goal 52. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1939
   * Goal 53. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1940
   * Goal 54. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1941
   * Goal 55. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1942
   * Goal 56. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1943
   * Goal 57. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1944
   * Goal 58. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1959
   * Goal 59. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1966
   * Goal 60. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1970
   * Goal 61. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1973
   * Goal 62. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1976
   * Goal 63. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1977
   * Goal 64. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1983
   * Goal 65. Weak Mutation 3498: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> +
   * Goal 66. Weak Mutation 3499: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> %
   * Goal 67. Weak Mutation 3500: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> -
   * Goal 68. Weak Mutation 3501: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> *
   * Goal 69. Weak Mutation 3506: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> -1
   * Goal 70. Weak Mutation 3507: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> >
   * Goal 71. Weak Mutation 3538: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> -2
   * Goal 72. Weak Mutation 3539: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> !=
   * Goal 73. Weak Mutation 3568: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator <= -> ==
   * Goal 74. Weak Mutation 3597: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1944 - ReplaceComparisonOperator <= -> ==
   * Goal 75. org.apache.commons.math.util.MathUtils.safeNorm([D)D:positive
   * Goal 76. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 77. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 78. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 79. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 81. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 82. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 83. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I152 Branch 224 IFEQ L1959 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 85. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I223 Branch 227 IFLT L1976 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 88. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 89. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1697
   * Goal 90. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1698
   * Goal 91. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1699
   * Goal 92. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1707
   * Goal 93. Weak Mutation 3124: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1699 - ReplaceComparisonOperator != -> ==
   * Goal 94. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:nonnull
   * Goal 95. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 96. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 97. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 98. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1700
   * Goal 99. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1701
   * Goal 100. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1703
   * Goal 101. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1704
   * Goal 102. Weak Mutation 3109: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1691 - ReplaceComparisonOperator >= -> ==
   * Goal 103. Weak Mutation 3129: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1700 - ReplaceComparisonOperator == -> !=
   * Goal 104. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I40 Branch 200 IFEQ L1700 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 105. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 106. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: Line 1641
   * Goal 107. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 108. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: Line 1647
   * Goal 109. Weak Mutation 3051: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;:1641 - ReplaceComparisonOperator >= -> >
   * Goal 110. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;:nonnull
   * Goal 111. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 112. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   */

  @Test
  public void test135()  throws Throwable  {
      int int0 = MathUtils.lcm(1308, 1023);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 1308;
      doubleArray0[1] = (double) 1308;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (double) 1023;
      double double0 = MathUtils.safeNorm(doubleArray0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-115);
      byteArray0[6] = (byte) (-69);
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)0;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = MathUtils.pow(bigInteger0, (int) (byte)0);
      BigInteger bigInteger2 = MathUtils.pow(bigInteger1, bigInteger1);
      long long0 = MathUtils.subAndCheck((long) (byte)0, (long) (byte)0);
  }

  //Test case number: 136
  /*
   * 281 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I94 Branch 15 IF_ICMPGT L219 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I157 Branch 17 IF_ICMPGT L239 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I25 Branch 21 IF_ICMPNE L275 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I37 Branch 22 IF_ICMPLE L278 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I50 Branch 23 IF_ICMPGE L281 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 24 IF_ICMPGT L286 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true
   * Goal 35. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 36. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I20 Branch 20 IF_ICMPEQ L275 - false
   * Goal 41. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 24 IF_ICMPGT L286 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false
   * Goal 44. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I49 Branch 30 IF_ICMPGE L332 - false
   * Goal 45. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false
   * Goal 46. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - false
   * Goal 47. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 48. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - false
   * Goal 49. org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false
   * Goal 50. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 51. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 52. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false
   * Goal 53. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - false
   * Goal 54. org.apache.commons.math.util.MathUtils.gcd(II)I: I81 Branch 91 IF_ICMPGE L711 - false
   * Goal 55. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 56. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 57. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 58. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 59. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false
   * Goal 60. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 61. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1551
   * Goal 62. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 63. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1478
   * Goal 64. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1479
   * Goal 65. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1482
   * Goal 66. Weak Mutation 2674: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> /
   * Goal 67. Weak Mutation 2682: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator < -> !=
   * Goal 68. Weak Mutation 2691: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator <= -> ==
   * Goal 69. org.apache.commons.math.util.MathUtils.subAndCheck(II)I:zero
   * Goal 70. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 71. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 72. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 73. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 74. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 75. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 196
   * Goal 76. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 77. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 78. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 376
   * Goal 79. Weak Mutation 166: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> >=
   * Goal 80. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 81. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 82. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:positive
   * Goal 83. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 84. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 85. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 87. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 88. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 324
   * Goal 89. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 199
   * Goal 90. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 203
   * Goal 91. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 211
   * Goal 92. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 212
   * Goal 93. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 245
   * Goal 94. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 312
   * Goal 95. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 313
   * Goal 96. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 316
   * Goal 97. Weak Mutation 174: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator != -> >
   * Goal 98. Weak Mutation 183: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator == -> !=
   * Goal 99. Weak Mutation 193: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> +
   * Goal 100. Weak Mutation 194: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> %
   * Goal 101. Weak Mutation 195: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> *
   * Goal 102. Weak Mutation 196: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> /
   * Goal 103. Weak Mutation 199: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator != -> >
   * Goal 104. Weak Mutation 216: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> +
   * Goal 105. Weak Mutation 218: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> -
   * Goal 106. Weak Mutation 222: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceComparisonOperator <= -> ==
   * Goal 107. Weak Mutation 570: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator == -> >=
   * Goal 108. Weak Mutation 586: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator == -> !=
   * Goal 109. Weak Mutation 596: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> +
   * Goal 110. Weak Mutation 597: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> %
   * Goal 111. Weak Mutation 598: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> *
   * Goal 112. Weak Mutation 599: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> /
   * Goal 113. Weak Mutation 602: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator != -> >
   * Goal 114. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 115. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 116. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 117. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 118. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 119. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 120. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 121. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 122. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 877
   * Goal 123. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 880
   * Goal 124. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 125. Weak Mutation 1739: org.apache.commons.math.util.MathUtils.indicator(D)D:880 - ReplaceComparisonOperator < -> -2
   * Goal 126. org.apache.commons.math.util.MathUtils.indicator(D)D:negative
   * Goal 127. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 128. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 129. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 130. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 131. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 688
   * Goal 132. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 689
   * Goal 133. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 690
   * Goal 134. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 703
   * Goal 135. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 704
   * Goal 136. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 706
   * Goal 137. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 707
   * Goal 138. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 710
   * Goal 139. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 711
   * Goal 140. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 717
   * Goal 141. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 724
   * Goal 142. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 730
   * Goal 143. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 731
   * Goal 144. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 734
   * Goal 145. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 735
   * Goal 146. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 740
   * Goal 147. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 743
   * Goal 148. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 744
   * Goal 149. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 952
   * Goal 150. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 955
   * Goal 151. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 956
   * Goal 152. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 961
   * Goal 153. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 154. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 155. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 156. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 157. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 158. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 159. Weak Mutation 1440: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 160. Weak Mutation 1451: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 161. Weak Mutation 1452: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 162. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 163. Weak Mutation 1803: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> >=
   * Goal 164. Weak Mutation 1810: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator != -> <
   * Goal 165. Weak Mutation 1825: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> +
   * Goal 166. Weak Mutation 1826: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> %
   * Goal 167. Weak Mutation 1827: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> -
   * Goal 168. Weak Mutation 1844: org.apache.commons.math.util.MathUtils.lcm(II)I:956 - ReplaceComparisonOperator != -> <
   * Goal 169. org.apache.commons.math.util.MathUtils.lcm(II)I:positive
   * Goal 170. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 171. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 172. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 173. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 174. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 175. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 271
   * Goal 176. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1552
   * Goal 177. Weak Mutation 2832: org.apache.commons.math.util.MathUtils.pow(IJ)I:1551 - ReplaceComparisonOperator >= -> -1
   * Goal 178. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 179. pow(IJ)I_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   * Goal 180. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 737
   * Goal 181. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 182. Weak Mutation 1828: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> *
   * Goal 183. Weak Mutation 2671: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> +
   * Goal 184. Weak Mutation 2673: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> *
   * Goal 185. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   * Goal 186. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 187. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 188. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 189. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 713
   * Goal 190. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 714
   * Goal 191. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 715
   * Goal 192. Weak Mutation 1453: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 193. Weak Mutation 1468: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator >= -> -1
   * Goal 194. Weak Mutation 1482: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> +
   * Goal 195. Weak Mutation 1483: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> %
   * Goal 196. Weak Mutation 1484: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> -
   * Goal 197. Weak Mutation 1485: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> *
   * Goal 198. Weak Mutation 1497: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> +
   * Goal 199. Weak Mutation 1498: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> %
   * Goal 200. Weak Mutation 1499: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> -
   * Goal 201. Weak Mutation 1500: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> *
   * Goal 202. Weak Mutation 2574: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> >
   * Goal 203. Weak Mutation 2581: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator <= -> ==
   * Goal 204. org.apache.commons.math.util.MathUtils.sign(F)F:negative
   * Goal 205. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 206. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 207. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 272
   * Goal 208. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 275
   * Goal 209. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 278
   * Goal 210. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 281
   * Goal 211. Weak Mutation 388: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> >=
   * Goal 212. Weak Mutation 405: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator == -> !=
   * Goal 213. Weak Mutation 415: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> +
   * Goal 214. Weak Mutation 416: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> %
   * Goal 215. Weak Mutation 417: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> *
   * Goal 216. Weak Mutation 418: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> /
   * Goal 217. Weak Mutation 421: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator != -> >
   * Goal 218. Weak Mutation 438: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> +
   * Goal 219. Weak Mutation 440: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> -
   * Goal 220. Weak Mutation 444: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceComparisonOperator <= -> ==
   * Goal 221. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 285
   * Goal 222. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 286
   * Goal 223. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 290
   * Goal 224. Weak Mutation 439: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> %
   * Goal 225. Weak Mutation 441: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> *
   * Goal 226. Weak Mutation 472: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:281 - ReplaceComparisonOperator >= -> ==
   * Goal 227. Weak Mutation 496: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:286 - ReplaceComparisonOperator > -> -2
   * Goal 228. Weak Mutation 549: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> %
   * Goal 229. Weak Mutation 551: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> *
   * Goal 230. Weak Mutation 552: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> /
   * Goal 231. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 238
   * Goal 232. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 239
   * Goal 233. Weak Mutation 217: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> %
   * Goal 234. Weak Mutation 219: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> *
   * Goal 235. Weak Mutation 252: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:212 - ReplaceComparisonOperator > -> -2
   * Goal 236. Weak Mutation 324: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:219 - ReplaceComparisonOperator > -> -2
   * Goal 237. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I94 Branch 15 IF_ICMPGT L219 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 238. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 239. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 240. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 241. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 242. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 243. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 691
   * Goal 244. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 696
   * Goal 245. Weak Mutation 1353: org.apache.commons.math.util.MathUtils.gcd(II)I:691 - ReplaceComparisonOperator == -> >=
   * Goal 246. Weak Mutation 1367: org.apache.commons.math.util.MathUtils.gcd(II)I:691 - ReplaceComparisonOperator != -> <
   * Goal 247. Weak Mutation 1395: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> %
   * Goal 248. Weak Mutation 1398: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> /
   * Goal 249. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 250. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 251. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 287
   * Goal 252. Weak Mutation 395: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator != -> <
   * Goal 253. Weak Mutation 495: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:286 - ReplaceComparisonOperator > -> !=
   * Goal 254. Weak Mutation 497: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:286 - ReplaceComparisonOperator > -> >=
   * Goal 255. Weak Mutation 512: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> +
   * Goal 256. Weak Mutation 513: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> %
   * Goal 257. Weak Mutation 514: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> *
   * Goal 258. Weak Mutation 515: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> /
   * Goal 259. Weak Mutation 521: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> %
   * Goal 260. Weak Mutation 522: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> -
   * Goal 261. Weak Mutation 523: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> *
   * Goal 262. Weak Mutation 524: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> /
   * Goal 263. Weak Mutation 530: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> +
   * Goal 264. Weak Mutation 531: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> %
   * Goal 265. Weak Mutation 532: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> -
   * Goal 266. Weak Mutation 533: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> *
   * Goal 267. Weak Mutation 534: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> +
   * Goal 268. Weak Mutation 535: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> %
   * Goal 269. Weak Mutation 536: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> -
   * Goal 270. Weak Mutation 537: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> /
   * Goal 271. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 332
   * Goal 272. Weak Mutation 577: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator != -> <
   * Goal 273. Weak Mutation 618: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:324 - ReplaceComparisonOperator >= -> ==
   * Goal 274. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:positive
   * Goal 275. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 276. Weak Mutation 1338: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> -1
   * Goal 277. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 278. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 333
   * Goal 279. Weak Mutation 636: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:332 - ReplaceComparisonOperator >= -> -1
   * Goal 280. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I157 Branch 17 IF_ICMPGT L239 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 281. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I49 Branch 30 IF_ICMPGE L332 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   */

  @Test
  public void test136()  throws Throwable  {
      double double0 = MathUtils.indicator((-22.278543230712337));
      int int0 = MathUtils.subAndCheck(1030, 1030);
      int int1 = MathUtils.lcm(1030, 1402);
      double double1 = MathUtils.binomialCoefficientLog(612, 13);
      long long0 = MathUtils.binomialCoefficient(67, (-1700));
      long long1 = MathUtils.addAndCheck(1995L, 1995L);
      float float0 = MathUtils.sign((-1235.0F));
      int int2 = MathUtils.gcd(1402, 0);
      try { 
        MathUtils.pow(722030, (-29L));
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (722,030^-29)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 137
  /*
   * 92 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([D)V: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 3. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I41 Branch 212 IFGT L1830 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 20. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I41 Branch 212 IFGT L1830 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 31. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 891
   * Goal 35. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 894
   * Goal 36. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1264
   * Goal 37. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1265
   * Goal 38. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1266
   * Goal 39. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1283
   * Goal 40. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1329
   * Goal 41. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1330
   * Goal 42. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1331
   * Goal 43. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1334
   * Goal 44. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1336
   * Goal 45. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1359
   * Goal 46. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 48. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 49. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 50. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 51. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 52. Weak Mutation 2337: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> -
   * Goal 53. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 54. Weak Mutation 2350: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> %
   * Goal 55. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 56. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 57. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true in context: 
   * Goal 58. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 59. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - true in context: 
   * Goal 60. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 61. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 62. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 63. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 64. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 65. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 66. Weak Mutation 1757: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> -2
   * Goal 67. org.apache.commons.math.util.MathUtils.round(FI)F: Line 1248
   * Goal 68. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 69. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 70. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 71. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1856
   * Goal 72. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1822
   * Goal 73. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1823
   * Goal 74. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1825
   * Goal 75. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1826
   * Goal 76. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1827
   * Goal 77. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1829
   * Goal 78. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1830
   * Goal 79. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1831
   * Goal 80. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1855
   * Goal 81. org.apache.commons.math.util.MathUtils.checkOrder([D)V: Line 1869
   * Goal 82. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 83. Weak Mutation 3397: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1829 - ReplaceComparisonOperator == -> !=
   * Goal 84. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   * Goal 85. org.apache.commons.math.util.MathUtils.checkOrder([D)V
   * Goal 86. Branch org.apache.commons.math.util.MathUtils.checkOrder([D)V: root-Branch in context: org.apache.commons.math.util.MathUtils:checkOrder([D)V
   * Goal 87. checkOrder([D)V_org.apache.commons.math.exception.MathIllegalNumberException_EXPLICIT
   * Goal 88. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1858
   * Goal 89. Weak Mutation 3406: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1830 - ReplaceComparisonOperator > -> -2
   * Goal 90. Weak Mutation 3408: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1830 - ReplaceComparisonOperator > -> >=
   * Goal 91. org.apache.commons.math.util.MathUtils.round(FI)F:negative
   * Goal 92. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   */

  @Test
  public void test137()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(2939.671372602615, 0.0, 1.1102230246251565E-16);
      float float0 = MathUtils.round((-118.22136F), 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) (-118.22136F);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 344.5167995;
      doubleArray0[4] = 2939.671372602615;
      doubleArray0[5] = 0.1666666505023083;
      doubleArray0[6] = (double) 0;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0);
      } catch(IllegalArgumentException e) {
         //
         // points 1 and 2 are not strictly increasing (0 >= 0)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 138
  /*
   * 39 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1410
   * Goal 2. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1749
   * Goal 3. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1750
   * Goal 4. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1751
   * Goal 5. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1752
   * Goal 6. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1754
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(B)B: Line 1373
   * Goal 8. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1407
   * Goal 9. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false
   * Goal 14. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 15. Weak Mutation 2572: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> -1
   * Goal 16. Weak Mutation 3226: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> -1
   * Goal 17. Weak Mutation 3227: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> >
   * Goal 18. Weak Mutation 3237: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> +
   * Goal 19. Weak Mutation 3239: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> *
   * Goal 20. Weak Mutation 3240: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> /
   * Goal 21. Weak Mutation 3257: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> %
   * Goal 22. Weak Mutation 3259: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> /
   * Goal 23. Weak Mutation 3260: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> %
   * Goal 24. Weak Mutation 3263: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> /
   * Goal 25. Weak Mutation 2514: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator != -> -1
   * Goal 26. org.apache.commons.math.util.MathUtils.sign(B)B:zero
   * Goal 27. org.apache.commons.math.util.MathUtils.sign(F)F:zero
   * Goal 28. org.apache.commons.math.util.MathUtils.distance([D[D)D:zero
   * Goal 29. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 30. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 31. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 32. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 33. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 34. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 35. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - false in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 37. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - false in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 38. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 39. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   */

  @Test
  public void test138()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 1685.0022735139762;
      doubleArray0[1] = 1.0;
      double double0 = MathUtils.distance(doubleArray0, doubleArray0);
      byte byte0 = MathUtils.sign((byte)0);
      float float0 = MathUtils.sign(0.0F);
  }

  //Test case number: 139
  /*
   * 161 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I26 Branch 5 IFGE L143 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 41. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 489
   * Goal 44. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 548
   * Goal 45. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 551
   * Goal 46. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 554
   * Goal 47. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 555
   * Goal 48. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 559
   * Goal 49. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 50. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 51. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 52. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 53. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 54. Weak Mutation 1154: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator = null -> != null
   * Goal 55. Weak Mutation 1156: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator != null -> = null
   * Goal 56. Weak Mutation 1174: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:551 - ReplaceComparisonOperator == -> -2
   * Goal 57. Weak Mutation 1183: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> -1
   * Goal 58. Weak Mutation 1184: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> >
   * Goal 59. Weak Mutation 1194: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:555 - ReplaceComparisonOperator != -> ==
   * Goal 60. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:true
   * Goal 61. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 62. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 63. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 64. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 65. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 66. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 67. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 68. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 69. org.apache.commons.math.util.MathUtils.indicator(S)S: Line 925
   * Goal 70. Weak Mutation 1792: org.apache.commons.math.util.MathUtils.indicator(S)S:925 - ReplaceComparisonOperator < -> !=
   * Goal 71. org.apache.commons.math.util.MathUtils.indicator(S)S:positive
   * Goal 72. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 73. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 74. Branch org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false in context: org.apache.commons.math.util.MathUtils:indicator(S)S
   * Goal 75. org.apache.commons.math.util.MathUtils.round(DI)D: Line 1208
   * Goal 76. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1225
   * Goal 77. org.apache.commons.math.util.MathUtils.round(DI)D:zero
   * Goal 78. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 79. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 80. Branch org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch in context: org.apache.commons.math.util.MathUtils:round(DI)D
   * Goal 81. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 392
   * Goal 82. Weak Mutation 823: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:391 - ReplaceComparisonOperator >= -> -1
   * Goal 83. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:negative
   * Goal 84. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - false in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 85. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 86. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 142
   * Goal 87. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 166
   * Goal 88. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1749
   * Goal 89. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1750
   * Goal 90. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1754
   * Goal 91. Weak Mutation 3227: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> >
   * Goal 92. org.apache.commons.math.util.MathUtils.distance([D[D)D:zero
   * Goal 93. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 94. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 95. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 96. org.apache.commons.math.util.MathUtils.indicator(I)I: Line 904
   * Goal 97. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 98. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 99. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 100. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 101. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 102. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 417
   * Goal 103. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 104. Weak Mutation 872: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> -1
   * Goal 105. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 102
   * Goal 106. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 103
   * Goal 107. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 106
   * Goal 108. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 109. Weak Mutation 9: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> -
   * Goal 110. Weak Mutation 10: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> *
   * Goal 111. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 112. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 113. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 114. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 115. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 116. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 117. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 118. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 119. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 120. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 121. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1751
   * Goal 122. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1752
   * Goal 123. Weak Mutation 3226: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> -1
   * Goal 124. Weak Mutation 3237: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> +
   * Goal 125. Weak Mutation 3239: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> *
   * Goal 126. Weak Mutation 3240: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> /
   * Goal 127. Weak Mutation 3257: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> %
   * Goal 128. Weak Mutation 3259: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> /
   * Goal 129. Weak Mutation 3260: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> %
   * Goal 130. Weak Mutation 3263: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> /
   * Goal 131. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 132. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 143
   * Goal 133. Weak Mutation 60: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> -1
   * Goal 134. Weak Mutation 1769: org.apache.commons.math.util.MathUtils.indicator(I)I:904 - ReplaceComparisonOperator < -> -2
   * Goal 135. org.apache.commons.math.util.MathUtils.indicator(I)I:negative
   * Goal 136. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - true in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 137. org.apache.commons.math.util.MathUtils.equals(DDD)Z:false
   * Goal 138. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 139. Weak Mutation 3238: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> %
   * Goal 140. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 138
   * Goal 141. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1497
   * Goal 142. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1498
   * Goal 143. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1506
   * Goal 144. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1508
   * Goal 145. Weak Mutation 49: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> -1
   * Goal 146. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 147. Weak Mutation 2714: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> >
   * Goal 148. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 149. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 150. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 151. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:zero
   * Goal 152. org.apache.commons.math.util.MathUtils.equals(DD)Z:true
   * Goal 153. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 154. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 152
   * Goal 155. Weak Mutation 68: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> ==
   * Goal 156. Weak Mutation 109: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> -
   * Goal 157. Weak Mutation 110: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> *
   * Goal 158. Weak Mutation 111: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> /
   * Goal 159. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:zero
   * Goal 160. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:negative
   * Goal 161. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   */

  @Test
  public void test139()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(0.0, 0.0);
      boolean boolean1 = MathUtils.equals((-4306.3), 0.0, (-4306.3));
      int int0 = MathUtils.mulAndCheck((-2944), (-2944));
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 8667136;
      doubleArray0[1] = (-4306.3);
      doubleArray0[2] = (double) (-2944);
      doubleArray0[3] = (double) (-2944);
      doubleArray0[4] = 0.0;
      double double0 = MathUtils.distance(doubleArray0, doubleArray0);
      boolean boolean2 = MathUtils.equalsIncludingNaN(doubleArray0, doubleArray0);
      long long0 = MathUtils.subAndCheck((long) 8667136, (long) 8667136);
      int int1 = MathUtils.indicator((-423));
      double double1 = MathUtils.cosh((-4306.3));
      short short0 = MathUtils.indicator((short)1961);
      int int2 = MathUtils.mulAndCheck(0, (int) (short)1);
      double double2 = MathUtils.round(0.0, 11);
      int int3 = MathUtils.addAndCheck(18, (-423));
      int int4 = MathUtils.compareTo((-4.503599627370496E15), Double.POSITIVE_INFINITY, (-2944));
      double double3 = MathUtils.cosh((-1));
  }

  //Test case number: 140
  /*
   * 224 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 173 IFLE L1424 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 34. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 35. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 36. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 37. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 38. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false
   * Goal 39. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 40. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false
   * Goal 41. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 42. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 43. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 44. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 45. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 46. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 47. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 48. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 486
   * Goal 49. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 50. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 51. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 52. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 53. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 54. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 55. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 56. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 57. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 58. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 59. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 60. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 61. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 62. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 63. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 64. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 65. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 66. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 67. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 68. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 69. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 70. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 71. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 72. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 73. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 74. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 643
   * Goal 75. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 76. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1521
   * Goal 77. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1796
   * Goal 78. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1797
   * Goal 79. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1798
   * Goal 80. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1800
   * Goal 81. Weak Mutation 3354: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> -1
   * Goal 82. Weak Mutation 3355: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> >
   * Goal 83. Weak Mutation 3371: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> +
   * Goal 84. Weak Mutation 3373: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> *
   * Goal 85. Weak Mutation 3374: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> /
   * Goal 86. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:zero
   * Goal 87. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 88. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 89. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 90. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 91. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 92. Weak Mutation 3372: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> %
   * Goal 93. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 389
   * Goal 94. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 391
   * Goal 95. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 442
   * Goal 96. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 97. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 98. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 99. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 100. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 101. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 102. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 103. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 104. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 105. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 106. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 107. org.apache.commons.math.util.MathUtils.cosh(D)D: Line 405
   * Goal 108. Weak Mutation 838: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> %
   * Goal 109. Weak Mutation 839: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> -
   * Goal 110. Weak Mutation 840: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> *
   * Goal 111. Weak Mutation 841: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> /
   * Goal 112. Weak Mutation 846: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> +
   * Goal 113. Weak Mutation 847: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> %
   * Goal 114. Weak Mutation 848: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> -
   * Goal 115. Weak Mutation 849: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> *
   * Goal 116. org.apache.commons.math.util.MathUtils.cosh(D)D:positive
   * Goal 117. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 118. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 119. Branch org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:cosh(D)D
   * Goal 120. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1537
   * Goal 121. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1527
   * Goal 122. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1528
   * Goal 123. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1529
   * Goal 124. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1530
   * Goal 125. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1531
   * Goal 126. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1533
   * Goal 127. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1534
   * Goal 128. Weak Mutation 2743: org.apache.commons.math.util.MathUtils.pow(II)I:1521 - ReplaceComparisonOperator >= -> ==
   * Goal 129. Weak Mutation 2767: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> -2
   * Goal 130. Weak Mutation 2768: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> >=
   * Goal 131. Weak Mutation 2777: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> |
   * Goal 132. Weak Mutation 2778: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> ^
   * Goal 133. Weak Mutation 2779: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> -2
   * Goal 134. Weak Mutation 2780: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> >=
   * Goal 135. Weak Mutation 2795: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> %
   * Goal 136. Weak Mutation 2797: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> /
   * Goal 137. Weak Mutation 2811: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> %
   * Goal 138. Weak Mutation 2813: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> /
   * Goal 139. Weak Mutation 2821: org.apache.commons.math.util.MathUtils.pow(II)I:1534 - ReplaceBitwiseOperator >> -> <<
   * Goal 140. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 141. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 142. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 143. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 144. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 145. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 146. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 648
   * Goal 147. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> ==
   * Goal 148. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 149. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 150. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1030
   * Goal 151. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1031
   * Goal 152. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1034
   * Goal 153. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 154. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 155. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 156. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 157. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 158. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 585
   * Goal 159. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 590
   * Goal 160. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 594
   * Goal 161. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> ==
   * Goal 162. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1781
   * Goal 163. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1782
   * Goal 164. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1783
   * Goal 165. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1785
   * Goal 166. Weak Mutation 3324: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> -1
   * Goal 167. Weak Mutation 3325: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> >
   * Goal 168. Weak Mutation 3339: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> +
   * Goal 169. Weak Mutation 3341: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> *
   * Goal 170. Weak Mutation 3342: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> /
   * Goal 171. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:zero
   * Goal 172. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 173. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 174. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 175. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 176. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 177. org.apache.commons.math.util.MathUtils.sign(B)B: Line 1373
   * Goal 178. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 179. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 180. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 181. Weak Mutation 1201: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> ==
   * Goal 182. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:false
   * Goal 183. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 184. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 185. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 186. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 187. org.apache.commons.math.util.MathUtils.sign(I)I: Line 1424
   * Goal 188. Weak Mutation 3340: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> %
   * Goal 189. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 190. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 191. org.apache.commons.math.util.MathUtils.pow(II)I:zero
   * Goal 192. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 193. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 194. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 195. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 196. org.apache.commons.math.util.MathUtils.sign(J)J: Line 1438
   * Goal 197. Weak Mutation 2610: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator != -> <
   * Goal 198. Weak Mutation 2617: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator <= -> -1
   * Goal 199. org.apache.commons.math.util.MathUtils.sign(J)J:positive
   * Goal 200. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 201. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 202. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 203. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - false in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 204. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 390
   * Goal 205. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:zero
   * Goal 206. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 207. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 649
   * Goal 208. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 394
   * Goal 209. Weak Mutation 824: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:391 - ReplaceComparisonOperator >= -> ==
   * Goal 210. Weak Mutation 1274: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> -1
   * Goal 211. Weak Mutation 2515: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator != -> <
   * Goal 212. Weak Mutation 2521: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator <= -> -1
   * Goal 213. Weak Mutation 2594: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator != -> >
   * Goal 214. Weak Mutation 2600: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator <= -> ==
   * Goal 215. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:positive
   * Goal 216. org.apache.commons.math.util.MathUtils.sign(I)I:negative
   * Goal 217. org.apache.commons.math.util.MathUtils.factorialLog(I)D:zero
   * Goal 218. org.apache.commons.math.util.MathUtils.sign(B)B:positive
   * Goal 219. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - true in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 220. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 173 IFLE L1424 - true in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 221. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 222. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 223. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - false in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 224. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:positive
   */

  @Test
  public void test140()  throws Throwable  {
      byte byte0 = MathUtils.sign((byte)6);
      int[] intArray0 = new int[5];
      intArray0[0] = (int) (byte)1;
      intArray0[1] = (int) (byte)6;
      intArray0[2] = (int) (byte)1;
      intArray0[3] = (int) (byte)6;
      intArray0[4] = 0;
      int int0 = MathUtils.distanceInf(intArray0, intArray0);
      long long0 = MathUtils.sign((long) 1);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 1L;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) 6;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 6;
      doubleArray0[7] = (double) 1;
      doubleArray0[8] = (double) 6;
      double double0 = MathUtils.distanceInf(doubleArray0, doubleArray0);
      byte byte1 = MathUtils.sign((byte)94);
      double double1 = MathUtils.factorialLog((byte)1);
      int int1 = MathUtils.pow(0, (int) (byte)6);
      int int2 = MathUtils.compareTo((byte)6, 0, 0.0);
      double double2 = MathUtils.cosh(6);
      int int3 = MathUtils.sign((-8191));
      int int4 = MathUtils.compareTo(0.0, 0, 320.14642107);
      int int5 = MathUtils.mulAndCheck(6, 1613);
      boolean boolean0 = MathUtils.equalsIncludingNaN((-118.22135925292969), 1662.0);
  }
}
