* EvoSuite 1.0.2
* Going to generate test cases for class: org.apache.commons.math.util.MathUtils
* Starting client
* Connecting to master process on port 4409
* Analyzing classpath: 
  - /home/wasp/Desktop/ICSE18/DiffTGen/drr/patches/D_correct/Math63/patch1-Math-63-SimFix/patch1Math63_simfix/target/build/classes
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/myprinter.jar
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.util.MathUtils
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 480
  - Branch 465
  - Exception 0
  - MutationFactory 928
  - Output 184
  - Method 65
  - MethodNoException 65
  - CBranchFitnessFactory 465
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1552380792427
* Starting evolution
[Progress:>                             0%] [Cov:====>                              12%][Progress:>                             1%] [Cov:=>                                 3%][Progress:>                             1%] [Cov:==>                                6%][Progress:>                             1%] [Cov:======>                            19%][Progress:>                             1%] [Cov:=======>                           22%][Progress:>                             1%] [Cov:========>                          23%][Progress:>                             1%] [Cov:=========>                         26%][Progress:>                             1%] [Cov:==========>                        30%][Progress:>                             3%] [Cov:=>                                 3%][Progress:>                             3%] [Cov:==>                                6%][Progress:>                             3%] [Cov:======>                            19%][Progress:>                             3%] [Cov:=======>                           22%][Progress:>                             3%] [Cov:========>                          23%][Progress:>                             3%] [Cov:========>                          24%][Progress:>                             3%] [Cov:========>                          25%][Progress:>                             3%] [Cov:=========>                         26%][Progress:===>                          10%] [Cov:=>                                 5%][Progress:===>                          10%] [Cov:==>                                8%][Progress:===>                          10%] [Cov:=======>                           20%][Progress:===>                          10%] [Cov:========>                          24%][Progress:===>                          10%] [Cov:=========>                         26%][Progress:===>                          10%] [Cov:==========>                        29%][Progress:===>                          10%] [Cov:===========>                       32%][Progress:===>                          10%] [Cov:===========>                       33%][Progress:======>                       23%] [Cov:>                                  1%][Progress:======>                       23%] [Cov:>                                  2%][Progress:======>                       23%] [Cov:====>                              14%][Progress:======>                       23%] [Cov:=====>                             15%][Progress:======>                       23%] [Cov:=====>                             17%][Progress:======>                       23%] [Cov:======>                            19%][Progress:=======>                      25%] [Cov:>                                  2%][Progress:=======>                      25%] [Cov:=>                                 4%][Progress:=======>                      25%] [Cov:=====>                             17%][Progress:=======>                      25%] [Cov:======>                            18%][Progress:=======>                      25%] [Cov:=======>                           20%][Progress:=======>                      25%] [Cov:=======>                           22%][Progress:=======>                      25%] [Cov:========>                          25%][Progress:=======>                      25%] [Cov:=========>                         26%][Progress:=======>                      26%] [Cov:=>                                 4%][Progress:=======>                      26%] [Cov:==>                                8%][Progress:=======>                      26%] [Cov:=======>                           21%][Progress:=======>                      26%] [Cov:========>                          24%][Progress:=======>                      26%] [Cov:=========>                         27%][Progress:=======>                      26%] [Cov:===========>                       32%][Progress:=======>                      26%] [Cov:============>                      37%][Progress:=======>                      26%] [Cov:=============>                     38%][Progress:========>                     28%] [Cov:>                                  2%][Progress:========>                     28%] [Cov:=>                                 4%][Progress:========>                     28%] [Cov:=====>                             17%][Progress:========>                     28%] [Cov:======>                            19%][Progress:========>                     28%] [Cov:=======>                           20%][Progress:========>                     28%] [Cov:========>                          24%][Progress:========>                     28%] [Cov:=========>                         27%][Progress:========>                     28%] [Cov:=========>                         28%][Progress:==========>                   36%] [Cov:=>                                 4%][Progress:==========>                   36%] [Cov:==>                                7%][Progress:==========>                   36%] [Cov:======>                            19%][Progress:==========>                   36%] [Cov:=======>                           22%][Progress:==========>                   36%] [Cov:========>                          24%][Progress:==========>                   36%] [Cov:========>                          25%][Progress:==========>                   36%] [Cov:=========>                         27%][Progress:==========>                   36%] [Cov:=========>                         28%][Progress:============>                 43%] [Cov:>                                  1%][Progress:============>                 43%] [Cov:>                                  2%][Progress:============>                 43%] [Cov:=====>                             15%][Progress:============>                 43%] [Cov:=====>                             16%][Progress:============>                 43%] [Cov:=====>                             17%][Progress:============>                 43%] [Cov:======>                            18%][Progress:============>                 43%] [Cov:=======>                           20%][Progress:============>                 43%] [Cov:=======>                           22%][Progress:===============>              51%] [Cov:>                                  0%][Progress:===============>              51%] [Cov:>                                  1%][Progress:===============>              51%] [Cov:====>                              14%][Progress:===============>              51%] [Cov:======>                            18%][Progress:===============>              51%] [Cov:=======>                           21%][Progress:===============>              51%] [Cov:=======>                           22%][Progress:===============>              51%] [Cov:========>                          25%][Progress:===============>              51%] [Cov:=========>                         28%][Progress:===============>              51%] [Cov:==========>                        29%][Progress:==================>           60%] [Cov:>                                  2%][Progress:==================>           60%] [Cov:=>                                 3%][Progress:==================>           60%] [Cov:=====>                             15%][Progress:==================>           60%] [Cov:=====>                             16%][Progress:==================>           60%] [Cov:=====>                             17%][Progress:==================>           60%] [Cov:======>                            19%][Progress:==================>           60%] [Cov:=======>                           22%][Progress:==================>           60%] [Cov:========>                          24%][Progress:==================>           60%] [Cov:=========>                         28%][Progress:==================>           60%] [Cov:===========>                       32%][Progress:==================>           61%] [Cov:>                                  2%][Progress:==================>           61%] [Cov:=>                                 4%][Progress:==================>           61%] [Cov:=====>                             17%][Progress:==================>           61%] [Cov:======>                            18%][Progress:==================>           61%] [Cov:======>                            19%][Progress:==================>           61%] [Cov:=======>                           22%][Progress:==================>           61%] [Cov:========>                          25%][Progress:==================>           61%] [Cov:=========>                         26%][Progress:=====================>        70%] [Cov:>                                  2%][Progress:=====================>        70%] [Cov:=====>                             15%][Progress:======================>       76%] [Cov:=>                                 4%][Progress:======================>       76%] [Cov:==>                                7%][Progress:======================>       76%] [Cov:=======>                           20%][Progress:======================>       76%] [Cov:========>                          24%][Progress:======================>       76%] [Cov:=========>                         26%][Progress:======================>       76%] [Cov:==========>                        29%][Progress:======================>       76%] [Cov:===========>                       33%][Progress:======================>       76%] [Cov:===========>                       34%][Progress:======================>       76%] [Cov:=============>                     38%][Progress:=======================>      78%] [Cov:======>                            19%][Progress:=======================>      78%] [Cov:=========>                         26%][Progress:=======================>      78%] [Cov:=========>                         27%][Progress:=======================>      78%] [Cov:===========>                       33%][Progress:=======================>      78%] [Cov:===========>                       34%][Progress:=======================>      78%] [Cov:============>                      37%][Progress:========================>     80%] [Cov:=========>                         27%][Progress:========================>     80%] [Cov:============>                      37%][Progress:========================>     80%] [Cov:=============>                     38%][Progress:========================>     81%] [Cov:============>                      37%][Progress:========================>     81%] [Cov:===========================>       79%][Progress:========================>     83%] [Cov:===========================>       79%][Progress:=========================>    85%] [Cov:===========================>       79%][Progress:=========================>    86%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:============================>      80%][Progress:===========================>  93%] [Cov:===========================>       79%][Progress:===========================>  93%] [Cov:============================>      80%][Progress:============================> 95%] [Cov:===========================>       79%][Progress:============================> 96%] [Cov:===========================>       79%][Progress:============================> 96%] [Cov:============================>      80%][Progress:============================> 96%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:==============================>    86%][MASTER] 09:54:33.302 [logback-1] WARN  TimeController - Operation 'update from archive' took too long: 15290ms

* Search finished after 77s and 5 generations, 7450 statements, best individual has fitness: 2689.496926278996
[MASTER] 09:54:33.720 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 17 seconds more than allowed.
* Minimizing test suite
[MASTER] 09:55:47.908 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 480
* Number of covered goals: 409
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 80%
* Total number of goals: 465
* Number of covered goals: 371
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 77%
* Total number of goals: 928
* Number of covered goals: 718
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 72%
* Total number of goals: 184
* Number of covered goals: 133
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 65
* Number of covered goals: 65
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 65
* Number of covered goals: 65
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 78%
* Total number of goals: 465
* Number of covered goals: 361
* Generated 131 tests with total length 1299
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 09:56:18.712 [logback-1] WARN  Sandbox - Sandbox can be initalized only once
[MASTER] 09:56:18.713 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.runners.model.TestTimedOutException: test timed out after 4000 milliseconds
[MASTER] 09:56:18.714 [logback-1] WARN  JUnitAnalyzer - Failing test: double double0 = MathUtils.scalb(1450.0456752, (-1469));
byte[] byteArray0 = new byte[3];
byteArray0[0] = (byte)61;
byte byte0 = (byte)21;
byteArray0[1] = (byte)21;
byteArray0[2] = (byte)0;
BigInteger bigInteger0 = new BigInteger(byteArray0);
int int0 = bigInteger0.bitLength();
String string0 = bigInteger0.toString();
BigInteger bigInteger1 = MathUtils.pow(bigInteger0, 2L);
BigInteger bigInteger2 = MathUtils.pow(bigInteger1, bigInteger0);
String string1 = "ROUND_HALF_DOWN";
MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.valueOf(string1);
int int1 = (-1723);
int int2 = MathUtils.pow(int1, (int) byte0);

* Computation finished
