/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 12 08:53:10 GMT 2019
 */

package org.apache.commons.math.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import org.apache.commons.math.util.MathUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class MathUtils_ESTest extends MathUtils_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 24 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I26 Branch 5 IFGE L143 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 142
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 143
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 152
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 166
   * Goal 11. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1497
   * Goal 12. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1498
   * Goal 13. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1506
   * Goal 14. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1508
   * Goal 15. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 16. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 17. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 18. Weak Mutation 60: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> -1
   * Goal 19. Weak Mutation 68: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> ==
   * Goal 20. Weak Mutation 109: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> -
   * Goal 21. Weak Mutation 110: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> *
   * Goal 22. Weak Mutation 111: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> /
   * Goal 23. Weak Mutation 2713: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> <
   * Goal 24. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:zero
   */

  @Test
  public void test000()  throws Throwable  {
      long long0 = MathUtils.subAndCheck((long) (-173), (long) (-173));
  }

  //Test case number: 1
  /*
   * 29 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 142
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 159
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 160
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 166
   * Goal 11. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1497
   * Goal 12. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1498
   * Goal 13. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1506
   * Goal 14. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1508
   * Goal 15. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 16. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 17. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 18. Weak Mutation 61: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> ==
   * Goal 19. Weak Mutation 121: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> +
   * Goal 20. Weak Mutation 122: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> %
   * Goal 21. Weak Mutation 123: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> *
   * Goal 22. Weak Mutation 124: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> /
   * Goal 23. Weak Mutation 126: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceComparisonOperator > -> !=
   * Goal 24. Weak Mutation 132: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> %
   * Goal 25. Weak Mutation 133: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> -
   * Goal 26. Weak Mutation 134: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> *
   * Goal 27. Weak Mutation 135: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> /
   * Goal 28. Weak Mutation 2713: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> <
   * Goal 29. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:positive
   */

  @Test
  public void test001()  throws Throwable  {
      long long0 = MathUtils.subAndCheck(1515L, (-1622L));
  }

  //Test case number: 2
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 5. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1478
   * Goal 6. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1479
   * Goal 7. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1482
   * Goal 8. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 9. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 10. Weak Mutation 2671: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> +
   * Goal 11. Weak Mutation 2672: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> %
   * Goal 12. Weak Mutation 2673: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> *
   * Goal 13. Weak Mutation 2674: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> /
   * Goal 14. Weak Mutation 2682: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator < -> !=
   * Goal 15. Weak Mutation 2691: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator <= -> ==
   * Goal 16. org.apache.commons.math.util.MathUtils.subAndCheck(II)I:positive
   */

  @Test
  public void test002()  throws Throwable  {
      int int0 = MathUtils.subAndCheck(19, (-173));
  }

  //Test case number: 3
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 3. org.apache.commons.math.util.MathUtils.sinh(D)D: Line 1464
   * Goal 4. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 5. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 6. Weak Mutation 2651: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> +
   * Goal 7. Weak Mutation 2653: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> *
   * Goal 8. Weak Mutation 2654: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> /
   * Goal 9. Weak Mutation 2659: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> +
   * Goal 10. Weak Mutation 2661: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> -
   * Goal 11. org.apache.commons.math.util.MathUtils.sinh(D)D:zero
   */

  @Test
  public void test003()  throws Throwable  {
      double double0 = MathUtils.sinh(0.0);
  }

  //Test case number: 4
  /*
   * 51 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 14. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - false
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true in context: 
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - false in context: 
   * Goal 26. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 891
   * Goal 27. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 894
   * Goal 28. org.apache.commons.math.util.MathUtils.round(FI)F: Line 1248
   * Goal 29. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1264
   * Goal 30. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1265
   * Goal 31. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1266
   * Goal 32. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1283
   * Goal 33. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1329
   * Goal 34. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1330
   * Goal 35. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1331
   * Goal 36. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1332
   * Goal 37. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1359
   * Goal 38. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 39. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 40. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 41. Weak Mutation 1759: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> <=
   * Goal 42. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 43. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 44. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 45. Weak Mutation 2337: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> -
   * Goal 46. Weak Mutation 2338: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> /
   * Goal 47. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 48. Weak Mutation 2350: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> %
   * Goal 49. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 50. Weak Mutation 2352: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> *
   * Goal 51. org.apache.commons.math.util.MathUtils.round(FI)F:zero
   */

  @Test
  public void test004()  throws Throwable  {
      float float0 = MathUtils.round(0.0F, 78);
  }

  //Test case number: 5
  /*
   * 54 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 14. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - true
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true in context: 
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - true in context: 
   * Goal 26. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 891
   * Goal 27. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 894
   * Goal 28. org.apache.commons.math.util.MathUtils.round(FI)F: Line 1248
   * Goal 29. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1264
   * Goal 30. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1265
   * Goal 31. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1266
   * Goal 32. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1283
   * Goal 33. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1329
   * Goal 34. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1330
   * Goal 35. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1331
   * Goal 36. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1334
   * Goal 37. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1336
   * Goal 38. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1359
   * Goal 39. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 40. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 41. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 42. Weak Mutation 1757: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> -2
   * Goal 43. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 44. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 45. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 46. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 47. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 48. Weak Mutation 2337: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> -
   * Goal 49. Weak Mutation 2338: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> /
   * Goal 50. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 51. Weak Mutation 2350: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> %
   * Goal 52. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 53. Weak Mutation 2352: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> *
   * Goal 54. org.apache.commons.math.util.MathUtils.round(FI)F:negative
   */

  @Test
  public void test005()  throws Throwable  {
      float float0 = MathUtils.round((-4379.33F), 11);
  }

  //Test case number: 6
  /*
   * 4 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1225
   * Goal 2. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 3. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 4. org.apache.commons.math.util.MathUtils.round(DII)D:zero
   */

  @Test
  public void test006()  throws Throwable  {
      double double0 = MathUtils.round(0.0, 0, 0);
  }

  //Test case number: 7
  /*
   * 4 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1225
   * Goal 2. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 3. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 4. org.apache.commons.math.util.MathUtils.round(DII)D:positive
   */

  @Test
  public void test007()  throws Throwable  {
      double double0 = MathUtils.round(1158.362, 0, 0);
  }

  //Test case number: 8
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch in context: org.apache.commons.math.util.MathUtils:round(DI)D
   * Goal 3. org.apache.commons.math.util.MathUtils.round(DI)D: Line 1208
   * Goal 4. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1225
   * Goal 5. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 6. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 7. org.apache.commons.math.util.MathUtils.round(DI)D:positive
   */

  @Test
  public void test008()  throws Throwable  {
      double double0 = MathUtils.round(414.51869088172316, 0);
  }

  //Test case number: 9
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch in context: org.apache.commons.math.util.MathUtils:round(DI)D
   * Goal 3. org.apache.commons.math.util.MathUtils.round(DI)D: Line 1208
   * Goal 4. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1225
   * Goal 5. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 6. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 7. org.apache.commons.math.util.MathUtils.round(DI)D:negative
   */

  @Test
  public void test009()  throws Throwable  {
      double double0 = MathUtils.round((-8.041990268715273E164), 17);
  }

  //Test case number: 10
  /*
   * 34 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1611
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1617
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1618
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1619
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1620
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1621
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1623
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1624
   * Goal 17. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1627
   * Goal 18. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 19. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 20. Weak Mutation 2970: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> ==
   * Goal 21. Weak Mutation 2994: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> -2
   * Goal 22. Weak Mutation 2995: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> >=
   * Goal 23. Weak Mutation 3005: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> ^
   * Goal 24. Weak Mutation 3009: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> >=
   * Goal 25. Weak Mutation 3019: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> +
   * Goal 26. Weak Mutation 3020: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> %
   * Goal 27. Weak Mutation 3021: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> -
   * Goal 28. Weak Mutation 3022: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> /
   * Goal 29. Weak Mutation 3031: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> +
   * Goal 30. Weak Mutation 3032: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> %
   * Goal 31. Weak Mutation 3033: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> -
   * Goal 32. Weak Mutation 3034: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> /
   * Goal 33. Weak Mutation 3040: org.apache.commons.math.util.MathUtils.pow(JJ)J:1624 - ReplaceBitwiseOperator >> -> <<
   * Goal 34. org.apache.commons.math.util.MathUtils.pow(JJ)J:negative
   */

  @Test
  public void test010()  throws Throwable  {
      long long0 = MathUtils.pow((-3512299194304650054L), (long) 1);
  }

  //Test case number: 11
  /*
   * 34 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1551
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1557
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1558
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1559
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1560
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1561
   * Goal 17. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1563
   * Goal 18. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1564
   * Goal 19. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1567
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 21. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 22. Weak Mutation 2833: org.apache.commons.math.util.MathUtils.pow(IJ)I:1551 - ReplaceComparisonOperator >= -> ==
   * Goal 23. Weak Mutation 2851: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> -2
   * Goal 24. Weak Mutation 2852: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> >=
   * Goal 25. Weak Mutation 2858: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> |
   * Goal 26. Weak Mutation 2859: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> ^
   * Goal 27. Weak Mutation 2862: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> -2
   * Goal 28. Weak Mutation 2863: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> >=
   * Goal 29. Weak Mutation 2876: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> %
   * Goal 30. Weak Mutation 2878: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> /
   * Goal 31. Weak Mutation 2890: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> %
   * Goal 32. Weak Mutation 2892: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> /
   * Goal 33. Weak Mutation 2895: org.apache.commons.math.util.MathUtils.pow(IJ)I:1564 - ReplaceBitwiseOperator >> -> <<
   * Goal 34. org.apache.commons.math.util.MathUtils.pow(IJ)I:zero
   */

  @Test
  public void test011()  throws Throwable  {
      int int0 = MathUtils.pow((int) (byte)0, 7910884519577875640L);
  }

  //Test case number: 12
  /*
   * 36 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1521
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1527
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1528
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1529
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1530
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1531
   * Goal 17. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1533
   * Goal 18. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1534
   * Goal 19. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1537
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 21. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 22. Weak Mutation 2743: org.apache.commons.math.util.MathUtils.pow(II)I:1521 - ReplaceComparisonOperator >= -> ==
   * Goal 23. Weak Mutation 2767: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> -2
   * Goal 24. Weak Mutation 2768: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> >=
   * Goal 25. Weak Mutation 2777: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> |
   * Goal 26. Weak Mutation 2778: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> ^
   * Goal 27. Weak Mutation 2779: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> -2
   * Goal 28. Weak Mutation 2780: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> >=
   * Goal 29. Weak Mutation 2795: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> %
   * Goal 30. Weak Mutation 2797: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> /
   * Goal 31. Weak Mutation 2810: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> +
   * Goal 32. Weak Mutation 2811: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> %
   * Goal 33. Weak Mutation 2812: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> -
   * Goal 34. Weak Mutation 2813: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> /
   * Goal 35. Weak Mutation 2821: org.apache.commons.math.util.MathUtils.pow(II)I:1534 - ReplaceBitwiseOperator >> -> <<
   * Goal 36. org.apache.commons.math.util.MathUtils.pow(II)I:zero
   */

  @Test
  public void test012()  throws Throwable  {
      int int0 = MathUtils.pow(2128, 2128);
  }

  //Test case number: 13
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1030
   * Goal 6. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1031
   * Goal 7. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1034
   * Goal 8. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 10. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 11. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 12. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 13. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 14. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:zero
   */

  @Test
  public void test013()  throws Throwable  {
      int int0 = MathUtils.mulAndCheck((-1086), 0);
  }

  //Test case number: 14
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash([D)I
   * Goal 3. org.apache.commons.math.util.MathUtils.hash([D)I: Line 854
   * Goal 4. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 5. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 6. org.apache.commons.math.util.MathUtils.hash([D)I:negative
   */

  @Test
  public void test014()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 1454.4604243263;
      doubleArray0[2] = (double) 5258910L;
      doubleArray0[4] = 0.3333333134651184;
      int int0 = MathUtils.hash(doubleArray0);
  }

  //Test case number: 15
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash(D)I
   * Goal 3. org.apache.commons.math.util.MathUtils.hash(D)I: Line 843
   * Goal 4. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 5. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 6. org.apache.commons.math.util.MathUtils.hash(D)I:positive
   */

  @Test
  public void test015()  throws Throwable  {
      int int0 = MathUtils.hash(589.04507097615);
  }

  //Test case number: 16
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash(D)I
   * Goal 3. org.apache.commons.math.util.MathUtils.hash(D)I: Line 843
   * Goal 4. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 5. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 6. org.apache.commons.math.util.MathUtils.hash(D)I:negative
   */

  @Test
  public void test016()  throws Throwable  {
      int int0 = MathUtils.hash(2512.8885059);
  }

  //Test case number: 17
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 688
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 689
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 690
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 691
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 696
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 14. Weak Mutation 1329: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> -2
   * Goal 15. Weak Mutation 1353: org.apache.commons.math.util.MathUtils.gcd(II)I:691 - ReplaceComparisonOperator == -> >=
   * Goal 16. Weak Mutation 1367: org.apache.commons.math.util.MathUtils.gcd(II)I:691 - ReplaceComparisonOperator != -> <
   * Goal 17. Weak Mutation 1395: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> %
   * Goal 18. Weak Mutation 1398: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> /
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(II)I:zero
   */

  @Test
  public void test017()  throws Throwable  {
      int int0 = MathUtils.gcd((int) (short)0, (int) (short)0);
  }

  //Test case number: 18
  /*
   * 17 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 5. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1781
   * Goal 6. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1782
   * Goal 7. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1783
   * Goal 8. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1785
   * Goal 9. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 10. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 11. Weak Mutation 3324: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> -1
   * Goal 12. Weak Mutation 3325: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> >
   * Goal 13. Weak Mutation 3339: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> +
   * Goal 14. Weak Mutation 3340: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> %
   * Goal 15. Weak Mutation 3341: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> *
   * Goal 16. Weak Mutation 3342: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> /
   * Goal 17. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:positive
   */

  @Test
  public void test018()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = Double.NaN;
      double double0 = MathUtils.distanceInf(doubleArray0, doubleArray0);
  }

  //Test case number: 19
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 5. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 102
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 103
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 106
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 10. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 11. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 12. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 13. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 14. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:zero
   */

  @Test
  public void test019()  throws Throwable  {
      int int0 = MathUtils.addAndCheck(0, 0);
  }

  //Test case number: 20
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 5. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 102
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 103
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 106
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 10. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 11. Weak Mutation 9: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> -
   * Goal 12. Weak Mutation 10: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> *
   * Goal 13. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 14. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 15. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 16. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:negative
   */

  @Test
  public void test020()  throws Throwable  {
      int int0 = MathUtils.addAndCheck((-1329), 16);
  }

  //Test case number: 21
  /*
   * 56 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I152 Branch 224 IFEQ L1959 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I223 Branch 227 IFLT L1976 - false
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I152 Branch 224 IFEQ L1959 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I223 Branch 227 IFLT L1976 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 23. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1932
   * Goal 24. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1933
   * Goal 25. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1934
   * Goal 26. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1935
   * Goal 27. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1936
   * Goal 28. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1937
   * Goal 29. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1938
   * Goal 30. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1939
   * Goal 31. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1940
   * Goal 32. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1941
   * Goal 33. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1942
   * Goal 34. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1943
   * Goal 35. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1944
   * Goal 36. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1954
   * Goal 37. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1959
   * Goal 38. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1966
   * Goal 39. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1970
   * Goal 40. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1973
   * Goal 41. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1976
   * Goal 42. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1977
   * Goal 43. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1983
   * Goal 44. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 45. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 46. Weak Mutation 3498: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> +
   * Goal 47. Weak Mutation 3499: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> %
   * Goal 48. Weak Mutation 3500: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> -
   * Goal 49. Weak Mutation 3501: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> *
   * Goal 50. Weak Mutation 3506: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> -1
   * Goal 51. Weak Mutation 3507: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> >
   * Goal 52. Weak Mutation 3538: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> -2
   * Goal 53. Weak Mutation 3540: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> <=
   * Goal 54. Weak Mutation 3568: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator <= -> ==
   * Goal 55. Weak Mutation 3597: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1944 - ReplaceComparisonOperator <= -> ==
   * Goal 56. org.apache.commons.math.util.MathUtils.safeNorm([D)D:positive
   */

  @Test
  public void test021()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[2] = 3.834E-20;
      double double0 = MathUtils.safeNorm(doubleArray0);
  }

  //Test case number: 22
  /*
   * 34 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 6. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I84 Branch 216 IFLE L1845 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I84 Branch 216 IFLE L1845 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 17. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1822
   * Goal 18. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1823
   * Goal 19. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1825
   * Goal 20. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1826
   * Goal 21. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1827
   * Goal 22. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1840
   * Goal 23. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1845
   * Goal 24. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1855
   * Goal 25. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1858
   * Goal 26. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1860
   * Goal 27. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 28. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 29. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 30. Weak Mutation 3391: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> >
   * Goal 31. Weak Mutation 3426: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1840 - ReplaceComparisonOperator == -> !=
   * Goal 32. Weak Mutation 3448: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1845 - ReplaceComparisonOperator <= -> ==
   * Goal 33. Weak Mutation 3449: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1845 - ReplaceComparisonOperator <= -> <
   * Goal 34. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   */

  @Test
  public void test022()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 1344.321961;
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.DECREASING;
      MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, false);
  }

  //Test case number: 23
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 5. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I71 Branch 215 IFLT L1841 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I71 Branch 215 IFLT L1841 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 15. checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V_org.apache.commons.math.exception.MathIllegalNumberException_EXPLICIT
   * Goal 16. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1822
   * Goal 17. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1823
   * Goal 18. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1825
   * Goal 19. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1826
   * Goal 20. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1827
   * Goal 21. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1840
   * Goal 22. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1841
   * Goal 23. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1842
   * Goal 24. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1855
   * Goal 25. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1856
   * Goal 26. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 27. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 28. Weak Mutation 3426: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1840 - ReplaceComparisonOperator == -> !=
   * Goal 29. Weak Mutation 3436: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1841 - ReplaceComparisonOperator < -> !=
   * Goal 30. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   */

  @Test
  public void test023()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[1] = 1.5430806348152437;
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.DECREASING;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, true);
      } catch(IllegalArgumentException e) {
         //
         // points 0 and 1 are not strictly decreasing (0 <= 1.543)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 24
  /*
   * 17 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 5. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1796
   * Goal 6. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1797
   * Goal 7. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1798
   * Goal 8. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1800
   * Goal 9. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 10. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 11. Weak Mutation 3354: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> -1
   * Goal 12. Weak Mutation 3355: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> >
   * Goal 13. Weak Mutation 3371: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> +
   * Goal 14. Weak Mutation 3372: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> %
   * Goal 15. Weak Mutation 3373: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> *
   * Goal 16. Weak Mutation 3374: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> /
   * Goal 17. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:zero
   */

  @Test
  public void test024()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 1207;
      int int0 = MathUtils.distanceInf(intArray0, intArray0);
  }

  //Test case number: 25
  /*
   * 17 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - true in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: I12 Branch 205 IF_ICMPGE L1782 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([D[D)D
   * Goal 5. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1781
   * Goal 6. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1782
   * Goal 7. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1783
   * Goal 8. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D: Line 1785
   * Goal 9. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 10. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D
   * Goal 11. Weak Mutation 3324: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> -1
   * Goal 12. Weak Mutation 3325: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1782 - ReplaceComparisonOperator >= -> >
   * Goal 13. Weak Mutation 3339: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> +
   * Goal 14. Weak Mutation 3340: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> %
   * Goal 15. Weak Mutation 3341: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> *
   * Goal 16. Weak Mutation 3342: org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:1783 - ReplaceArithmeticOperator - -> /
   * Goal 17. org.apache.commons.math.util.MathUtils.distanceInf([D[D)D:zero
   */

  @Test
  public void test025()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-1812.7188315);
      double double0 = MathUtils.distanceInf(doubleArray0, doubleArray0);
  }

  //Test case number: 26
  /*
   * 24 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 5. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1765
   * Goal 6. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1766
   * Goal 7. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1767
   * Goal 8. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1768
   * Goal 9. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1770
   * Goal 10. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 11. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 12. Weak Mutation 3275: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> -1
   * Goal 13. Weak Mutation 3276: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> >
   * Goal 14. Weak Mutation 3287: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> %
   * Goal 15. Weak Mutation 3289: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> /
   * Goal 16. Weak Mutation 3305: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> +
   * Goal 17. Weak Mutation 3306: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> %
   * Goal 18. Weak Mutation 3307: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> -
   * Goal 19. Weak Mutation 3308: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> /
   * Goal 20. Weak Mutation 3309: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> %
   * Goal 21. Weak Mutation 3310: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> -
   * Goal 22. Weak Mutation 3311: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> *
   * Goal 23. Weak Mutation 3312: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> /
   * Goal 24. org.apache.commons.math.util.MathUtils.distance([I[I)D:positive
   */

  @Test
  public void test026()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[2] = (-538);
      int[] intArray1 = new int[5];
      double double0 = MathUtils.distance(intArray0, intArray1);
  }

  //Test case number: 27
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - true in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 5. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1765
   * Goal 6. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1766
   * Goal 7. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1767
   * Goal 8. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1768
   * Goal 9. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1770
   * Goal 10. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 11. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 12. Weak Mutation 3275: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> -1
   * Goal 13. Weak Mutation 3276: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> >
   * Goal 14. Weak Mutation 3286: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> +
   * Goal 15. Weak Mutation 3287: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> %
   * Goal 16. Weak Mutation 3288: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> *
   * Goal 17. Weak Mutation 3289: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> /
   * Goal 18. Weak Mutation 3306: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> %
   * Goal 19. Weak Mutation 3308: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> /
   * Goal 20. Weak Mutation 3309: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> %
   * Goal 21. Weak Mutation 3312: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> /
   * Goal 22. org.apache.commons.math.util.MathUtils.distance([I[I)D:zero
   */

  @Test
  public void test027()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 12;
      double double0 = MathUtils.distance(intArray0, intArray0);
  }

  //Test case number: 28
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - false in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.distance([D[D)D: I12 Branch 203 IF_ICMPGE L1750 - true in context: org.apache.commons.math.util.MathUtils:distance([D[D)D
   * Goal 5. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1749
   * Goal 6. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1750
   * Goal 7. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1751
   * Goal 8. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1752
   * Goal 9. org.apache.commons.math.util.MathUtils.distance([D[D)D: Line 1754
   * Goal 10. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 11. org.apache.commons.math.util.MathUtils.distance([D[D)D
   * Goal 12. Weak Mutation 3226: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> -1
   * Goal 13. Weak Mutation 3227: org.apache.commons.math.util.MathUtils.distance([D[D)D:1750 - ReplaceComparisonOperator >= -> >
   * Goal 14. Weak Mutation 3237: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> +
   * Goal 15. Weak Mutation 3238: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> %
   * Goal 16. Weak Mutation 3239: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> *
   * Goal 17. Weak Mutation 3240: org.apache.commons.math.util.MathUtils.distance([D[D)D:1751 - ReplaceArithmeticOperator - -> /
   * Goal 18. Weak Mutation 3257: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> %
   * Goal 19. Weak Mutation 3259: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator * -> /
   * Goal 20. Weak Mutation 3260: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> %
   * Goal 21. Weak Mutation 3263: org.apache.commons.math.util.MathUtils.distance([D[D)D:1752 - ReplaceArithmeticOperator + -> /
   * Goal 22. org.apache.commons.math.util.MathUtils.distance([D[D)D:zero
   */

  @Test
  public void test028()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 133;
      double double0 = MathUtils.distance(doubleArray0, doubleArray0);
  }

  //Test case number: 29
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - false in context: org.apache.commons.math.util.MathUtils:distance1([I[I)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.distance1([I[I)I: I12 Branch 202 IF_ICMPGE L1735 - true in context: org.apache.commons.math.util.MathUtils:distance1([I[I)I
   * Goal 5. org.apache.commons.math.util.MathUtils.distance1([I[I)I: Line 1734
   * Goal 6. org.apache.commons.math.util.MathUtils.distance1([I[I)I: Line 1735
   * Goal 7. org.apache.commons.math.util.MathUtils.distance1([I[I)I: Line 1736
   * Goal 8. org.apache.commons.math.util.MathUtils.distance1([I[I)I: Line 1738
   * Goal 9. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 10. org.apache.commons.math.util.MathUtils.distance1([I[I)I
   * Goal 11. Weak Mutation 3190: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1735 - ReplaceComparisonOperator >= -> -1
   * Goal 12. Weak Mutation 3191: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1735 - ReplaceComparisonOperator >= -> >
   * Goal 13. Weak Mutation 3207: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> +
   * Goal 14. Weak Mutation 3208: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> %
   * Goal 15. Weak Mutation 3209: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> *
   * Goal 16. Weak Mutation 3210: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator - -> /
   * Goal 17. Weak Mutation 3211: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> %
   * Goal 18. Weak Mutation 3214: org.apache.commons.math.util.MathUtils.distance1([I[I)I:1736 - ReplaceArithmeticOperator + -> /
   * Goal 19. org.apache.commons.math.util.MathUtils.distance1([I[I)I:zero
   */

  @Test
  public void test029()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (int) (byte) (-25);
      int int0 = MathUtils.distance1(intArray0, intArray0);
  }

  //Test case number: 30
  /*
   * 21 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 5. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1719
   * Goal 6. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1720
   * Goal 7. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1721
   * Goal 8. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1723
   * Goal 9. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 10. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 11. Weak Mutation 3156: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> -1
   * Goal 12. Weak Mutation 3157: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> >
   * Goal 13. Weak Mutation 3171: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> +
   * Goal 14. Weak Mutation 3172: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> %
   * Goal 15. Weak Mutation 3173: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> *
   * Goal 16. Weak Mutation 3174: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> /
   * Goal 17. Weak Mutation 3175: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> %
   * Goal 18. Weak Mutation 3176: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> -
   * Goal 19. Weak Mutation 3177: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> *
   * Goal 20. Weak Mutation 3178: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> /
   * Goal 21. org.apache.commons.math.util.MathUtils.distance1([D[D)D:positive
   */

  @Test
  public void test030()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[1] = Double.POSITIVE_INFINITY;
      double double0 = MathUtils.distance1(doubleArray0, doubleArray0);
  }

  //Test case number: 31
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1661
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1667
   * Goal 7. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1668
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1669
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1677
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 12. Weak Mutation 3067: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1661 - ReplaceComparisonOperator >= -> >
   * Goal 13. Weak Mutation 3079: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1669 - ReplaceComparisonOperator == -> -2
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:nonnull
   */

  @Test
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = MathUtils.pow(bigInteger0, 0L);
  }

  //Test case number: 32
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - true
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: Line 1641
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: Line 1647
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 7. Weak Mutation 3050: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;:1641 - ReplaceComparisonOperator >= -> ==
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;:nonnull
   */

  @Test
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = MathUtils.pow(bigInteger0, 1120);
  }

  //Test case number: 33
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1581
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1587
   * Goal 7. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1588
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1589
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1597
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 12. Weak Mutation 2907: org.apache.commons.math.util.MathUtils.pow(JI)J:1581 - ReplaceComparisonOperator >= -> >
   * Goal 13. Weak Mutation 2924: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> -2
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(JI)J:positive
   */

  @Test
  public void test033()  throws Throwable  {
      long long0 = MathUtils.pow(7910884519577875640L, 0);
  }

  //Test case number: 34
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1551
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1557
   * Goal 7. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1558
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1559
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1567
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 12. Weak Mutation 2834: org.apache.commons.math.util.MathUtils.pow(IJ)I:1551 - ReplaceComparisonOperator >= -> >
   * Goal 13. Weak Mutation 2851: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> -2
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(IJ)I:positive
   */

  @Test
  public void test034()  throws Throwable  {
      int int0 = MathUtils.pow(0, 0L);
  }

  //Test case number: 35
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1521
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1527
   * Goal 7. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1528
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1529
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1537
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 12. Weak Mutation 2744: org.apache.commons.math.util.MathUtils.pow(II)I:1521 - ReplaceComparisonOperator >= -> >
   * Goal 13. Weak Mutation 2767: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> -2
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(II)I:positive
   */

  @Test
  public void test035()  throws Throwable  {
      int int0 = MathUtils.pow(113, 0);
  }

  //Test case number: 36
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 5. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1478
   * Goal 6. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1479
   * Goal 7. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1482
   * Goal 8. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 9. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 10. Weak Mutation 2672: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> %
   * Goal 11. Weak Mutation 2674: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> /
   * Goal 12. Weak Mutation 2682: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator < -> !=
   * Goal 13. Weak Mutation 2691: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator <= -> ==
   * Goal 14. org.apache.commons.math.util.MathUtils.subAndCheck(II)I:negative
   */

  @Test
  public void test036()  throws Throwable  {
      int int0 = MathUtils.subAndCheck((-2370), 0);
  }

  //Test case number: 37
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 3. org.apache.commons.math.util.MathUtils.sinh(D)D: Line 1464
   * Goal 4. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 5. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 6. Weak Mutation 2652: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> %
   * Goal 7. Weak Mutation 2653: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> *
   * Goal 8. Weak Mutation 2654: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> /
   * Goal 9. Weak Mutation 2659: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> +
   * Goal 10. Weak Mutation 2660: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> %
   * Goal 11. Weak Mutation 2661: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> -
   * Goal 12. Weak Mutation 2662: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> *
   * Goal 13. org.apache.commons.math.util.MathUtils.sinh(D)D:positive
   */

  @Test
  public void test037()  throws Throwable  {
      double double0 = MathUtils.sinh(415.0);
  }

  //Test case number: 38
  /*
   * 50 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 21. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1165
   * Goal 22. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1169
   * Goal 23. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1173
   * Goal 24. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1174
   * Goal 25. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1175
   * Goal 26. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1176
   * Goal 27. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1177
   * Goal 28. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1181
   * Goal 29. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1182
   * Goal 30. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1185
   * Goal 31. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1188
   * Goal 32. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1189
   * Goal 33. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1192
   * Goal 34. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1195
   * Goal 35. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 36. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 37. Weak Mutation 2174: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1165 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 2180: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1169 - ReplaceComparisonOperator == -> !=
   * Goal 39. Weak Mutation 2196: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> -1
   * Goal 40. Weak Mutation 2197: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> >
   * Goal 41. Weak Mutation 2204: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1177 - ReplaceComparisonOperator == -> !=
   * Goal 42. Weak Mutation 2223: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1181 - ReplaceComparisonOperator != -> ==
   * Goal 43. Weak Mutation 2234: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> %
   * Goal 44. Weak Mutation 2235: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> -
   * Goal 45. Weak Mutation 2236: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> *
   * Goal 46. Weak Mutation 2237: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> /
   * Goal 47. Weak Mutation 2248: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1185 - ReplaceComparisonOperator != -> >
   * Goal 48. Weak Mutation 2259: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> -1
   * Goal 49. Weak Mutation 2260: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> >
   * Goal 50. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:nonempty
   */

  @Test
  public void test038()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) (-2800L);
      double[] doubleArray1 = MathUtils.normalizeArray(doubleArray0, 0.0);
  }

  //Test case number: 39
  /*
   * 23 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:normalizeAngle(DD)D
   * Goal 3. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: Line 1139
   * Goal 4. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 5. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 6. Weak Mutation 2140: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> %
   * Goal 7. Weak Mutation 2141: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> -
   * Goal 8. Weak Mutation 2142: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> *
   * Goal 9. Weak Mutation 2143: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> /
   * Goal 10. Weak Mutation 2150: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 11. Weak Mutation 2152: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 12. Weak Mutation 2158: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> +
   * Goal 13. Weak Mutation 2159: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> %
   * Goal 14. Weak Mutation 2160: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> -
   * Goal 15. Weak Mutation 2161: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> *
   * Goal 16. Weak Mutation 2162: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> +
   * Goal 17. Weak Mutation 2163: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> %
   * Goal 18. Weak Mutation 2164: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> -
   * Goal 19. Weak Mutation 2165: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> /
   * Goal 20. Weak Mutation 2166: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> +
   * Goal 21. Weak Mutation 2168: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> *
   * Goal 22. Weak Mutation 2169: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 23. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:negative
   */

  @Test
  public void test039()  throws Throwable  {
      double double0 = MathUtils.normalizeAngle((-169.690619), 0.0);
  }

  //Test case number: 40
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:normalizeAngle(DD)D
   * Goal 3. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: Line 1139
   * Goal 4. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 5. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 6. Weak Mutation 2140: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> %
   * Goal 7. Weak Mutation 2141: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> -
   * Goal 8. Weak Mutation 2142: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> *
   * Goal 9. Weak Mutation 2143: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> /
   * Goal 10. Weak Mutation 2149: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> +
   * Goal 11. Weak Mutation 2150: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 12. Weak Mutation 2151: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> *
   * Goal 13. Weak Mutation 2152: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 14. Weak Mutation 2158: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> +
   * Goal 15. Weak Mutation 2159: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> %
   * Goal 16. Weak Mutation 2160: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> -
   * Goal 17. Weak Mutation 2161: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> *
   * Goal 18. Weak Mutation 2163: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> %
   * Goal 19. Weak Mutation 2165: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> /
   * Goal 20. Weak Mutation 2167: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 21. Weak Mutation 2169: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 22. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:negative
   */

  @Test
  public void test040()  throws Throwable  {
      double double0 = MathUtils.normalizeAngle((-2275.7036242988), (-2275.7036242988));
  }

  //Test case number: 41
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 7. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1104
   * Goal 8. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1109
   * Goal 9. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1110
   * Goal 10. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1111
   * Goal 11. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1114
   * Goal 12. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1115
   * Goal 13. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 14. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 15. Weak Mutation 2058: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> <=
   * Goal 16. Weak Mutation 2063: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator != -> ==
   * Goal 17. Weak Mutation 2068: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> !=
   * Goal 18. Weak Mutation 2083: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> |
   * Goal 19. Weak Mutation 2084: org.apache.commons.math.util.MathUtils.scalb(DI)D:1110 - ReplaceBitwiseOperator & -> ^
   * Goal 20. Weak Mutation 2092: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> |
   * Goal 21. Weak Mutation 2093: org.apache.commons.math.util.MathUtils.scalb(DI)D:1111 - ReplaceBitwiseOperator & -> ^
   * Goal 22. Weak Mutation 2108: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>
   * Goal 23. Weak Mutation 2109: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator << -> >>>
   * Goal 24. Weak Mutation 2110: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> %
   * Goal 25. Weak Mutation 2111: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> -
   * Goal 26. Weak Mutation 2112: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> *
   * Goal 27. Weak Mutation 2113: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceArithmeticOperator + -> /
   * Goal 28. Weak Mutation 2114: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator | -> ^
   * Goal 29. Weak Mutation 2115: org.apache.commons.math.util.MathUtils.scalb(DI)D:1114 - ReplaceBitwiseOperator | -> &
   * Goal 30. org.apache.commons.math.util.MathUtils.scalb(DI)D:negative
   */

  @Test
  public void test041()  throws Throwable  {
      double double0 = MathUtils.scalb((-331.158), (-1086));
  }

  //Test case number: 42
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false in context: org.apache.commons.math.util.MathUtils:indicator(S)S
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(S)S: Line 925
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 6. Weak Mutation 1792: org.apache.commons.math.util.MathUtils.indicator(S)S:925 - ReplaceComparisonOperator < -> !=
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(S)S:positive
   */

  @Test
  public void test042()  throws Throwable  {
      short short0 = MathUtils.indicator((short)21);
  }

  //Test case number: 43
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false in context: org.apache.commons.math.util.MathUtils:indicator(J)J
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(J)J: Line 914
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 6. Weak Mutation 1781: org.apache.commons.math.util.MathUtils.indicator(J)J:914 - ReplaceComparisonOperator < -> <=
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(J)J:positive
   */

  @Test
  public void test043()  throws Throwable  {
      long long0 = MathUtils.indicator(0L);
  }

  //Test case number: 44
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(I)I: Line 904
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 6. Weak Mutation 1771: org.apache.commons.math.util.MathUtils.indicator(I)I:904 - ReplaceComparisonOperator < -> <=
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(I)I:positive
   */

  @Test
  public void test044()  throws Throwable  {
      int int0 = MathUtils.indicator(0);
  }

  //Test case number: 45
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 877
   * Goal 6. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 880
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 8. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 9. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 10. Weak Mutation 1740: org.apache.commons.math.util.MathUtils.indicator(D)D:880 - ReplaceComparisonOperator < -> !=
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(D)D:positive
   */

  @Test
  public void test045()  throws Throwable  {
      double double0 = MathUtils.indicator(2466.8692);
  }

  //Test case number: 46
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(B)B: Line 865
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 6. Weak Mutation 1718: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> !=
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(B)B:positive
   */

  @Test
  public void test046()  throws Throwable  {
      byte byte0 = MathUtils.indicator((byte)112);
  }

  //Test case number: 47
  /*
   * 21 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 780
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 785
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 14. Weak Mutation 1547: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> -2
   * Goal 15. Weak Mutation 1570: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator == -> <=
   * Goal 16. Weak Mutation 1581: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator != -> <
   * Goal 17. Weak Mutation 1605: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> %
   * Goal 18. Weak Mutation 1606: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> -
   * Goal 19. Weak Mutation 1607: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> *
   * Goal 20. Weak Mutation 1608: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> /
   * Goal 21. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   */

  @Test
  public void test047()  throws Throwable  {
      long long0 = MathUtils.gcd((long) 0, (-2130L));
  }

  //Test case number: 48
  /*
   * 15 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - false
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 7. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 548
   * Goal 8. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 551
   * Goal 9. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 552
   * Goal 10. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 11. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 12. Weak Mutation 1154: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator = null -> != null
   * Goal 13. Weak Mutation 1156: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator != null -> = null
   * Goal 14. Weak Mutation 1176: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:551 - ReplaceComparisonOperator == -> <=
   * Goal 15. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:false
   */

  @Test
  public void test048()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      double[] doubleArray1 = new double[0];
      boolean boolean0 = MathUtils.equalsIncludingNaN(doubleArray1, doubleArray0);
  }

  //Test case number: 49
  /*
   * 15 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - false
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 7. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 523
   * Goal 8. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 526
   * Goal 9. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 527
   * Goal 10. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 11. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 12. Weak Mutation 1110: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator = null -> != null
   * Goal 13. Weak Mutation 1112: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator != null -> = null
   * Goal 14. Weak Mutation 1132: org.apache.commons.math.util.MathUtils.equals([D[D)Z:526 - ReplaceComparisonOperator == -> <=
   * Goal 15. org.apache.commons.math.util.MathUtils.equals([D[D)Z:false
   */

  @Test
  public void test049()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      double[] doubleArray1 = new double[6];
      boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray1);
  }

  //Test case number: 50
  /*
   * 42 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 21. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 22. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: Line 456
   * Goal 23. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 24. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 25. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 26. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 28. Weak Mutation 969: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> +
   * Goal 29. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 30. Weak Mutation 971: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> *
   * Goal 31. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 32. Weak Mutation 980: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> !=
   * Goal 33. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 34. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 35. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 36. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 37. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 38. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 39. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 40. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 41. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 42. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:true
   */

  @Test
  public void test050()  throws Throwable  {
      boolean boolean0 = MathUtils.equalsIncludingNaN(775.85, (double) 0, 3488.88127704474);
  }

  //Test case number: 51
  /*
   * 43 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 21. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 22. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: Line 456
   * Goal 23. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 24. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 25. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 26. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 28. Weak Mutation 969: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> +
   * Goal 29. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 30. Weak Mutation 971: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> *
   * Goal 31. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 32. Weak Mutation 979: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> -2
   * Goal 33. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 34. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 35. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 36. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 37. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 38. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 39. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 40. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 41. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 42. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 43. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:false
   */

  @Test
  public void test051()  throws Throwable  {
      boolean boolean0 = MathUtils.equalsIncludingNaN(1.304E19, 47.4, 0.3333333333333333);
  }

  //Test case number: 52
  /*
   * 74 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I70 Branch 14 IF_ICMPGT L215 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 22. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 23. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 196
   * Goal 24. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 199
   * Goal 25. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 203
   * Goal 26. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 211
   * Goal 27. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 212
   * Goal 28. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 214
   * Goal 29. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 215
   * Goal 30. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 219
   * Goal 31. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 245
   * Goal 32. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 312
   * Goal 33. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 313
   * Goal 34. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 316
   * Goal 35. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 324
   * Goal 36. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 325
   * Goal 37. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 38. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 39. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 376
   * Goal 40. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 41. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 42. Weak Mutation 166: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> >=
   * Goal 43. Weak Mutation 174: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator != -> >
   * Goal 44. Weak Mutation 183: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator == -> !=
   * Goal 45. Weak Mutation 193: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> +
   * Goal 46. Weak Mutation 194: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> %
   * Goal 47. Weak Mutation 195: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> *
   * Goal 48. Weak Mutation 196: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> /
   * Goal 49. Weak Mutation 199: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator != -> >
   * Goal 50. Weak Mutation 216: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> +
   * Goal 51. Weak Mutation 218: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> -
   * Goal 52. Weak Mutation 222: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceComparisonOperator <= -> ==
   * Goal 53. Weak Mutation 251: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:212 - ReplaceComparisonOperator > -> !=
   * Goal 54. Weak Mutation 262: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> +
   * Goal 55. Weak Mutation 263: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> %
   * Goal 56. Weak Mutation 264: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> *
   * Goal 57. Weak Mutation 265: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> /
   * Goal 58. Weak Mutation 267: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> %
   * Goal 59. Weak Mutation 268: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> -
   * Goal 60. Weak Mutation 269: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> *
   * Goal 61. Weak Mutation 270: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> /
   * Goal 62. Weak Mutation 285: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:215 - ReplaceComparisonOperator > -> -2
   * Goal 63. Weak Mutation 570: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator == -> >=
   * Goal 64. Weak Mutation 578: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator != -> >
   * Goal 65. Weak Mutation 586: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator == -> !=
   * Goal 66. Weak Mutation 596: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> +
   * Goal 67. Weak Mutation 597: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> %
   * Goal 68. Weak Mutation 598: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> *
   * Goal 69. Weak Mutation 599: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> /
   * Goal 70. Weak Mutation 602: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator != -> >
   * Goal 71. Weak Mutation 616: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:324 - ReplaceComparisonOperator >= -> -1
   * Goal 72. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 73. Weak Mutation 786: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> >
   * Goal 74. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:zero
   */

  @Test
  public void test052()  throws Throwable  {
      double double0 = MathUtils.binomialCoefficientLog(0, (-373));
  }

  //Test case number: 53
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I26 Branch 5 IFGE L143 - true
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch in context: org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: Line 120
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 142
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 143
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 152
   * Goal 11. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 166
   * Goal 12. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 13. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 14. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 15. Weak Mutation 60: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> -1
   * Goal 16. Weak Mutation 69: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> >
   * Goal 17. Weak Mutation 108: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> %
   * Goal 18. Weak Mutation 111: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:152 - ReplaceArithmeticOperator + -> /
   * Goal 19. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J:negative
   */

  @Test
  public void test053()  throws Throwable  {
      long long0 = MathUtils.addAndCheck((-2800L), 0L);
  }

  //Test case number: 54
  /*
   * 21 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - false
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch in context: org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: Line 120
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 142
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 159
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 160
   * Goal 11. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 166
   * Goal 12. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 13. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 14. Weak Mutation 51: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> <
   * Goal 15. Weak Mutation 62: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> >
   * Goal 16. Weak Mutation 122: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> %
   * Goal 17. Weak Mutation 124: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> /
   * Goal 18. Weak Mutation 126: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceComparisonOperator > -> !=
   * Goal 19. Weak Mutation 132: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> %
   * Goal 20. Weak Mutation 135: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> /
   * Goal 21. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J:zero
   */

  @Test
  public void test054()  throws Throwable  {
      long long0 = MathUtils.addAndCheck((long) 0, (long) 0);
  }

  //Test case number: 55
  /*
   * 25 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I40 Branch 200 IFEQ L1700 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I40 Branch 200 IFEQ L1700 - false
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I40 Branch 200 IFEQ L1700 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I40 Branch 200 IFEQ L1700 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1691
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1697
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1698
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1699
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1700
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1701
   * Goal 17. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1703
   * Goal 18. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1704
   * Goal 19. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1707
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 21. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 22. Weak Mutation 3109: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1691 - ReplaceComparisonOperator >= -> ==
   * Goal 23. Weak Mutation 3124: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1699 - ReplaceComparisonOperator != -> ==
   * Goal 24. Weak Mutation 3129: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1700 - ReplaceComparisonOperator == -> !=
   * Goal 25. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:nonnull
   */

  @Test
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)108;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = MathUtils.pow(bigInteger0, bigInteger0);
  }

  //Test case number: 56
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([D)V: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.checkOrder([D)V: root-Branch in context: org.apache.commons.math.util.MathUtils:checkOrder([D)V
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([D)V: Line 1869
   * Goal 5. org.apache.commons.math.util.MathUtils.checkOrder([D)V: Line 1870
   * Goal 6. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1822
   * Goal 7. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1823
   * Goal 8. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1825
   * Goal 9. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1826
   * Goal 10. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1860
   * Goal 11. org.apache.commons.math.util.MathUtils.checkOrder([D)V
   * Goal 12. org.apache.commons.math.util.MathUtils.checkOrder([D)V
   * Goal 13. Weak Mutation 3391: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> >
   */

  @Test
  public void test056()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      MathUtils.checkOrder(doubleArray0);
  }

  //Test case number: 57
  /*
   * 3 covered goals:
   * Goal 1. round(DII)D_java.lang.IllegalArgumentException_IMPLICIT
   * Goal 2. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1225
   * Goal 3. org.apache.commons.math.util.MathUtils.round(DII)D
   */

  @Test
  public void test057()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.round((double) 0, 0, 113);
      } catch(IllegalArgumentException e) {
         //
         // Invalid rounding mode
         //
         assertThrownBy("java.math.BigDecimal", e);
      }
  }

  //Test case number: 58
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I43 Branch 197 IFEQ L1670 - false
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I43 Branch 197 IFEQ L1670 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 7. pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;_java.lang.NullPointerException_IMPLICIT
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1661
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1667
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1668
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1669
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1670
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1671
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 15. Weak Mutation 3066: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1661 - ReplaceComparisonOperator >= -> ==
   * Goal 16. Weak Mutation 3080: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1669 - ReplaceComparisonOperator == -> >=
   * Goal 17. Weak Mutation 3086: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceBitwiseOperator & -> |
   * Goal 18. Weak Mutation 3087: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceBitwiseOperator & -> ^
   * Goal 19. Weak Mutation 3091: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceComparisonOperator == -> >=
   */

  @Test
  public void test058()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.pow((BigInteger) null, (long) 207313409);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 59
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - true
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 3. pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;_java.lang.NullPointerException_IMPLICIT
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: Line 1641
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: Line 1647
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 7. Weak Mutation 3051: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;:1641 - ReplaceComparisonOperator >= -> >
   */

  @Test
  public void test059()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.pow((BigInteger) null, 0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 60
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 7. factorialLog(I)D_org.evosuite.runtime.TooManyResourcesException_IMPLICIT
   * Goal 8. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 643
   * Goal 9. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 648
   * Goal 10. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 651
   * Goal 11. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 652
   * Goal 12. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 653
   * Goal 13. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 14. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> ==
   * Goal 15. Weak Mutation 1276: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> ==
   * Goal 16. Weak Mutation 1294: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> !=
   * Goal 17. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> %
   * Goal 18. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> -
   * Goal 19. Weak Mutation 1307: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> *
   * Goal 20. Weak Mutation 1308: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> /
   */

  @Test
  public void test060()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.factorialLog(1431655765);
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  //Test case number: 61
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: I12 Branch 206 IF_ICMPGE L1797 - false in context: org.apache.commons.math.util.MathUtils:distanceInf([I[I)I
   * Goal 3. distanceInf([I[I)I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 4. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1796
   * Goal 5. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1797
   * Goal 6. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I: Line 1798
   * Goal 7. org.apache.commons.math.util.MathUtils.distanceInf([I[I)I
   * Goal 8. Weak Mutation 3354: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1797 - ReplaceComparisonOperator >= -> -1
   * Goal 9. Weak Mutation 3372: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> %
   * Goal 10. Weak Mutation 3374: org.apache.commons.math.util.MathUtils.distanceInf([I[I)I:1798 - ReplaceArithmeticOperator - -> /
   */

  @Test
  public void test061()  throws Throwable  {
      int[] intArray0 = new int[8];
      int[] intArray1 = new int[2];
      // Undeclared exception!
      try { 
        MathUtils.distanceInf(intArray0, intArray1);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 62
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 3. distance1([D[D)D_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 4. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1719
   * Goal 5. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1720
   * Goal 6. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1721
   * Goal 7. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 8. Weak Mutation 3156: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> -1
   */

  @Test
  public void test062()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      double[] doubleArray1 = new double[0];
      // Undeclared exception!
      try { 
        MathUtils.distance1(doubleArray0, doubleArray1);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 63
  /*
   * 15 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.distance([I[I)D: I12 Branch 204 IF_ICMPGE L1766 - false in context: org.apache.commons.math.util.MathUtils:distance([I[I)D
   * Goal 3. distance([I[I)D_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 4. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1765
   * Goal 5. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1766
   * Goal 6. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1767
   * Goal 7. org.apache.commons.math.util.MathUtils.distance([I[I)D: Line 1768
   * Goal 8. org.apache.commons.math.util.MathUtils.distance([I[I)D
   * Goal 9. Weak Mutation 3275: org.apache.commons.math.util.MathUtils.distance([I[I)D:1766 - ReplaceComparisonOperator >= -> -1
   * Goal 10. Weak Mutation 3287: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> %
   * Goal 11. Weak Mutation 3289: org.apache.commons.math.util.MathUtils.distance([I[I)D:1767 - ReplaceArithmeticOperator - -> /
   * Goal 12. Weak Mutation 3306: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> %
   * Goal 13. Weak Mutation 3308: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator * -> /
   * Goal 14. Weak Mutation 3309: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> %
   * Goal 15. Weak Mutation 3312: org.apache.commons.math.util.MathUtils.distance([I[I)D:1768 - ReplaceArithmeticOperator + -> /
   */

  @Test
  public void test063()  throws Throwable  {
      int[] intArray0 = new int[2];
      int[] intArray1 = new int[7];
      // Undeclared exception!
      try { 
        MathUtils.distance(intArray1, intArray0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 64
  /*
   * 3 covered goals:
   * Goal 1. checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1822
   * Goal 3. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   */

  @Test
  public void test064()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.DECREASING;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, false);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 65
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - false in context: 
   * Goal 3. binomialCoefficientLog(II)D_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 312
   * Goal 5. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 6. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 367
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 8. Weak Mutation 767: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> -1
   */

  @Test
  public void test065()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficientLog((-2394), 61);
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n,k), got n = -2,394, k = 61
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 66
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - true
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch in context: org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J
   * Goal 7. addAndCheck(JJ)J_org.evosuite.runtime.mock.java.lang.MockArithmeticException_EXPLICIT
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: Line 120
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 138
   * Goal 11. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 142
   * Goal 12. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 159
   * Goal 13. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 162
   * Goal 14. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 15. Weak Mutation 49: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> -1
   * Goal 16. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 17. Weak Mutation 61: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> ==
   * Goal 18. Weak Mutation 121: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> +
   * Goal 19. Weak Mutation 122: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> %
   * Goal 20. Weak Mutation 123: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> *
   * Goal 21. Weak Mutation 124: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> /
   * Goal 22. Weak Mutation 125: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceComparisonOperator > -> -2
   */

  @Test
  public void test066()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.addAndCheck((-9218868437227405313L), 6722166367014452318L);
      } catch(ArithmeticException e) {
         //
         // overflow in addition: 6,722,166,367,014,452,318 + -9,218,868,437,227,405,313
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 67
  /*
   * 36 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 5. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I41 Branch 212 IFGT L1830 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I41 Branch 212 IFGT L1830 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I41 Branch 212 IFGT L1830 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I41 Branch 212 IFGT L1830 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 19. checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V_org.apache.commons.math.exception.MathIllegalNumberException_EXPLICIT
   * Goal 20. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1822
   * Goal 21. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1823
   * Goal 22. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1825
   * Goal 23. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1826
   * Goal 24. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1827
   * Goal 25. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1829
   * Goal 26. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1830
   * Goal 27. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1831
   * Goal 28. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1855
   * Goal 29. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1856
   * Goal 30. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1858
   * Goal 31. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 32. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 33. Weak Mutation 3397: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1829 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 3406: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1830 - ReplaceComparisonOperator > -> -2
   * Goal 35. Weak Mutation 3408: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1830 - ReplaceComparisonOperator > -> >=
   * Goal 36. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   */

  @Test
  public void test067()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) (-239);
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.INCREASING;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, true);
      } catch(IllegalArgumentException e) {
         //
         // points 1 and 2 are not strictly increasing (0 >= 0)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 68
  /*
   * 18 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - true
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 9. mulAndCheck(JJ)J_java.lang.ArithmeticException_EXPLICIT
   * Goal 10. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1049
   * Goal 11. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1050
   * Goal 12. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1054
   * Goal 13. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1074
   * Goal 14. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1079
   * Goal 15. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1082
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 17. Weak Mutation 1971: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> <
   * Goal 18. Weak Mutation 1981: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> ==
   */

  @Test
  public void test068()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.mulAndCheck(7910884519577875640L, 7910884519577875640L);
      } catch(ArithmeticException e) {
         //
         // overflow: multiply
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 69
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - false
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1049
   * Goal 10. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1050
   * Goal 11. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1054
   * Goal 12. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1074
   * Goal 13. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1079
   * Goal 14. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1080
   * Goal 15. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1089
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 17. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 18. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 19. Weak Mutation 1981: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> ==
   * Goal 20. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:positive
   */

  @Test
  public void test069()  throws Throwable  {
      long long0 = MathUtils.mulAndCheck(32L, 2147483648L);
  }

  //Test case number: 70
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I37 Branch 130 IFLT L1057 - false
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I37 Branch 130 IFLT L1057 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1049
   * Goal 10. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1050
   * Goal 11. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1054
   * Goal 12. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1055
   * Goal 13. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1057
   * Goal 14. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1058
   * Goal 15. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1089
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 17. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 18. Weak Mutation 1971: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> <
   * Goal 19. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 20. Weak Mutation 1987: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> -1
   * Goal 21. Weak Mutation 1999: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> +
   * Goal 22. Weak Mutation 2000: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> %
   * Goal 23. Weak Mutation 2001: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> -
   * Goal 24. Weak Mutation 2002: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> *
   * Goal 25. Weak Mutation 2004: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceComparisonOperator < -> !=
   * Goal 26. Weak Mutation 2010: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> +
   * Goal 27. Weak Mutation 2011: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> %
   * Goal 28. Weak Mutation 2012: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> -
   * Goal 29. Weak Mutation 2013: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1058 - ReplaceArithmeticOperator * -> /
   * Goal 30. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:positive
   */

  @Test
  public void test070()  throws Throwable  {
      long long0 = MathUtils.mulAndCheck((-2362L), (-2362L));
  }

  //Test case number: 71
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I71 Branch 131 IFLE L1062 - true
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I71 Branch 131 IFLE L1062 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1049
   * Goal 10. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1050
   * Goal 11. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1054
   * Goal 12. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1055
   * Goal 13. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1062
   * Goal 14. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1072
   * Goal 15. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1089
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 17. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 18. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 19. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 20. Weak Mutation 1989: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> >
   * Goal 21. Weak Mutation 2021: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1062 - ReplaceComparisonOperator <= -> <
   * Goal 22. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:zero
   */

  @Test
  public void test071()  throws Throwable  {
      long long0 = MathUtils.mulAndCheck((-3073L), 0L);
  }

  //Test case number: 72
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(II)I
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1030
   * Goal 6. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1031
   * Goal 7. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1034
   * Goal 8. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I
   * Goal 10. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 11. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 12. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 13. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 14. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 15. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:positive
   */

  @Test
  public void test072()  throws Throwable  {
      int int0 = MathUtils.mulAndCheck(178, 898);
  }

  //Test case number: 73
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 891
   * Goal 6. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 894
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 8. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 9. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 10. Weak Mutation 1758: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> !=
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(F)F:positive
   */

  @Test
  public void test073()  throws Throwable  {
      float float0 = MathUtils.indicator((float) 242);
  }

  //Test case number: 74
  /*
   * 56 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 792
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 793
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 795
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 796
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 799
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 800
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 806
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 813
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 819
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 820
   * Goal 40. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 823
   * Goal 41. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 824
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 826
   * Goal 43. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 829
   * Goal 44. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 832
   * Goal 45. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 833
   * Goal 46. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 47. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 48. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 49. Weak Mutation 1557: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> <
   * Goal 50. Weak Mutation 1615: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> -1
   * Goal 51. Weak Mutation 1628: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> -1
   * Goal 52. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 53. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 54. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 55. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 56. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   */

  @Test
  public void test074()  throws Throwable  {
      long long0 = MathUtils.gcd(885L, 1291L);
  }

  //Test case number: 75
  /*
   * 70 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 792
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 793
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 795
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 796
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 799
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 800
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 802
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 803
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 804
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 806
   * Goal 40. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 813
   * Goal 41. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 819
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 823
   * Goal 43. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 826
   * Goal 44. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 829
   * Goal 45. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 832
   * Goal 46. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 833
   * Goal 47. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 48. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 49. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 50. Weak Mutation 1557: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> <
   * Goal 51. Weak Mutation 1615: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> -1
   * Goal 52. Weak Mutation 1628: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> -1
   * Goal 53. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 54. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 55. Weak Mutation 1647: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 56. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 57. Weak Mutation 1657: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 58. Weak Mutation 1658: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 59. Weak Mutation 1661: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 60. Weak Mutation 1672: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator >= -> -1
   * Goal 61. Weak Mutation 1683: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> +
   * Goal 62. Weak Mutation 1684: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> %
   * Goal 63. Weak Mutation 1685: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> -
   * Goal 64. Weak Mutation 1686: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> *
   * Goal 65. Weak Mutation 1695: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> +
   * Goal 66. Weak Mutation 1696: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> %
   * Goal 67. Weak Mutation 1697: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> -
   * Goal 68. Weak Mutation 1698: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> *
   * Goal 69. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 70. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   */

  @Test
  public void test075()  throws Throwable  {
      long long0 = MathUtils.gcd(4208363204685324176L, 4208363204685324176L);
  }

  //Test case number: 76
  /*
   * 68 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 792
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 795
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 799
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 800
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 802
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 803
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 804
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 806
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 813
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 819
   * Goal 40. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 823
   * Goal 41. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 826
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 829
   * Goal 43. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 832
   * Goal 44. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 833
   * Goal 45. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 46. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 47. Weak Mutation 1549: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> <=
   * Goal 48. Weak Mutation 1558: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> >
   * Goal 49. Weak Mutation 1616: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> ==
   * Goal 50. Weak Mutation 1629: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> ==
   * Goal 51. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 52. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 53. Weak Mutation 1647: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 54. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 55. Weak Mutation 1657: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 56. Weak Mutation 1658: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 57. Weak Mutation 1661: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 58. Weak Mutation 1672: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator >= -> -1
   * Goal 59. Weak Mutation 1683: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> +
   * Goal 60. Weak Mutation 1684: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> %
   * Goal 61. Weak Mutation 1685: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> -
   * Goal 62. Weak Mutation 1686: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> *
   * Goal 63. Weak Mutation 1695: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> +
   * Goal 64. Weak Mutation 1696: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> %
   * Goal 65. Weak Mutation 1697: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> -
   * Goal 66. Weak Mutation 1698: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> *
   * Goal 67. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 68. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   */

  @Test
  public void test076()  throws Throwable  {
      long long0 = MathUtils.gcd((-384L), (-384L));
  }

  //Test case number: 77
  /*
   * 60 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 27. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 688
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 689
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 690
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 703
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 704
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 706
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 710
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 711
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 717
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 724
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 730
   * Goal 40. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 731
   * Goal 41. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 734
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 735
   * Goal 43. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 737
   * Goal 44. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 740
   * Goal 45. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 743
   * Goal 46. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 744
   * Goal 47. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 48. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 49. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 50. Weak Mutation 1340: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> >
   * Goal 51. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 52. Weak Mutation 1421: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> ==
   * Goal 53. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 54. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 55. Weak Mutation 1440: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 56. Weak Mutation 1451: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 57. Weak Mutation 1452: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 58. Weak Mutation 1454: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 59. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 60. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   */

  @Test
  public void test077()  throws Throwable  {
      int int0 = MathUtils.gcd(3002, (-173));
  }

  //Test case number: 78
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 9. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 643
   * Goal 10. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 648
   * Goal 11. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 651
   * Goal 12. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 652
   * Goal 13. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 653
   * Goal 14. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 655
   * Goal 15. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 16. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 17. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> ==
   * Goal 18. Weak Mutation 1276: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> ==
   * Goal 19. Weak Mutation 1294: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> !=
   * Goal 20. Weak Mutation 1295: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> -2
   * Goal 21. Weak Mutation 1296: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> >=
   * Goal 22. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> %
   * Goal 23. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> -
   * Goal 24. Weak Mutation 1307: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> *
   * Goal 25. Weak Mutation 1308: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> /
   * Goal 26. org.apache.commons.math.util.MathUtils.factorialLog(I)D:positive
   */

  @Test
  public void test078()  throws Throwable  {
      double double0 = MathUtils.factorialLog(254);
  }

  //Test case number: 79
  /*
   * 40 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 25. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 26. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 27. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 28. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 29. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 30. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 31. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 32. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 33. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 34. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 35. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 36. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 37. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 39. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 40. org.apache.commons.math.util.MathUtils.equals(DDI)Z:true
   */

  @Test
  public void test079()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(0.19999999999923582, 0.19999999999923582, 707);
  }

  //Test case number: 80
  /*
   * 40 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 489
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 25. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 26. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 27. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 28. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 29. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 30. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 31. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 32. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 33. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 34. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 35. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 36. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 37. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 38. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 39. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 40. org.apache.commons.math.util.MathUtils.equals(DDI)Z:false
   */

  @Test
  public void test080()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(Double.NaN, (-2241.6798386231), 363);
  }

  //Test case number: 81
  /*
   * 40 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 486
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 25. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 26. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 27. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 28. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 30. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 31. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 32. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 33. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 34. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 35. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 36. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 37. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 38. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 39. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 40. org.apache.commons.math.util.MathUtils.equals(DDI)Z:false
   */

  @Test
  public void test081()  throws Throwable  {
      boolean boolean0 = MathUtils.equals((-1831.0), 1.2246467991473532E-16, 194);
  }

  //Test case number: 82
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 5. equals(DDI)Z_java.lang.AssertionError_EXPLICIT
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 8. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 9. Weak Mutation 991: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> <
   */

  @Test
  public void test082()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.equals(0.0, (-2275.7036242988), 0);
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 83
  /*
   * 34 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - true in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 442
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 22. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 23. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 24. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 25. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 26. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 27. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 29. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 30. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 31. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 32. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 33. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 34. org.apache.commons.math.util.MathUtils.equals(DDD)Z:true
   */

  @Test
  public void test083()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(0.0, 0.0, 0.5);
  }

  //Test case number: 84
  /*
   * 37 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false in context: org.apache.commons.math.util.MathUtils:equals(DDD)Z
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 442
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDD)Z
   * Goal 22. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 23. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 24. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 25. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 26. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 27. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 28. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 29. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 30. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 31. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 32. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 33. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 34. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 35. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 36. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 37. org.apache.commons.math.util.MathUtils.equals(DDD)Z:false
   */

  @Test
  public void test084()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(2.85040095144011776E17, 0.0, (double) (byte)0);
  }

  //Test case number: 85
  /*
   * 48 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 486
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 489
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 23. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 24. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 25. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 26. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 28. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 29. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 30. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 31. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 32. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 33. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 34. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 35. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 36. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 37. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 38. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 39. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 40. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 41. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 42. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 43. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 44. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 45. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 46. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 47. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 48. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:true
   */

  @Test
  public void test085()  throws Throwable  {
      boolean boolean0 = MathUtils.equalsIncludingNaN((-257.4000930404298), (-257.4000930404298));
  }

  //Test case number: 86
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 417
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 8. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 9. Weak Mutation 872: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> -1
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DD)Z:true
   */

  @Test
  public void test086()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(0.0, 0.0);
  }

  //Test case number: 87
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 417
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 8. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 9. Weak Mutation 874: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> >
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DD)Z:false
   */

  @Test
  public void test087()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(0.0, 1493.0);
  }

  //Test case number: 88
  /*
   * 133 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I94 Branch 15 IF_ICMPGT L219 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I157 Branch 17 IF_ICMPGT L239 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(II)I: I81 Branch 91 IF_ICMPGE L711 - false
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 29. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 30. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 31. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 32. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false
   * Goal 33. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - true
   * Goal 34. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - false
   * Goal 35. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 37. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 38. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 39. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 40. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 41. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I94 Branch 15 IF_ICMPGT L219 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 42. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I157 Branch 17 IF_ICMPGT L239 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 43. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 44. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 45. binomialCoefficient(II)J_java.lang.ArithmeticException_EXPLICIT
   * Goal 46. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 47. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 196
   * Goal 48. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 199
   * Goal 49. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 203
   * Goal 50. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 211
   * Goal 51. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 212
   * Goal 52. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 238
   * Goal 53. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 239
   * Goal 54. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 240
   * Goal 55. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 241
   * Goal 56. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 242
   * Goal 57. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 58. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 59. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 376
   * Goal 60. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 688
   * Goal 61. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 689
   * Goal 62. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 690
   * Goal 63. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 703
   * Goal 64. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 704
   * Goal 65. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 706
   * Goal 66. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 707
   * Goal 67. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 710
   * Goal 68. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 711
   * Goal 69. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 713
   * Goal 70. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 714
   * Goal 71. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 715
   * Goal 72. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 717
   * Goal 73. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 724
   * Goal 74. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 730
   * Goal 75. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 731
   * Goal 76. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 734
   * Goal 77. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 735
   * Goal 78. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 737
   * Goal 79. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 740
   * Goal 80. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 743
   * Goal 81. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 744
   * Goal 82. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1049
   * Goal 83. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1050
   * Goal 84. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1052
   * Goal 85. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1054
   * Goal 86. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1074
   * Goal 87. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1079
   * Goal 88. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1080
   * Goal 89. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1082
   * Goal 90. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1089
   * Goal 91. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 92. Weak Mutation 166: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> >=
   * Goal 93. Weak Mutation 173: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator != -> <
   * Goal 94. Weak Mutation 183: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator == -> !=
   * Goal 95. Weak Mutation 193: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> +
   * Goal 96. Weak Mutation 194: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> %
   * Goal 97. Weak Mutation 195: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> *
   * Goal 98. Weak Mutation 196: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> /
   * Goal 99. Weak Mutation 199: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator != -> >
   * Goal 100. Weak Mutation 216: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> +
   * Goal 101. Weak Mutation 217: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> %
   * Goal 102. Weak Mutation 218: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> -
   * Goal 103. Weak Mutation 219: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> *
   * Goal 104. Weak Mutation 222: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceComparisonOperator <= -> ==
   * Goal 105. Weak Mutation 252: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:212 - ReplaceComparisonOperator > -> -2
   * Goal 106. Weak Mutation 324: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:219 - ReplaceComparisonOperator > -> -2
   * Goal 107. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 108. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 109. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 110. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 111. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 112. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 113. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 114. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 115. Weak Mutation 1440: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 116. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 117. Weak Mutation 1451: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 118. Weak Mutation 1452: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 119. Weak Mutation 1453: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 120. Weak Mutation 1454: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 121. Weak Mutation 1468: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator >= -> -1
   * Goal 122. Weak Mutation 1482: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> +
   * Goal 123. Weak Mutation 1483: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> %
   * Goal 124. Weak Mutation 1484: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> -
   * Goal 125. Weak Mutation 1485: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> *
   * Goal 126. Weak Mutation 1497: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> +
   * Goal 127. Weak Mutation 1498: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> %
   * Goal 128. Weak Mutation 1499: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> -
   * Goal 129. Weak Mutation 1500: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> *
   * Goal 130. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 131. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 132. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 133. Weak Mutation 1981: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> ==
   */

  @Test
  public void test088()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficient(4044, 16);
      } catch(ArithmeticException e) {
         //
         // overflow: multiply
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 89
  /*
   * 57 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I70 Branch 14 IF_ICMPGT L215 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I70 Branch 14 IF_ICMPGT L215 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 19. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 20. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 196
   * Goal 21. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 199
   * Goal 22. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 203
   * Goal 23. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 211
   * Goal 24. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 212
   * Goal 25. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 214
   * Goal 26. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 215
   * Goal 27. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 219
   * Goal 28. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 245
   * Goal 29. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 30. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 31. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 376
   * Goal 32. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 33. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 34. Weak Mutation 166: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> >=
   * Goal 35. Weak Mutation 174: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator != -> >
   * Goal 36. Weak Mutation 183: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 193: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> +
   * Goal 38. Weak Mutation 194: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> %
   * Goal 39. Weak Mutation 195: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> *
   * Goal 40. Weak Mutation 196: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> /
   * Goal 41. Weak Mutation 199: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator != -> >
   * Goal 42. Weak Mutation 216: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> +
   * Goal 43. Weak Mutation 218: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> -
   * Goal 44. Weak Mutation 222: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceComparisonOperator <= -> ==
   * Goal 45. Weak Mutation 251: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:212 - ReplaceComparisonOperator > -> !=
   * Goal 46. Weak Mutation 262: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> +
   * Goal 47. Weak Mutation 263: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> %
   * Goal 48. Weak Mutation 264: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> *
   * Goal 49. Weak Mutation 265: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> /
   * Goal 50. Weak Mutation 267: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> %
   * Goal 51. Weak Mutation 268: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> -
   * Goal 52. Weak Mutation 269: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> *
   * Goal 53. Weak Mutation 270: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> /
   * Goal 54. Weak Mutation 285: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:215 - ReplaceComparisonOperator > -> -2
   * Goal 55. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 56. Weak Mutation 786: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> >
   * Goal 57. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:positive
   */

  @Test
  public void test089()  throws Throwable  {
      long long0 = MathUtils.binomialCoefficient(0, (-5056));
  }

  //Test case number: 90
  /*
   * 44 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - false
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 15. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1932
   * Goal 16. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1933
   * Goal 17. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1934
   * Goal 18. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1935
   * Goal 19. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1936
   * Goal 20. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1937
   * Goal 21. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1938
   * Goal 22. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1939
   * Goal 23. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1940
   * Goal 24. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1941
   * Goal 25. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1942
   * Goal 26. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1943
   * Goal 27. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1944
   * Goal 28. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1954
   * Goal 29. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1955
   * Goal 30. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1956
   * Goal 31. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1957
   * Goal 32. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1958
   * Goal 33. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1970
   * Goal 34. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1973
   * Goal 35. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1974
   * Goal 36. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1983
   * Goal 37. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 38. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 39. Weak Mutation 3499: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> %
   * Goal 40. Weak Mutation 3506: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> -1
   * Goal 41. Weak Mutation 3507: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> >
   * Goal 42. Weak Mutation 3538: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> -2
   * Goal 43. Weak Mutation 3597: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1944 - ReplaceComparisonOperator <= -> ==
   * Goal 44. org.apache.commons.math.util.MathUtils.safeNorm([D)D:positive
   */

  @Test
  public void test090()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 5.669184079525E-24;
      double double0 = MathUtils.safeNorm(doubleArray0);
  }

  //Test case number: 91
  /*
   * 86 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I77 Branch 222 IFLE L1945 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I77 Branch 222 IFLE L1945 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I152 Branch 224 IFEQ L1959 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - false
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I65 Branch 220 IFLE L1943 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I77 Branch 222 IFLE L1945 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I77 Branch 222 IFLE L1945 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I152 Branch 224 IFEQ L1959 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 25. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1932
   * Goal 26. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1933
   * Goal 27. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1934
   * Goal 28. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1935
   * Goal 29. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1936
   * Goal 30. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1937
   * Goal 31. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1938
   * Goal 32. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1939
   * Goal 33. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1940
   * Goal 34. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1941
   * Goal 35. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1942
   * Goal 36. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1943
   * Goal 37. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1944
   * Goal 38. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1945
   * Goal 39. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1946
   * Goal 40. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1947
   * Goal 41. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1948
   * Goal 42. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1949
   * Goal 43. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1950
   * Goal 44. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1951
   * Goal 45. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1952
   * Goal 46. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1954
   * Goal 47. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1959
   * Goal 48. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1970
   * Goal 49. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1971
   * Goal 50. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1983
   * Goal 51. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 52. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 53. Weak Mutation 3498: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> +
   * Goal 54. Weak Mutation 3499: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> %
   * Goal 55. Weak Mutation 3500: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> -
   * Goal 56. Weak Mutation 3501: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> *
   * Goal 57. Weak Mutation 3506: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> -1
   * Goal 58. Weak Mutation 3507: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> >
   * Goal 59. Weak Mutation 3538: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> -2
   * Goal 60. Weak Mutation 3539: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> !=
   * Goal 61. Weak Mutation 3567: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator <= -> -1
   * Goal 62. Weak Mutation 3596: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1944 - ReplaceComparisonOperator <= -> -1
   * Goal 63. Weak Mutation 3597: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1944 - ReplaceComparisonOperator <= -> ==
   * Goal 64. Weak Mutation 3625: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1945 - ReplaceComparisonOperator <= -> -1
   * Goal 65. Weak Mutation 3626: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1945 - ReplaceComparisonOperator <= -> ==
   * Goal 66. Weak Mutation 3654: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1946 - ReplaceArithmeticOperator / -> +
   * Goal 67. Weak Mutation 3656: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1946 - ReplaceArithmeticOperator / -> -
   * Goal 68. Weak Mutation 3690: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1947 - ReplaceArithmeticOperator * -> %
   * Goal 69. Weak Mutation 3692: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1947 - ReplaceArithmeticOperator * -> /
   * Goal 70. Weak Mutation 3708: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1947 - ReplaceArithmeticOperator * -> %
   * Goal 71. Weak Mutation 3710: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1947 - ReplaceArithmeticOperator * -> /
   * Goal 72. Weak Mutation 3711: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1947 - ReplaceArithmeticOperator + -> %
   * Goal 73. Weak Mutation 3714: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1947 - ReplaceArithmeticOperator + -> /
   * Goal 74. Weak Mutation 3755: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1950 - ReplaceArithmeticOperator / -> +
   * Goal 75. Weak Mutation 3756: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1950 - ReplaceArithmeticOperator / -> %
   * Goal 76. Weak Mutation 3757: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1950 - ReplaceArithmeticOperator / -> -
   * Goal 77. Weak Mutation 3758: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1950 - ReplaceArithmeticOperator / -> *
   * Goal 78. Weak Mutation 3801: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1951 - ReplaceArithmeticOperator * -> +
   * Goal 79. Weak Mutation 3802: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1951 - ReplaceArithmeticOperator * -> %
   * Goal 80. Weak Mutation 3803: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1951 - ReplaceArithmeticOperator * -> -
   * Goal 81. Weak Mutation 3804: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1951 - ReplaceArithmeticOperator * -> /
   * Goal 82. Weak Mutation 3805: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1951 - ReplaceArithmeticOperator + -> %
   * Goal 83. Weak Mutation 3806: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1951 - ReplaceArithmeticOperator + -> -
   * Goal 84. Weak Mutation 3807: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1951 - ReplaceArithmeticOperator + -> *
   * Goal 85. Weak Mutation 3808: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1951 - ReplaceArithmeticOperator + -> /
   * Goal 86. org.apache.commons.math.util.MathUtils.safeNorm([D)D:positive
   */

  @Test
  public void test091()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[4] = (double) 9223372036854775807L;
      doubleArray0[6] = (double) 9223372036854774381L;
      double double0 = MathUtils.safeNorm(doubleArray0);
  }

  //Test case number: 92
  /*
   * 46 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I152 Branch 224 IFEQ L1959 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - false
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I48 Branch 218 IF_ICMPGE L1941 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I61 Branch 219 IFLT L1943 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I71 Branch 221 IFLE L1944 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I123 Branch 223 IFLE L1954 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I152 Branch 224 IFEQ L1959 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I187 Branch 225 IFEQ L1970 - true in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.safeNorm([D)D: I208 Branch 226 IFNE L1973 - false in context: org.apache.commons.math.util.MathUtils:safeNorm([D)D
   * Goal 17. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1932
   * Goal 18. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1933
   * Goal 19. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1934
   * Goal 20. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1935
   * Goal 21. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1936
   * Goal 22. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1937
   * Goal 23. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1938
   * Goal 24. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1939
   * Goal 25. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1940
   * Goal 26. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1941
   * Goal 27. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1942
   * Goal 28. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1943
   * Goal 29. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1944
   * Goal 30. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1954
   * Goal 31. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1959
   * Goal 32. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1970
   * Goal 33. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1973
   * Goal 34. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1974
   * Goal 35. org.apache.commons.math.util.MathUtils.safeNorm([D)D: Line 1983
   * Goal 36. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 37. org.apache.commons.math.util.MathUtils.safeNorm([D)D
   * Goal 38. Weak Mutation 3498: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> +
   * Goal 39. Weak Mutation 3499: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> %
   * Goal 40. Weak Mutation 3500: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> -
   * Goal 41. Weak Mutation 3501: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1940 - ReplaceArithmeticOperator / -> *
   * Goal 42. Weak Mutation 3506: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> -1
   * Goal 43. Weak Mutation 3507: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1941 - ReplaceComparisonOperator >= -> >
   * Goal 44. Weak Mutation 3538: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1943 - ReplaceComparisonOperator < -> -2
   * Goal 45. Weak Mutation 3597: org.apache.commons.math.util.MathUtils.safeNorm([D)D:1944 - ReplaceComparisonOperator <= -> ==
   * Goal 46. org.apache.commons.math.util.MathUtils.safeNorm([D)D:zero
   */

  @Test
  public void test092()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      double double0 = MathUtils.safeNorm(doubleArray0);
  }

  //Test case number: 93
  /*
   * 36 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 5. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I84 Branch 216 IFLE L1845 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I84 Branch 216 IFLE L1845 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I84 Branch 216 IFLE L1845 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I84 Branch 216 IFLE L1845 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 19. checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V_org.apache.commons.math.exception.MathIllegalNumberException_EXPLICIT
   * Goal 20. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1822
   * Goal 21. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1823
   * Goal 22. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1825
   * Goal 23. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1826
   * Goal 24. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1827
   * Goal 25. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1840
   * Goal 26. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1845
   * Goal 27. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1846
   * Goal 28. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1855
   * Goal 29. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1856
   * Goal 30. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1858
   * Goal 31. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 32. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 33. Weak Mutation 3426: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1840 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 3447: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1845 - ReplaceComparisonOperator <= -> -1
   * Goal 35. Weak Mutation 3449: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1845 - ReplaceComparisonOperator <= -> <
   * Goal 36. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   */

  @Test
  public void test093()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[2] = 3.834E-20;
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.DECREASING;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, false);
      } catch(IllegalArgumentException e) {
         //
         // points 1 and 2 are not decreasing (0 < 0)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 94
  /*
   * 36 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 5. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I71 Branch 215 IFLT L1841 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I71 Branch 215 IFLT L1841 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I63 Branch 214 IFEQ L1840 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I71 Branch 215 IFLT L1841 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I71 Branch 215 IFLT L1841 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 19. checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V_org.apache.commons.math.exception.MathIllegalNumberException_EXPLICIT
   * Goal 20. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1822
   * Goal 21. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1823
   * Goal 22. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1825
   * Goal 23. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1826
   * Goal 24. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1827
   * Goal 25. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1840
   * Goal 26. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1841
   * Goal 27. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1842
   * Goal 28. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1855
   * Goal 29. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1856
   * Goal 30. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1858
   * Goal 31. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 32. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 33. Weak Mutation 3426: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1840 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 3435: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1841 - ReplaceComparisonOperator < -> -2
   * Goal 35. Weak Mutation 3437: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1841 - ReplaceComparisonOperator < -> <=
   * Goal 36. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   */

  @Test
  public void test094()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 1.0F;
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.DECREASING;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, true);
      } catch(IllegalArgumentException e) {
         //
         // points 1 and 2 are not strictly decreasing (0 <= 0)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 95
  /*
   * 36 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 5. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I54 Branch 213 IFGE L1834 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I54 Branch 213 IFGE L1834 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I54 Branch 213 IFGE L1834 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I54 Branch 213 IFGE L1834 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 19. checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V_org.apache.commons.math.exception.MathIllegalNumberException_EXPLICIT
   * Goal 20. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1822
   * Goal 21. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1823
   * Goal 22. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1825
   * Goal 23. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1826
   * Goal 24. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1827
   * Goal 25. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1829
   * Goal 26. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1834
   * Goal 27. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1835
   * Goal 28. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1855
   * Goal 29. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1856
   * Goal 30. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1858
   * Goal 31. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 32. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 33. Weak Mutation 3397: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1829 - ReplaceComparisonOperator == -> !=
   * Goal 34. Weak Mutation 3418: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1834 - ReplaceComparisonOperator >= -> -1
   * Goal 35. Weak Mutation 3419: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1834 - ReplaceComparisonOperator >= -> ==
   * Goal 36. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   */

  @Test
  public void test095()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[1] = 1.5830993332061267E-10;
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.INCREASING;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, false);
      } catch(IllegalArgumentException e) {
         //
         // points 1 and 2 are not increasing (0 > 0)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 96
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([D)V: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 6. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I41 Branch 212 IFGT L1830 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I41 Branch 212 IFGT L1830 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - false
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.checkOrder([D)V: root-Branch in context: org.apache.commons.math.util.MathUtils:checkOrder([D)V
   * Goal 12. checkOrder([D)V_org.apache.commons.math.exception.MathIllegalNumberException_EXPLICIT
   * Goal 13. org.apache.commons.math.util.MathUtils.checkOrder([D)V: Line 1869
   * Goal 14. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1822
   * Goal 15. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1823
   * Goal 16. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1825
   * Goal 17. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1826
   * Goal 18. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1827
   * Goal 19. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1829
   * Goal 20. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1830
   * Goal 21. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1831
   * Goal 22. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1855
   * Goal 23. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1856
   * Goal 24. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1858
   * Goal 25. org.apache.commons.math.util.MathUtils.checkOrder([D)V
   * Goal 26. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 3397: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1829 - ReplaceComparisonOperator == -> !=
   * Goal 28. Weak Mutation 3406: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1830 - ReplaceComparisonOperator > -> -2
   * Goal 29. Weak Mutation 3407: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1830 - ReplaceComparisonOperator > -> !=
   * Goal 30. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   */

  @Test
  public void test096()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[1] = (double) 1621;
      // Undeclared exception!
      try { 
        MathUtils.checkOrder(doubleArray0);
      } catch(IllegalArgumentException e) {
         //
         // points 1 and 2 are not strictly increasing (1,621 >= 0)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 97
  /*
   * 33 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false
   * Goal 6. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I54 Branch 213 IFGE L1834 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I22 Branch 207 IF_ICMPGE L1826 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 210 LOOKUPSWITCH L1827 Default-Case - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 209 LOOKUPSWITCH L1827 Case 2 - false in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I29 Branch 208 LOOKUPSWITCH L1827 Case 1 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I33 Branch 211 IFEQ L1829 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I54 Branch 213 IFGE L1834 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: I110 Branch 217 IFNE L1855 - true in context: org.apache.commons.math.util.MathUtils:checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 17. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1822
   * Goal 18. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1823
   * Goal 19. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1825
   * Goal 20. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1826
   * Goal 21. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1827
   * Goal 22. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1829
   * Goal 23. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1834
   * Goal 24. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1855
   * Goal 25. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1858
   * Goal 26. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V: Line 1860
   * Goal 27. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 28. org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V
   * Goal 29. Weak Mutation 3390: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> -1
   * Goal 30. Weak Mutation 3391: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1826 - ReplaceComparisonOperator >= -> >
   * Goal 31. Weak Mutation 3397: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1829 - ReplaceComparisonOperator == -> !=
   * Goal 32. Weak Mutation 3420: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1834 - ReplaceComparisonOperator >= -> >
   * Goal 33. Weak Mutation 3456: org.apache.commons.math.util.MathUtils.checkOrder([DLorg/apache/commons/math/util/MathUtils$OrderDirection;Z)V:1855 - ReplaceComparisonOperator != -> ==
   */

  @Test
  public void test097()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      MathUtils.OrderDirection mathUtils_OrderDirection0 = MathUtils.OrderDirection.INCREASING;
      MathUtils.checkOrder(doubleArray0, mathUtils_OrderDirection0, false);
  }

  //Test case number: 98
  /*
   * 17 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - true in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.distance1([D[D)D: I12 Branch 201 IF_ICMPGE L1720 - false in context: org.apache.commons.math.util.MathUtils:distance1([D[D)D
   * Goal 5. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1719
   * Goal 6. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1720
   * Goal 7. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1721
   * Goal 8. org.apache.commons.math.util.MathUtils.distance1([D[D)D: Line 1723
   * Goal 9. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 10. org.apache.commons.math.util.MathUtils.distance1([D[D)D
   * Goal 11. Weak Mutation 3156: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> -1
   * Goal 12. Weak Mutation 3157: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1720 - ReplaceComparisonOperator >= -> >
   * Goal 13. Weak Mutation 3172: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> %
   * Goal 14. Weak Mutation 3174: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator - -> /
   * Goal 15. Weak Mutation 3175: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> %
   * Goal 16. Weak Mutation 3178: org.apache.commons.math.util.MathUtils.distance1([D[D)D:1721 - ReplaceArithmeticOperator + -> /
   * Goal 17. org.apache.commons.math.util.MathUtils.distance1([D[D)D:zero
   */

  @Test
  public void test098()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double double0 = MathUtils.distance1(doubleArray0, doubleArray0);
  }

  //Test case number: 99
  /*
   * 17 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I40 Branch 200 IFEQ L1700 - false
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I40 Branch 200 IFEQ L1700 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 7. pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;_java.lang.NullPointerException_IMPLICIT
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1691
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1697
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1698
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1699
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1700
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1701
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 15. Weak Mutation 3109: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1691 - ReplaceComparisonOperator >= -> ==
   * Goal 16. Weak Mutation 3124: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1699 - ReplaceComparisonOperator != -> ==
   * Goal 17. Weak Mutation 3129: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1700 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte) (-25);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      // Undeclared exception!
      try { 
        MathUtils.pow((BigInteger) null, bigInteger0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 100
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 3. pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1691
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1692
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 7. Weak Mutation 3108: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1691 - ReplaceComparisonOperator >= -> -1
   */

  @Test
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-106);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      try { 
        MathUtils.pow(bigInteger0, bigInteger0);
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (-1,778,384,896^-1,778,384,896)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 101
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I5 Branch 198 IFGE L1691 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: I34 Branch 199 IFNE L1699 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1691
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1697
   * Goal 7. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1698
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1699
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;: Line 1707
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   * Goal 12. Weak Mutation 3110: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1691 - ReplaceComparisonOperator >= -> >
   * Goal 13. Weak Mutation 3124: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:1699 - ReplaceComparisonOperator != -> ==
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;:nonnull
   */

  @Test
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = MathUtils.pow((BigInteger) null, bigInteger0);
  }

  //Test case number: 102
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 3. pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1661
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1662
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 7. Weak Mutation 3065: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1661 - ReplaceComparisonOperator >= -> -1
   */

  @Test
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      try { 
        MathUtils.pow(bigInteger0, (-1L));
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (0^-1)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 103
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I43 Branch 197 IFEQ L1670 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I43 Branch 197 IFEQ L1670 - false
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I5 Branch 195 IFGE L1661 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I35 Branch 196 IFEQ L1669 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I43 Branch 197 IFEQ L1670 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: I43 Branch 197 IFEQ L1670 - true in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1661
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1667
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1668
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1669
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1670
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1671
   * Goal 17. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1673
   * Goal 18. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1674
   * Goal 19. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;: Line 1677
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 21. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
   * Goal 22. Weak Mutation 3066: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1661 - ReplaceComparisonOperator >= -> ==
   * Goal 23. Weak Mutation 3079: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1669 - ReplaceComparisonOperator == -> -2
   * Goal 24. Weak Mutation 3080: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1669 - ReplaceComparisonOperator == -> >=
   * Goal 25. Weak Mutation 3086: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceBitwiseOperator & -> |
   * Goal 26. Weak Mutation 3087: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceBitwiseOperator & -> ^
   * Goal 27. Weak Mutation 3090: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceComparisonOperator == -> -2
   * Goal 28. Weak Mutation 3091: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1670 - ReplaceComparisonOperator == -> >=
   * Goal 29. Weak Mutation 3103: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:1674 - ReplaceBitwiseOperator >> -> <<
   * Goal 30. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;:nonnull
   */

  @Test
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = MathUtils.pow(bigInteger0, (long) (byte)35);
  }

  //Test case number: 104
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: I3 Branch 194 IFGE L1641 - false in context: org.apache.commons.math.util.MathUtils:pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 3. pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: Line 1641
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;: Line 1642
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
   * Goal 7. Weak Mutation 3049: org.apache.commons.math.util.MathUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;:1641 - ReplaceComparisonOperator >= -> -1
   */

  @Test
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      try { 
        MathUtils.pow(bigInteger0, (-837));
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (0^-837)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 105
  /*
   * 36 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I44 Branch 193 IFEQ L1620 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1611
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1617
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1618
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1619
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1620
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1621
   * Goal 17. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1623
   * Goal 18. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1624
   * Goal 19. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1627
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 21. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 22. Weak Mutation 2970: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> ==
   * Goal 23. Weak Mutation 2994: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> -2
   * Goal 24. Weak Mutation 2995: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> >=
   * Goal 25. Weak Mutation 3004: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> |
   * Goal 26. Weak Mutation 3005: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceBitwiseOperator & -> ^
   * Goal 27. Weak Mutation 3008: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> -2
   * Goal 28. Weak Mutation 3009: org.apache.commons.math.util.MathUtils.pow(JJ)J:1620 - ReplaceComparisonOperator == -> >=
   * Goal 29. Weak Mutation 3020: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> %
   * Goal 30. Weak Mutation 3022: org.apache.commons.math.util.MathUtils.pow(JJ)J:1621 - ReplaceArithmeticOperator * -> /
   * Goal 31. Weak Mutation 3031: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> +
   * Goal 32. Weak Mutation 3032: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> %
   * Goal 33. Weak Mutation 3033: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> -
   * Goal 34. Weak Mutation 3034: org.apache.commons.math.util.MathUtils.pow(JJ)J:1623 - ReplaceArithmeticOperator * -> /
   * Goal 35. Weak Mutation 3040: org.apache.commons.math.util.MathUtils.pow(JJ)J:1624 - ReplaceBitwiseOperator >> -> <<
   * Goal 36. org.apache.commons.math.util.MathUtils.pow(JJ)J:zero
   */

  @Test
  public void test105()  throws Throwable  {
      long long0 = MathUtils.pow((long) 16, 4607182418800017408L);
  }

  //Test case number: 106
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - false in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 3. pow(JJ)J_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1611
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1612
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 7. Weak Mutation 2969: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> -1
   */

  @Test
  public void test106()  throws Throwable  {
      try { 
        MathUtils.pow(0L, (-3401L));
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (0^-3,401)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 107
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I5 Branch 191 IFGE L1611 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.pow(JJ)J: I36 Branch 192 IFEQ L1619 - true in context: org.apache.commons.math.util.MathUtils:pow(JJ)J
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1611
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1617
   * Goal 7. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1618
   * Goal 8. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1619
   * Goal 9. org.apache.commons.math.util.MathUtils.pow(JJ)J: Line 1627
   * Goal 10. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(JJ)J
   * Goal 12. Weak Mutation 2971: org.apache.commons.math.util.MathUtils.pow(JJ)J:1611 - ReplaceComparisonOperator >= -> >
   * Goal 13. Weak Mutation 2994: org.apache.commons.math.util.MathUtils.pow(JJ)J:1619 - ReplaceComparisonOperator == -> -2
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(JJ)J:positive
   */

  @Test
  public void test107()  throws Throwable  {
      long long0 = MathUtils.pow(113236205062349959L, (long) 0);
  }

  //Test case number: 108
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 3. pow(JI)J_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1581
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1582
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 7. Weak Mutation 2905: org.apache.commons.math.util.MathUtils.pow(JI)J:1581 - ReplaceComparisonOperator >= -> -1
   */

  @Test
  public void test108()  throws Throwable  {
      try { 
        MathUtils.pow((long) 527, (-1560));
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (527^-1,560)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 109
  /*
   * 38 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I3 Branch 188 IFGE L1581 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I32 Branch 189 IFEQ L1589 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - true in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.pow(JI)J: I38 Branch 190 IFEQ L1590 - false in context: org.apache.commons.math.util.MathUtils:pow(JI)J
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1581
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1587
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1588
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1589
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1590
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1591
   * Goal 17. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1593
   * Goal 18. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1594
   * Goal 19. org.apache.commons.math.util.MathUtils.pow(JI)J: Line 1597
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 21. org.apache.commons.math.util.MathUtils.pow(JI)J
   * Goal 22. Weak Mutation 2906: org.apache.commons.math.util.MathUtils.pow(JI)J:1581 - ReplaceComparisonOperator >= -> ==
   * Goal 23. Weak Mutation 2924: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> -2
   * Goal 24. Weak Mutation 2925: org.apache.commons.math.util.MathUtils.pow(JI)J:1589 - ReplaceComparisonOperator == -> >=
   * Goal 25. Weak Mutation 2931: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> |
   * Goal 26. Weak Mutation 2932: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceBitwiseOperator & -> ^
   * Goal 27. Weak Mutation 2933: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> -2
   * Goal 28. Weak Mutation 2934: org.apache.commons.math.util.MathUtils.pow(JI)J:1590 - ReplaceComparisonOperator == -> >=
   * Goal 29. Weak Mutation 2942: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> +
   * Goal 30. Weak Mutation 2943: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> %
   * Goal 31. Weak Mutation 2944: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> -
   * Goal 32. Weak Mutation 2945: org.apache.commons.math.util.MathUtils.pow(JI)J:1591 - ReplaceArithmeticOperator * -> /
   * Goal 33. Weak Mutation 2952: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> +
   * Goal 34. Weak Mutation 2953: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> %
   * Goal 35. Weak Mutation 2954: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> -
   * Goal 36. Weak Mutation 2955: org.apache.commons.math.util.MathUtils.pow(JI)J:1593 - ReplaceArithmeticOperator * -> /
   * Goal 37. Weak Mutation 2960: org.apache.commons.math.util.MathUtils.pow(JI)J:1594 - ReplaceBitwiseOperator >> -> <<
   * Goal 38. org.apache.commons.math.util.MathUtils.pow(JI)J:zero
   */

  @Test
  public void test109()  throws Throwable  {
      long long0 = MathUtils.pow(834L, 1010);
  }

  //Test case number: 110
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 3. pow(IJ)I_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1551
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1552
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 7. Weak Mutation 2832: org.apache.commons.math.util.MathUtils.pow(IJ)I:1551 - ReplaceComparisonOperator >= -> -1
   */

  @Test
  public void test110()  throws Throwable  {
      try { 
        MathUtils.pow((-1), (long) (-1));
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (-1^-1)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 111
  /*
   * 38 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I5 Branch 185 IFGE L1551 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I36 Branch 186 IFEQ L1559 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - true in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.pow(IJ)I: I44 Branch 187 IFEQ L1560 - false in context: org.apache.commons.math.util.MathUtils:pow(IJ)I
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1551
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1557
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1558
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1559
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1560
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1561
   * Goal 17. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1563
   * Goal 18. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1564
   * Goal 19. org.apache.commons.math.util.MathUtils.pow(IJ)I: Line 1567
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 21. org.apache.commons.math.util.MathUtils.pow(IJ)I
   * Goal 22. Weak Mutation 2833: org.apache.commons.math.util.MathUtils.pow(IJ)I:1551 - ReplaceComparisonOperator >= -> ==
   * Goal 23. Weak Mutation 2851: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> -2
   * Goal 24. Weak Mutation 2852: org.apache.commons.math.util.MathUtils.pow(IJ)I:1559 - ReplaceComparisonOperator == -> >=
   * Goal 25. Weak Mutation 2858: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> |
   * Goal 26. Weak Mutation 2859: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceBitwiseOperator & -> ^
   * Goal 27. Weak Mutation 2862: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> -2
   * Goal 28. Weak Mutation 2863: org.apache.commons.math.util.MathUtils.pow(IJ)I:1560 - ReplaceComparisonOperator == -> >=
   * Goal 29. Weak Mutation 2875: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> +
   * Goal 30. Weak Mutation 2876: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> %
   * Goal 31. Weak Mutation 2877: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> -
   * Goal 32. Weak Mutation 2878: org.apache.commons.math.util.MathUtils.pow(IJ)I:1561 - ReplaceArithmeticOperator * -> /
   * Goal 33. Weak Mutation 2889: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> +
   * Goal 34. Weak Mutation 2890: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> %
   * Goal 35. Weak Mutation 2891: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> -
   * Goal 36. Weak Mutation 2892: org.apache.commons.math.util.MathUtils.pow(IJ)I:1563 - ReplaceArithmeticOperator * -> /
   * Goal 37. Weak Mutation 2895: org.apache.commons.math.util.MathUtils.pow(IJ)I:1564 - ReplaceBitwiseOperator >> -> <<
   * Goal 38. org.apache.commons.math.util.MathUtils.pow(IJ)I:negative
   */

  @Test
  public void test111()  throws Throwable  {
      int int0 = MathUtils.pow((-1027080229), 945L);
  }

  //Test case number: 112
  /*
   * 38 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I32 Branch 183 IFEQ L1529 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - true in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I38 Branch 184 IFEQ L1530 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 11. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1521
   * Goal 12. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1527
   * Goal 13. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1528
   * Goal 14. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1529
   * Goal 15. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1530
   * Goal 16. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1531
   * Goal 17. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1533
   * Goal 18. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1534
   * Goal 19. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1537
   * Goal 20. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 21. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 22. Weak Mutation 2743: org.apache.commons.math.util.MathUtils.pow(II)I:1521 - ReplaceComparisonOperator >= -> ==
   * Goal 23. Weak Mutation 2767: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> -2
   * Goal 24. Weak Mutation 2768: org.apache.commons.math.util.MathUtils.pow(II)I:1529 - ReplaceComparisonOperator == -> >=
   * Goal 25. Weak Mutation 2777: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> |
   * Goal 26. Weak Mutation 2778: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceBitwiseOperator & -> ^
   * Goal 27. Weak Mutation 2779: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> -2
   * Goal 28. Weak Mutation 2780: org.apache.commons.math.util.MathUtils.pow(II)I:1530 - ReplaceComparisonOperator == -> >=
   * Goal 29. Weak Mutation 2794: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> +
   * Goal 30. Weak Mutation 2795: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> %
   * Goal 31. Weak Mutation 2796: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> -
   * Goal 32. Weak Mutation 2797: org.apache.commons.math.util.MathUtils.pow(II)I:1531 - ReplaceArithmeticOperator * -> /
   * Goal 33. Weak Mutation 2810: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> +
   * Goal 34. Weak Mutation 2811: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> %
   * Goal 35. Weak Mutation 2812: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> -
   * Goal 36. Weak Mutation 2813: org.apache.commons.math.util.MathUtils.pow(II)I:1533 - ReplaceArithmeticOperator * -> /
   * Goal 37. Weak Mutation 2821: org.apache.commons.math.util.MathUtils.pow(II)I:1534 - ReplaceBitwiseOperator >> -> <<
   * Goal 38. org.apache.commons.math.util.MathUtils.pow(II)I:positive
   */

  @Test
  public void test112()  throws Throwable  {
      int int0 = MathUtils.pow(18, 18);
  }

  //Test case number: 113
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.pow(II)I: I3 Branch 182 IFGE L1521 - false in context: org.apache.commons.math.util.MathUtils:pow(II)I
   * Goal 3. pow(II)I_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   * Goal 4. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1521
   * Goal 5. org.apache.commons.math.util.MathUtils.pow(II)I: Line 1522
   * Goal 6. org.apache.commons.math.util.MathUtils.pow(II)I
   * Goal 7. Weak Mutation 2742: org.apache.commons.math.util.MathUtils.pow(II)I:1521 - ReplaceComparisonOperator >= -> -1
   */

  @Test
  public void test113()  throws Throwable  {
      try { 
        MathUtils.pow((-665), (-665));
      } catch(IllegalArgumentException e) {
         //
         // cannot raise an integral value to a negative power (-665^-665)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 114
  /*
   * 15 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I17 Branch 179 IFLE L1479 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.subAndCheck(II)I: I13 Branch 178 IFLT L1479 - false in context: org.apache.commons.math.util.MathUtils:subAndCheck(II)I
   * Goal 5. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1478
   * Goal 6. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1479
   * Goal 7. org.apache.commons.math.util.MathUtils.subAndCheck(II)I: Line 1482
   * Goal 8. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 9. org.apache.commons.math.util.MathUtils.subAndCheck(II)I
   * Goal 10. Weak Mutation 2671: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> +
   * Goal 11. Weak Mutation 2673: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> *
   * Goal 12. Weak Mutation 2674: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1478 - ReplaceArithmeticOperator - -> /
   * Goal 13. Weak Mutation 2682: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator < -> !=
   * Goal 14. Weak Mutation 2691: org.apache.commons.math.util.MathUtils.subAndCheck(II)I:1479 - ReplaceComparisonOperator <= -> ==
   * Goal 15. org.apache.commons.math.util.MathUtils.subAndCheck(II)I:zero
   */

  @Test
  public void test114()  throws Throwable  {
      int int0 = MathUtils.subAndCheck(990, 990);
  }

  //Test case number: 115
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - true in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(S)S: Line 1453
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 8. Weak Mutation 2631: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator != -> >
   * Goal 9. Weak Mutation 2637: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator <= -> ==
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(S)S:negative
   */

  @Test
  public void test115()  throws Throwable  {
      short short0 = MathUtils.sign((short) (-1718));
  }

  //Test case number: 116
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - false in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(S)S: Line 1453
   * Goal 4. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 6. Weak Mutation 2629: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator != -> -1
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(S)S:zero
   */

  @Test
  public void test116()  throws Throwable  {
      short short0 = MathUtils.sign((short)0);
  }

  //Test case number: 117
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I3 Branch 176 IFNE L1453 - true in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(S)S: I8 Branch 177 IFLE L1453 - false in context: org.apache.commons.math.util.MathUtils:sign(S)S
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(S)S: Line 1453
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(S)S
   * Goal 8. Weak Mutation 2630: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator != -> <
   * Goal 9. Weak Mutation 2636: org.apache.commons.math.util.MathUtils.sign(S)S:1453 - ReplaceComparisonOperator <= -> -1
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(S)S:positive
   */

  @Test
  public void test117()  throws Throwable  {
      short short0 = MathUtils.sign((short)7);
  }

  //Test case number: 118
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(J)J: Line 1438
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 8. Weak Mutation 2611: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator != -> >
   * Goal 9. Weak Mutation 2618: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator <= -> ==
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(J)J:negative
   */

  @Test
  public void test118()  throws Throwable  {
      long long0 = MathUtils.sign((-2432L));
  }

  //Test case number: 119
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - false in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(J)J: Line 1438
   * Goal 4. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 6. Weak Mutation 2609: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator != -> -1
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(J)J:zero
   */

  @Test
  public void test119()  throws Throwable  {
      long long0 = MathUtils.sign((long) 0);
  }

  //Test case number: 120
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I5 Branch 174 IFNE L1438 - true in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(J)J: I12 Branch 175 IFLE L1438 - false in context: org.apache.commons.math.util.MathUtils:sign(J)J
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(J)J: Line 1438
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(J)J
   * Goal 8. Weak Mutation 2610: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator != -> <
   * Goal 9. Weak Mutation 2617: org.apache.commons.math.util.MathUtils.sign(J)J:1438 - ReplaceComparisonOperator <= -> -1
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(J)J:positive
   */

  @Test
  public void test120()  throws Throwable  {
      long long0 = MathUtils.sign(4398046511103L);
  }

  //Test case number: 121
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 173 IFLE L1424 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - true in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 173 IFLE L1424 - true in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(I)I: Line 1424
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 8. Weak Mutation 2594: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator != -> >
   * Goal 9. Weak Mutation 2600: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator <= -> ==
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(I)I:negative
   */

  @Test
  public void test121()  throws Throwable  {
      int int0 = MathUtils.sign((-671));
  }

  //Test case number: 122
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - false in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(I)I: Line 1424
   * Goal 4. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 6. Weak Mutation 2592: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator != -> -1
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(I)I:zero
   */

  @Test
  public void test122()  throws Throwable  {
      int int0 = MathUtils.sign(0);
  }

  //Test case number: 123
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 173 IFLE L1424 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I3 Branch 172 IFNE L1424 - true in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(I)I: I8 Branch 173 IFLE L1424 - false in context: org.apache.commons.math.util.MathUtils:sign(I)I
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(I)I: Line 1424
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(I)I
   * Goal 8. Weak Mutation 2593: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator != -> <
   * Goal 9. Weak Mutation 2599: org.apache.commons.math.util.MathUtils.sign(I)I:1424 - ReplaceComparisonOperator <= -> -1
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(I)I:positive
   */

  @Test
  public void test123()  throws Throwable  {
      int int0 = MathUtils.sign(76);
  }

  //Test case number: 124
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - false
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - false in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1407
   * Goal 8. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1410
   * Goal 9. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 11. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 12. Weak Mutation 2573: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> <
   * Goal 13. Weak Mutation 2580: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator <= -> -1
   * Goal 14. org.apache.commons.math.util.MathUtils.sign(F)F:positive
   */

  @Test
  public void test124()  throws Throwable  {
      float float0 = MathUtils.sign(1321.914F);
  }

  //Test case number: 125
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - false in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1407
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1410
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 8. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 9. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 10. Weak Mutation 2572: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> -1
   * Goal 11. org.apache.commons.math.util.MathUtils.sign(F)F:zero
   */

  @Test
  public void test125()  throws Throwable  {
      float float0 = MathUtils.sign(0.0F);
  }

  //Test case number: 126
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I4 Branch 169 IFEQ L1407 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I14 Branch 170 IFNE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.sign(F)F: I21 Branch 171 IFLE L1410 - true in context: org.apache.commons.math.util.MathUtils:sign(F)F
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1407
   * Goal 8. org.apache.commons.math.util.MathUtils.sign(F)F: Line 1410
   * Goal 9. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(F)F
   * Goal 11. Weak Mutation 2564: org.apache.commons.math.util.MathUtils.sign(F)F:1407 - ReplaceComparisonOperator == -> !=
   * Goal 12. Weak Mutation 2574: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator != -> >
   * Goal 13. Weak Mutation 2581: org.apache.commons.math.util.MathUtils.sign(F)F:1410 - ReplaceComparisonOperator <= -> ==
   * Goal 14. org.apache.commons.math.util.MathUtils.sign(F)F:negative
   */

  @Test
  public void test126()  throws Throwable  {
      float float0 = MathUtils.sign((-1844.0F));
  }

  //Test case number: 127
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1389
   * Goal 8. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1392
   * Goal 9. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 11. Weak Mutation 2532: org.apache.commons.math.util.MathUtils.sign(D)D:1389 - ReplaceComparisonOperator == -> !=
   * Goal 12. Weak Mutation 2545: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator != -> >
   * Goal 13. Weak Mutation 2555: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator <= -> ==
   * Goal 14. org.apache.commons.math.util.MathUtils.sign(D)D:negative
   */

  @Test
  public void test127()  throws Throwable  {
      double double0 = MathUtils.sign((double) (short) (-2503));
  }

  //Test case number: 128
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - false
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I21 Branch 168 IFLE L1392 - false in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1389
   * Goal 8. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1392
   * Goal 9. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 11. Weak Mutation 2532: org.apache.commons.math.util.MathUtils.sign(D)D:1389 - ReplaceComparisonOperator == -> !=
   * Goal 12. Weak Mutation 2544: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator != -> <
   * Goal 13. Weak Mutation 2554: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator <= -> -1
   * Goal 14. org.apache.commons.math.util.MathUtils.sign(D)D:positive
   */

  @Test
  public void test128()  throws Throwable  {
      double double0 = MathUtils.sign((double) 2);
  }

  //Test case number: 129
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I4 Branch 166 IFEQ L1389 - true in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(D)D: I14 Branch 167 IFNE L1392 - false in context: org.apache.commons.math.util.MathUtils:sign(D)D
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1389
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(D)D: Line 1392
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 8. org.apache.commons.math.util.MathUtils.sign(D)D
   * Goal 9. Weak Mutation 2532: org.apache.commons.math.util.MathUtils.sign(D)D:1389 - ReplaceComparisonOperator == -> !=
   * Goal 10. Weak Mutation 2543: org.apache.commons.math.util.MathUtils.sign(D)D:1392 - ReplaceComparisonOperator != -> -1
   * Goal 11. org.apache.commons.math.util.MathUtils.sign(D)D:zero
   */

  @Test
  public void test129()  throws Throwable  {
      double double0 = MathUtils.sign((double) (byte)0);
  }

  //Test case number: 130
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(B)B: Line 1373
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 8. Weak Mutation 2516: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator != -> >
   * Goal 9. Weak Mutation 2522: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator <= -> ==
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(B)B:negative
   */

  @Test
  public void test130()  throws Throwable  {
      byte byte0 = MathUtils.sign((byte) (-51));
  }

  //Test case number: 131
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - false in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 3. org.apache.commons.math.util.MathUtils.sign(B)B: Line 1373
   * Goal 4. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 6. Weak Mutation 2514: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator != -> -1
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(B)B:zero
   */

  @Test
  public void test131()  throws Throwable  {
      byte byte0 = MathUtils.sign((byte)0);
  }

  //Test case number: 132
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I3 Branch 164 IFNE L1373 - true in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.sign(B)B: I8 Branch 165 IFLE L1373 - false in context: org.apache.commons.math.util.MathUtils:sign(B)B
   * Goal 5. org.apache.commons.math.util.MathUtils.sign(B)B: Line 1373
   * Goal 6. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 7. org.apache.commons.math.util.MathUtils.sign(B)B
   * Goal 8. Weak Mutation 2515: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator != -> <
   * Goal 9. Weak Mutation 2521: org.apache.commons.math.util.MathUtils.sign(B)B:1373 - ReplaceComparisonOperator <= -> -1
   * Goal 10. org.apache.commons.math.util.MathUtils.sign(B)B:positive
   */

  @Test
  public void test132()  throws Throwable  {
      byte byte0 = MathUtils.sign((byte)1);
  }

  //Test case number: 133
  /*
   * 51 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 14. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - true
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true in context: 
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - true in context: 
   * Goal 26. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 891
   * Goal 27. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 894
   * Goal 28. org.apache.commons.math.util.MathUtils.round(FI)F: Line 1248
   * Goal 29. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1264
   * Goal 30. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1265
   * Goal 31. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1266
   * Goal 32. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1283
   * Goal 33. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1329
   * Goal 34. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1330
   * Goal 35. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1331
   * Goal 36. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1334
   * Goal 37. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1336
   * Goal 38. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1359
   * Goal 39. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 40. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 41. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 42. Weak Mutation 1758: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> !=
   * Goal 43. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 44. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 45. Weak Mutation 2337: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> -
   * Goal 46. Weak Mutation 2338: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> /
   * Goal 47. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 48. Weak Mutation 2350: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> %
   * Goal 49. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 50. Weak Mutation 2352: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> *
   * Goal 51. org.apache.commons.math.util.MathUtils.round(FI)F:positive
   */

  @Test
  public void test133()  throws Throwable  {
      float float0 = MathUtils.round((float) 1L, 12);
  }

  //Test case number: 134
  /*
   * 43 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FII)F
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - true in context: 
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false in context: 
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 23. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 891
   * Goal 24. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 894
   * Goal 25. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1264
   * Goal 26. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1265
   * Goal 27. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1266
   * Goal 28. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1283
   * Goal 29. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1292
   * Goal 30. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1293
   * Goal 31. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1359
   * Goal 32. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 33. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 34. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 35. Weak Mutation 1758: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> !=
   * Goal 36. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 37. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 38. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 39. Weak Mutation 2338: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> /
   * Goal 40. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 41. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 42. Weak Mutation 2352: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> *
   * Goal 43. org.apache.commons.math.util.MathUtils.round(FII)F:negative
   */

  @Test
  public void test134()  throws Throwable  {
      float float0 = MathUtils.round(3743.6448F, (-3001), 1);
  }

  //Test case number: 135
  /*
   * 44 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FII)F
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false in context: 
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - true in context: 
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 23. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 891
   * Goal 24. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 894
   * Goal 25. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1264
   * Goal 26. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1265
   * Goal 27. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1266
   * Goal 28. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1283
   * Goal 29. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1344
   * Goal 30. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1345
   * Goal 31. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1359
   * Goal 32. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 33. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 34. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 35. Weak Mutation 1759: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> <=
   * Goal 36. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 37. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 38. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 39. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 40. Weak Mutation 2337: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> -
   * Goal 41. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 42. Weak Mutation 2350: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> %
   * Goal 43. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 44. org.apache.commons.math.util.MathUtils.round(FII)F:positive
   */

  @Test
  public void test135()  throws Throwable  {
      float float0 = MathUtils.round(0.0F, 0, 0);
  }

  //Test case number: 136
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(DII)D: I20 Branch 146 IFEQ L1230 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.round(DII)D: I20 Branch 146 IFEQ L1230 - false in context: org.apache.commons.math.util.MathUtils:round(DII)D
   * Goal 3. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1225
   * Goal 4. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1229
   * Goal 5. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1230
   * Goal 6. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1231
   * Goal 7. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 8. org.apache.commons.math.util.MathUtils.round(DII)D
   * Goal 9. Weak Mutation 2295: org.apache.commons.math.util.MathUtils.round(DII)D:1230 - ReplaceComparisonOperator == -> !=
   * Goal 10. org.apache.commons.math.util.MathUtils.round(DII)D:negative
   */

  @Test
  public void test136()  throws Throwable  {
      double double0 = MathUtils.round(Double.NEGATIVE_INFINITY, (-649), 4877);
  }

  //Test case number: 137
  /*
   * 50 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I111 Branch 144 IF_ICMPGE L1188 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I118 Branch 145 IFEQ L1189 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 21. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1165
   * Goal 22. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1169
   * Goal 23. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1173
   * Goal 24. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1174
   * Goal 25. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1175
   * Goal 26. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1176
   * Goal 27. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1177
   * Goal 28. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1181
   * Goal 29. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1182
   * Goal 30. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1185
   * Goal 31. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1188
   * Goal 32. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1189
   * Goal 33. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1192
   * Goal 34. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1195
   * Goal 35. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 36. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 37. Weak Mutation 2174: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1165 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 2180: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1169 - ReplaceComparisonOperator == -> !=
   * Goal 39. Weak Mutation 2196: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> -1
   * Goal 40. Weak Mutation 2197: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> >
   * Goal 41. Weak Mutation 2204: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1177 - ReplaceComparisonOperator == -> !=
   * Goal 42. Weak Mutation 2223: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1181 - ReplaceComparisonOperator != -> ==
   * Goal 43. Weak Mutation 2234: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> %
   * Goal 44. Weak Mutation 2235: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> -
   * Goal 45. Weak Mutation 2236: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> *
   * Goal 46. Weak Mutation 2237: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> /
   * Goal 47. Weak Mutation 2247: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1185 - ReplaceComparisonOperator != -> <
   * Goal 48. Weak Mutation 2259: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> -1
   * Goal 49. Weak Mutation 2260: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1188 - ReplaceComparisonOperator >= -> >
   * Goal 50. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:nonempty
   */

  @Test
  public void test137()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) (byte)1;
      double[] doubleArray1 = MathUtils.normalizeArray(doubleArray0, 0.0);
  }

  //Test case number: 138
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 5. normalizeArray([DD)[D_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_DECLARED
   * Goal 6. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1165
   * Goal 7. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1169
   * Goal 8. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1170
   * Goal 9. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 10. Weak Mutation 2174: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1165 - ReplaceComparisonOperator == -> !=
   * Goal 11. Weak Mutation 2180: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1169 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test138()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      try { 
        MathUtils.normalizeArray(doubleArray0, Double.NaN);
      } catch(IllegalArgumentException e) {
         //
         // Cannot normalize to NaN
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 139
  /*
   * 36 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - false
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I4 Branch 138 IFEQ L1165 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I16 Branch 139 IFEQ L1169 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I45 Branch 140 IF_ICMPGE L1176 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I52 Branch 141 IFEQ L1177 - true in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I78 Branch 142 IFNE L1181 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: I96 Branch 143 IFNE L1185 - false in context: org.apache.commons.math.util.MathUtils:normalizeArray([DD)[D
   * Goal 15. normalizeArray([DD)[D_org.evosuite.runtime.mock.java.lang.MockArithmeticException_DECLARED
   * Goal 16. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1165
   * Goal 17. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1169
   * Goal 18. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1173
   * Goal 19. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1174
   * Goal 20. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1175
   * Goal 21. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1176
   * Goal 22. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1177
   * Goal 23. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1181
   * Goal 24. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1182
   * Goal 25. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1185
   * Goal 26. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D: Line 1186
   * Goal 27. org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D
   * Goal 28. Weak Mutation 2174: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1165 - ReplaceComparisonOperator == -> !=
   * Goal 29. Weak Mutation 2180: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1169 - ReplaceComparisonOperator == -> !=
   * Goal 30. Weak Mutation 2196: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> -1
   * Goal 31. Weak Mutation 2197: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1176 - ReplaceComparisonOperator >= -> >
   * Goal 32. Weak Mutation 2204: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1177 - ReplaceComparisonOperator == -> !=
   * Goal 33. Weak Mutation 2223: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1181 - ReplaceComparisonOperator != -> ==
   * Goal 34. Weak Mutation 2234: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> %
   * Goal 35. Weak Mutation 2237: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1182 - ReplaceArithmeticOperator + -> /
   * Goal 36. Weak Mutation 2246: org.apache.commons.math.util.MathUtils.normalizeArray([DD)[D:1185 - ReplaceComparisonOperator != -> -1
   */

  @Test
  public void test139()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      try { 
        MathUtils.normalizeArray(doubleArray0, 0.0);
      } catch(ArithmeticException e) {
         //
         // array sums to zero
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 140
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - false
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I11 Branch 137 IFEQ L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I8 Branch 136 IFNE L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - false in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 7. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1104
   * Goal 8. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1105
   * Goal 9. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 10. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 11. Weak Mutation 2057: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> >=
   * Goal 12. Weak Mutation 2063: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator != -> ==
   * Goal 13. Weak Mutation 2068: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> !=
   * Goal 14. org.apache.commons.math.util.MathUtils.scalb(DI)D:positive
   */

  @Test
  public void test140()  throws Throwable  {
      double double0 = MathUtils.scalb(Double.POSITIVE_INFINITY, 0);
  }

  //Test case number: 141
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - true
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.scalb(DI)D: I5 Branch 135 IFEQ L1104 - true in context: org.apache.commons.math.util.MathUtils:scalb(DI)D
   * Goal 3. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1104
   * Goal 4. org.apache.commons.math.util.MathUtils.scalb(DI)D: Line 1105
   * Goal 5. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 6. org.apache.commons.math.util.MathUtils.scalb(DI)D
   * Goal 7. Weak Mutation 2056: org.apache.commons.math.util.MathUtils.scalb(DI)D:1104 - ReplaceComparisonOperator == -> -2
   * Goal 8. org.apache.commons.math.util.MathUtils.scalb(DI)D:zero
   */

  @Test
  public void test141()  throws Throwable  {
      double double0 = MathUtils.scalb(0, 0);
  }

  //Test case number: 142
  /*
   * 17 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 7. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1049
   * Goal 8. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1050
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1054
   * Goal 10. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1074
   * Goal 11. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1086
   * Goal 12. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1089
   * Goal 13. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 14. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 15. Weak Mutation 1971: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> <
   * Goal 16. Weak Mutation 1982: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> >
   * Goal 17. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:zero
   */

  @Test
  public void test142()  throws Throwable  {
      long long0 = MathUtils.mulAndCheck((long) 0, (long) 0);
  }

  //Test case number: 143
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I71 Branch 131 IFLE L1062 - true
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 7. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1049
   * Goal 8. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1050
   * Goal 9. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1052
   * Goal 10. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1054
   * Goal 11. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1055
   * Goal 12. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1062
   * Goal 13. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1072
   * Goal 14. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1089
   * Goal 15. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 17. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 18. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 19. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 20. Weak Mutation 1989: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> >
   * Goal 21. Weak Mutation 2021: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1062 - ReplaceComparisonOperator <= -> <
   * Goal 22. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:zero
   */

  @Test
  public void test143()  throws Throwable  {
      long long0 = MathUtils.mulAndCheck(0L, (-5034868814120038111L));
  }

  //Test case number: 144
  /*
   * 25 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I37 Branch 130 IFLT L1057 - true
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - false in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I37 Branch 130 IFLT L1057 - true in context: org.apache.commons.math.util.MathUtils:mulAndCheck(JJ)J
   * Goal 9. mulAndCheck(JJ)J_java.lang.ArithmeticException_EXPLICIT
   * Goal 10. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1049
   * Goal 11. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1050
   * Goal 12. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1054
   * Goal 13. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1055
   * Goal 14. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1057
   * Goal 15. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1060
   * Goal 16. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J
   * Goal 17. Weak Mutation 1971: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> <
   * Goal 18. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 19. Weak Mutation 1987: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> -1
   * Goal 20. Weak Mutation 1999: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> +
   * Goal 21. Weak Mutation 2000: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> %
   * Goal 22. Weak Mutation 2001: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> -
   * Goal 23. Weak Mutation 2002: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceArithmeticOperator / -> *
   * Goal 24. Weak Mutation 2003: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1057 - ReplaceComparisonOperator < -> -2
   * Goal 25. Weak Mutation 2014: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1060 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test144()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.mulAndCheck((-3512299194304650054L), (-3512299194304650054L));
      } catch(ArithmeticException e) {
         //
         // overflow: multiply
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 145
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 5. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 987
   * Goal 6. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 988
   * Goal 7. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 8. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 9. Weak Mutation 1869: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> <=
   * Goal 10. Weak Mutation 1874: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator != -> -1
   * Goal 11. org.apache.commons.math.util.MathUtils.lcm(JJ)J:zero
   */

  @Test
  public void test145()  throws Throwable  {
      long long0 = MathUtils.lcm((-520L), 0L);
  }

  //Test case number: 146
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 3. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 987
   * Goal 4. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 988
   * Goal 5. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 6. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 7. Weak Mutation 1867: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> -2
   * Goal 8. org.apache.commons.math.util.MathUtils.lcm(JJ)J:zero
   */

  @Test
  public void test146()  throws Throwable  {
      long long0 = MathUtils.lcm(0L, (-1324L));
  }

  //Test case number: 147
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 5. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 952
   * Goal 6. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 953
   * Goal 7. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 8. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 9. Weak Mutation 1803: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> >=
   * Goal 10. Weak Mutation 1809: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator != -> -1
   * Goal 11. org.apache.commons.math.util.MathUtils.lcm(II)I:zero
   */

  @Test
  public void test147()  throws Throwable  {
      int int0 = MathUtils.lcm(135, 0);
  }

  //Test case number: 148
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - true
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 3. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 952
   * Goal 4. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 953
   * Goal 5. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 6. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 7. Weak Mutation 1802: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> -2
   * Goal 8. org.apache.commons.math.util.MathUtils.lcm(II)I:zero
   */

  @Test
  public void test148()  throws Throwable  {
      int int0 = MathUtils.lcm(0, 0);
  }

  //Test case number: 149
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - false in context: org.apache.commons.math.util.MathUtils:indicator(S)S
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(S)S: Line 925
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 6. Weak Mutation 1793: org.apache.commons.math.util.MathUtils.indicator(S)S:925 - ReplaceComparisonOperator < -> <=
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(S)S:positive
   */

  @Test
  public void test149()  throws Throwable  {
      short short0 = MathUtils.indicator((short)0);
  }

  //Test case number: 150
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - true
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(S)S: I3 Branch 118 IFLT L925 - true in context: org.apache.commons.math.util.MathUtils:indicator(S)S
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(S)S: Line 925
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(S)S
   * Goal 6. Weak Mutation 1791: org.apache.commons.math.util.MathUtils.indicator(S)S:925 - ReplaceComparisonOperator < -> -2
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(S)S:negative
   */

  @Test
  public void test150()  throws Throwable  {
      short short0 = MathUtils.indicator((short) (-1917));
  }

  //Test case number: 151
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - false in context: org.apache.commons.math.util.MathUtils:indicator(J)J
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(J)J: Line 914
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 6. Weak Mutation 1780: org.apache.commons.math.util.MathUtils.indicator(J)J:914 - ReplaceComparisonOperator < -> !=
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(J)J:positive
   */

  @Test
  public void test151()  throws Throwable  {
      long long0 = MathUtils.indicator(776L);
  }

  //Test case number: 152
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - true
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(J)J: I5 Branch 117 IFLT L914 - true in context: org.apache.commons.math.util.MathUtils:indicator(J)J
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(J)J: Line 914
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(J)J
   * Goal 6. Weak Mutation 1779: org.apache.commons.math.util.MathUtils.indicator(J)J:914 - ReplaceComparisonOperator < -> -2
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(J)J:negative
   */

  @Test
  public void test152()  throws Throwable  {
      long long0 = MathUtils.indicator((-3426L));
  }

  //Test case number: 153
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - false in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(I)I: Line 904
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 6. Weak Mutation 1770: org.apache.commons.math.util.MathUtils.indicator(I)I:904 - ReplaceComparisonOperator < -> !=
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(I)I:positive
   */

  @Test
  public void test153()  throws Throwable  {
      int int0 = MathUtils.indicator(8);
  }

  //Test case number: 154
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - true
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(I)I: I3 Branch 116 IFLT L904 - true in context: org.apache.commons.math.util.MathUtils:indicator(I)I
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(I)I: Line 904
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(I)I
   * Goal 6. Weak Mutation 1769: org.apache.commons.math.util.MathUtils.indicator(I)I:904 - ReplaceComparisonOperator < -> -2
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(I)I:negative
   */

  @Test
  public void test154()  throws Throwable  {
      int int0 = MathUtils.indicator((-666));
  }

  //Test case number: 155
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - true in context: org.apache.commons.math.util.MathUtils:indicator(F)F
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 891
   * Goal 6. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 894
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 8. org.apache.commons.math.util.MathUtils.indicator(F)F
   * Goal 9. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 10. Weak Mutation 1757: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> -2
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(F)F:negative
   */

  @Test
  public void test155()  throws Throwable  {
      float float0 = MathUtils.indicator((-1395.89F));
  }

  //Test case number: 156
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 877
   * Goal 6. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 880
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 8. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 9. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 10. Weak Mutation 1739: org.apache.commons.math.util.MathUtils.indicator(D)D:880 - ReplaceComparisonOperator < -> -2
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(D)D:negative
   */

  @Test
  public void test156()  throws Throwable  {
      double double0 = MathUtils.indicator((-1812.7188315));
  }

  //Test case number: 157
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I4 Branch 112 IFEQ L877 - true in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.indicator(D)D: I14 Branch 113 IFLT L880 - false in context: org.apache.commons.math.util.MathUtils:indicator(D)D
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 877
   * Goal 6. org.apache.commons.math.util.MathUtils.indicator(D)D: Line 880
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 8. org.apache.commons.math.util.MathUtils.indicator(D)D
   * Goal 9. Weak Mutation 1728: org.apache.commons.math.util.MathUtils.indicator(D)D:877 - ReplaceComparisonOperator == -> !=
   * Goal 10. Weak Mutation 1741: org.apache.commons.math.util.MathUtils.indicator(D)D:880 - ReplaceComparisonOperator < -> <=
   * Goal 11. org.apache.commons.math.util.MathUtils.indicator(D)D:positive
   */

  @Test
  public void test157()  throws Throwable  {
      double double0 = MathUtils.indicator(0.0);
  }

  //Test case number: 158
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - false in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(B)B: Line 865
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 6. Weak Mutation 1719: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> <=
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(B)B:positive
   */

  @Test
  public void test158()  throws Throwable  {
      byte byte0 = MathUtils.indicator((byte)0);
  }

  //Test case number: 159
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - true
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.indicator(B)B: I3 Branch 111 IFLT L865 - true in context: org.apache.commons.math.util.MathUtils:indicator(B)B
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(B)B: Line 865
   * Goal 4. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 5. org.apache.commons.math.util.MathUtils.indicator(B)B
   * Goal 6. Weak Mutation 1717: org.apache.commons.math.util.MathUtils.indicator(B)B:865 - ReplaceComparisonOperator < -> -2
   * Goal 7. org.apache.commons.math.util.MathUtils.indicator(B)B:negative
   */

  @Test
  public void test159()  throws Throwable  {
      byte byte0 = MathUtils.indicator((byte) (-25));
  }

  //Test case number: 160
  /*
   * 107 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I29 Branch 129 IFGE L1055 - true
   * Goal 24. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I71 Branch 131 IFLE L1062 - false
   * Goal 25. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I79 Branch 132 IFGT L1064 - false
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 27. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 28. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I30 Branch 124 IFNE L991 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 792
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 793
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 795
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 799
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 800
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 802
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 803
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 804
   * Goal 40. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 806
   * Goal 41. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 813
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 819
   * Goal 43. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 820
   * Goal 44. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 823
   * Goal 45. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 824
   * Goal 46. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 826
   * Goal 47. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 829
   * Goal 48. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 832
   * Goal 49. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 833
   * Goal 50. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 987
   * Goal 51. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 990
   * Goal 52. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 991
   * Goal 53. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 996
   * Goal 54. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1049
   * Goal 55. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1050
   * Goal 56. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1052
   * Goal 57. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1054
   * Goal 58. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1055
   * Goal 59. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1062
   * Goal 60. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1064
   * Goal 61. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1065
   * Goal 62. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1089
   * Goal 63. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 64. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 65. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 66. Weak Mutation 1558: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> >
   * Goal 67. Weak Mutation 1615: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> -1
   * Goal 68. Weak Mutation 1629: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> ==
   * Goal 69. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 70. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 71. Weak Mutation 1647: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 72. Weak Mutation 1657: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 73. Weak Mutation 1658: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 74. Weak Mutation 1661: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 75. Weak Mutation 1662: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 76. Weak Mutation 1672: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator >= -> -1
   * Goal 77. Weak Mutation 1683: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> +
   * Goal 78. Weak Mutation 1684: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> %
   * Goal 79. Weak Mutation 1685: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> -
   * Goal 80. Weak Mutation 1686: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> *
   * Goal 81. Weak Mutation 1695: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> +
   * Goal 82. Weak Mutation 1696: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> %
   * Goal 83. Weak Mutation 1697: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> -
   * Goal 84. Weak Mutation 1698: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> *
   * Goal 85. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 86. Weak Mutation 1868: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> >=
   * Goal 87. Weak Mutation 1876: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator != -> >
   * Goal 88. Weak Mutation 1885: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> +
   * Goal 89. Weak Mutation 1886: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> %
   * Goal 90. Weak Mutation 1887: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> -
   * Goal 91. Weak Mutation 1888: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> *
   * Goal 92. Weak Mutation 1901: org.apache.commons.math.util.MathUtils.lcm(JJ)J:991 - ReplaceComparisonOperator != -> >
   * Goal 93. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 94. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 95. Weak Mutation 1980: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> -1
   * Goal 96. Weak Mutation 1988: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1055 - ReplaceComparisonOperator >= -> ==
   * Goal 97. Weak Mutation 2019: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1062 - ReplaceComparisonOperator <= -> -1
   * Goal 98. Weak Mutation 2029: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> +
   * Goal 99. Weak Mutation 2030: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> %
   * Goal 100. Weak Mutation 2031: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> -
   * Goal 101. Weak Mutation 2032: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceArithmeticOperator / -> *
   * Goal 102. Weak Mutation 2036: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1064 - ReplaceComparisonOperator > -> !=
   * Goal 103. Weak Mutation 2042: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> +
   * Goal 104. Weak Mutation 2043: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> %
   * Goal 105. Weak Mutation 2044: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> -
   * Goal 106. Weak Mutation 2045: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1065 - ReplaceArithmeticOperator * -> /
   * Goal 107. org.apache.commons.math.util.MathUtils.lcm(JJ)J:positive
   */

  @Test
  public void test160()  throws Throwable  {
      long long0 = MathUtils.lcm(204L, (-1982L));
  }

  //Test case number: 161
  /*
   * 88 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I58 Branch 101 IFLE L792 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I69 Branch 102 IFLE L795 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I86 Branch 103 IFNE L800 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I92 Branch 104 IFNE L800 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I95 Branch 105 IF_ICMPGE L800 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I116 Branch 106 IF_ICMPNE L806 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I141 Branch 107 IFNE L813 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I158 Branch 108 IFNE L819 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I171 Branch 109 IFLE L823 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I195 Branch 110 IFNE L832 - false
   * Goal 17. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 21. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 22. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false
   * Goal 23. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - true
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I5 Branch 122 IFEQ L987 - false in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.lcm(JJ)J: I9 Branch 123 IFNE L987 - true in context: org.apache.commons.math.util.MathUtils:lcm(JJ)J
   * Goal 26. lcm(JJ)J_java.lang.ArithmeticException_EXPLICIT
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 792
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 793
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 795
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 796
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 799
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 800
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 802
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 803
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 804
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 806
   * Goal 40. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 813
   * Goal 41. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 819
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 820
   * Goal 43. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 823
   * Goal 44. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 824
   * Goal 45. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 826
   * Goal 46. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 829
   * Goal 47. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 832
   * Goal 48. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 833
   * Goal 49. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 987
   * Goal 50. org.apache.commons.math.util.MathUtils.lcm(JJ)J: Line 990
   * Goal 51. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1049
   * Goal 52. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1050
   * Goal 53. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1052
   * Goal 54. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1054
   * Goal 55. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1074
   * Goal 56. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1079
   * Goal 57. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1082
   * Goal 58. org.apache.commons.math.util.MathUtils.lcm(JJ)J
   * Goal 59. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 60. Weak Mutation 1557: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> <
   * Goal 61. Weak Mutation 1615: org.apache.commons.math.util.MathUtils.gcd(JJ)J:792 - ReplaceComparisonOperator <= -> -1
   * Goal 62. Weak Mutation 1628: org.apache.commons.math.util.MathUtils.gcd(JJ)J:795 - ReplaceComparisonOperator <= -> -1
   * Goal 63. Weak Mutation 1643: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 64. Weak Mutation 1644: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 65. Weak Mutation 1647: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 66. Weak Mutation 1648: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> <
   * Goal 67. Weak Mutation 1657: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> |
   * Goal 68. Weak Mutation 1658: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceBitwiseOperator & -> ^
   * Goal 69. Weak Mutation 1661: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator != -> -1
   * Goal 70. Weak Mutation 1672: org.apache.commons.math.util.MathUtils.gcd(JJ)J:800 - ReplaceComparisonOperator >= -> -1
   * Goal 71. Weak Mutation 1683: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> +
   * Goal 72. Weak Mutation 1684: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> %
   * Goal 73. Weak Mutation 1685: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> -
   * Goal 74. Weak Mutation 1686: org.apache.commons.math.util.MathUtils.gcd(JJ)J:802 - ReplaceArithmeticOperator / -> *
   * Goal 75. Weak Mutation 1695: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> +
   * Goal 76. Weak Mutation 1696: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> %
   * Goal 77. Weak Mutation 1697: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> -
   * Goal 78. Weak Mutation 1698: org.apache.commons.math.util.MathUtils.gcd(JJ)J:803 - ReplaceArithmeticOperator / -> *
   * Goal 79. Weak Mutation 1709: org.apache.commons.math.util.MathUtils.gcd(JJ)J:806 - ReplaceComparisonOperator != -> >
   * Goal 80. Weak Mutation 1868: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator == -> >=
   * Goal 81. Weak Mutation 1875: org.apache.commons.math.util.MathUtils.lcm(JJ)J:987 - ReplaceComparisonOperator != -> <
   * Goal 82. Weak Mutation 1885: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> +
   * Goal 83. Weak Mutation 1886: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> %
   * Goal 84. Weak Mutation 1887: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> -
   * Goal 85. Weak Mutation 1888: org.apache.commons.math.util.MathUtils.lcm(JJ)J:990 - ReplaceArithmeticOperator / -> *
   * Goal 86. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 87. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 88. Weak Mutation 1981: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> ==
   */

  @Test
  public void test161()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.lcm(2819561105158720014L, (long) 898);
      } catch(ArithmeticException e) {
         //
         // overflow: multiply
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 162
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I17 Branch 98 IFNE L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 780
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 785
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 16. Weak Mutation 1548: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> >=
   * Goal 17. Weak Mutation 1556: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator != -> -1
   * Goal 18. Weak Mutation 1570: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator == -> <=
   * Goal 19. Weak Mutation 1582: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator != -> >
   * Goal 20. Weak Mutation 1605: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> %
   * Goal 21. Weak Mutation 1608: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> /
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(JJ)J:positive
   */

  @Test
  public void test162()  throws Throwable  {
      long long0 = MathUtils.gcd((long) (byte)88, 0L);
  }

  //Test case number: 163
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I13 Branch 97 IFEQ L779 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I27 Branch 100 IFNE L780 - true in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.gcd(JJ)J: I23 Branch 99 IFEQ L780 - false in context: org.apache.commons.math.util.MathUtils:gcd(JJ)J
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 777
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 778
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 779
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 780
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(JJ)J: Line 785
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(JJ)J
   * Goal 14. Weak Mutation 1547: org.apache.commons.math.util.MathUtils.gcd(JJ)J:779 - ReplaceComparisonOperator == -> -2
   * Goal 15. Weak Mutation 1570: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator == -> <=
   * Goal 16. Weak Mutation 1582: org.apache.commons.math.util.MathUtils.gcd(JJ)J:780 - ReplaceComparisonOperator != -> >
   * Goal 17. Weak Mutation 1605: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> %
   * Goal 18. Weak Mutation 1608: org.apache.commons.math.util.MathUtils.gcd(JJ)J:785 - ReplaceArithmeticOperator + -> /
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(JJ)J:zero
   */

  @Test
  public void test163()  throws Throwable  {
      long long0 = MathUtils.gcd(0L, 0L);
  }

  //Test case number: 164
  /*
   * 70 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: I81 Branch 91 IF_ICMPGE L711 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I81 Branch 91 IF_ICMPGE L711 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 26. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 688
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 689
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 690
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 703
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 704
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 706
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 707
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 710
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 711
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 713
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 714
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 715
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 717
   * Goal 40. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 724
   * Goal 41. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 730
   * Goal 42. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 734
   * Goal 43. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 737
   * Goal 44. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 740
   * Goal 45. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 743
   * Goal 46. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 744
   * Goal 47. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 48. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 49. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 50. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 51. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 52. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 53. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 54. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 55. Weak Mutation 1440: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 56. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 57. Weak Mutation 1451: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 58. Weak Mutation 1452: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 59. Weak Mutation 1453: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 60. Weak Mutation 1468: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator >= -> -1
   * Goal 61. Weak Mutation 1482: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> +
   * Goal 62. Weak Mutation 1483: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> %
   * Goal 63. Weak Mutation 1484: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> -
   * Goal 64. Weak Mutation 1485: org.apache.commons.math.util.MathUtils.gcd(II)I:713 - ReplaceArithmeticOperator / -> *
   * Goal 65. Weak Mutation 1497: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> +
   * Goal 66. Weak Mutation 1498: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> %
   * Goal 67. Weak Mutation 1499: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> -
   * Goal 68. Weak Mutation 1500: org.apache.commons.math.util.MathUtils.gcd(II)I:714 - ReplaceArithmeticOperator / -> *
   * Goal 69. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 70. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   */

  @Test
  public void test164()  throws Throwable  {
      int int0 = MathUtils.gcd(212, 212);
  }

  //Test case number: 165
  /*
   * 64 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 688
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 689
   * Goal 21. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 690
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 703
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 706
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 710
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 711
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 717
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 724
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 730
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 734
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 737
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 740
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 743
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 744
   * Goal 34. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 952
   * Goal 35. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 955
   * Goal 36. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 956
   * Goal 37. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 961
   * Goal 38. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1030
   * Goal 39. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1031
   * Goal 40. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1034
   * Goal 41. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 42. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 43. Weak Mutation 1331: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> <=
   * Goal 44. Weak Mutation 1340: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> >
   * Goal 45. Weak Mutation 1406: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> ==
   * Goal 46. Weak Mutation 1421: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> ==
   * Goal 47. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 48. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 49. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 50. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 51. Weak Mutation 1804: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> <=
   * Goal 52. Weak Mutation 1811: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator != -> >
   * Goal 53. Weak Mutation 1825: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> +
   * Goal 54. Weak Mutation 1826: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> %
   * Goal 55. Weak Mutation 1827: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> -
   * Goal 56. Weak Mutation 1828: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> *
   * Goal 57. Weak Mutation 1844: org.apache.commons.math.util.MathUtils.lcm(II)I:956 - ReplaceComparisonOperator != -> <
   * Goal 58. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 59. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 60. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 61. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 62. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 63. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 64. org.apache.commons.math.util.MathUtils.lcm(II)I:positive
   */

  @Test
  public void test165()  throws Throwable  {
      int int0 = MathUtils.lcm((-2895), (-2895));
  }

  //Test case number: 166
  /*
   * 73 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I13 Branch 125 IFLT L1031 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: I17 Branch 126 IFLE L1031 - true
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I3 Branch 119 IFEQ L952 - false in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I5 Branch 120 IFNE L952 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.lcm(II)I: I25 Branch 121 IF_ICMPNE L956 - true in context: org.apache.commons.math.util.MathUtils:lcm(II)I
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 688
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 689
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 690
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 703
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 706
   * Goal 28. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 707
   * Goal 29. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 710
   * Goal 30. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 711
   * Goal 31. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 717
   * Goal 32. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 724
   * Goal 33. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 730
   * Goal 34. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 731
   * Goal 35. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 734
   * Goal 36. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 735
   * Goal 37. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 737
   * Goal 38. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 740
   * Goal 39. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 743
   * Goal 40. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 744
   * Goal 41. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 952
   * Goal 42. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 955
   * Goal 43. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 956
   * Goal 44. org.apache.commons.math.util.MathUtils.lcm(II)I: Line 961
   * Goal 45. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1030
   * Goal 46. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1031
   * Goal 47. org.apache.commons.math.util.MathUtils.mulAndCheck(II)I: Line 1034
   * Goal 48. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 49. org.apache.commons.math.util.MathUtils.lcm(II)I
   * Goal 50. Weak Mutation 1331: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> <=
   * Goal 51. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 52. Weak Mutation 1406: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> ==
   * Goal 53. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 54. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 55. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 56. Weak Mutation 1440: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 57. Weak Mutation 1451: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 58. Weak Mutation 1452: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 59. Weak Mutation 1454: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 60. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 61. Weak Mutation 1804: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator == -> <=
   * Goal 62. Weak Mutation 1810: org.apache.commons.math.util.MathUtils.lcm(II)I:952 - ReplaceComparisonOperator != -> <
   * Goal 63. Weak Mutation 1825: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> +
   * Goal 64. Weak Mutation 1826: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> %
   * Goal 65. Weak Mutation 1827: org.apache.commons.math.util.MathUtils.lcm(II)I:955 - ReplaceArithmeticOperator / -> -
   * Goal 66. Weak Mutation 1844: org.apache.commons.math.util.MathUtils.lcm(II)I:956 - ReplaceComparisonOperator != -> <
   * Goal 67. Weak Mutation 1939: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> +
   * Goal 68. Weak Mutation 1940: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> %
   * Goal 69. Weak Mutation 1941: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> -
   * Goal 70. Weak Mutation 1942: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1030 - ReplaceArithmeticOperator * -> /
   * Goal 71. Weak Mutation 1950: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator < -> !=
   * Goal 72. Weak Mutation 1959: org.apache.commons.math.util.MathUtils.mulAndCheck(II)I:1031 - ReplaceComparisonOperator <= -> ==
   * Goal 73. org.apache.commons.math.util.MathUtils.lcm(II)I:positive
   */

  @Test
  public void test166()  throws Throwable  {
      int int0 = MathUtils.lcm((-2156), 2683);
  }

  //Test case number: 167
  /*
   * 21 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I21 Branch 86 IF_ICMPNE L691 - true in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.gcd(II)I: I18 Branch 85 IF_ICMPEQ L691 - false in context: org.apache.commons.math.util.MathUtils:gcd(II)I
   * Goal 7. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 688
   * Goal 8. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 689
   * Goal 9. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 690
   * Goal 10. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 691
   * Goal 11. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 696
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(II)I
   * Goal 14. Weak Mutation 1329: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> -2
   * Goal 15. Weak Mutation 1353: org.apache.commons.math.util.MathUtils.gcd(II)I:691 - ReplaceComparisonOperator == -> >=
   * Goal 16. Weak Mutation 1367: org.apache.commons.math.util.MathUtils.gcd(II)I:691 - ReplaceComparisonOperator != -> <
   * Goal 17. Weak Mutation 1395: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> %
   * Goal 18. Weak Mutation 1396: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> -
   * Goal 19. Weak Mutation 1397: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> *
   * Goal 20. Weak Mutation 1398: org.apache.commons.math.util.MathUtils.gcd(II)I:696 - ReplaceArithmeticOperator + -> /
   * Goal 21. org.apache.commons.math.util.MathUtils.gcd(II)I:positive
   */

  @Test
  public void test167()  throws Throwable  {
      int int0 = MathUtils.gcd(0, (-1844));
  }

  //Test case number: 168
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - false
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 7. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 585
   * Goal 8. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 590
   * Goal 9. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 594
   * Goal 10. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 643
   * Goal 11. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 648
   * Goal 12. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 649
   * Goal 13. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 14. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 15. Weak Mutation 1202: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> >
   * Goal 16. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> ==
   * Goal 17. Weak Mutation 1262: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> >
   * Goal 18. Weak Mutation 1274: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> -1
   * Goal 19. org.apache.commons.math.util.MathUtils.factorialLog(I)D:zero
   */

  @Test
  public void test168()  throws Throwable  {
      double double0 = MathUtils.factorialLog((byte)0);
  }

  //Test case number: 169
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - false in context: org.apache.commons.math.util.MathUtils:factorialLog(I)D
   * Goal 3. factorialLog(I)D_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 643
   * Goal 5. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 644
   * Goal 6. org.apache.commons.math.util.MathUtils.factorialLog(I)D
   * Goal 7. Weak Mutation 1260: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> -1
   */

  @Test
  public void test169()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.factorialLog((-2122));
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for n!, got n = -2,122
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 170
  /*
   * 32 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I3 Branch 80 IFGE L643 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I20 Branch 81 IF_ICMPGE L648 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.factorialLog(I)D: I39 Branch 82 IF_ICMPGT L652 - false
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 9. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 618
   * Goal 10. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 623
   * Goal 11. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 626
   * Goal 12. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 643
   * Goal 13. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 648
   * Goal 14. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 651
   * Goal 15. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 652
   * Goal 16. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 653
   * Goal 17. org.apache.commons.math.util.MathUtils.factorialLog(I)D: Line 655
   * Goal 18. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 19. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 20. Weak Mutation 1226: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:618 - ReplaceComparisonOperator >= -> ==
   * Goal 21. Weak Mutation 1241: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:623 - ReplaceComparisonOperator >= -> ==
   * Goal 22. Weak Mutation 1253: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:626 - ReplaceArithmeticOperator + -> %
   * Goal 23. Weak Mutation 1261: org.apache.commons.math.util.MathUtils.factorialLog(I)D:643 - ReplaceComparisonOperator >= -> ==
   * Goal 24. Weak Mutation 1276: org.apache.commons.math.util.MathUtils.factorialLog(I)D:648 - ReplaceComparisonOperator >= -> ==
   * Goal 25. Weak Mutation 1294: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> !=
   * Goal 26. Weak Mutation 1295: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> -2
   * Goal 27. Weak Mutation 1296: org.apache.commons.math.util.MathUtils.factorialLog(I)D:652 - ReplaceComparisonOperator > -> >=
   * Goal 28. Weak Mutation 1305: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> %
   * Goal 29. Weak Mutation 1306: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> -
   * Goal 30. Weak Mutation 1307: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> *
   * Goal 31. Weak Mutation 1308: org.apache.commons.math.util.MathUtils.factorialLog(I)D:653 - ReplaceArithmeticOperator + -> /
   * Goal 32. org.apache.commons.math.util.MathUtils.factorialDouble(I)D:positive
   */

  @Test
  public void test170()  throws Throwable  {
      double double0 = MathUtils.factorialDouble(313);
  }

  //Test case number: 171
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - false in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 3. factorialDouble(I)D_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 618
   * Goal 5. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 619
   * Goal 6. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 7. Weak Mutation 1225: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:618 - ReplaceComparisonOperator >= -> -1
   */

  @Test
  public void test171()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.factorialDouble((-2462));
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for n!, got n = -2,462
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 172
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - false
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I3 Branch 78 IFGE L618 - true in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.factorialDouble(I)D: I20 Branch 79 IF_ICMPGE L623 - false in context: org.apache.commons.math.util.MathUtils:factorialDouble(I)D
   * Goal 7. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 585
   * Goal 8. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 590
   * Goal 9. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 594
   * Goal 10. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 618
   * Goal 11. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 623
   * Goal 12. org.apache.commons.math.util.MathUtils.factorialDouble(I)D: Line 624
   * Goal 13. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 14. org.apache.commons.math.util.MathUtils.factorialDouble(I)D
   * Goal 15. Weak Mutation 1202: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> >
   * Goal 16. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> ==
   * Goal 17. Weak Mutation 1227: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:618 - ReplaceComparisonOperator >= -> >
   * Goal 18. Weak Mutation 1239: org.apache.commons.math.util.MathUtils.factorialDouble(I)D:623 - ReplaceComparisonOperator >= -> -1
   * Goal 19. org.apache.commons.math.util.MathUtils.factorialDouble(I)D:positive
   */

  @Test
  public void test172()  throws Throwable  {
      double double0 = MathUtils.factorialDouble(0);
  }

  //Test case number: 173
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - false in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 5. factorial(I)J_java.lang.ArithmeticException_EXPLICIT
   * Goal 6. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 585
   * Goal 7. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 590
   * Goal 8. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 591
   * Goal 9. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 10. Weak Mutation 1201: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> ==
   * Goal 11. Weak Mutation 1214: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> -1
   * Goal 12. Weak Mutation 1218: org.apache.commons.math.util.MathUtils.factorial(I)J:591 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test173()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.factorial(24);
      } catch(ArithmeticException e) {
         //
         // factorial value is too large to fit in a long
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 174
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - false in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 3. factorial(I)J_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 585
   * Goal 5. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 586
   * Goal 6. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 7. Weak Mutation 1200: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> -1
   */

  @Test
  public void test174()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.factorial((-1895));
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for n!, got n = -1,895
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 175
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I3 Branch 76 IFGE L585 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.factorial(I)J: I20 Branch 77 IF_ICMPLE L590 - true in context: org.apache.commons.math.util.MathUtils:factorial(I)J
   * Goal 5. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 585
   * Goal 6. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 590
   * Goal 7. org.apache.commons.math.util.MathUtils.factorial(I)J: Line 594
   * Goal 8. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 9. org.apache.commons.math.util.MathUtils.factorial(I)J
   * Goal 10. Weak Mutation 1201: org.apache.commons.math.util.MathUtils.factorial(I)J:585 - ReplaceComparisonOperator >= -> ==
   * Goal 11. Weak Mutation 1216: org.apache.commons.math.util.MathUtils.factorial(I)J:590 - ReplaceComparisonOperator <= -> ==
   * Goal 12. org.apache.commons.math.util.MathUtils.factorial(I)J:positive
   */

  @Test
  public void test175()  throws Throwable  {
      long long0 = MathUtils.factorial(8);
  }

  //Test case number: 176
  /*
   * 15 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - false
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 7. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 548
   * Goal 8. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 551
   * Goal 9. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 552
   * Goal 10. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 11. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 12. Weak Mutation 1154: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator = null -> != null
   * Goal 13. Weak Mutation 1156: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator != null -> = null
   * Goal 14. Weak Mutation 1175: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:551 - ReplaceComparisonOperator == -> >=
   * Goal 15. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:false
   */

  @Test
  public void test176()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = new double[4];
      boolean boolean0 = MathUtils.equalsIncludingNaN(doubleArray1, doubleArray0);
  }

  //Test case number: 177
  /*
   * 15 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - false
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 7. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 523
   * Goal 8. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 526
   * Goal 9. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 527
   * Goal 10. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 11. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 12. Weak Mutation 1110: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator = null -> != null
   * Goal 13. Weak Mutation 1112: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator != null -> = null
   * Goal 14. Weak Mutation 1131: org.apache.commons.math.util.MathUtils.equals([D[D)Z:526 - ReplaceComparisonOperator == -> >=
   * Goal 15. org.apache.commons.math.util.MathUtils.equals([D[D)Z:false
   */

  @Test
  public void test177()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      double[] doubleArray1 = new double[1];
      boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray1);
  }

  //Test case number: 178
  /*
   * 48 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I13 Branch 59 IFEQ L509 - false
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDI)Z
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I13 Branch 59 IFEQ L509 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDI)Z
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 486
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 489
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 23. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: Line 509
   * Goal 24. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z
   * Goal 25. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z
   * Goal 26. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 27. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 28. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 29. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 30. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 31. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 32. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 33. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 34. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 35. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 36. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 37. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 38. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 39. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 40. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 41. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 42. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 43. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 44. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 45. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 46. Weak Mutation 1086: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:509 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 1106: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:509 - ReplaceComparisonOperator == -> !=
   * Goal 48. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:true
   */

  @Test
  public void test178()  throws Throwable  {
      boolean boolean0 = MathUtils.equalsIncludingNaN((-2072.56), (-2072.56), 2);
  }

  //Test case number: 179
  /*
   * 40 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I13 Branch 59 IFEQ L509 - true
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I13 Branch 59 IFEQ L509 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDI)Z
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDI)Z
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 489
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 20. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: Line 509
   * Goal 21. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z
   * Goal 22. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z
   * Goal 23. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 24. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 25. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 26. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 27. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 28. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 29. Weak Mutation 1046: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> %
   * Goal 30. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 31. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 32. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 33. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 34. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 35. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 36. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 37. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 1086: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:509 - ReplaceComparisonOperator == -> !=
   * Goal 39. Weak Mutation 1106: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:509 - ReplaceComparisonOperator == -> !=
   * Goal 40. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:false
   */

  @Test
  public void test179()  throws Throwable  {
      boolean boolean0 = MathUtils.equalsIncludingNaN(0.0, (-4070.0), 1621);
  }

  //Test case number: 180
  /*
   * 36 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - true
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - true in context: org.apache.commons.math.util.MathUtils:equals(DDI)Z
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 25. org.apache.commons.math.util.MathUtils.equals(DDI)Z
   * Goal 26. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 27. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 28. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 29. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 30. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 31. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 32. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 33. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 34. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 35. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 36. org.apache.commons.math.util.MathUtils.equals(DDI)Z:false
   */

  @Test
  public void test180()  throws Throwable  {
      boolean boolean0 = MathUtils.equals((double) Float.NaN, (double) Float.NaN, 1525);
  }

  //Test case number: 181
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDI)Z
   * Goal 6. equalsIncludingNaN(DDI)Z_java.lang.AssertionError_EXPLICIT
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 8. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: Line 509
   * Goal 9. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z
   * Goal 10. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 11. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 12. Weak Mutation 1000: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> !=
   * Goal 13. Weak Mutation 1086: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:509 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test181()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.equalsIncludingNaN((-979.2352), 1096.5001441521, 960187121);
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 182
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: I4 Branch 57 IFEQ L509 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDI)Z
   * Goal 5. equalsIncludingNaN(DDI)Z_java.lang.AssertionError_EXPLICIT
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 7. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z: Line 509
   * Goal 8. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z
   * Goal 9. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 10. Weak Mutation 990: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> ==
   * Goal 11. Weak Mutation 1086: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDI)Z:509 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test182()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.equalsIncludingNaN((double) (short) (-1917), 1.304E19, (int) (short) (-1));
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 183
  /*
   * 42 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I12 Branch 47 IFGT L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 21. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 22. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: Line 456
   * Goal 23. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 24. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 25. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 26. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 28. Weak Mutation 970: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> %
   * Goal 29. Weak Mutation 972: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceArithmeticOperator - -> /
   * Goal 30. Weak Mutation 981: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator > -> >=
   * Goal 31. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 32. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 33. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 34. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 35. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 36. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 37. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 38. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 39. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 40. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 41. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 42. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:true
   */

  @Test
  public void test183()  throws Throwable  {
      boolean boolean0 = MathUtils.equalsIncludingNaN(0.0, (double) 1516305973, (double) 1516305973);
  }

  //Test case number: 184
  /*
   * 40 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: I5 Branch 46 IFNE L456 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DDD)Z
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 21. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 22. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z: Line 456
   * Goal 23. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 24. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z
   * Goal 25. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 26. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 956: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:456 - ReplaceComparisonOperator != -> ==
   * Goal 28. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 29. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 30. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 31. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 32. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 33. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 34. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 35. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 36. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 37. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 39. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 40. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DDD)Z:true
   */

  @Test
  public void test184()  throws Throwable  {
      boolean boolean0 = MathUtils.equalsIncludingNaN(529.199884481, 529.199884481, 529.199884481);
  }

  //Test case number: 185
  /*
   * 40 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - false in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 12. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 389
   * Goal 13. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 390
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 442
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 22. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 23. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 24. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 25. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 26. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 27. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 28. Weak Mutation 940: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> !=
   * Goal 29. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 30. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 31. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 32. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 33. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 34. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 35. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 36. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 37. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 38. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 39. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 40. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:zero
   */

  @Test
  public void test185()  throws Throwable  {
      int int0 = MathUtils.compareTo(0.0, 0.11764700710773468, 853.343602879);
  }

  //Test case number: 186
  /*
   * 61 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I7 Branch 42 IFNE L429 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I70 Branch 55 IFNE L494 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I73 Branch 56 IFNE L494 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true
   * Goal 18. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false
   * Goal 19. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I5 Branch 69 IFNONNULL L548 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I3 Branch 68 IFNULL L548 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I36 Branch 73 IF_ICMPEQ L551 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I49 Branch 74 IF_ICMPGE L554 - false in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 25. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: I59 Branch 75 IFNE L555 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN([D[D)Z
   * Goal 26. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 27. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 28. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 29. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 30. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 31. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 32. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 33. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 34. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 548
   * Goal 35. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 551
   * Goal 36. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 554
   * Goal 37. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 555
   * Goal 38. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z: Line 559
   * Goal 39. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 40. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z
   * Goal 41. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 42. Weak Mutation 888: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator != -> ==
   * Goal 43. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 44. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 45. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 46. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 47. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 48. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 49. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 50. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 51. Weak Mutation 1061: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> !=
   * Goal 52. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 53. Weak Mutation 1072: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 54. Weak Mutation 1078: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator != -> ==
   * Goal 55. Weak Mutation 1154: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator = null -> != null
   * Goal 56. Weak Mutation 1156: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:548 - ReplaceComparisonOperator != null -> = null
   * Goal 57. Weak Mutation 1174: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:551 - ReplaceComparisonOperator == -> -2
   * Goal 58. Weak Mutation 1183: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> -1
   * Goal 59. Weak Mutation 1184: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:554 - ReplaceComparisonOperator >= -> >
   * Goal 60. Weak Mutation 1194: org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:555 - ReplaceComparisonOperator != -> ==
   * Goal 61. org.apache.commons.math.util.MathUtils.equalsIncludingNaN([D[D)Z:true
   */

  @Test
  public void test186()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[1] = Double.NaN;
      boolean boolean0 = MathUtils.equalsIncludingNaN(doubleArray0, doubleArray0);
  }

  //Test case number: 187
  /*
   * 35 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I4 Branch 41 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: I13 Branch 43 IFEQ L429 - true in context: org.apache.commons.math.util.MathUtils:equalsIncludingNaN(DD)Z
   * Goal 12. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 14. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 16. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 19. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z: Line 429
   * Goal 20. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 21. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z
   * Goal 22. Weak Mutation 882: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 23. Weak Mutation 900: org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:429 - ReplaceComparisonOperator == -> !=
   * Goal 24. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 25. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 26. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 27. Weak Mutation 1019: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 1036: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> ==
   * Goal 29. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 30. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 31. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 32. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 33. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 34. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 35. org.apache.commons.math.util.MathUtils.equalsIncludingNaN(DD)Z:false
   */

  @Test
  public void test187()  throws Throwable  {
      boolean boolean0 = MathUtils.equalsIncludingNaN(0.0, 1454.4604243263);
  }

  //Test case number: 188
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DD)Z: I7 Branch 39 IFNE L417 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - false in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - true in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.equals(DD)Z: I7 Branch 39 IFNE L417 - false in context: org.apache.commons.math.util.MathUtils:equals(DD)Z
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 417
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DD)Z
   * Goal 10. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 11. Weak Mutation 861: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> ==
   * Goal 12. Weak Mutation 873: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> <
   * Goal 13. org.apache.commons.math.util.MathUtils.equals(DD)Z:false
   */

  @Test
  public void test188()  throws Throwable  {
      boolean boolean0 = MathUtils.equals(Double.NaN, 0.0);
  }

  //Test case number: 189
  /*
   * 31 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.equals(DD)Z: I4 Branch 38 IFEQ L417 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.equals(DD)Z: I12 Branch 40 IFNE L417 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I3 Branch 60 IFNULL L523 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I5 Branch 61 IFNONNULL L523 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 11. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I36 Branch 65 IF_ICMPEQ L526 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - false in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I49 Branch 66 IF_ICMPGE L529 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.equals([D[D)Z: I59 Branch 67 IFNE L530 - true in context: org.apache.commons.math.util.MathUtils:equals([D[D)Z
   * Goal 15. org.apache.commons.math.util.MathUtils.equals(DD)Z: Line 417
   * Goal 16. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 523
   * Goal 17. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 526
   * Goal 18. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 529
   * Goal 19. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 530
   * Goal 20. org.apache.commons.math.util.MathUtils.equals([D[D)Z: Line 534
   * Goal 21. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 22. org.apache.commons.math.util.MathUtils.equals([D[D)Z
   * Goal 23. Weak Mutation 855: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator == -> !=
   * Goal 24. Weak Mutation 872: org.apache.commons.math.util.MathUtils.equals(DD)Z:417 - ReplaceComparisonOperator != -> -1
   * Goal 25. Weak Mutation 1110: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator = null -> != null
   * Goal 26. Weak Mutation 1112: org.apache.commons.math.util.MathUtils.equals([D[D)Z:523 - ReplaceComparisonOperator != null -> = null
   * Goal 27. Weak Mutation 1130: org.apache.commons.math.util.MathUtils.equals([D[D)Z:526 - ReplaceComparisonOperator == -> -2
   * Goal 28. Weak Mutation 1139: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 1140: org.apache.commons.math.util.MathUtils.equals([D[D)Z:529 - ReplaceComparisonOperator >= -> >
   * Goal 30. Weak Mutation 1150: org.apache.commons.math.util.MathUtils.equals([D[D)Z:530 - ReplaceComparisonOperator != -> ==
   * Goal 31. org.apache.commons.math.util.MathUtils.equals([D[D)Z:true
   */

  @Test
  public void test189()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);
  }

  //Test case number: 190
  /*
   * 49 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - true
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - false in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 14. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 389
   * Goal 15. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 391
   * Goal 16. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 392
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 442
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 486
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 25. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 26. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 27. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 28. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 29. Weak Mutation 823: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:391 - ReplaceComparisonOperator >= -> -1
   * Goal 30. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 31. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 32. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 33. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 34. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 35. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 36. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 37. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 38. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 39. Weak Mutation 1017: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> -1
   * Goal 40. Weak Mutation 1027: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> +
   * Goal 41. Weak Mutation 1028: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> %
   * Goal 42. Weak Mutation 1029: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> *
   * Goal 43. Weak Mutation 1030: org.apache.commons.math.util.MathUtils.equals(DDI)Z:486 - ReplaceArithmeticOperator - -> /
   * Goal 44. Weak Mutation 1037: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> >
   * Goal 45. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 46. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 47. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 48. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 49. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:negative
   */

  @Test
  public void test190()  throws Throwable  {
      int int0 = MathUtils.compareTo((-3452.390798448008), 0L, 0L);
  }

  //Test case number: 191
  /*
   * 50 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I6 Branch 44 IFNE L442 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.equals(DDD)Z: I13 Branch 45 IFGT L442 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I3 Branch 48 IFNE L479 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I5 Branch 49 IFLE L479 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I8 Branch 50 IF_ICMPLT L479 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I29 Branch 51 IFGE L485 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I41 Branch 52 IFGE L488 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I57 Branch 53 IFGT L492 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.equals(DDI)Z: I67 Branch 54 IFEQ L494 - true
   * Goal 12. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I6 Branch 36 IFEQ L389 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.compareTo(DDD)I: I16 Branch 37 IFGE L391 - true in context: org.apache.commons.math.util.MathUtils:compareTo(DDD)I
   * Goal 14. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 389
   * Goal 15. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 391
   * Goal 16. org.apache.commons.math.util.MathUtils.compareTo(DDD)I: Line 394
   * Goal 17. org.apache.commons.math.util.MathUtils.equals(DDD)Z: Line 442
   * Goal 18. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 479
   * Goal 19. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 481
   * Goal 20. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 482
   * Goal 21. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 485
   * Goal 22. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 488
   * Goal 23. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 489
   * Goal 24. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 492
   * Goal 25. org.apache.commons.math.util.MathUtils.equals(DDI)Z: Line 494
   * Goal 26. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 27. org.apache.commons.math.util.MathUtils.compareTo(DDD)I
   * Goal 28. Weak Mutation 809: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:389 - ReplaceComparisonOperator == -> !=
   * Goal 29. Weak Mutation 824: org.apache.commons.math.util.MathUtils.compareTo(DDD)I:391 - ReplaceComparisonOperator >= -> ==
   * Goal 30. Weak Mutation 916: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator != -> ==
   * Goal 31. Weak Mutation 929: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> +
   * Goal 32. Weak Mutation 930: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> %
   * Goal 33. Weak Mutation 931: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> *
   * Goal 34. Weak Mutation 932: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceArithmeticOperator - -> /
   * Goal 35. Weak Mutation 939: org.apache.commons.math.util.MathUtils.equals(DDD)Z:442 - ReplaceComparisonOperator > -> -2
   * Goal 36. Weak Mutation 985: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator != -> ==
   * Goal 37. Weak Mutation 989: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator <= -> -1
   * Goal 38. Weak Mutation 1001: org.apache.commons.math.util.MathUtils.equals(DDI)Z:479 - ReplaceComparisonOperator < -> -2
   * Goal 39. Weak Mutation 1018: org.apache.commons.math.util.MathUtils.equals(DDI)Z:485 - ReplaceComparisonOperator >= -> ==
   * Goal 40. Weak Mutation 1035: org.apache.commons.math.util.MathUtils.equals(DDI)Z:488 - ReplaceComparisonOperator >= -> -1
   * Goal 41. Weak Mutation 1045: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> +
   * Goal 42. Weak Mutation 1047: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> *
   * Goal 43. Weak Mutation 1048: org.apache.commons.math.util.MathUtils.equals(DDI)Z:489 - ReplaceArithmeticOperator - -> /
   * Goal 44. Weak Mutation 1053: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> +
   * Goal 45. Weak Mutation 1054: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> %
   * Goal 46. Weak Mutation 1055: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> *
   * Goal 47. Weak Mutation 1056: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceArithmeticOperator - -> /
   * Goal 48. Weak Mutation 1060: org.apache.commons.math.util.MathUtils.equals(DDI)Z:492 - ReplaceComparisonOperator > -> -2
   * Goal 49. Weak Mutation 1066: org.apache.commons.math.util.MathUtils.equals(DDI)Z:494 - ReplaceComparisonOperator == -> !=
   * Goal 50. org.apache.commons.math.util.MathUtils.compareTo(DDD)I:positive
   */

  @Test
  public void test191()  throws Throwable  {
      int int0 = MathUtils.compareTo(3062.0719397, (-1.0), 3062.0719397);
  }

  //Test case number: 192
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - false
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - false in context: 
   * Goal 5. binomialCoefficientDouble(II)D_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 271
   * Goal 7. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 8. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 9. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 372
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 11. Weak Mutation 768: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> >
   * Goal 12. Weak Mutation 784: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> -1
   */

  @Test
  public void test192()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficientDouble((-2146), (-2146));
      } catch(IllegalArgumentException e) {
         //
         // must have n >= 0 for binomial coefficient (n,k), got n = -2,146
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 193
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - false
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - false in context: 
   * Goal 3. binomialCoefficient(II)J_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 5. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 6. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 367
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 8. Weak Mutation 767: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> -1
   */

  @Test
  public void test193()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficient(0, (byte)8);
      } catch(IllegalArgumentException e) {
         //
         // must have n >= k for binomial coefficient (n,k), got n = 0, k = 8
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 194
  /*
   * 18 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 312
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 313
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 314
   * Goal 10. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 11. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 12. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 376
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 15. Weak Mutation 569: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator == -> -2
   * Goal 16. Weak Mutation 768: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> >
   * Goal 17. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 18. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:zero
   */

  @Test
  public void test194()  throws Throwable  {
      double double0 = MathUtils.binomialCoefficientLog(1, 1);
  }

  //Test case number: 195
  /*
   * 94 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I20 Branch 20 IF_ICMPEQ L275 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I25 Branch 21 IF_ICMPNE L275 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I37 Branch 22 IF_ICMPLE L278 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I50 Branch 23 IF_ICMPGE L281 - true
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 24 IF_ICMPGT L286 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I69 Branch 24 IF_ICMPGT L286 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I49 Branch 30 IF_ICMPGE L332 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 16. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I49 Branch 30 IF_ICMPGE L332 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 25. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 271
   * Goal 26. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 272
   * Goal 27. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 275
   * Goal 28. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 278
   * Goal 29. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 281
   * Goal 30. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 285
   * Goal 31. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 286
   * Goal 32. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 287
   * Goal 33. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 290
   * Goal 34. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 312
   * Goal 35. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 313
   * Goal 36. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 316
   * Goal 37. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 324
   * Goal 38. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 332
   * Goal 39. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 333
   * Goal 40. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 41. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 42. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 376
   * Goal 43. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 44. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 45. Weak Mutation 388: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> >=
   * Goal 46. Weak Mutation 395: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator != -> <
   * Goal 47. Weak Mutation 405: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator == -> !=
   * Goal 48. Weak Mutation 415: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> +
   * Goal 49. Weak Mutation 416: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> %
   * Goal 50. Weak Mutation 417: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> *
   * Goal 51. Weak Mutation 418: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceArithmeticOperator - -> /
   * Goal 52. Weak Mutation 421: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator != -> >
   * Goal 53. Weak Mutation 438: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> +
   * Goal 54. Weak Mutation 439: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> %
   * Goal 55. Weak Mutation 440: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> -
   * Goal 56. Weak Mutation 441: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceArithmeticOperator / -> *
   * Goal 57. Weak Mutation 444: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:278 - ReplaceComparisonOperator <= -> ==
   * Goal 58. Weak Mutation 472: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:281 - ReplaceComparisonOperator >= -> ==
   * Goal 59. Weak Mutation 495: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:286 - ReplaceComparisonOperator > -> !=
   * Goal 60. Weak Mutation 496: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:286 - ReplaceComparisonOperator > -> -2
   * Goal 61. Weak Mutation 497: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:286 - ReplaceComparisonOperator > -> >=
   * Goal 62. Weak Mutation 512: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> +
   * Goal 63. Weak Mutation 513: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> %
   * Goal 64. Weak Mutation 514: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> *
   * Goal 65. Weak Mutation 515: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator - -> /
   * Goal 66. Weak Mutation 521: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> %
   * Goal 67. Weak Mutation 522: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> -
   * Goal 68. Weak Mutation 523: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> *
   * Goal 69. Weak Mutation 524: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator + -> /
   * Goal 70. Weak Mutation 530: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> +
   * Goal 71. Weak Mutation 531: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> %
   * Goal 72. Weak Mutation 532: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> -
   * Goal 73. Weak Mutation 533: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator / -> *
   * Goal 74. Weak Mutation 534: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> +
   * Goal 75. Weak Mutation 535: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> %
   * Goal 76. Weak Mutation 536: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> -
   * Goal 77. Weak Mutation 537: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:287 - ReplaceArithmeticOperator * -> /
   * Goal 78. Weak Mutation 549: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> %
   * Goal 79. Weak Mutation 550: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> -
   * Goal 80. Weak Mutation 551: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> *
   * Goal 81. Weak Mutation 552: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:290 - ReplaceArithmeticOperator + -> /
   * Goal 82. Weak Mutation 570: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator == -> >=
   * Goal 83. Weak Mutation 577: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator != -> <
   * Goal 84. Weak Mutation 586: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator == -> !=
   * Goal 85. Weak Mutation 596: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> +
   * Goal 86. Weak Mutation 597: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> %
   * Goal 87. Weak Mutation 598: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> *
   * Goal 88. Weak Mutation 599: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> /
   * Goal 89. Weak Mutation 602: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator != -> >
   * Goal 90. Weak Mutation 618: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:324 - ReplaceComparisonOperator >= -> ==
   * Goal 91. Weak Mutation 636: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:332 - ReplaceComparisonOperator >= -> -1
   * Goal 92. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 93. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 94. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:positive
   */

  @Test
  public void test195()  throws Throwable  {
      double double0 = MathUtils.binomialCoefficientLog(254, 4);
  }

  //Test case number: 196
  /*
   * 21 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 271
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 272
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 273
   * Goal 12. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 13. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 14. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 376
   * Goal 15. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 16. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 17. Weak Mutation 388: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> >=
   * Goal 18. Weak Mutation 394: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator != -> -1
   * Goal 19. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 20. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 21. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   */

  @Test
  public void test196()  throws Throwable  {
      double double0 = MathUtils.binomialCoefficientDouble(1410, 0);
  }

  //Test case number: 197
  /*
   * 25 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I20 Branch 20 IF_ICMPEQ L275 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I11 Branch 19 IFNE L272 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I20 Branch 20 IF_ICMPEQ L275 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 271
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 272
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 275
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 276
   * Goal 15. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 16. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 17. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 376
   * Goal 18. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 19. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 20. Weak Mutation 388: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> >=
   * Goal 21. Weak Mutation 395: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator != -> <
   * Goal 22. Weak Mutation 405: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:275 - ReplaceComparisonOperator == -> !=
   * Goal 23. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 24. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 25. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   */

  @Test
  public void test197()  throws Throwable  {
      double double0 = MathUtils.binomialCoefficientDouble(151, 1);
  }

  //Test case number: 198
  /*
   * 18 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: I9 Branch 18 IF_ICMPEQ L272 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 271
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 272
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D: Line 273
   * Goal 10. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 11. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 12. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 376
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D
   * Goal 15. Weak Mutation 387: org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:272 - ReplaceComparisonOperator == -> -2
   * Goal 16. Weak Mutation 768: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> >
   * Goal 17. Weak Mutation 786: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> >
   * Goal 18. org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(II)D:positive
   */

  @Test
  public void test198()  throws Throwable  {
      double double0 = MathUtils.binomialCoefficientDouble(0, 0);
  }

  //Test case number: 199
  /*
   * 89 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I70 Branch 14 IF_ICMPGT L215 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I70 Branch 14 IF_ICMPGT L215 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - false
   * Goal 14. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 15. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I9 Branch 25 IF_ICMPEQ L313 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I11 Branch 26 IFNE L313 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I20 Branch 27 IF_ICMPEQ L316 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I25 Branch 28 IF_ICMPNE L316 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: I36 Branch 29 IF_ICMPGE L324 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 23. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 24. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 196
   * Goal 25. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 199
   * Goal 26. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 203
   * Goal 27. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 211
   * Goal 28. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 212
   * Goal 29. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 214
   * Goal 30. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 215
   * Goal 31. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 216
   * Goal 32. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 217
   * Goal 33. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 219
   * Goal 34. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 245
   * Goal 35. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 312
   * Goal 36. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 313
   * Goal 37. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 316
   * Goal 38. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 324
   * Goal 39. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D: Line 325
   * Goal 40. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 41. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 42. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 376
   * Goal 43. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 44. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D
   * Goal 45. Weak Mutation 166: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> >=
   * Goal 46. Weak Mutation 173: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator != -> <
   * Goal 47. Weak Mutation 183: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator == -> !=
   * Goal 48. Weak Mutation 193: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> +
   * Goal 49. Weak Mutation 194: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> %
   * Goal 50. Weak Mutation 195: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> *
   * Goal 51. Weak Mutation 196: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> /
   * Goal 52. Weak Mutation 199: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator != -> >
   * Goal 53. Weak Mutation 216: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> +
   * Goal 54. Weak Mutation 217: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> %
   * Goal 55. Weak Mutation 218: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> -
   * Goal 56. Weak Mutation 219: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> *
   * Goal 57. Weak Mutation 222: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceComparisonOperator <= -> ==
   * Goal 58. Weak Mutation 251: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:212 - ReplaceComparisonOperator > -> !=
   * Goal 59. Weak Mutation 262: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> +
   * Goal 60. Weak Mutation 263: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> %
   * Goal 61. Weak Mutation 264: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> *
   * Goal 62. Weak Mutation 265: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator - -> /
   * Goal 63. Weak Mutation 267: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> %
   * Goal 64. Weak Mutation 268: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> -
   * Goal 65. Weak Mutation 269: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> *
   * Goal 66. Weak Mutation 270: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:214 - ReplaceArithmeticOperator + -> /
   * Goal 67. Weak Mutation 284: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:215 - ReplaceComparisonOperator > -> !=
   * Goal 68. Weak Mutation 285: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:215 - ReplaceComparisonOperator > -> -2
   * Goal 69. Weak Mutation 286: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:215 - ReplaceComparisonOperator > -> >=
   * Goal 70. Weak Mutation 294: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:216 - ReplaceArithmeticOperator * -> +
   * Goal 71. Weak Mutation 295: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:216 - ReplaceArithmeticOperator * -> %
   * Goal 72. Weak Mutation 296: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:216 - ReplaceArithmeticOperator * -> -
   * Goal 73. Weak Mutation 297: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:216 - ReplaceArithmeticOperator * -> /
   * Goal 74. Weak Mutation 304: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:216 - ReplaceArithmeticOperator / -> +
   * Goal 75. Weak Mutation 305: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:216 - ReplaceArithmeticOperator / -> %
   * Goal 76. Weak Mutation 306: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:216 - ReplaceArithmeticOperator / -> -
   * Goal 77. Weak Mutation 307: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:216 - ReplaceArithmeticOperator / -> *
   * Goal 78. Weak Mutation 570: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator == -> >=
   * Goal 79. Weak Mutation 577: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:313 - ReplaceComparisonOperator != -> <
   * Goal 80. Weak Mutation 586: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator == -> !=
   * Goal 81. Weak Mutation 596: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> +
   * Goal 82. Weak Mutation 597: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> %
   * Goal 83. Weak Mutation 598: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> *
   * Goal 84. Weak Mutation 599: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceArithmeticOperator - -> /
   * Goal 85. Weak Mutation 602: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:316 - ReplaceComparisonOperator != -> >
   * Goal 86. Weak Mutation 616: org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:324 - ReplaceComparisonOperator >= -> -1
   * Goal 87. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 88. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 89. org.apache.commons.math.util.MathUtils.binomialCoefficientLog(II)D:positive
   */

  @Test
  public void test199()  throws Throwable  {
      double double0 = MathUtils.binomialCoefficientLog(59, 17);
  }

  //Test case number: 200
  /*
   * 25 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 7. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 8. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 9. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 10. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 11. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 12. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 196
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 199
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 200
   * Goal 15. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 16. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 17. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 376
   * Goal 18. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 19. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 20. Weak Mutation 166: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> >=
   * Goal 21. Weak Mutation 173: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator != -> <
   * Goal 22. Weak Mutation 183: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator == -> !=
   * Goal 23. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 24. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 25. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:positive
   */

  @Test
  public void test200()  throws Throwable  {
      long long0 = MathUtils.binomialCoefficient(102, (byte)1);
  }

  //Test case number: 201
  /*
   * 121 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - true
   * Goal 6. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I54 Branch 13 IF_ICMPGT L212 - true
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I94 Branch 15 IF_ICMPGT L219 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I157 Branch 17 IF_ICMPGT L239 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 11. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 12. org.apache.commons.math.util.MathUtils.gcd(II)I: I11 Branch 83 IFEQ L690 - false
   * Goal 13. org.apache.commons.math.util.MathUtils.gcd(II)I: I13 Branch 84 IFNE L690 - true
   * Goal 14. org.apache.commons.math.util.MathUtils.gcd(II)I: I50 Branch 87 IFLE L703 - false
   * Goal 15. org.apache.commons.math.util.MathUtils.gcd(II)I: I59 Branch 88 IFLE L706 - false
   * Goal 16. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - true
   * Goal 17. org.apache.commons.math.util.MathUtils.gcd(II)I: I74 Branch 89 IFNE L711 - false
   * Goal 18. org.apache.commons.math.util.MathUtils.gcd(II)I: I78 Branch 90 IFNE L711 - true
   * Goal 19. org.apache.commons.math.util.MathUtils.gcd(II)I: I102 Branch 92 IF_ICMPNE L717 - true
   * Goal 20. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - true
   * Goal 21. org.apache.commons.math.util.MathUtils.gcd(II)I: I126 Branch 93 IF_ICMPNE L724 - false
   * Goal 22. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - true
   * Goal 23. org.apache.commons.math.util.MathUtils.gcd(II)I: I141 Branch 94 IFNE L730 - false
   * Goal 24. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - true
   * Goal 25. org.apache.commons.math.util.MathUtils.gcd(II)I: I152 Branch 95 IFLE L734 - false
   * Goal 26. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - true
   * Goal 27. org.apache.commons.math.util.MathUtils.gcd(II)I: I174 Branch 96 IFNE L743 - false
   * Goal 28. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - true
   * Goal 29. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I9 Branch 127 IFLE L1050 - false
   * Goal 30. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I23 Branch 128 IFGE L1054 - true
   * Goal 31. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I119 Branch 133 IFLE L1074 - false
   * Goal 32. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - true
   * Goal 33. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: I127 Branch 134 IFGT L1079 - false
   * Goal 34. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 35. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I11 Branch 9 IFNE L196 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 36. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I25 Branch 11 IF_ICMPNE L199 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 37. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I20 Branch 10 IF_ICMPEQ L199 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 38. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I37 Branch 12 IF_ICMPLE L203 - false in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 39. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 40. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 41. binomialCoefficient(II)J_java.lang.ArithmeticException_EXPLICIT
   * Goal 42. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 43. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 196
   * Goal 44. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 199
   * Goal 45. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 203
   * Goal 46. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 204
   * Goal 47. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 211
   * Goal 48. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 212
   * Goal 49. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 238
   * Goal 50. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 239
   * Goal 51. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 240
   * Goal 52. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 241
   * Goal 53. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 242
   * Goal 54. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 55. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 56. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 376
   * Goal 57. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 688
   * Goal 58. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 689
   * Goal 59. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 690
   * Goal 60. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 703
   * Goal 61. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 704
   * Goal 62. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 706
   * Goal 63. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 707
   * Goal 64. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 710
   * Goal 65. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 711
   * Goal 66. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 717
   * Goal 67. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 724
   * Goal 68. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 730
   * Goal 69. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 731
   * Goal 70. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 734
   * Goal 71. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 735
   * Goal 72. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 737
   * Goal 73. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 740
   * Goal 74. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 743
   * Goal 75. org.apache.commons.math.util.MathUtils.gcd(II)I: Line 744
   * Goal 76. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1049
   * Goal 77. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1050
   * Goal 78. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1052
   * Goal 79. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1054
   * Goal 80. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1074
   * Goal 81. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1079
   * Goal 82. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1080
   * Goal 83. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1082
   * Goal 84. org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J: Line 1089
   * Goal 85. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 86. Weak Mutation 166: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> >=
   * Goal 87. Weak Mutation 173: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator != -> <
   * Goal 88. Weak Mutation 183: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator == -> !=
   * Goal 89. Weak Mutation 193: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> +
   * Goal 90. Weak Mutation 194: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> %
   * Goal 91. Weak Mutation 195: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> *
   * Goal 92. Weak Mutation 196: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceArithmeticOperator - -> /
   * Goal 93. Weak Mutation 199: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:199 - ReplaceComparisonOperator != -> >
   * Goal 94. Weak Mutation 216: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> +
   * Goal 95. Weak Mutation 217: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> %
   * Goal 96. Weak Mutation 218: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> -
   * Goal 97. Weak Mutation 219: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceArithmeticOperator / -> *
   * Goal 98. Weak Mutation 220: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceComparisonOperator <= -> -1
   * Goal 99. Weak Mutation 222: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:203 - ReplaceComparisonOperator <= -> ==
   * Goal 100. Weak Mutation 235: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:204 - ReplaceArithmeticOperator - -> +
   * Goal 101. Weak Mutation 237: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:204 - ReplaceArithmeticOperator - -> *
   * Goal 102. Weak Mutation 238: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:204 - ReplaceArithmeticOperator - -> /
   * Goal 103. Weak Mutation 252: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:212 - ReplaceComparisonOperator > -> -2
   * Goal 104. Weak Mutation 324: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:219 - ReplaceComparisonOperator > -> -2
   * Goal 105. Weak Mutation 769: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> ==
   * Goal 106. Weak Mutation 785: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> ==
   * Goal 107. Weak Mutation 1330: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator == -> >=
   * Goal 108. Weak Mutation 1339: org.apache.commons.math.util.MathUtils.gcd(II)I:690 - ReplaceComparisonOperator != -> <
   * Goal 109. Weak Mutation 1405: org.apache.commons.math.util.MathUtils.gcd(II)I:703 - ReplaceComparisonOperator <= -> -1
   * Goal 110. Weak Mutation 1420: org.apache.commons.math.util.MathUtils.gcd(II)I:706 - ReplaceComparisonOperator <= -> -1
   * Goal 111. Weak Mutation 1438: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 112. Weak Mutation 1439: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 113. Weak Mutation 1440: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> -1
   * Goal 114. Weak Mutation 1441: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 115. Weak Mutation 1451: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> |
   * Goal 116. Weak Mutation 1452: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceBitwiseOperator & -> ^
   * Goal 117. Weak Mutation 1454: org.apache.commons.math.util.MathUtils.gcd(II)I:711 - ReplaceComparisonOperator != -> <
   * Goal 118. Weak Mutation 1519: org.apache.commons.math.util.MathUtils.gcd(II)I:717 - ReplaceComparisonOperator != -> >
   * Goal 119. Weak Mutation 1969: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> -1
   * Goal 120. Weak Mutation 1970: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1050 - ReplaceComparisonOperator <= -> ==
   * Goal 121. Weak Mutation 1981: org.apache.commons.math.util.MathUtils.mulAndCheck(JJ)J:1054 - ReplaceComparisonOperator >= -> ==
   */

  @Test
  public void test201()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.binomialCoefficient(1235, 1077);
      } catch(ArithmeticException e) {
         //
         // overflow: multiply
         //
         assertThrownBy("org.apache.commons.math.util.MathUtils", e);
      }
  }

  //Test case number: 202
  /*
   * 18 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: I9 Branch 8 IF_ICMPEQ L196 - true in context: org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J
   * Goal 5. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I4 Branch 34 IF_ICMPGE L366 - true in context: 
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.checkBinomial(II)V: I25 Branch 35 IFGE L371 - true in context: 
   * Goal 7. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 195
   * Goal 8. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 196
   * Goal 9. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J: Line 197
   * Goal 10. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 366
   * Goal 11. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 371
   * Goal 12. org.apache.commons.math.util.MathUtils.checkBinomial(II)V: Line 376
   * Goal 13. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 14. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J
   * Goal 15. Weak Mutation 165: org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:196 - ReplaceComparisonOperator == -> -2
   * Goal 16. Weak Mutation 768: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:366 - ReplaceComparisonOperator >= -> >
   * Goal 17. Weak Mutation 786: org.apache.commons.math.util.MathUtils.checkBinomial(II)V:371 - ReplaceComparisonOperator >= -> >
   * Goal 18. org.apache.commons.math.util.MathUtils.binomialCoefficient(II)J:positive
   */

  @Test
  public void test202()  throws Throwable  {
      long long0 = MathUtils.binomialCoefficient(0, 0);
  }

  //Test case number: 203
  /*
   * 24 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 7. subAndCheck(JJ)J_org.evosuite.runtime.mock.java.lang.MockArithmeticException_EXPLICIT
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 138
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 142
   * Goal 11. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 159
   * Goal 12. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 162
   * Goal 13. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1497
   * Goal 14. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1498
   * Goal 15. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1506
   * Goal 16. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 17. Weak Mutation 49: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> -1
   * Goal 18. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 19. Weak Mutation 61: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> ==
   * Goal 20. Weak Mutation 122: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> %
   * Goal 21. Weak Mutation 123: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> *
   * Goal 22. Weak Mutation 124: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> /
   * Goal 23. Weak Mutation 125: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceComparisonOperator > -> -2
   * Goal 24. Weak Mutation 2713: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> <
   */

  @Test
  public void test203()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.subAndCheck((-9223372036854775808L), (long) (byte) (-25));
      } catch(ArithmeticException e) {
         //
         // overflow in addition: 25 + -9,223,372,036,854,775,808
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 204
  /*
   * 32 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - false
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I26 Branch 5 IFGE L143 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I34 Branch 6 IFGT L145 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: I9 Branch 180 IFNE L1498 - true in context: org.apache.commons.math.util.MathUtils:subAndCheck(JJ)J
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 142
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 143
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 145
   * Goal 11. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 146
   * Goal 12. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 166
   * Goal 13. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1497
   * Goal 14. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1498
   * Goal 15. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1506
   * Goal 16. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J: Line 1508
   * Goal 17. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 18. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J
   * Goal 19. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 20. Weak Mutation 60: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> -1
   * Goal 21. Weak Mutation 67: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:143 - ReplaceComparisonOperator >= -> -1
   * Goal 22. Weak Mutation 77: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> +
   * Goal 23. Weak Mutation 78: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> %
   * Goal 24. Weak Mutation 79: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> *
   * Goal 25. Weak Mutation 80: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceArithmeticOperator - -> /
   * Goal 26. Weak Mutation 84: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:145 - ReplaceComparisonOperator > -> !=
   * Goal 27. Weak Mutation 90: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> %
   * Goal 28. Weak Mutation 91: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> -
   * Goal 29. Weak Mutation 92: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> *
   * Goal 30. Weak Mutation 93: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:146 - ReplaceArithmeticOperator + -> /
   * Goal 31. Weak Mutation 2714: org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:1498 - ReplaceComparisonOperator != -> >
   * Goal 32. org.apache.commons.math.util.MathUtils.subAndCheck(JJ)J:negative
   */

  @Test
  public void test204()  throws Throwable  {
      long long0 = MathUtils.subAndCheck((long) (-1432523683), 594L);
  }

  //Test case number: 205
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true
   * Goal 3. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I13 Branch 1 IFLT L103 - false in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 4. Branch org.apache.commons.math.util.MathUtils.addAndCheck(II)I: I17 Branch 2 IFLE L103 - true in context: org.apache.commons.math.util.MathUtils:addAndCheck(II)I
   * Goal 5. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 102
   * Goal 6. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 103
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(II)I: Line 106
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(II)I
   * Goal 10. Weak Mutation 8: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> %
   * Goal 11. Weak Mutation 9: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> -
   * Goal 12. Weak Mutation 10: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> *
   * Goal 13. Weak Mutation 11: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:102 - ReplaceArithmeticOperator + -> /
   * Goal 14. Weak Mutation 19: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator < -> !=
   * Goal 15. Weak Mutation 28: org.apache.commons.math.util.MathUtils.addAndCheck(II)I:103 - ReplaceComparisonOperator <= -> ==
   * Goal 16. org.apache.commons.math.util.MathUtils.addAndCheck(II)I:positive
   */

  @Test
  public void test205()  throws Throwable  {
      int int0 = MathUtils.addAndCheck(454, 454);
  }

  //Test case number: 206
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.log(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:log(DD)D
   * Goal 3. org.apache.commons.math.util.MathUtils.log(DD)D: Line 1016
   * Goal 4. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 5. org.apache.commons.math.util.MathUtils.log(DD)D
   * Goal 6. Weak Mutation 1927: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> +
   * Goal 7. Weak Mutation 1928: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> %
   * Goal 8. Weak Mutation 1929: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> -
   * Goal 9. Weak Mutation 1930: org.apache.commons.math.util.MathUtils.log(DD)D:1016 - ReplaceArithmeticOperator / -> *
   * Goal 10. org.apache.commons.math.util.MathUtils.log(DD)D:positive
   */

  @Test
  public void test206()  throws Throwable  {
      double double0 = MathUtils.log((-1701.0900004132077), (-1701.0900004132077));
  }

  //Test case number: 207
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.round(DI)D: root-Branch in context: org.apache.commons.math.util.MathUtils:round(DI)D
   * Goal 3. org.apache.commons.math.util.MathUtils.round(DI)D: Line 1208
   * Goal 4. org.apache.commons.math.util.MathUtils.round(DII)D: Line 1225
   * Goal 5. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 6. org.apache.commons.math.util.MathUtils.round(DI)D
   * Goal 7. org.apache.commons.math.util.MathUtils.round(DI)D:zero
   */

  @Test
  public void test207()  throws Throwable  {
      double double0 = MathUtils.round(1.9868161777724352E-8, (-831));
  }

  //Test case number: 208
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.cosh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:cosh(D)D
   * Goal 3. org.apache.commons.math.util.MathUtils.cosh(D)D: Line 405
   * Goal 4. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 5. org.apache.commons.math.util.MathUtils.cosh(D)D
   * Goal 6. Weak Mutation 838: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> %
   * Goal 7. Weak Mutation 839: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> -
   * Goal 8. Weak Mutation 840: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> *
   * Goal 9. Weak Mutation 841: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator + -> /
   * Goal 10. Weak Mutation 846: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> +
   * Goal 11. Weak Mutation 847: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> %
   * Goal 12. Weak Mutation 848: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> -
   * Goal 13. Weak Mutation 849: org.apache.commons.math.util.MathUtils.cosh(D)D:405 - ReplaceArithmeticOperator / -> *
   * Goal 14. org.apache.commons.math.util.MathUtils.cosh(D)D:positive
   */

  @Test
  public void test208()  throws Throwable  {
      double double0 = MathUtils.cosh((-1.0));
  }

  //Test case number: 209
  /*
   * 52 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false
   * Goal 13. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - false
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.round(FI)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FI)F
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - true in context: 
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - false in context: 
   * Goal 23. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 24. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I171 Branch 162 IFLT L1331 - false in context: 
   * Goal 25. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 891
   * Goal 26. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 892
   * Goal 27. org.apache.commons.math.util.MathUtils.round(FI)F: Line 1248
   * Goal 28. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1264
   * Goal 29. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1265
   * Goal 30. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1266
   * Goal 31. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1283
   * Goal 32. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1329
   * Goal 33. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1330
   * Goal 34. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1331
   * Goal 35. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1332
   * Goal 36. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1359
   * Goal 37. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 38. org.apache.commons.math.util.MathUtils.round(FI)F
   * Goal 39. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 41. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 42. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 43. Weak Mutation 2328: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> /
   * Goal 44. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 45. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 46. Weak Mutation 2337: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> -
   * Goal 47. Weak Mutation 2338: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> /
   * Goal 48. Weak Mutation 2349: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> +
   * Goal 49. Weak Mutation 2350: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> %
   * Goal 50. Weak Mutation 2351: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> -
   * Goal 51. Weak Mutation 2352: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator / -> *
   * Goal 52. org.apache.commons.math.util.MathUtils.round(FI)F:positive
   */

  @Test
  public void test209()  throws Throwable  {
      float float0 = MathUtils.round(Float.NaN, (int) (byte)1);
  }

  //Test case number: 210
  /*
   * 21 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: root-Branch in context: org.apache.commons.math.util.MathUtils:normalizeAngle(DD)D
   * Goal 3. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D: Line 1139
   * Goal 4. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 5. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D
   * Goal 6. Weak Mutation 2140: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> %
   * Goal 7. Weak Mutation 2141: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> -
   * Goal 8. Weak Mutation 2142: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> *
   * Goal 9. Weak Mutation 2143: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator + -> /
   * Goal 10. Weak Mutation 2150: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 11. Weak Mutation 2151: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> *
   * Goal 12. Weak Mutation 2152: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 13. Weak Mutation 2158: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> +
   * Goal 14. Weak Mutation 2159: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> %
   * Goal 15. Weak Mutation 2160: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> -
   * Goal 16. Weak Mutation 2161: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator / -> *
   * Goal 17. Weak Mutation 2163: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> %
   * Goal 18. Weak Mutation 2165: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator * -> /
   * Goal 19. Weak Mutation 2167: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> %
   * Goal 20. Weak Mutation 2169: org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:1139 - ReplaceArithmeticOperator - -> /
   * Goal 21. org.apache.commons.math.util.MathUtils.normalizeAngle(DD)D:positive
   */

  @Test
  public void test210()  throws Throwable  {
      double double0 = MathUtils.normalizeAngle(1, 5.669184079525E-24);
  }

  //Test case number: 211
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.sinh(D)D: root-Branch in context: org.apache.commons.math.util.MathUtils:sinh(D)D
   * Goal 3. org.apache.commons.math.util.MathUtils.sinh(D)D: Line 1464
   * Goal 4. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 5. org.apache.commons.math.util.MathUtils.sinh(D)D
   * Goal 6. Weak Mutation 2651: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> +
   * Goal 7. Weak Mutation 2652: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> %
   * Goal 8. Weak Mutation 2653: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> *
   * Goal 9. Weak Mutation 2654: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator - -> /
   * Goal 10. Weak Mutation 2660: org.apache.commons.math.util.MathUtils.sinh(D)D:1464 - ReplaceArithmeticOperator / -> %
   * Goal 11. org.apache.commons.math.util.MathUtils.sinh(D)D:negative
   */

  @Test
  public void test211()  throws Throwable  {
      double double0 = MathUtils.sinh((-3426L));
  }

  //Test case number: 212
  /*
   * 28 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I5 Branch 3 IFLE L136 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I20 Branch 4 IFGE L142 - true
   * Goal 5. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: I75 Branch 7 IFGT L159 - false
   * Goal 6. Branch org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: root-Branch in context: org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J
   * Goal 7. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J: Line 120
   * Goal 8. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 136
   * Goal 9. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 138
   * Goal 10. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 142
   * Goal 11. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 159
   * Goal 12. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 160
   * Goal 13. org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J: Line 166
   * Goal 14. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 15. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J
   * Goal 16. Weak Mutation 49: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> -1
   * Goal 17. Weak Mutation 50: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:136 - ReplaceComparisonOperator <= -> ==
   * Goal 18. Weak Mutation 61: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:142 - ReplaceComparisonOperator >= -> ==
   * Goal 19. Weak Mutation 121: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> +
   * Goal 20. Weak Mutation 122: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> %
   * Goal 21. Weak Mutation 123: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> *
   * Goal 22. Weak Mutation 124: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceArithmeticOperator - -> /
   * Goal 23. Weak Mutation 126: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:159 - ReplaceComparisonOperator > -> !=
   * Goal 24. Weak Mutation 132: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> %
   * Goal 25. Weak Mutation 133: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> -
   * Goal 26. Weak Mutation 134: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> *
   * Goal 27. Weak Mutation 135: org.apache.commons.math.util.MathUtils.addAndCheck(JJLorg/apache/commons/math/exception/util/Localizable;)J:160 - ReplaceArithmeticOperator + -> /
   * Goal 28. org.apache.commons.math.util.MathUtils.addAndCheck(JJ)J:positive
   */

  @Test
  public void test212()  throws Throwable  {
      long long0 = MathUtils.addAndCheck(362880L, 1536L);
  }

  //Test case number: 213
  /*
   * 39 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch
   * Goal 2. org.apache.commons.math.util.MathUtils.indicator(F)F: I4 Branch 114 IFEQ L891 - true
   * Goal 3. org.apache.commons.math.util.MathUtils.indicator(F)F: I14 Branch 115 IFLT L894 - false
   * Goal 4. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false
   * Goal 5. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false
   * Goal 6. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false
   * Goal 7. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false
   * Goal 8. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false
   * Goal 9. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false
   * Goal 10. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false
   * Goal 11. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false
   * Goal 12. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - true
   * Goal 13. Branch org.apache.commons.math.util.MathUtils.round(FII)F: root-Branch in context: org.apache.commons.math.util.MathUtils:round(FII)F
   * Goal 14. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 149 TABLESWITCH L1283 Case 2 - false in context: 
   * Goal 15. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 152 TABLESWITCH L1283 Case 5 - false in context: 
   * Goal 16. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 154 TABLESWITCH L1283 Case 7 - false in context: 
   * Goal 17. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 147 TABLESWITCH L1283 Case 0 - false in context: 
   * Goal 18. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 151 TABLESWITCH L1283 Case 4 - false in context: 
   * Goal 19. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 148 TABLESWITCH L1283 Case 1 - false in context: 
   * Goal 20. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 150 TABLESWITCH L1283 Case 3 - false in context: 
   * Goal 21. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 153 TABLESWITCH L1283 Case 6 - false in context: 
   * Goal 22. Branch org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: I3 Branch 155 TABLESWITCH L1283 Default-Case - true in context: 
   * Goal 23. round(FII)F_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   * Goal 24. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 891
   * Goal 25. org.apache.commons.math.util.MathUtils.indicator(F)F: Line 894
   * Goal 26. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1264
   * Goal 27. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1265
   * Goal 28. org.apache.commons.math.util.MathUtils.round(FII)F: Line 1266
   * Goal 29. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1283
   * Goal 30. org.apache.commons.math.util.MathUtils.roundUnscaled(DDI)D: Line 1347
   * Goal 31. org.apache.commons.math.util.MathUtils.round(FII)F
   * Goal 32. Weak Mutation 1749: org.apache.commons.math.util.MathUtils.indicator(F)F:891 - ReplaceComparisonOperator == -> !=
   * Goal 33. Weak Mutation 1758: org.apache.commons.math.util.MathUtils.indicator(F)F:894 - ReplaceComparisonOperator < -> !=
   * Goal 34. Weak Mutation 2325: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> +
   * Goal 35. Weak Mutation 2326: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> %
   * Goal 36. Weak Mutation 2327: org.apache.commons.math.util.MathUtils.round(FII)F:1265 - ReplaceArithmeticOperator * -> -
   * Goal 37. Weak Mutation 2335: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> +
   * Goal 38. Weak Mutation 2336: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> %
   * Goal 39. Weak Mutation 2337: org.apache.commons.math.util.MathUtils.round(FII)F:1266 - ReplaceArithmeticOperator * -> -
   */

  @Test
  public void test213()  throws Throwable  {
      // Undeclared exception!
      try { 
        MathUtils.round(2106.14F, 0, 42);
      } catch(IllegalArgumentException e) {
         //
         // invalid rounding method 42, valid methods: ROUND_CEILING (2), ROUND_DOWN (1), ROUND_FLOOR (3), ROUND_HALF_DOWN (5), ROUND_HALF_EVEN (6), ROUND_HALF_UP (4), ROUND_UNNECESSARY (7), ROUND_UP (0)
         //
         assertThrownBy("org.apache.commons.math.MathRuntimeException", e);
      }
  }

  //Test case number: 214
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.hash([D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash([D)I
   * Goal 3. org.apache.commons.math.util.MathUtils.hash([D)I: Line 854
   * Goal 4. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 5. org.apache.commons.math.util.MathUtils.hash([D)I
   * Goal 6. org.apache.commons.math.util.MathUtils.hash([D)I:positive
   */

  @Test
  public void test214()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      int int0 = MathUtils.hash(doubleArray0);
  }

  //Test case number: 215
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch
   * Goal 2. Branch org.apache.commons.math.util.MathUtils.hash(D)I: root-Branch in context: org.apache.commons.math.util.MathUtils:hash(D)I
   * Goal 3. org.apache.commons.math.util.MathUtils.hash(D)I: Line 843
   * Goal 4. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 5. org.apache.commons.math.util.MathUtils.hash(D)I
   * Goal 6. org.apache.commons.math.util.MathUtils.hash(D)I:zero
   */

  @Test
  public void test215()  throws Throwable  {
      int int0 = MathUtils.hash(0.0);
  }
}
