* EvoSuite 1.0.2
* Going to generate test cases for class: org.apache.commons.math.util.MathUtils
* Starting client
* Connecting to master process on port 10301
* Analyzing classpath: 
  - /home/wasp/Desktop/ICSE18/DiffTGen/drr/patches/D_correct/Math63/patch1-Math-63-SimFix/patch1Math63_simfix/target/build/classes
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/myprinter.jar
  - /home/wasp/Desktop/ICSE18/DiffTGen/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.util.MathUtils
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 480
  - Branch 465
  - Exception 0
  - MutationFactory 928
  - Output 184
  - Method 65
  - MethodNoException 65
  - CBranchFitnessFactory 465
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1552382223465
* Starting evolution
[Progress:>                             0%] [Cov:>                                  2%][Progress:>                             0%] [Cov:=>                                 3%][Progress:>                             0%] [Cov:=====>                             15%][Progress:>                             0%] [Cov:=====>                             16%][Progress:>                             0%] [Cov:=====>                             17%][Progress:>                             0%] [Cov:======>                            18%][Progress:>                             0%] [Cov:=======>                           20%][Progress:===>                          10%] [Cov:>                                  2%][Progress:===>                          10%] [Cov:=>                                 4%][Progress:===>                          10%] [Cov:=====>                             17%][Progress:===>                          10%] [Cov:======>                            18%][Progress:===>                          10%] [Cov:======>                            19%][Progress:===>                          10%] [Cov:=======>                           21%][Progress:===>                          10%] [Cov:========>                          23%][Progress:=====>                        18%] [Cov:>                                  2%][Progress:=====>                        18%] [Cov:=>                                 3%][Progress:=====>                        18%] [Cov:=====>                             16%][Progress:=====>                        18%] [Cov:=====>                             17%][Progress:=====>                        18%] [Cov:======>                            18%][Progress:=====>                        18%] [Cov:======>                            19%][Progress:=====>                        18%] [Cov:=======>                           21%][Progress:=====>                        18%] [Cov:=======>                           22%][Progress:=====>                        18%] [Cov:========>                          24%][Progress:=====>                        18%] [Cov:========>                          25%][Progress:======>                       20%] [Cov:>                                  1%][Progress:======>                       20%] [Cov:>                                  2%][Progress:======>                       20%] [Cov:====>                              14%][Progress:======>                       20%] [Cov:=====>                             15%][Progress:======>                       20%] [Cov:=====>                             17%][Progress:======>                       20%] [Cov:======>                            18%][Progress:======>                       20%] [Cov:=======>                           20%][Progress:======>                       20%] [Cov:=======>                           21%][Progress:======>                       20%] [Cov:=======>                           22%][Progress:======>                       21%] [Cov:>                                  2%][Progress:======>                       21%] [Cov:=>                                 4%][Progress:======>                       21%] [Cov:=====>                             16%][Progress:======>                       21%] [Cov:======>                            18%][Progress:======>                       21%] [Cov:======>                            19%][Progress:======>                       21%] [Cov:=======>                           20%][Progress:======>                       21%] [Cov:=======>                           22%][Progress:======>                       21%] [Cov:========>                          23%][Progress:=========>                    30%] [Cov:>                                  2%][Progress:=========>                    30%] [Cov:=>                                 4%][Progress:=========>                    30%] [Cov:=====>                             16%][Progress:=========>                    30%] [Cov:======>                            18%][Progress:=========>                    30%] [Cov:======>                            19%][Progress:=========>                    30%] [Cov:=======>                           20%][Progress:===========>                  38%] [Cov:=>                                 4%][Progress:===========>                  38%] [Cov:==>                                6%][Progress:===========>                  38%] [Cov:======>                            18%][Progress:===========>                  38%] [Cov:=======>                           20%][Progress:===========>                  38%] [Cov:=======>                           21%][Progress:===========>                  38%] [Cov:=======>                           22%][Progress:===========>                  38%] [Cov:========>                          23%][Progress:===========>                  38%] [Cov:========>                          24%][Progress:=============>                46%] [Cov:=>                                 3%][Progress:=============>                46%] [Cov:=>                                 5%][Progress:=============>                46%] [Cov:=====>                             17%][Progress:=============>                46%] [Cov:======>                            19%][Progress:=============>                46%] [Cov:=======>                           20%][Progress:=============>                46%] [Cov:=======>                           21%][Progress:=============>                46%] [Cov:========>                          23%][Progress:=============>                46%] [Cov:========>                          24%][Progress:=============>                46%] [Cov:=========>                         26%][Progress:=============>                46%] [Cov:=========>                         27%][Progress:=============>                46%] [Cov:=========>                         28%][Progress:==============>               48%] [Cov:>                                  2%][Progress:==============>               48%] [Cov:=>                                 5%][Progress:==============>               48%] [Cov:======>                            18%][Progress:==============>               48%] [Cov:=======>                           20%][Progress:==============>               48%] [Cov:=======>                           22%][Progress:==============>               48%] [Cov:========>                          25%][Progress:==============>               48%] [Cov:=========>                         28%][Progress:==============>               48%] [Cov:==========>                        29%][Progress:================>             56%] [Cov:>                                  2%][Progress:================>             56%] [Cov:=>                                 4%][Progress:================>             56%] [Cov:=====>                             16%][Progress:================>             56%] [Cov:======>                            18%][Progress:================>             56%] [Cov:======>                            19%][Progress:================>             56%] [Cov:=======>                           21%][Progress:================>             56%] [Cov:========>                          24%][Progress:===================>          65%] [Cov:>                                  1%][Progress:===================>          65%] [Cov:>                                  2%][Progress:===================>          65%] [Cov:=====>                             15%][Progress:===================>          65%] [Cov:=====>                             16%][Progress:===================>          65%] [Cov:=====>                             17%][Progress:===================>          65%] [Cov:======>                            18%][Progress:===================>          65%] [Cov:======>                            19%][Progress:===================>          65%] [Cov:=======>                           21%][Progress:===================>          65%] [Cov:========>                          23%][Progress:===================>          65%] [Cov:========>                          24%][Progress:===================>          65%] [Cov:=========>                         26%][Progress:===================>          65%] [Cov:=========>                         27%][Progress:===================>          66%] [Cov:>                                  2%][Progress:===================>          66%] [Cov:=>                                 4%][Progress:===================>          66%] [Cov:=====>                             17%][Progress:===================>          66%] [Cov:======>                            19%][Progress:===================>          66%] [Cov:=======>                           20%][Progress:===================>          66%] [Cov:========>                          23%][Progress:===================>          66%] [Cov:=========>                         26%][Progress:========================>     83%] [Cov:>                                  2%][Progress:========================>     83%] [Cov:=>                                 4%][Progress:========================>     83%] [Cov:=====>                             16%][Progress:========================>     83%] [Cov:======>                            18%][Progress:========================>     83%] [Cov:======>                            19%][Progress:========================>     83%] [Cov:=======>                           20%][Progress:========================>     83%] [Cov:=======>                           21%][Progress:========================>     83%] [Cov:========>                          23%][Progress:========================>     83%] [Cov:=========>                         27%][Progress:========================>     83%] [Cov:=========>                         28%][Progress:========================>     83%] [Cov:=========>                         28%][Progress:========================>     83%] [Cov:==========>                        29%][Progress:========================>     83%] [Cov:==========>                        30%][Progress:=========================>    85%] [Cov:========>                          25%][Progress:=========================>    85%] [Cov:=========>                         28%][Progress:=========================>    85%] [Cov:==========>                        31%][Progress:=========================>    85%] [Cov:===========>                       33%][Progress:=========================>    85%] [Cov:===========>                       34%][Progress:=========================>    85%] [Cov:============>                      35%][Progress:===========================>  90%] [Cov:========>                          23%][Progress:===========================>  90%] [Cov:========>                          24%][Progress:===========================>  90%] [Cov:========>                          25%][Progress:==============================100%] [Cov:=======>                           22%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:=============================>     83%][MASTER] 10:18:29.673 [logback-1] WARN  TimeController - Operation 'update from archive' took too long: 18519ms

* Search finished after 83s and 1 generations, 4833 statements, best individual has fitness: 2966.684574974852
[MASTER] 10:18:30.666 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 22 seconds more than allowed.
* Minimizing test suite
[MASTER] 10:19:49.442 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 81%
* Total number of goals: 480
* Number of covered goals: 390
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 77%
* Total number of goals: 465
* Number of covered goals: 357
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 35
* Number of covered goals: 35
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 71%
* Total number of goals: 928
* Number of covered goals: 663
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 72%
* Total number of goals: 184
* Number of covered goals: 132
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 65
* Number of covered goals: 65
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 65
* Number of covered goals: 65
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 74%
* Total number of goals: 465
* Number of covered goals: 342
* Generated 130 tests with total length 1168
* Resulting test suite's coverage: 84% (average coverage for all fitness functions)
* Compiling and checking tests
[MASTER] 10:20:18.223 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.apache.commons.math.MathRuntimeException$1: overflow in addition: -9,223,372,036,854,775,808 + -9,223,372,036,854,775,808
[MASTER] 10:20:18.223 [logback-1] WARN  JUnitAnalyzer - Failing test: long long0 = MathUtils.addAndCheck((-9223372036854775808L), (-9223372036854775808L));
int int0 = MathUtils.compareTo(0L, 0.0, 0.0);
long long1 = MathUtils.addAndCheck(4577762542105553359L, 4577762542105553359L);
double double0 = MathUtils.log((-2933.9973), (-359.0990564));
int int1 = MathUtils.lcm(0, 1023);
long long2 = MathUtils.factorial(1023);

[MASTER] 10:20:27.301 [logback-1] WARN  Sandbox - Sandbox can be initalized only once
[MASTER] 10:20:27.301 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.runners.model.TestTimedOutException: test timed out after 4000 milliseconds
[MASTER] 10:20:27.302 [logback-1] WARN  JUnitAnalyzer - Failing test: int int0 = MathUtils.hash(1438.15696780983);
long long0 = MathUtils.mulAndCheck((long) (-54714790), (long) (-54714790));
double double0 = MathUtils.cosh(2993708244744100L);
double double1 = MathUtils.indicator(2.356194490192345);
double double2 = MathUtils.round(1563.91, (-54714790));
double double3 = 0.0;
double double4 = 0.0;
double double5 = (-1379.0);
int int1 = MathUtils.compareTo(double3, double4, double5);
byte[] byteArray0 = new byte[1];
byte byte0 = (byte) (-123);
byteArray0[0] = byte0;
BigInteger bigInteger0 = new BigInteger(byteArray0);
int int2 = 552;
BigInteger bigInteger1 = MathUtils.pow(bigInteger0, int2);

* Computation finished
